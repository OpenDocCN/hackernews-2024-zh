- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 15:03:34'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 15:03:34'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: A Javascript Nightmare | Happiness Machines
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个 JavaScript 的噩梦 | 幸福机器
- en: 来源：[https://blog.ignaciobrasca.com/opinion/2024/03/15/javascript-nightmare.html](https://blog.ignaciobrasca.com/opinion/2024/03/15/javascript-nightmare.html)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://blog.ignaciobrasca.com/opinion/2024/03/15/javascript-nightmare.html](https://blog.ignaciobrasca.com/opinion/2024/03/15/javascript-nightmare.html)
- en: It was Friday, and everyone was leaving or at most about to.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 那天是星期五，每个人都在离开或准备离开的时候。
- en: '***Suddenly, during a quick demo, I realized something was off.***'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: '***突然，在一个快速演示中，我意识到有些不对劲。***'
- en: Oh boy, the game started…
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 哦，天哪，游戏开始了…
- en: After an initial smoke review, I realized the system wasn’t working as expected
    for exporting files. I exported two files in different formats - one worked, but
    the other kept loading forever.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在初步的快速审查后，我意识到系统在导出文件时表现不如预期。我以不同格式导出了两个文件 - 一个正常，但另一个却一直在加载。
- en: Our notification Slack channel started queuing messages, letting us know we’d
    be here until late night on a Friday.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的通知 Slack 频道开始排队消息，告诉我们我们可能会在星期五晚上一直忙到很晚。
- en: After my first investigation, without panicking, I realized it wasn’t just files
    - it was only PDF files. I exported a Word document from our internal system,
    and it worked. I exported a CSV file, and it worked as well. I started a job for
    generating a PDF again, but it kept loading forever.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一次调查后，我并没有慌张，意识到问题不仅限于文件 - 只有 PDF 文件有问题。我从我们的内部系统导出了一个 Word 文档，它运行正常。我导出了一个
    CSV 文件，同样也没有问题。我重新尝试生成一个 PDF 文件，但是它一直在加载。
- en: I went to our staging environment and exported one PDF document - it worked.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我去了我们的测试环境并导出了一个 PDF 文档 - 运行正常。
- en: My head was spinning. Given that I had an ongoing demo, I had to jump out from
    the problem, so I let Martin (a skilled engineer who has been a part of Datia
    from almost the beginning) investigate this issue with me.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我的头脑开始混乱。考虑到我正在进行中的演示，我不得不跳出问题，所以我让马丁（一位技术娴熟的工程师，从 Datia 创立之初就加入了）与我一起调查这个问题。
- en: Up to this point, it was 3:33 PM.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 到这时候，已经是下午3点33分了。
- en: The Usual Suspect
  id: totrans-split-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通常的嫌疑犯
- en: After a few minutes, we started investigating across our instances.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 几分钟后，我们开始在我们的实例之间进行调查。
- en: '**“It might be Nginx?”** we checked our servers, and the access log appeared
    to have errors mentioning an upstream timeout error.'
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**“也许是 Nginx 的问题？”** 我们检查了我们的服务器，访问日志显示出现了上游超时错误。'
- en: Weird (x1).
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 怪异（x1）。
- en: We kept investigating until we reached the usual suspect (and something that
    had caused headaches before) - AWS WAF. WAF is a web application firewall provided
    by AWS that essentially helps us block, control, and prevent harmful requests
    from the open web on our public domains.
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们继续调查，直到找到了通常的嫌疑犯（之前也曾引起过头痛的东西） - AWS WAF。WAF 是由 AWS 提供的 Web 应用防火墙，主要帮助我们在公共域上阻止、控制和预防来自开放网络的有害请求。
- en: After a few minutes of digging with it and a few unsuccessful trials, we decided
    to step further and investigate our buckets. Recently, we had run into a few issues
    where AWS threw us an error regarding hitting quotas for S3 buckets.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 经过几分钟的挖掘和几次不成功的尝试后，我们决定进一步调查我们的存储桶。最近，我们遇到了几个问题，AWS 报错说我们触发了 S3 存储桶的配额限制。
- en: Weird (x2), since we thought the cloud was scalable up to infinite. [When in
    reality, it’s someone else’s machine.](https://blog.codinghorror.com/the-cloud-is-just-someone-elses-computer/)
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 怪异（x2），因为我们以为云端可以扩展到无限大。[实际上，它只是别人的机器。](https://blog.codinghorror.com/the-cloud-is-just-someone-elses-computer/)
- en: 'We checked the logs and found our first hint: an unauthorized error from AWS
    after an apparent bottleneck. We looked at each other’s faces in the meeting and
    said in unison:'
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们检查了日志，找到了第一个线索：AWS 显示未经授权的错误，似乎是瓶颈问题。我们在会议中相视而笑，异口同声地说道
- en: '**“It must be S3.”**'
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**“一定是 S3 的问题。”**'
- en: 'Narrator: it wasn’t'
  id: totrans-split-24
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 叙述者：其实不是这样的。
- en: The Confusion
  id: totrans-split-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 混乱的情况
- en: We ran to try it out on a new bucket and wrote a few scripts to test it out.
    We ran back to staging since it was the environment that used to work before but
    now suddenly wasn’t working anymore - it kept loading forever.
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们赶紧在一个新的存储桶上进行测试并编写了几个脚本。我们又跑回测试环境，因为这个环境过去是正常工作的，但现在突然间又不工作了 - 一直在加载。
- en: Our assumption was, **“Okay, we might be hitting another obscure quota from
    S3.**”
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的假设是，“好吧，我们可能触发了 S3 的另一个隐秘配额。”
- en: Let’s create a bucket from scratch, but first, let’s try it out against these
    buckets from a virtual machine.
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从头开始创建一个存储桶，但首先，让我们从虚拟机中对这些存储桶进行测试。
- en: We did it, and it worked like a charm - same document, even. Now our confusion
    was extreme, but we had to keep digging like Sherlock Holmes digs into crimes.
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们做到了，它也像魔术一样正常工作了 - 同一个文档。现在我们的困惑是极大的，但是我们不得不像夏洛克·福尔摩斯探案一样继续深入挖掘。
- en: The Bullshit Ecosystem
  id: totrans-split-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 胡说八道的生态系统
- en: 'We ran into the questions that one essentially does not encounter in a serious
    programming environment [(no pun intended, JavaScript boys!)](https://nadh.in/blog/javascript-ecosystem-software-development-are-a-hot-mess/):'
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们遇到了那些在一个严肃的编程环境中基本上不会遇到的问题 [(不是故意说笑，JavaScript 的小伙伴们！)](https://nadh.in/blog/javascript-ecosystem-software-development-are-a-hot-mess/)：
- en: Might the instance be running out of memory, and somehow we’re not throwing
    an error?
  id: totrans-split-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可能实例内存不足了，但是我们为什么没有抛出错误？
- en: Must be the content of the file that’s breaking, but why don’t we see exceptions
    and just a timeout?
  id: totrans-split-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可能是文件内容的问题导致了这一切，但为什么我们看不到异常，只是超时了呢？
- en: Is this a bug, but where?
  id: totrans-split-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是一个 bug，但是在哪里？
- en: Must be an `undefined` stream?
  id: totrans-split-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 必须是一个 `undefined` 的流？
- en: Or a `null` one?
  id: totrans-split-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 或者是一个 `null` 的流？
- en: Is the library we’re using to upload stuff deprecated?
  id: totrans-split-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们用来上传东西的库是否已经不再支持了？
- en: Up to this point, it was 6:40 PM for me (in Sweden) and late for Martin in Argentina
    as well. We started running in circles.
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
  zh: 到这个时候，对我来说已经是下午6点40分（瑞典时间），对阿根廷的马丁来说也已经很晚了。我们开始打转圈了。
- en: 'We decided to zoom in a bit and start testing in a production environment directly
    since it was outside business hours [(and because I didn’t mention: our locals
    worked like a charm!)](https://dylanbeattie.net/2017/04/27/it-works-on-my-machine.html)'
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们决定放大焦点，直接在生产环境中进行测试，因为现在已经超出了工作时间 [(而且因为我没有提到：我们的本地工作像魔术一样顺利！)](https://dylanbeattie.net/2017/04/27/it-works-on-my-machine.html)
- en: We modified the code and started using a non-library strategy to upload the
    stream into S3 ([which, by the way, is messy and not that straightforward](https://docs.aws.amazon.com/AmazonS3/latest/userguide/example_s3_Scenario_UploadStream_section.html)).
  id: totrans-split-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们修改了代码，开始使用一种非库策略将流上传到 S3 中（[顺便说一句，这很混乱，不那么直接](https://docs.aws.amazon.com/AmazonS3/latest/userguide/example_s3_Scenario_UploadStream_section.html)）。
- en: A few tries, and still nothing - it worked on our local environments but didn’t
    work on the cloud.
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
  zh: 几次尝试，依然没有进展 - 在我们的本地环境中运行正常，但在云端却不行。
- en: The Network
  id: totrans-split-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络
- en: Up to this point, I was getting frustrated since it was Friday, and we were
    still here, debugging a JavaScript mess. Frustrating enough since it feels like
    in JavaScript, you never have control over what’s going on.
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
  zh: 到这个时候，我已经感到非常沮丧了，因为今天是星期五，我们仍然在这里调试一个 JavaScript 的混乱。足够令人沮丧，因为在 JavaScript 中，你似乎永远无法控制发生了什么。
- en: In C, you can go ahead and misconfigure a makefile to output debug files, a
    segfault, or a bad reference, but at the end of the day, it’s your fault.
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在 C 语言中，你可以继续错误配置一个 makefile 来输出调试文件，导致段错误或者错误引用，但归根结底，这是你的错。
- en: The same goes for any serious language ecosystem out there.
  id: totrans-split-45
  prefs: []
  type: TYPE_NORMAL
  zh: 任何严肃的语言生态系统也是如此。
- en: 'But JavaScript is quite the opposite: **it works like magic (and not as a compliment!)
    even though you know it’s pure software!**'
  id: totrans-split-46
  prefs: []
  type: TYPE_NORMAL
  zh: 但 JavaScript 却正好相反：**它像魔法一样运行（这不是在恭维！）即使你知道它只是软件！**
- en: I ended up believing, “Maybe AWS blocked our public domain, and from there,
    we could not upload files? What if…”
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
  zh: 最终我开始相信，“也许是 AWS 封锁了我们的公共域名，从那里开始，我们就无法上传文件了？如果……”
- en: Anyway, I tried on a virtual machine we have, but nothing - it worked like a
    charm. The funny thing about this is that during this process, we had three pipelines
    and workflows for the weekend running in the background, and none of those broke
    or raised an error.
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，我在我们的虚拟机上尝试了，但是没有 - 它就像魔术一样正常工作。有趣的是，在此过程中，我们的背景中有三个管道和周末的工作流程，并且没有一个出现了故障或引发错误。
- en: The Reunion
  id: totrans-split-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重聚
- en: Arriving at 8:15 PM, we decided to wrap up for the day and continue individually.
    Each step we took didn’t work at all.
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
  zh: 到了晚上8点15分，我们决定收工，各自继续。我们采取的每一步都毫无作用。
- en: So I decided to start removing and cleaning the things we did for testing, and
    I took a five-minute walk to the supermarket.
  id: totrans-split-51
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我决定开始移除和清理我们用于测试的东西，然后去超市走了五分钟。
- en: I came back and said, “Okay, let’s start again.” I ran my local against our
    production environment and emulated the scenario - it worked, even with our domain.
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我回来说，“好吧，让我们重新开始吧。” 我在我的本地对我们的生产环境进行了测试，并模拟了这种场景 - 它奏效了，甚至包括我们的域名。
- en: It wasn’t an issue with S3; AWS was discarded. It must be the documents service
    or the code…
  id: totrans-split-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这不是 S3 的问题；AWS 被排除了。一定是文档服务或者代码的问题……
- en: We discussed a bit more with Martin, chatted, and then I continued with the
    experiment…
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们与马丁讨论了一会儿，聊了聊，然后我继续进行实验……
- en: I deleted all cache on my local environment, all node_modules references, all
    lock files. I ran an installation process once again and exported again… **it
    didn’t work.**
  id: totrans-split-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我清除了本地环境的所有缓存，所有 `node_modules` 引用，所有锁文件。我再次运行了安装过程并重新导出了… **它没有工作。**
- en: 'The next message I sent: “We found it!”'
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我发送的下一条消息是：“我们找到了它！”
- en: Now it was a matter of understanding what was going on since it wasn’t a server
    issue but a library issue.
  id: totrans-split-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在问题在于理解发生了什么，因为这不是服务器问题，而是一个库的问题。
- en: 'Doing a `git diff`, we could observe a few changes on libraries related to:'
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
  zh: 执行 `git diff`，我们可以观察到与以下相关的几个库的一些更改：
- en: '[PRE0]'
  id: totrans-split-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: All of these because `@aws-sdk` got updated a few months ago… Weird (x3) and
    extremely closely related.
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都是因为几个月前更新了 `@aws-sdk`… 奇怪（x3），而且与此密切相关。
- en: We kept investigating and found that the actual library we used for rendering
    files inside the server had changed as well, and it changed… `the streaming pipeline`.
  id: totrans-split-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们继续调查，发现我们在服务器内部用于渲染文件的实际库也发生了变化，并且它改变了… `流式传输管道`。
- en: Oh boy, we were close.
  id: totrans-split-62
  prefs: []
  type: TYPE_NORMAL
  zh: 天哪，我们离成功如此之近。
- en: We kept digging and decided to downgrade the packages to the latest available
    version on the internet before these changes. We modified the `package.json` and
    pushed to production (yeah, up to this point, there was no other way around).
  id: totrans-split-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们继续挖掘并决定将包降级到互联网上这些更改之前的最新版本。我们修改了 `package.json` 并推送到生产环境（是的，到这一步，没有其他办法了）。
- en: …
  id: totrans-split-64
  prefs: []
  type: TYPE_NORMAL
  zh: …
- en: 'After a few minutes, the deploy failed: `github timeout`.'
  id: totrans-split-65
  prefs: []
  type: TYPE_NORMAL
  zh: 几分钟后，部署失败了：`github 超时`。
- en: Oh my. Anyway, we started a new workflow, and it worked.
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
  zh: 天哪。无论如何，我们开始了一个新的工作流程，并且它成功了。
- en: We went to our production environment and checked - it didn’t work, but now
    it was no longer a timeout but a direct error on a function in charge of handling
    the file streaming.
  id: totrans-split-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们去到我们的生产环境并检查 - 它不工作了，但现在不再是超时，而是一个直接的错误，由一个处理文件流的功能所导致。
- en: We were so close.
  id: totrans-split-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们离成功如此之近。
- en: 'Checked the logs:'
  id: totrans-split-69
  prefs: []
  type: TYPE_NORMAL
  zh: 查看了日志：
- en: '`this.subset.encodeStream is not a function`'
  id: totrans-split-70
  prefs: []
  type: TYPE_NORMAL
  zh: '`this.subset.encodeStream is not a function`'
- en: Oh my, holy grail… What now?
  id: totrans-split-71
  prefs: []
  type: TYPE_NORMAL
  zh: 天哪，圣杯… 现在怎么办？
- en: I did a quick search, and apparently, if you want to use a specific version
    of the library with a specific version, you need to use a fixed version for registering
    fonts in the document…
  id: totrans-split-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我做了个快速搜索，显然，如果你想要使用特定版本的库与特定版本一起使用，你需要在文档中注册字体时使用一个固定的版本…
- en: Anyway, it was around 10 PM, and the only thing we wanted was to close our computers
    and sleep (for me, I don’t know about Martin).
  id: totrans-split-73
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，现在大约是晚上 10 点，我们唯一想做的事就是关掉电脑睡觉（对我来说是这样，不知道马丁怎么样）。
- en: We did an upgrade and installation of the library, pushed, ran the installation
    process - it didn’t work.
  id: totrans-split-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们升级并安装了库，推送了，运行了安装过程 - 它没用。
- en: Well…
  id: totrans-split-75
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯…
- en: After a few minutes, we cleaned up the pipeline cache, restarted our environments,
    and even cleaned up the load balancer (WTF, just in case).
  id: totrans-split-76
  prefs: []
  type: TYPE_NORMAL
  zh: 几分钟后，我们清理了管道缓存，重新启动了我们的环境，甚至清理了负载均衡器（WTF，以防万一）。
- en: I pushed again and deployed. It worked.
  id: totrans-split-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我再次推送并部署。它起作用了。
- en: Up to this point, we weren’t even surprised; we just wanted to leave.
  id: totrans-split-78
  prefs: []
  type: TYPE_NORMAL
  zh: 直到这一点，我们甚至都不感到惊讶；我们只是想离开。
- en: We checked the document - it was all empty except for SVG inside.
  id: totrans-split-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们检查了文档 - 里面除了 SVG 之外全是空的。
- en: I’m thinking about opening a restaurant now.
  id: totrans-split-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我正在考虑现在开一家餐厅。
- en: We checked again, did the entire process from scratch once more, in addition
    to the other downgrade/upgrade actions we took, we had to upgraded a library we
    didn’t think of was related with this mess, and now - it worked. The document
    was there, and now everyone could have a PDF.
  id: totrans-split-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们再次检查，从头开始执行整个过程，除了我们采取的其他降级/升级操作之外，我们还不得不升级了一个我们没想到与这个混乱有关的库，现在 - 它成功了。文档在那里，现在每个人都可以有一个
    PDF。
- en: The system was **stable** again.
  id: totrans-split-82
  prefs: []
  type: TYPE_NORMAL
  zh: 系统**再次稳定**了。
- en: Our sanity might not be.
  id: totrans-split-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的理智可能不在。
- en: The Catharsis
  id: totrans-split-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 心灵的净化
- en: It’s almost incredible to believe that this ecosystem is so broad and spread
    out across the globe. It’s awful, and the developer experience is close to being
    a paranoid android trying not to shoot himself in the foot with a bazooka.
  id: totrans-split-85
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎难以置信这个生态系统是如此广泛和分散在全球各地。它很糟糕，开发体验接近于一个试图不用火箭筒朝自己的脚开火的偏执安卓。
- en: JavaScript sometimes feels too malleable, too easy, too clean, but it’s not.
    The paybacks come later in the game.
  id: totrans-split-86
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript 有时感觉太可塑、太容易、太干净，但它并不是。报应会在游戏的后期出现。
- en: Now our strategy will surely be to use at least a typed system or a more robust
    runtime. This mess cannot be there any longer, and if it is, JavaScript won’t
    be the tool to support it (since it’s strictly a bad tool).
  id: totrans-split-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的策略肯定是至少使用一个类型化系统或更健壮的运行时。这种混乱不能再持续存在了，如果它存在的话，JavaScript将不再是支持它的工具（因为它严格来说是一个糟糕的工具）。
- en: Conclusion
  id: totrans-split-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: It feels like you need to know too many nitty gritty details (and the devil
    lies in those details!) to truly understand what’s going on - and it’s not about
    being an expert, but an expert on the minute particulars.
  id: totrans-split-89
  prefs: []
  type: TYPE_NORMAL
  zh: 你似乎需要了解太多的琐碎细节（而魔鬼就藏在这些细节里！）才能真正理解发生了什么——这与成为专家无关，而是成为细节上的专家。
- en: Why didn’t this library work in conjunction with the latest version of AWS?
    Who knows? Not even the developers of the library might know, because the JavaScript
    ecosystem is so badly interconnected that everyone relies on blindly trusting
    each other’s code and infrastructure. It’s not even close to the experience of
    using robust package managers like Cargo (Rust), NuGet (C#), or others.
  id: totrans-split-90
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么这个库不能与最新版本的AWS配合使用呢？谁知道呢？甚至这个库的开发者可能也不知道，因为JavaScript生态系统的联系如此之差，以至于每个人都盲目地信任彼此的代码和基础设施。这与使用像Cargo（Rust）、NuGet（C#）等强大包管理器的体验完全不同。
- en: JS works, and it works well for a lot of things. But don’t try to build a truly
    scalable system with it. It’s simply too difficult to avoid shooting yourself
    in the foot entirely when the ecosystem is this fragile and delicate. One tiny
    version mismatch or breaking change can bring your mission-critical application
    to a standstill, as we painfully experienced.
  id: totrans-split-91
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript确实有效，而且在很多事情上表现良好。但是不要试图用它来构建一个真正可扩展的系统。当生态系统如此脆弱而微妙时，要完全避免自掘坟墓实在是太困难了。一个微小的版本不匹配或破坏性变化就可能让你的关键应用陷入停顿，我们痛苦地经历过这一点。
- en: The JavaScript world moves too fast, with dependencies changing constantly and
    breaking backwards compatibility. This makes it extremely high-risk for any project
    aiming to be an enterprise-grade, long-lasting solution. The deck is stacked against
    you when you have to wrestle with the ever-changing currents of the npm universe
    and its nitty gritty issues.
  id: totrans-split-92
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript世界变化太快，依赖项不断变化并且破坏向后兼容性。这使得任何试图成为企业级、长期解决方案的项目都面临极高的风险。当你必须与npm宇宙及其琐碎问题的不断变化抗争时，你就会发现困境重重。
- en: It feels like you’re constantly swimming against the current, needing to be
    a domain expert on the most granular details just to keep your application afloat.
    It’s an unnecessarily high cognitive burden that often outweighs the benefits
    JavaScript provides.
  id: totrans-split-93
  prefs: []
  type: TYPE_NORMAL
  zh: 感觉就像你在不断逆流而上，需要成为领域专家才能使你的应用程序保持浮在水面。这是一个不必要的高认知负担，通常超过了JavaScript提供的好处。
- en: Don’t get me wrong, JavaScript has it’s a good tool sometimes. But we’ve learned
    the hard way that it simply isn’t the right tool for building robust platforms
    that need to stand the test of time.
  id: totrans-split-94
  prefs: []
  type: TYPE_NORMAL
  zh: 别误会，JavaScript有时是一个好工具。但我们通过艰难的方式学到的是，它并不适合构建需要经受时间考验的强大平台。
- en: The ecosystem is a beautiful mess, but a mess nonetheless. For mission-critical
    applications, the costs of dealing with its chaos and nitty gritty issues are
    too high.
  id: totrans-split-95
  prefs: []
  type: TYPE_NORMAL
  zh: 生态系统是一个美丽的混乱，但仍然是一个混乱。对于关键应用程序来说，处理它的混乱和琐碎问题的成本太高了。
- en: At this point, it’s not even about JavaScript itself, but about the fundamental
    lack of trust a developer can have with its tools. Imagine a carpenter with a
    hammer that drives nails most of the time, but then randomly and unpredictably
    strikes the carpenter instead.
  id: totrans-split-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，问题甚至不再是JavaScript本身，而是开发者对其工具的基本信任缺失。想象一下，一个木匠有一个大部分时间都是用来打钉子的锤子，但偶尔会随机和不可预测地击打木匠自己。
- en: Why would that carpenter want to use such an unreliable and hazardous hammer
    for every piece of furniture they build? It makes no sense. And yet, that’s the
    situation we find ourselves in with JavaScript.
  id: totrans-split-97
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么那个木匠要使用这样一个不可靠和危险的锤子来建造每一件家具？这毫无道理。然而，这就是我们在JavaScript中所面临的情况。
- en: I don’t know if upcoming projects like Bun.js or Deno will do anything to rectify
    the situation. I simply believe the JavaScript language itself has become too
    amorphous and monstrous to not consistently breed confusion across builds and
    deployments.
  id: totrans-split-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我不知道像Bun.js或Deno这样的即将推出的项目是否会改善这种情况。我只是认为JavaScript语言本身已经变得过于模糊和庞大，无法避免在构建和部署中引发混乱。
