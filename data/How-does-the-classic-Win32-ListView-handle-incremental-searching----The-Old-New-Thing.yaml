- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 13:05:02'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 13:05:02'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: How does the classic Win32 ListView handle incremental searching? - The Old
    New Thing
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 经典的Win32 ListView如何处理增量搜索？- 旧的新东西
- en: 来源：[https://devblogs.microsoft.com/oldnewthing/20240408-00/?p=109627](https://devblogs.microsoft.com/oldnewthing/20240408-00/?p=109627)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://devblogs.microsoft.com/oldnewthing/20240408-00/?p=109627](https://devblogs.microsoft.com/oldnewthing/20240408-00/?p=109627)
- en: How does the classic Win32 ListView handle incremental searching?
  id: totrans-split-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 经典的Win32 ListView如何处理增量搜索？
- en: 'The classic Win32 ListView supports incremental search: You can start typing
    the name of an item to search for it. But it’s a bit more complicated than that.'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 经典的Win32 ListView支持增量搜索：你可以开始键入项目名称来搜索它。但它比这更复杂一些。
- en: You see, there’s more than one way that people expect type-to-search to work.
    In one pattern, you type the first letter of the thing you want, and the system
    finds the first item that starts with that letter. If that’s not the one you want,
    you press that same letter again, and the system finds the second item that starts
    with that letter. Keep pressing that same letter until you get to the item you
    want. This is how list box searching worked in Windows 1.0.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 你看，人们期望的类型搜索方式不止一种。一种模式是你键入你想要的东西的首字母，系统找到以该字母开头的第一个项目。如果这不是你想要的项目，则再次按下相同的字母，系统会找到以该字母开头的第二个项目。继续按下相同的字母，直到找到你想要的项目为止。这就是Windows
    1.0中列表框搜索的方式。
- en: Another pattern is to type the first letter of the thing you want, and the system
    finds the first item that starts with that letter. If that’s not the one you want,
    then type the second letter of the thing you want, and the system finds the first
    item whose first two letters match the letters you typed. Keep typing more and
    more letters until you get to the item you want.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种模式是键入你想要的东西的首字母，系统会找到以该字母开头的第一个项目。如果这不是你想要的项目，则键入你想要的东西的第二个字母，系统会找到第一个前两个字母与你键入的字母匹配的项目。继续键入更多字母，直到找到你想要的项目为止。
- en: Which pattern should the classic Win32 ListView control use?
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 经典的Win32 ListView控件应该使用哪种模式？
- en: '[Why not both](https://knowyourmeme.com/memes/why-not-both-why-dont-we-have-both
    "Why Not Both? meme explanation")?'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[为什么不两者都有](https://knowyourmeme.com/memes/why-not-both-why-dont-we-have-both
    "为什么不两者都有？meme解释")？'
- en: If you type the same letter over and over again, then the classic Win32 ListView
    assumes that you are using the first pattern, and each time you press the same
    letter again, it selects the next item that starts with that letter. But if you
    type different letters, then the classic Win32 ListView assumes that you are typing
    a prefix, and it selects the first item that starts with that prefix.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你一遍又一遍地输入相同的字母，那么经典的Win32 ListView会认为你正在使用第一种模式，每次再按下相同的字母，它会选择以该字母开头的下一个项目。但如果你输入不同的字母，那么经典的Win32
    ListView会认为你在输入一个前缀，它会选择以该前缀开头的第一个项目。
- en: 'For example, suppose that you have a ListView with the following items:'
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，假设你有一个ListView，其中包含以下项目：
- en: Cougar
  id: totrans-split-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 美洲狮
- en: Leopard
  id: totrans-split-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 豹子
- en: Lemur
  id: totrans-split-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 狐猴
- en: Lion
  id: totrans-split-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 狮子
- en: Llama
  id: totrans-split-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 驼鹿
- en: Tiger
  id: totrans-split-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 老虎
- en: You type L, and this selects *Leopard*, the first animal on the list that begins
    with L.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你键入L，这会选择*Lion*，列表中以L开头的第一个动物。
- en: You type another L. Since this is now two L’s, the Win32 ListView is in “repeated
    letter” mode, and it selects the second L-animal, which is *Lemur*.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你键入另一个L。因为现在有两个L，Win32的ListView处于“重复字母”模式，选择第二个以L开头的动物，即*Lemur*。
- en: Now you type A. This is no longer a repeat of the same letter, so the Win32
    ListView switches to “prefix” mode, and it selects the first item which begins
    with “LLA”, which is *Llama*.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你键入A。这不再是重复相同字母，所以Win32的ListView切换到“前缀”模式，选择以“LLA”开头的第一个项目，即*驼鹿*。
