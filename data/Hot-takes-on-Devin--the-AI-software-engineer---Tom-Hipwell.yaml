- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: '<!--yml  '
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: '类别：未分类  '
- en: 'date: 2024-05-27 15:05:35'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: '日期：2024-05-27 15:05:35  '
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: '-->  '
- en: Hot takes on Devin, the AI software engineer | Tom Hipwell
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对于Devin，AI软件工程师的热门观点 | Tom Hipwell
- en: 来源：[https://tomhipwell.co/blog/devin/](https://tomhipwell.co/blog/devin/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '来源：[https://tomhipwell.co/blog/devin/](https://tomhipwell.co/blog/devin/)  '
- en: I thought [Devin](https://www.cognition-labs.com/introducing-devin) from Cognition
    looked super cool this week, the UX feels like a glimpse of a new era.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: '我觉得[Cognition](https://www.cognition-labs.com/introducing-devin)这周从Cognition看起来超级酷，用户体验感觉像是一个新时代的一瞥。  '
- en: I wonder how deep the moat is though? 🤔
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: '我想知道这个壕沟有多深？ 🤔  '
- en: From staring a little bit too closely at the screenshots and videos I’ve seen
    so far, a hot take would be that it feels like most of the performance lift in
    the SWE benchmarks could come from a switch in prompting technique, i.e. the size
    in the performance lift in the benchmark looks similar to that of shifting from
    chain-of-thought to something like the [Self-Discover](https://arxiv.org/abs/2402.03620)
    technique documented by Google DeepMind (but tailored to the domain rather than
    generic reasoning as in that paper). This style of prompting (select-adapt-implement
    -> solve) would make sense for this type of reasoning task. Maybe there’s a way
    to get a proxy in place to intercept the API calls and find out.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: '从仔细观看到目前为止的截屏和视频，我的热门看法是，SWE基准测试中大部分性能提升可能来自于切换提示技术，即在基准测试中性能提升的规模看起来类似于从思维链到类似[Self-Discover](https://arxiv.org/abs/2402.03620)技术（Google
    DeepMind文档中的技术，但针对特定领域而非通用推理）。这种提示方式（选择-适应-实施 -> 解决）对这种推理任务是有意义的。也许有一种方法可以设置代理来拦截API调用并找出答案。  '
- en: I wonder if the [Cyborg AI style](https://www.oneusefulthing.org/p/centaurs-and-cyborgs-on-the-jagged)
    that Ethan Mollick describes in the [BCG paper](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4573321)
    is a more natural fit to developer flow, and a better approach would be to have
    something like this integrated into the IDEs we’re already using today.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: '我想知道[Ethan Mollick](https://www.oneusefulthing.org/p/centaurs-and-cyborgs-on-the-jagged)在[BCG论文](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4573321)中描述的[Cyborg
    AI风格](https://www.oneusefulthing.org/p/centaurs-and-cyborgs-on-the-jagged)是否更符合开发者的工作流程，更好的方法也许是将类似这样的东西集成到我们今天已经在使用的IDE中。  '
- en: I like the pause and step buttons in the bottom left of the screenshots for
    this reason. In my head I think of it a bit like turn-taking in a strategy game
    like Civ II, with the ability to skip over the boring bits and let it play out
    when you’re confident in running loose (the ability to step backwards and forwards
    through agent changes would also be cool).
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: '我喜欢这个截图底部左侧的暂停和步骤按钮，因为这个原因。在我的想法中，我把它看作类似于Civ II这样的策略游戏中的轮流操作，当你有信心可以随意运行时，可以跳过无聊的部分并让其播放（也可以向前后步进代理变更）。也是很酷的能力。  '
- en: It’ll be interesting to see how this plays out over the next little while. If
    it is prompting that’s driving the uplift then I guess what we’ve seen so far
    is a glimpse into the DX of the future.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: '看看在接下来的一段时间里这个情况将如何发展，会很有趣。如果是促使这种提升的驱动力，那么我猜到目前为止我们所看到的只是未来开发体验的一个小窥。  '
