- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 15:01:26'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 15:01:26
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Fully Open Source Encryption for SQLite
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 完全开源的SQLite加密
- en: 来源：[https://blog.turso.tech/fully-open-source-encryption-for-sqlite-b3858225](https://blog.turso.tech/fully-open-source-encryption-for-sqlite-b3858225)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://blog.turso.tech/fully-open-source-encryption-for-sqlite-b3858225](https://blog.turso.tech/fully-open-source-encryption-for-sqlite-b3858225)
- en: SQLite is a database trusted by many, but it has a closed community that is
    not open to contributions. Because of that, despite SQLite’s incredible versatility,
    improvements that are important outside the central use cases SQLite tend not
    to get done, even though there are people willing to do them.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: SQLite是许多人信赖的数据库，但它有一个不接受贡献的封闭社区。正因如此，尽管SQLite非常多才多艺，但在SQLite核心用例之外重要的改进往往无法完成，即使有人愿意去做。
- en: 'That was the driving force behind us at [Turso](https://turso.tech) starting
    the [libSQL](https://turso.tech/libsql) project, an Open Contribution fork of
    SQLite. Our mission at Turso is to empower users to use SQLite in production to
    power their applications. So after features like native replication, automatic
    backups to S3 and a serverless mode, we are adding to libSQL yet another feature
    that is critical to production workloads: **encryption at rest**.'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这是[Turso](https://turso.tech)开始[libSQL](https://turso.tech/libsql)项目的驱动力，一个SQLite的全开放贡献分支。我们在Turso的使命是赋予用户生产力，以便他们在生产中使用SQLite来支持他们的应用程序。所以在像本地复制、自动备份到S3和无服务器模式等功能之后，我们正在向libSQL添加另一个对生产工作负载至关重要的功能：**静态加密**。
- en: '[#](#how-does-it-work-)[](#how-does-it-work)How does it work?'
  id: totrans-split-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[#](#how-does-it-work-)[](#how-does-it-work)它是如何工作的？'
- en: The new encryption feature is fully Open Source, available to everybody, and
    doesn’t depend on the Turso platform. To understand how it works, let’s take a
    quick refresher at how to use libSQL in the first place.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 新的加密功能完全开源，供所有人使用，不依赖于Turso平台。为了理解它是如何工作的，让我们快速复习一下如何在第一次使用libSQL时使用它。
- en: Because SQLite is a library that gets embedded into the application, users of
    SQLite have to replace their usage of SQLite with our SDK. In the example below,
    using Typescript, the client is created by passing a URL, which in this case is
    a file in the local filesystem.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 因为SQLite是嵌入到应用程序中的库，SQLite的用户必须用我们的SDK替换他们的SQLite使用。在下面的示例中，使用Typescript时，客户端通过传递一个URL来创建，这个URL在这种情况下是本地文件系统中的一个文件。
- en: 'This very simple example will just in one pass create a table, add data to
    it, and query:'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这个非常简单的示例将在一次传递中创建一个表，向其中添加数据，并进行查询：
- en: '[PRE0]'
  id: totrans-split-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Similar to SQLite, this creates a file on your local machine, which you can
    inspect using SQLite itself:'
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于SQLite，这会在您的本地计算机上创建一个文件，您可以使用SQLite自身检查它：
- en: '[PRE1]'
  id: totrans-split-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Encrypting the file is simple. All you have to do is pass one more property
    in the client constructor, `encryptionKey`:'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 加密文件很简单。你只需在客户端构造函数中添加一个额外的属性，`encryptionKey`：
- en: '[PRE2]'
  id: totrans-split-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: After executing the same code with the new client configuration, the file is
    not what it once was!
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用新的客户端配置执行相同代码后，文件已经不再是以前的样子了！
- en: '[PRE3]'
  id: totrans-split-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'From SQLite’s point of view, this is just raw bytes, and can’t be read. But
    passing the right encryption key, our program can read it just fine:'
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 从SQLite的角度来看，这只是原始字节，无法读取。但通过传递正确的加密密钥，我们的程序可以轻松读取它：
- en: '[PRE4]'
  id: totrans-split-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[#](#how-does-it-work-)[](#how-does-it-work-1)How does it work?'
  id: totrans-split-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[#](#how-does-it-work-)[](#how-does-it-work-1)它是如何工作的？'
- en: One of our guiding principles when creating the libSQL fork, is that the community
    would be better served by a general purpose fork of SQLite that was open to anybody.
    Forks of SQLite for special purpose operations exist in the open and are nothing
    new, but due to their narrow nature, they see less distribution than they deserve.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建libSQL分支时，我们的一个指导原则是，社区通过一个开放给任何人的通用SQLite分支会得到更好的服务。SQLite的特殊用途操作的分支在开放中存在，不是什么新鲜事，但由于其狭窄的特性，它们得到的分发不如它们应得的多。
- en: Encryption is not an exception. In fact, many forks exist that add encryption
    to SQLite. After some research, code analysis and careful consideration, we decided
    that just moving the code to our fork would yield better results than writing
    a whole new batch of encryption code, or requiring users to load extensions. One
    project in particular was very suitable for us, [SQLite Multiple Ciphers](https://utelle.github.io/SQLite3MultipleCiphers/).
    Since it is licensed under MIT, we have just moved the code into libSQL.
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 加密并不例外。事实上，存在许多分支，这些分支为SQLite添加了加密功能。经过一些研究、代码分析和仔细考虑，我们决定将代码移至我们的分支，比起编写全新的加密代码或要求用户加载扩展，效果更好。其中一个项目特别适合我们，[SQLite多重加密](https://utelle.github.io/SQLite3MultipleCiphers/)。因为它是根据MIT许可证授权的，我们刚刚将代码移至libSQL中。
- en: Moving the code into libSQL allows us to build other things on the foundation
    of encryption, and to provide the transparent, out-of-the-box experience we have
    shown in the previous section.
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 将代码移到libSQL使我们能够在加密基础上构建其他内容，并提供我们在前一节展示过的透明、开箱即用的体验。
- en: The cipher is configurable per database. We currently support SQLCipher (default)
    and wxSQLite3’s AES 256 Bit.
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 密码器可按数据库配置。我们目前支持SQLCipher（默认）和wxSQLite3的AES 256位。
- en: 'It is not necessary to decrypt the entire file to read data: pages are encrypted
    individually, and for libSQL in particular, we have extended to work to make sure
    that the WAL is also encrypted, as well as the backups that are sent to S3.'
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 无需解密整个文件即可读取数据：页面单独加密，特别是针对libSQL，我们已经扩展工作，确保WAL也被加密，以及发送到S3的备份也是如此。
- en: '[#](#what-does-it-mean-for-turso-users-)[](#what-does-it-mean-for-turso-users)What
    does it mean for Turso users?'
  id: totrans-split-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[#](#what-does-it-mean-for-turso-users-)[](#what-does-it-mean-for-turso-users)对Turso用户意味着什么？'
- en: All volumes in the Turso infrastructure are encrypted at rest by our cloud provider.
    While this is good enough for a variety of cases, the file-level encryption described
    in this post can be used to provide an extra level of security.
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: Turso基础设施中的所有卷都由我们的云服务提供商在静止状态下进行加密。虽然这对各种情况已经足够好，但本文描述的文件级加密可用于提供额外的安全级别。
- en: 'Encryption of embedded replicas is coming soon, and were also planning to add
    two powerful database security additions in the future:'
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入式副本加密即将推出，并且我们计划在未来增加两个强大的数据库安全功能：
- en: '**Bring Your Own Key (BYOK)** for Encryption At Rest: Allows you to encrypt
    any or all of your databases with a key that is provided by you, and passed to
    us on every request. The encryption key is never stored at our servers, giving
    you peace of mind that even in the case of a breach of our infrastructure, your
    data is safe.'
  id: totrans-split-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**自带密钥（BYOK）**用于静止时加密：允许您使用由您提供的密钥加密您的任何或所有数据库，并在每个请求中传递给我们。加密密钥永远不会存储在我们的服务器上，确保即使我们的基础设施发生违规，您的数据也是安全的。'
- en: '**Per-Database Encryption** At Rest: Allows you to use different keys for each
    of your databases. For users following the pattern of per-tenant database, each
    tenant can have their own key, making sure that even if you make a mistake, data
    for your users is never mixed up. We can manage the keys, or you can do it, with
    BYOK.'
  id: totrans-split-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**静止时每数据库加密**：允许您为每个数据库使用不同的密钥。对于遵循租户数据库模式的用户，每个租户可以拥有自己的密钥，确保即使出现错误，也不会混淆用户数据。我们可以管理密钥，或者您可以使用BYOK自行管理。'
- en: If you’d like to join an early private beta for these premium features, please
    fill out [this form](https://docs.google.com/forms/d/e/1FAIpQLSd5wRfM214ljUP9W66FhugGiji%5FP45qMchieTqNn1wdNsw8xg/viewform).
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想参加这些高级功能的早期私人测试版，请填写[此表格](https://docs.google.com/forms/d/e/1FAIpQLSd5wRfM214ljUP9W66FhugGiji%5FP45qMchieTqNn1wdNsw8xg/viewform)。
