- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 15:19:22'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 15:19:22
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Higher Order Derivatives of Transforms - Nosferalatu
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 变换的高阶导数 - Nosferalatu
- en: 来源：[https://nosferalatu.com/HigherOrderDerivativesTransforms.html](https://nosferalatu.com/HigherOrderDerivativesTransforms.html)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://nosferalatu.com/HigherOrderDerivativesTransforms.html](https://nosferalatu.com/HigherOrderDerivativesTransforms.html)
- en: In [a previous post](DerivativesLogarithmsTransforms.html) I discussed the relationship
    between derivatives, logarithms, and transforms. This blog post adds to that and
    explains how to find the second and higher order derivatives of a transform.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在[之前的帖子](DerivativesLogarithmsTransforms.html)中，我讨论了导数、对数和变换之间的关系。这篇博客文章是对那篇文章的补充，并解释了如何找到变换的二阶及更高阶导数。
- en: The Concept of Derivatives of Transforms
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 变换的导数概念
- en: Let’s quickly recap my earlier blog post. Suppose we have a transform \(T\)
    and a point at the initial position of \(x(0)\). The position of the point at
    time t and the first derivative of that point are
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速回顾一下我之前的博客文章。假设我们有一个变换 \(T\) 和一个初始位置为 \(x(0)\) 的点。点在时间 \(t\) 的位置以及该点的第一阶导数为
- en: \(x(t) = T^t * x(0)\)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: \(x(t) = T^t * x(0)\)
- en: \(x'(t) = log(T) * x(t)\).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: \(x'(t) = log(T) * x(t)\).
- en: where \(log(T)\) is the logarithm of the transform. Both \(T\) and \(log(T)\)
    are constant with respect to t.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这里 \(log(T)\) 是变换的对数。 \(T\) 和 \(log(T)\) 都是关于 \(t\) 的常数。
- en: What’s the second derivative?
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第二阶导数是什么？
- en: We know the first derivative (\(x'(t) = log(T) * x(t)\)), so to find the second
    derivative, we start with
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道第一阶导数（\(x'(t) = log(T) * x(t)\)），所以为了找到第二阶导数，我们从这里开始
- en: \(\dfrac{d}{dt}x'(t) = \dfrac{d}{dt}log(T) * x(t)\)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: \(\dfrac{d}{dt}x'(t) = \dfrac{d}{dt}log(T) * x(t)\)
- en: Since \(log(T)\) is constant with respect to time, we then have
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 \(log(T)\) 是关于时间的常数，因此我们有
- en: \(x''(t) = log(T) * \dfrac{d}{dt}x(t)\)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: \(x''(t) = log(T) * \dfrac{d}{dt}x(t)\)
- en: 'and earlier we stated that \(x''(t) = log(T) * x(t)\), so we just plug that
    in, giving us our answer:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 而我们之前说过 \(x'(t) = log(T) * x(t)\)，所以我们只需将其代入，得到我们的答案：
- en: \(x''(t) = log(T) * log(T) * x(t)\).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: \(x''(t) = log(T) * log(T) * x(t)\).
- en: Neat! In other words, if we have the first derivative, then the second derivative
    is just another multiplication by \(log(T)\).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 不错！换句话说，如果我们有了第一阶导数，那么第二阶导数只是再乘以 \(log(T)\)。
- en: In the earlier blog post, we found the tangent vector of a point by multiplying
    the point by \(log(T)\). Similarly, we can now find the acceleration vector of
    a point by multiplying it by \(log(T) * log(T)\).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的博客文章中，我们通过将点乘以 \(log(T)\) 来找到点的切向量。同样，我们现在可以通过将其乘以 \(log(T) * log(T)\) 来找到点的加速度向量。
- en: What’s the nth derivative?
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第 \(n\) 阶导数是什么？
- en: The beauty of this approach is how simple it is. For the nth derivative, we
    can follow the same pattern. More generally, the nth derivative is
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法的美妙之处在于它是多么简单。对于第 \(n\) 阶导数，我们可以遵循同样的模式。更一般地，第 \(n\) 阶导数为
- en: \(x^{n}(t) = log(T)^n * x(t)\)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: \(x^{n}(t) = log(T)^n * x(t)\)
- en: Interactive Example
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 交互式示例
- en: Here’s an interactive example where you can see the tangent vector (green arrow)
    and acceleration vector (red arrow) of a point as it is interpolated from the
    origin to the gizmo’s transform. You can manipulate the gizmo to translate and
    rotate the transform. You can also enable a visualization of the velocity vector
    field or the acceleration vector field.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个交互式示例，在这里你可以看到切向量（绿色箭头）和加速度向量（红色箭头）随着时间从原点插值到 gizmo 的变换时的情况。您可以操作 gizmo
    来平移和旋转变换。您还可以启用速度向量场或加速度向量场的可视化。
- en: The source code for the applet can be found [here](../../js/HigherOrderDerivativesOfTransforms_example.js).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序的源代码可以在 [这里](../../js/HigherOrderDerivativesOfTransforms_example.js) 找到。
- en: Comments
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 评论
- en: Leave comments on this post with Github Issues [here](https://github.com/nosferalatu/nosferalatu.github.io/issues/2).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 Github Issues 在这篇文章上留下评论 [here](https://github.com/nosferalatu/nosferalatu.github.io/issues/2)。
