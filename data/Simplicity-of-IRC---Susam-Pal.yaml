- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 14:55:13'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024年5月27日 14:55:13
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Simplicity of IRC - Susam Pal
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IRC的简单性 - Susam Pal
- en: 来源：[https://susam.net/simplicity-of-irc.html](https://susam.net/simplicity-of-irc.html)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://susam.net/simplicity-of-irc.html](https://susam.net/simplicity-of-irc.html)
- en: <main>
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: <main>
- en: Simplicity of IRC
  id: totrans-split-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IRC的简单性
- en: By **Susam Pal** on 09 Jan 2022
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: '-   作者 **Susam Pal**，2022年1月9日'
- en: During discussions with my friends and colleagues, whenever the topic of chat
    protocols comes up, I often remark how simple the Internet Relay Chat (IRC) protocol
    is and how this simplicity has fostered creativity in the lives of many young
    computer hobbyists growing up in the late 1990s and early 2000s. For many of us
    who were introduced to the Internet during that time, writing an IRC bot turned
    out to be one of our first few non-trivial hobby programming projects that involved
    network sockets, did something meaningful, and served actual users.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在与朋友和同事的讨论中，每当聊到聊天协议的话题时，我经常提到互联网中继聊天（IRC）协议的简单性，以及这种简单性如何促进了许多成长于上世纪90年代末和21世纪初的年轻电脑爱好者生活中的创造力。对于我们许多在那个时候初次接触互联网的人来说，编写一个IRC机器人成为了我们的首个非平凡的业余编程项目之一，涉及到网络套接字，执行有意义的任务，并为实际用户提供服务。
- en: Simplicity
  id: totrans-split-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简单性
- en: The underlying payloads that IRC servers and clients exchange during an IRC
    session are quite simple to read manually and understand. While implementing IRC
    servers still involves significant work to keep track of users, channels, and
    exchanging network state and messages between servers, implementing IRC clients
    can often be quite simple. With a convenient programming language, one can develop
    all kinds of fun tools and bots pretty quickly. Only creativity is the limit!
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: IRC服务器和客户端在IRC会话期间交换的底层负载非常容易手动阅读和理解。尽管实现IRC服务器仍然需要大量工作来跟踪用户、频道以及在服务器之间交换网络状态和消息，但实现IRC客户端通常相对简单。借助便捷的编程语言，人们可以相当快速地开发各种有趣的工具和机器人。唯一的限制就是创造力！
- en: In the early days of IRC, it was quite common for someone with basic programming
    skills to write a simple IRC bot within a matter of hours. Such IRC bots typically
    responded to requests from users, answered frequently asked questions, hosted
    trivia quiz, etc. The simplicity of the protocol made it very enticing to write
    programs that could talk to IRC servers directly. In fact, many people chose to
    write the code to parse and create IRC payloads from scratch. Observing the TCP/IP
    packets with a packet analyser such as Wireshark or Tcpdump was all one needed
    to learn about the various payload formats. Additionally, [RFC 1459](https://www.rfc-editor.org/rfc/rfc1459)
    served as a good reference to learn the IRC specification.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在IRC的早期阶段，有基本编程技能的人通常能够在几个小时内编写一个简单的IRC机器人是很常见的。这类IRC机器人通常会响应用户的请求，回答常见问题，举办知识竞赛等。协议的简单性使得直接编写能与IRC服务器交互的程序变得非常吸引人。事实上，许多人选择编写代码来从头开始解析和创建IRC负载。使用像Wireshark或Tcpdump这样的数据包分析器观察TCP/IP数据包就足以了解各种负载格式。此外，[RFC
    1459](https://www.rfc-editor.org/rfc/rfc1459)作为学习IRC规范的良好参考。
- en: As a result of the simplicity of the IRC protocol, sometimes when I would find
    myself needing to join an IRC channel, say to seek some technical help, from a
    system without an IRC client installed, I would often just start a `telnet`, `nc`,
    or `openssl` connection directly to my favourite IRC network and then type out
    IRC protocol commands by hand to join the channel I need and talk to channel users.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 由于IRC协议的简单性，有时当我需要加入IRC频道，比如寻求一些技术帮助时，我会经常直接在没有安装IRC客户端的系统上启动`telnet`，`nc`或`openssl`连接，然后手动输入IRC协议命令以加入所需的频道并与频道用户交流。
- en: Session
  id: totrans-split-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 会话
- en: 'To illustrate how simple the IRC protocol is, here is an example of a minimal
    IRC session that involves joining a channel and posting a message:'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明IRC协议的简单性，这里有一个涉及加入频道和发布消息的最小IRC会话示例：
- en: '[PRE0]'
  id: totrans-split-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In the above session, the user connects to the Libera Chat network with the
    nickname `humpty`, joins a channel named `#test`, and posts a message.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述会话中，用户使用昵称`humpty`连接到Libera Chat网络，加入了名为`#test`的频道，并发布了一条消息。
- en: 'Note that the above session is not encrypted. By convention, IRC port 6667
    is used for cleartext connections. A separate port, such as port 6697, is available
    for encrypted connections. Here is an example of an encrypted IRC session established
    with the OpenSSL command line tool:'
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，上述会话未加密。按照惯例，IRC端口6667用于明文连接。另有一个端口，如6697端口，用于加密连接。以下是使用OpenSSL命令行工具建立的加密IRC会话示例：
- en: '[PRE1]'
  id: totrans-split-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The ellipsis denotes lines omitted for the sake of brevity. The remainder of
    the session is quite similar to the first example in this post.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 省略号表示出于简洁起见而省略的行。会话的其余部分与本文的第一个示例非常相似。
- en: It is worth noting here that although the payload format of IRC protocol is
    quite simple, as one starts writing IRC clients, one would stumble upon several
    tiny details about the protocol that needs to be taken care of, e.g., authenticating
    to the network, responding to `PING` messages from the server to avoid ping timeouts,
    splitting messages into shorter messages so that the overall payload does not
    exceed the message length limit of 512 characters, etc. For a serious IRC client,
    relying on a suitable library that already solves these problems and implements
    the IRC specification accurately is of course going to be useful. But for a hobbyist
    who wants to understand the protocol and write some tools for fun, the textual
    nature of the IRC protocol and its simplicity offers a fertile ground for experimentation
    and creativity.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，尽管 IRC 协议的载荷格式非常简单，但一旦开始编写 IRC 客户端，你会遇到一些关于协议的微小细节需要注意，例如，向网络进行身份验证，响应来自服务器的
    `PING` 消息以避免 Ping 超时，将消息分割成较短的消息，以确保总载荷不超过512个字符的消息长度限制等。对于一个严肃的 IRC 客户端，依赖于一个能够解决这些问题并准确实现
    IRC 规范的合适库显然是很有用的。但对于想要理解协议并编写一些有趣工具的业余爱好者来说，IRC 协议的文本性质和简单性提供了一个富有实验和创造性的肥沃土壤。
- en: Join
  id: totrans-split-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加入
- en: 'In case you have never used IRC but this post has piqued your interest and
    you want to try it out, you probably don''t want to be typing out IRC payloads
    by hand. You would want a good IRC client instead. Let me share some convenient
    ways to connect to the Libera Chat network. Say, you want to join the `#python`
    channel on Libera Chat network. Here are some ways to do it:'
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你从未使用过 IRC，但是这篇文章引起了你的兴趣并且想要尝试，你可能不想手动输入 IRC 载荷。你会想要一个好的 IRC 客户端。让我分享一些方便的方法来连接到
    Libera Chat 网络。比如，你想要加入 Libera Chat 网络的 `#python` 频道。以下是几种方法：
- en: 'Join via web interface: [web.libera.chat/#python](https://web.libera.chat/#python).'
  id: totrans-split-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 Web 界面加入：[web.libera.chat/#python](https://web.libera.chat/#python)。
- en: 'Join using Irssi: On macOS, run `brew install irssi` to install it. On Debian,
    Ubuntu, or a Debian-based Linux system, run `sudo apt-get install irssi`. Then
    enter `irssi -c irc.libera.chat` to connect to Libera Chat. Then within Irssi,
    type `/join #python`.'
  id: totrans-split-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '在 macOS 上，运行 `brew install irssi` 安装 Irssi。在 Debian、Ubuntu 或基于 Debian 的 Linux
    系统上，运行 `sudo apt-get install irssi`。然后输入 `irssi -c irc.libera.chat` 连接到 Libera
    Chat。在 Irssi 中输入 `/join #python` 加入频道。'
- en: 'There are numerous other ways to join IRC networks. There are GUI desktop clients,
    web browser plugins, Emacs plugins, web-based services, bouncers, etc. that let
    users connect to IRC networks in various ways. On Libera Chat, there are various
    channels for open source projects (`#emacs`, `#linux`, etc.), communities around
    specific subjects (`##math`, `#physics`, etc.), programming languages (`#c`, `#c++`,
    `#commonlisp`, etc.). Type the `/join` command followed by a space and the channel
    name to join a channel and start posting and reading messages there. It is also
    possible to search for channels by channel names. For example, on Libera Chat,
    to search for all channels with "python" in its name, enter the IRC command: `/msg
    alis list python`.'
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多其他加入 IRC 网络的方法。有桌面 GUI 客户端、Web 浏览器插件、Emacs 插件、Web 服务、弹跳客户端等，让用户以各种方式连接到
    IRC 网络。在 Libera Chat 上，有许多开源项目的频道（`#emacs`、`#linux` 等）、特定主题的社区（`##math`、`#physics`
    等）、编程语言（`#c`、`#c++`、`#commonlisp` 等）。输入 `/join` 命令，后跟空格和频道名称，加入频道并开始发布和阅读消息。也可以通过频道名称搜索频道。例如，在
    Libera Chat 上，要搜索所有包含 "python" 的频道，输入 IRC 命令：`/msg alis list python`。
- en: Although I have used Libera Chat in the examples above, there are plenty of
    other IRC networks too such as EFNet, DALNet, OFTC, etc. Libera Chat happens to
    be one of the very popular and active networks for open source projects and topic
    based communities. I use it everyday, so I chose it for the examples here. There
    are many tight-knit communities on Libera Chat. Some of my favourite ones are
    `#commonlisp`, `#emacs`, `#python`, etc. All of these have very nice and active
    communities with great attitudes towards beginners.
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管上面的例子中使用了 Libera Chat，还有许多其他 IRC 网络，如 EFNet、DALNet、OFTC 等。Libera Chat 是开源项目和主题社区非常流行和活跃的网络之一。我每天都在使用它，所以我选择了它作为这里的例子。在
    Libera Chat 上有许多紧密联系的社区。我最喜欢的一些是 `#commonlisp`、`#emacs`、`#python` 等。所有这些都有非常友好和活跃的社区，对初学者有很好的态度。
- en: </main>
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: </main>
