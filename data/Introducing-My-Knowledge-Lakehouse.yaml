- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:46:29'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:46:29'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Introducing My Knowledge Lakehouse
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍我的知识湖泊
- en: 来源：[https://tabokie.github.io/non-fiction/2024/01/13/log-kb.html](https://tabokie.github.io/non-fiction/2024/01/13/log-kb.html)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://tabokie.github.io/non-fiction/2024/01/13/log-kb.html](https://tabokie.github.io/non-fiction/2024/01/13/log-kb.html)
- en: Introducing My Knowledge Lakehouse
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍我的知识湖泊
- en: non-fiction, 2024-01-13
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 非小说，2024-01-13
- en: '1 There’re only three entities: `log`, `list`, `structure`.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 1 只有三个实体：`log`、`list`、`structure`。
- en: 1.1 Everything goes into the `log` chronologically. It is the source of truth.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 1.1 一切都按照时间顺序记录在 `log` 中。这是真相的来源。
- en: 1.11 We refer to the smallest unit of content in `log` as `entry`.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 1.11 我们将 `log` 中的最小内容单位称为 `entry`。
- en: '1.111 `entry` can be anything really: an idea, a memory, a piece of information,
    a progress update of a task, a TODO item, a reference to another `entry`…'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 1.111 `entry` 可以是任何东西：一个想法，一个记忆，一条信息，一个任务的进度更新，一个待办事项，对另一个 `entry` 的引用……
- en: 1.12 Immediacy and immutability matters. `entry`s are captured as they happen,
    never modified.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 1.12 即时性和不变性很重要。`entry` 在发生时被捕获，永远不会被修改。
- en: 1.121 There’s no room for auditing or forgetting. `entry`s are an authentic
    reflection of reality.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 1.121 没有审核或遗忘的余地。`entry` 是对现实的真实反映。
- en: 1.122 Efforts should be put to optimize the latency of the capture.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 1.122 应该努力优化捕获的延迟。
- en: 1.1221 Sometimes the primary tool is not available. An “always-on” secondary
    should take its place.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 1.1221 有时主要工具不可用。一个“始终在线”的次要工具应该代替它。
- en: 1.1222 Sometimes `log` from different tools or locations need to be “merged”,
    “persisted”. The general principle is to reduce manual steps (e.g. use a Web App
    that merges automatically), and do them daily at a fixed time and place (e.g.
    push to a git repository before going to bed).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 1.1222 有时需要“合并”、“持久化”来自不同工具或位置的 `log`。总的原则是减少手动步骤（例如使用自动合并的 Web 应用），并在固定的时间和地点（例如睡前推送到
    git 仓库）进行日常操作。
- en: 1.123 In this sense, `log` is very similar to [Lab Notebooks](https://sambleckley.com/writing/lab-notebooks.html)
    (Sam Bleckley, 2020)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 1.123 在这个意义上，`log` 很类似于 [实验笔记](https://sambleckley.com/writing/lab-notebooks.html)（Sam
    Bleckley，2020）。
- en: 1.13 External context (if any) is part of the `entry`.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 1.13 外部上下文（如果有的话）是 `entry` 的一部分。
- en: 1.131 At the minimum, the title, author, and year of publish should be cited.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 1.131 至少应引用标题、作者和出版年。
- en: 1.132 Better yet, use a personal URI system to reference local copies of the
    context, e.g. [Zotero snapshot](https://www.zotero.org/support/adding_items_to_zotero#saving_webpages),
    image, book.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 1.132 更好的方法是，使用个人 URI 系统引用本地副本的上下文，例如 [Zotero 快照](https://www.zotero.org/support/adding_items_to_zotero#saving_webpages)，图片，书籍。
- en: 1.14 There can be different types of `log`s. Different `log`s should represent
    completely different domains. Thoughts in these domains usually happen at different
    times and places.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 1.14 `log` 可以有不同类型。不同的 `log` 应该代表完全不同的领域。这些领域的思想通常发生在不同的时间和地点。
- en: '1.142 I currently have three types of `log`s: journal, reading, worklog.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 1.142 我目前有三种类型的 `log`：日志、阅读记录、工作日志。
- en: 1.2 `list` and `structure` are derived from the `log`s.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 1.2 `list` 和 `structure` 源自于 `log`。
- en: 1.21 A `list` references multiple `entry`s in the `log`.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 1.21 一个 `list` 引用 `log` 中的多个 `entry`。
- en: 1.211 `list` is a flat collection of `entry`s, contains nothing else.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 1.211 `list` 是 `entry` 的扁平集合，不包含其他内容。
- en: 1.212 The order of `entry`s in a `list` may be important, may be not. This is
    to say, you can treat the `list` either as an [`Array`](https://en.wikipedia.org/wiki/Array_(data_structure)),
    or as a [`Set`](https://en.wikipedia.org/wiki/Set_(mathematics)).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 1.212 `list` 中 `entry` 的顺序可能很重要，也可能不重要。这意味着，你可以将 `list` 视为 [`Array`](https://en.wikipedia.org/wiki/Array_(data_structure))，也可以将其视为
    [`Set`](https://en.wikipedia.org/wiki/Set_(mathematics))。
- en: 1.213 I have some `list`s [here](/collection.html), if you want to see.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 1.213 我在[这里](/collection.html)有一些 `list`，如果你想看的话。
- en: 1.22 A `structure` references multiple `entry`s in the `log`, in a hierarchical
    way.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 1.22 `structure` 以层次化的方式引用 `log` 中的多个 `entry`。
- en: 1.221 The construction of a `structure` involves many thoughts that function
    as “glue”. They can exist outside the `log`s.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 1.221 `structure` 的构建涉及许多作为“粘合剂”的思想。它们可以存在于 `log` 之外。
- en: 1.2211 Think of the “glue” thoughts as the data member names when programming
    a [`struct`](https://en.wikipedia.org/wiki/Struct_(C_programming_language)). A
    name represents a particular angle to view an `entry`, an incomplete slice of
    an `entry`’s whole.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 1.2211 将“粘合剂”思想想象成编写 [`struct`](https://en.wikipedia.org/wiki/Struct_(C_programming_language))
    时的数据成员名称。一个名称代表着观察 `entry` 的特定角度，`entry` 的一个不完整片段。
- en: 1.23 `list` and `structure` don’t need to be exaustive in what they are trying
    to collect. Unlike `log`s, the creation and maintenance of `list` and `structure`
    are performed asynchronously.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 1.23 `list`和`structure`不需要详尽收集它们试图收集的内容。与`log`不同，`list`和`structure`的创建和维护是异步进行的。
- en: 1.24 It is idiomatic to create `list`s using automation. For example, use a
    search and de-duplication script to create a `list` of all unfinished TODO items.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 1.24 使用自动化创建`list`是惯用法。例如，使用搜索和去重脚本创建所有未完成的TODO项目的`list`。
- en: 1.3 Yes, it’s like a data lakehouse. `list` and `structure` are materialized
    views over the unstructured data stored in `log`s.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 1.3 是的，就像一个数据湖。`list`和`structure`是对存储在`log`中的非结构化数据的物化视图。
- en: 2 Reference to an internal `entry` is simply a pair of content and date.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 2 对内部`entry`的引用只是内容和日期的一对。
- en: 2.1 The content is a copy or a paraphrase of the original `entry`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 2.1 内容是原始`entry`的副本或释义。
- en: 2.11 Do repeat yourself, as contrary to [DRY](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself).
    Think of the content as a cache of the full `entry`.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 2.11 重复自己，与[DRY](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself)相反。把内容看作是完整`entry`的缓存。
- en: 2.2 The date is the creation time of the original `entry`.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 2.2 日期是原始`entry`创建的时间。
- en: 2.21 The fact that unpacking a reference requires the reader to examine all
    `log`s from that entire day, facilitates re-discovery of old ideas.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 2.21 解包引用需要读者检查整天的所有`log`，这有助于重新发现旧的想法。
- en: 2.22 References to an `entry` can be found easily with a search of that date.
    These references are commonly referred to as [backlinks](https://en.wikipedia.org/wiki/Backlink),
    or [webmention](https://www.w3.org/TR/webmention/) in the context of netpages.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 2.22 通过搜索该日期，可以轻松找到对`entry`的引用。这些引用通常被称为[回链](https://en.wikipedia.org/wiki/Backlink)，或者在网络页面的上下文中称为[webmention](https://www.w3.org/TR/webmention/)。
- en: 2.221 For `log`s that are not searchable (e.g. paper notebook), a searchable
    `list` needs to be created to bookkeep all references in them. It contains a set
    of `date1 (date2)`, where `date1` is the day being referenced, and `date2` is
    the day this reference is created. By searching for `date1`, we know `date2` is
    its backlink.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 2.221 对于不可搜索的`log`（例如纸质笔记本），需要创建一个可搜索的`list`来记录其中的所有引用。它包含一组`date1（date2）`，其中`date1`是被引用的日期，`date2`是创建此引用的日期。通过搜索`date1`，我们知道`date2`是它的回链。
- en: 3 All `log`s are to be reviewed regularly, and randomly.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 3 所有的`log`都要定期和随机地复查。
- en: 3.1 Through the course of re-reading, learn to remember past ambititions and
    melancholies. Learn to disagree with them, and in disagreement find a way forward.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1 通过反复阅读，学会记住过去的抱负和忧郁。学会与之不同意，并在不同意中找到前进的方法。
- en: 3.2 Digital `log`s should be printed to physical books for the sake of reviewing.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 3.2 为了便于回顾，数字`log`应该打印成实体书籍。
- en: 3.21 Nothing compares to the feel of a physical book, especially when the purpose
    of reading is not to consume and complete.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 3.21 没有什么比触摸实体书更让人舒服，尤其是当阅读的目的不是为了消费和完成时。
