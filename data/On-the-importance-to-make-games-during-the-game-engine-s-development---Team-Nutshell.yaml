- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-29 13:25:52'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-29 13:25:52
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: On the importance to make games during the game engine’s development | Team
    Nutshell
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对于在游戏引擎开发过程中制作游戏的重要性 | Team Nutshell
- en: 来源：[https://www.team-nutshell.dev/nutshellengine/articles/making-games-during-development.html](https://www.team-nutshell.dev/nutshellengine/articles/making-games-during-development.html)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.team-nutshell.dev/nutshellengine/articles/making-games-during-development.html](https://www.team-nutshell.dev/nutshellengine/articles/making-games-during-development.html)
- en: On the importance to make games during the game engine’s development
  id: totrans-split-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对于在游戏引擎开发过程中制作游戏的重要性
- en: If you are making a game engine, this won’t surprise you but making a game and
    making a game engine are two very different things, that require very different
    skills.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在开发游戏引擎，这不会让你感到惊讶，因为制作游戏和制作游戏引擎是两种需要完全不同技能的事情。
- en: You can consider that making a game alone is more suited to **artistic profiles**,
    such as game designers, texture artists, musicians, with programming being facilitated
    by modern games engines, which can even allow you to make a game without writing
    a single line of code, and that making a game engine is more suited to **technical
    profiles**, as it involves low-level programming, mathematics, physics, etc. And
    it is true for the most part, but as a game engine developer, and especially if
    you work alone, not ignoring these artistic aspects can help you a lot while writing
    your game engine.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你考虑独自制作游戏，这更适合**艺术类人才**，比如游戏设计师、纹理艺术家、音乐家，现代游戏引擎使得编程更为便捷，甚至可以让你不写一行代码就能制作游戏，这与制作游戏引擎更适合**技术类人才**，因为它涉及低层编程、数学、物理等。在很大程度上确实如此，但作为游戏引擎开发者，尤其是如果你独自工作，不忽视这些艺术方面在编写游戏引擎时会对你有很大帮助。
- en: Obviously, it all depends on the **purpose** of your game engine, you maybe
    don’t even want to make games with it, and are just interested by the technical
    aspects of it, and it is completely fine. But if you want some games to be made
    with your game engine, you must **try to make a game** on it.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，一切都取决于你的游戏引擎的**目的**，也许你甚至不想用它来制作游戏，只对其技术方面感兴趣，这完全没问题。但是，如果你希望有一些游戏能够使用你的游戏引擎制作，你必须**尝试制作一款游戏**。
- en: It especially applies **if you hope people will use it to make their own games**,
    but also applies **if you plan on being the only user**. There are so many different
    things to do while working on a game engine that **it is easy to forget making
    games with it**, especially as new features are generally simply tested using
    simple scenes, as bigger scenes are difficult to setup and could make any issue
    harder to detect and debug.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是当**希望他人能用它来制作他们自己的游戏**时，这尤为重要，但也适用于**计划成为唯一用户**的情况。在开发游戏引擎时有很多不同的事情要做，很容易忘记用它制作游戏，尤其是因为新功能通常只是在简单场景中进行测试，而设置更大场景往往更难且可能使问题更难以检测和调试。
- en: If you are far into the game engine’s development, like *many years of development*
    far, and you never made a game with it, **it may be possible that your game engine…
    cannot make games**. There is a huge difference between creating simple scenes
    to test new features and being able to *make something* that has a real gameplay,
    and that can be **distributed to other users** without any issues. Maybe your
    game engine relies on **some files or configuration that are only available in
    your development environment**, or it maybe **only works on your machine**. Simply
    being able to create an executable (with some external files if needed) and sharing
    it to a friend is a good first step to make sure your game engine can actually
    make games. Obviously, you could argue that being distributable is not a requirement
    for a game, and it is true, but if you want to share them, make sure that you
    can.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的游戏引擎开发已经进展到很远，比如*多年的开发*，而你从未用它制作过游戏，**可能你的游戏引擎……不能制作游戏**。创建简单场景测试新功能与能够制作具有真实游戏性且可以**分发给其他用户**的东西之间存在巨大差异，尤其是在你的游戏引擎可能依赖于**仅在你的开发环境中可用的某些文件或配置**，或者**仅在你的机器上运行**时。能够创建一个可执行文件（如果需要的话带有一些外部文件）并与朋友分享是确保你的游戏引擎实际上能制作游戏的重要第一步。显然，你可以争论说可分发性不是游戏的必要条件，这也是事实，但如果你想分享它们，请确保你能做到。
- en: Alright, but what about the *actual process of making games*. You will probably
    realize that making a game with your game engine is a **huge pain**, and, again,
    even if you plan on being the only user of your game engine, **knowing your engine
    perfectly won’t stop you from being bothered by many aspects of it** while actually
    using it, **making a game with your game engine should still be as painless as
    possible**.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，但是*制作游戏的实际过程*如何？ 你可能会意识到，使用你的游戏引擎制作游戏是**非常痛苦**的，而且即使你计划成为游戏引擎的唯一用户，**完全掌握你的引擎也无法阻止你在实际使用时被许多方面困扰**，因此，**使用你的游戏引擎制作游戏应尽可能少出现问题**。
- en: 'There are **many aspects that you should be looking for** when making a game
    with your own game engine, for example:'
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用自己的游戏引擎制作游戏时，有**许多方面你应该关注**，例如：
- en: '**Is it hard to make scenes?** Actually placing objects in a scene, especially
    if you don’t have a scene editor yet, can be really tricky. Rotations should be
    looked for too, radians or quaternions should indeed be used internally to make
    the calculations but specifying them as euler angles in degrees in your scene
    files, and converting them when loading the scene, will make rotations easier
    to use when making a scene.'
  id: totrans-split-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**制作场景难吗？** 实际上，在场景中放置物体，特别是如果你还没有场景编辑器的情况下，可能会非常棘手。还应该寻找旋转，内部确实应该使用弧度或四元数进行计算，但在场景文件中将它们指定为以度为单位的欧拉角，并在加载场景时进行转换，将使旋转在制作场景时更容易使用。'
- en: '**Is scripting simple?** It’s really easy to think that all sanity checks (for
    example: do I have to check if an entity still exists before destroying it?) should
    be done by the user writing the scripts, but actually writing scripts where you
    have to check everything all the time makes the process really painful. Try moving
    some of these checks inside your scripting API and use logging to warn the user
    if something goes wrong, so they don’t have to make all these checks themselves.
    Obviously, too many checks may add a performance penalty so be cautious with the
    checks you can add to the game engine at a low cost and the ones the user should
    be doing.'
  id: totrans-split-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**脚本编写简单吗？** 很容易认为所有的健全性检查（例如：在销毁实体之前我是否需要检查实体是否仍然存在？）都应该由编写脚本的用户来完成，但实际上，在编写必须一直检查所有事情的脚本时，过程会变得非常痛苦。尝试将一些这些检查移到你的脚本API内部，并使用日志记录来警告用户如果出现问题，这样他们就不必自己进行所有这些检查。显然，过多的检查可能会增加性能开销，因此在游戏引擎中增加可以低成本进行的检查和用户应该做的检查时应该谨慎对待。'
- en: '**Are assets actually usable?** Your assets will probably not be packed inside
    your executable, so be sure that the paths are right when exporting your game
    for distribution.'
  id: totrans-split-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资产实际上可以使用吗？** 你的资产可能不会被打包到可执行文件中，因此在将游戏导出到发布时，请确保路径正确。'
- en: '**Where are the bugs?** This one is pretty obvious, but creating something
    bigger than what you used to do will certainly make some issues show up, such
    as crashes, performance issues, graphical or sound glitches, etc.'
  id: totrans-split-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Bug在哪里？** 这显而易见，但是创建比你过去做过的任何事情更大的东西肯定会导致一些问题出现，例如崩溃、性能问题、图形或声音故障等。'
- en: When making a game, take notes on **all things that bothered you**, things **that
    were repetitive when they should not** or the bugs you encounter, to be able **to
    fix all of this and have a better experience** when you will be making your next
    game. Making a game will also force you **to get familiar with tools** used by
    game developers. You don’t have to become a Blender or Aseprite expert but being
    able to make simple 3D models with textures, or 2D sprites, will help you a lot
    when making your game engine.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 制作游戏时，请记录下**所有困扰你的事情**，那些**不应该重复但却重复了的事情**或者你遇到的错误，以便**修复所有这些问题，并在制作下一个游戏时有更好的体验**。制作游戏还将迫使你**熟悉游戏开发者使用的工具**。你不必成为Blender或Aseprite的专家，但能够制作带有纹理的简单3D模型或2D精灵将对你制作游戏引擎非常有帮助。
- en: 'Now, the question lies: ***when* should you start making games with your game
    engine?** A game engine being a huge project, the sooner you identify these issues,
    the better. Every system doesn’t have to be perfectly ready to start making games
    with them. As long as your game engine has basic rendering and scripting, you
    should be able to do something.'
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在的问题是：***什么时候*开始使用你的游戏引擎制作游戏？** 游戏引擎是一个庞大的项目，你越早识别这些问题，越好。并不是每个系统都必须完全准备好才能开始使用它们制作游戏。只要你的游戏引擎具备基本的渲染和脚本功能，你就应该能够做些什么。
- en: Obviously, **the goal is not to start with a AAA open-world game**, a **small
    game that you can finish in a few days** is enough. **Game jams are great opportunities**
    to make these kind of games, as you won’t have to find a theme, which will be
    given by the game jam, and will be forced to work on a short time limit, generally
    a week-end or a week. So if you don’t have any ideas for your game, you can start
    by joining a game jam, and to find one, [itch.io has a game jam planning](https://itch.io/jams)
    to find one that fits you.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，并非要从一个AAA开放世界游戏开始，一个能在几天内完成的小游戏就足够了。**游戏短期比赛是制作这类游戏的绝佳机会**，因为你不必自己找主题，而是由比赛决定，并且将被迫在短时间内完成，通常是一个周末或一周。所以，如果你对游戏没有任何想法，可以先参加一场游戏短期比赛，[itch.io提供游戏短期比赛规划](https://itch.io/jams)，找到适合你的比赛。
- en: If you have friends that are willing to use your game engine (lucky you!), you
    can also organize a game jam where everyone will work on their own game, on your
    game engine. **Ask them to note every issue they encounter** and you will probably
    get a lot of very useful feedback from people that aren’t as familiar with your
    game engine as you.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有愿意使用你的游戏引擎的朋友（幸运！），你也可以组织一个游戏短期比赛，每个人都会在你的游戏引擎上开发自己的游戏。**请他们记录遇到的每个问题**，你可能会从那些对你的游戏引擎不太熟悉的人那里得到许多非常有用的反馈。
- en: To conclude, making games while making a game engine is important, don’t wait
    for it to be completely ready before starting. If you don’t, you may realize your
    game engine cannot actually make games, and it may be too late to fix it easily.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，在制作游戏的同时制作游戏引擎很重要，不要等到完全准备好再开始。如果不这样做，你可能会发现你的游戏引擎实际上不能制作游戏，而且可能会为修复带来很大麻烦。
