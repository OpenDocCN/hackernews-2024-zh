- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:56:07'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:56:07'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Building a USB SNES Controller
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建 USB SNES 控制器
- en: 来源：[https://blog.chybby.com/posts/building-a-usb-snes-controller](https://blog.chybby.com/posts/building-a-usb-snes-controller)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://blog.chybby.com/posts/building-a-usb-snes-controller](https://blog.chybby.com/posts/building-a-usb-snes-controller)
- en: '`#include  <HID-Project.h>'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '`#include  <HID-Project.h>'
- en: '#define  CLOCK_PIN 14'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '#define  CLOCK_PIN 14'
- en: '#define  LATCH_PIN 15'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '#define  LATCH_PIN 15'
- en: '#define  DATA_PIN 16'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '#define  DATA_PIN 16'
- en: '#define  SNES_BUTTON_B 0'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '#define  SNES_BUTTON_B 0'
- en: '#define  SNES_BUTTON_Y 1'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '#define  SNES_BUTTON_Y 1'
- en: '#define  SNES_BUTTON_SELECT 2'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '#define  SNES_BUTTON_SELECT 2'
- en: '#define  SNES_BUTTON_START 3'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '#define  SNES_BUTTON_START 3'
- en: '#define  SNES_BUTTON_UP 4'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '#define  SNES_BUTTON_UP 4'
- en: '#define  SNES_BUTTON_DOWN 5'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '#define  SNES_BUTTON_DOWN 5'
- en: '#define  SNES_BUTTON_LEFT 6'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '#define  SNES_BUTTON_LEFT 6'
- en: '#define  SNES_BUTTON_RIGHT 7'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '#define  SNES_BUTTON_RIGHT 7'
- en: '#define  SNES_BUTTON_A 8'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '#define  SNES_BUTTON_A 8'
- en: '#define  SNES_BUTTON_X 9'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '#define  SNES_BUTTON_X 9'
- en: '#define  SNES_BUTTON_L 10'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '#define  SNES_BUTTON_L 10'
- en: '#define  SNES_BUTTON_R 11'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '#define  SNES_BUTTON_R 11'
- en: '#define  SNES_BUTTON_UNDEF_1 12'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '#define  SNES_BUTTON_UNDEF_1 12'
- en: '#define  SNES_BUTTON_UNDEF_2 13'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '#define  SNES_BUTTON_UNDEF_2 13'
- en: '#define  SNES_BUTTON_UNDEF_3 14'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '#define  SNES_BUTTON_UNDEF_3 14'
- en: '#define  SNES_BUTTON_UNDEF_4 15'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '#define  SNES_BUTTON_UNDEF_4 15'
- en: const  uint8_t num_buttons =  16;
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: const  uint8_t num_buttons =  16;
- en: // Map SNES buttons to HID joypad buttons.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: // 将 SNES 按钮映射到 HID 游戏手柄按钮。
- en: const  uint8_t snes_id_to_hid_id[] = { 2, 4, 7, 8, 0, 0, 0, 0, 1, 3, 5, 6, 10,
    11, 12, 13 };
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: const  uint8_t snes_id_to_hid_id[] = { 2, 4, 7, 8, 0, 0, 0, 0, 1, 3, 5, 6, 10,
    11, 12, 13 };
- en: void  setup() {
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: void  setup() {
- en: Gamepad.begin();
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Gamepad.begin();
- en: pinMode(CLOCK_PIN, OUTPUT);
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: pinMode(CLOCK_PIN, OUTPUT);
- en: pinMode(LATCH_PIN, OUTPUT);
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: pinMode(LATCH_PIN, OUTPUT);
- en: pinMode(DATA_PIN, INPUT);
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: pinMode(DATA_PIN, INPUT);
- en: digitalWrite(CLOCK_PIN, HIGH);
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: digitalWrite(CLOCK_PIN, HIGH);
- en: '}'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: // Report button states over HID.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: // 通过 HID 报告按钮状态。
- en: void  reportButtons(bool  button_states[num_buttons]) {
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: void  reportButtons(bool  button_states[num_buttons]) {
- en: // D-Pad.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: // 十字键。
- en: int8_t dpad_status = GAMEPAD_DPAD_CENTERED;
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: int8_t dpad_status = GAMEPAD_DPAD_CENTERED;
- en: if (button_states[SNES_BUTTON_UP]) {
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: if (button_states[SNES_BUTTON_UP]) {
- en: dpad_status = GAMEPAD_DPAD_UP;
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: dpad_status = GAMEPAD_DPAD_UP;
- en: if (button_states[SNES_BUTTON_LEFT]) {
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: if (button_states[SNES_BUTTON_LEFT]) {
- en: dpad_status = GAMEPAD_DPAD_UP_LEFT;
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: dpad_status = GAMEPAD_DPAD_UP_LEFT;
- en: '} else  if (button_states[SNES_BUTTON_RIGHT]) {'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '} else  if (button_states[SNES_BUTTON_RIGHT]) {'
- en: dpad_status = GAMEPAD_DPAD_UP_RIGHT;
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: dpad_status = GAMEPAD_DPAD_UP_RIGHT;
- en: '}'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '} else  if (button_states[SNES_BUTTON_DOWN]) {'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '} else  if (button_states[SNES_BUTTON_DOWN]) {'
- en: dpad_status = GAMEPAD_DPAD_DOWN;
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: dpad_status = GAMEPAD_DPAD_DOWN;
- en: if (button_states[SNES_BUTTON_LEFT]) {
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: if (button_states[SNES_BUTTON_LEFT]) {
- en: dpad_status = GAMEPAD_DPAD_DOWN_LEFT;
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: dpad_status = GAMEPAD_DPAD_DOWN_LEFT;
- en: '} else  if (button_states[SNES_BUTTON_RIGHT]) {'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '} else  if (button_states[SNES_BUTTON_RIGHT]) {'
- en: dpad_status = GAMEPAD_DPAD_DOWN_RIGHT;
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: dpad_status = GAMEPAD_DPAD_DOWN_RIGHT;
- en: '}'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '} else  if (button_states[SNES_BUTTON_LEFT]) {'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '} else  if (button_states[SNES_BUTTON_LEFT]) {'
- en: dpad_status = GAMEPAD_DPAD_LEFT;
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: dpad_status = GAMEPAD_DPAD_LEFT;
- en: '} else  if (button_states[SNES_BUTTON_RIGHT]) {'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '} else  if (button_states[SNES_BUTTON_RIGHT]) {'
- en: dpad_status = GAMEPAD_DPAD_RIGHT;
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: dpad_status = GAMEPAD_DPAD_RIGHT;
- en: '}'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: Gamepad.dPad1(dpad_status);
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Gamepad.dPad1(dpad_status);
- en: Gamepad.dPad2(dpad_status);
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: Gamepad.dPad2(dpad_status);
- en: for (uint8_t snes_id =  0; snes_id < num_buttons; snes_id++) {
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: for (uint8_t snes_id =  0; snes_id < num_buttons; snes_id++) {
- en: if (snes_id >=  4  && snes_id <=  7) {
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: if (snes_id >=  4  && snes_id <=  7) {
- en: // D-Pad.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: // 十字键。
- en: continue;
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: continue;
- en: '}'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: if (button_states[snes_id]) {
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: if (button_states[snes_id]) {
- en: Gamepad.press(snes_id_to_hid_id[snes_id]);
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Gamepad.press(snes_id_to_hid_id[snes_id]);
- en: '} else {'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '} else {'
- en: Gamepad.release(snes_id_to_hid_id[snes_id]);
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Gamepad.release(snes_id_to_hid_id[snes_id]);
- en: '}'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: void  loop() {
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: void  loop() {
- en: // Collect button state info from controller.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: // 从控制器收集按钮状态信息。
- en: // Send data latch.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: // 发送数据锁存。
- en: digitalWrite(LATCH_PIN, HIGH);
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: digitalWrite(LATCH_PIN, HIGH);
- en: delayMicroseconds(12);
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: delayMicroseconds(12);
- en: digitalWrite(LATCH_PIN, LOW);
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: digitalWrite(LATCH_PIN, LOW);
- en: delayMicroseconds(6);
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: delayMicroseconds(6);
- en: bool button_states[num_buttons];
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: bool button_states[num_buttons];
- en: for (uint8_t id =  0; id < num_buttons; id++) {
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: for (uint8_t id =  0; id < num_buttons; id++) {
- en: // Sample the button state.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: // 采样按钮状态。
- en: int button_pressed =  digitalRead(DATA_PIN) == LOW;
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: int button_pressed =  digitalRead(DATA_PIN) == LOW;
- en: button_states[id] = button_pressed;
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: button_states[id] = button_pressed;
- en: digitalWrite(CLOCK_PIN, LOW);
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: digitalWrite(CLOCK_PIN, LOW);
- en: delayMicroseconds(6);
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: delayMicroseconds(6);
- en: digitalWrite(CLOCK_PIN, HIGH);
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: digitalWrite(CLOCK_PIN, HIGH);
- en: delayMicroseconds(6);
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: delayMicroseconds(6);
- en: '}'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: // Update HID button states.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: // 更新 HID 按钮状态。
- en: reportButtons(button_states);
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: reportButtons(button_states);
- en: Gamepad.write();
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: Gamepad.write();
- en: delay(16);
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: delay(16);
- en: '}`'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '}`'
