- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-29 13:18:57'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-29 13:18:57'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: What is Tauri? | Tauri
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 Tauri？ | Tauri
- en: 来源：[https://beta.tauri.app/guides/](https://beta.tauri.app/guides/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://beta.tauri.app/guides/](https://beta.tauri.app/guides/)
- en: Tauri is a framework for building tiny, fast binaries for all major desktop
    and mobile platforms. Developers can integrate any frontend framework that compiles
    to HTML, JavaScript, and CSS for building their user experience while leveraging
    languages such as Rust, Swift, and Kotlin for backend logic when needed.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: Tauri 是一个为所有主要桌面和移动平台构建微小、快速二进制文件的框架。开发者可以集成任何编译为 HTML、JavaScript 和 CSS 的前端框架，以构建他们的用户体验，同时在需要时利用
    Rust、Swift 和 Kotlin 等语言进行后端逻辑。
- en: Get started building with [`create-tauri-app`](https://github.com/tauri-apps/create-tauri-app)
    by using one of the below commands. Be sure to follow the [prerequisites guide](/start/prerequisites/)
    to install all of the dependencies required by Tauri and then view the [Frontend
    Configuration guides](/start/frontend/) for recommended frontend configurations.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 开始使用[`create-tauri-app`](https://github.com/tauri-apps/create-tauri-app)通过以下命令之一构建。确保遵循[Tauri
    的先决条件指南](/start/prerequisites/)安装所有 Tauri 需要的依赖项，然后查看[前端配置指南](/start/frontend/)以获取推荐的前端配置。
- en: <starlight-tabs class="astro-mkxqpaln">[PRE0]
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: <starlight-tabs class="astro-mkxqpaln">[PRE0]
- en: '[PRE1]'
  id: totrans-split-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-split-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-split-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-split-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-split-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]</starlight-tabs>'
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE6]</starlight-tabs>'
- en: After you’ve created your first app you can explore the different features and
    recipes of Tauri in the [List of Features & Recipes](/plugin/).
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建了您的第一个应用程序之后，您可以在[功能和配方列表](/plugin/)中探索 Tauri 的不同功能和配方。
- en: 'Tauri has 3 main advantages for developers to build upon:'
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: Tauri有三个主要优势供开发者构建：
- en: Secure foundation for building apps
  id: totrans-split-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于构建应用程序的安全基础
- en: Smaller bundle size by using the system’s native webview
  id: totrans-split-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用系统的原生 Web 视图实现更小的捆绑包大小
- en: Flexibility for developers to use any frontend and bindings for multiple languages
  id: totrans-split-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 灵活性使开发者可以使用任何前端和多种语言的绑定
- en: Learn more about the Tauri philosophy in the [Tauri 1.0 blog post](/blog/tauri-1-0/).
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在[Tauri 1.0 博客文章](/blog/tauri-1-0/)中了解更多有关 Tauri 哲学的信息。
- en: By being built on Rust, Tauri is able to take advantage of the memory, thread,
    and type-safety offered by Rust. Apps built on Tauri can automatically get those
    benefits even without needing to be developed by Rust experts.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 Rust 构建，Tauri 能够利用 Rust 提供的内存、线程和类型安全性优势。即使不需要由 Rust 专家开发，基于 Tauri 构建的应用程序也可以自动获得这些好处。
- en: Tauri also undergoes a security audit for major and minor releases. This not
    only covers code in the Tauri organization, but also for upstream dependencies
    that Tauri relies on. Of course this doesn’t mitigate all risks, but it provides
    a solid foundation for developers to build on top of.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: Tauri 还进行了针对主要和次要版本的安全审计。这不仅覆盖了 Tauri 组织中的代码，还包括 Tauri 依赖的上游依赖项。当然，这并不能消除所有风险，但为开发者构建应用程序提供了坚实的基础。
- en: Read the [Tauri security policy](https://github.com/tauri-apps/tauri/security/policy)
    and the [Tauri 1.0 audit report](https://github.com/tauri-apps/tauri/blob/dev/audits/Radically_Open_Security-v1-report.pdf).
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读[Tauri 安全策略](https://github.com/tauri-apps/tauri/security/policy)和[Tauri 1.0
    审计报告](https://github.com/tauri-apps/tauri/blob/dev/audits/Radically_Open_Security-v1-report.pdf)。
- en: Tauri apps take advantage of the web view already available on every user’s
    system. A Tauri app only contains the code and assets specific for that app and
    doesn’t need to bundle a browser engine with every app. This means that a minimal
    Tauri app can be less than 600KB in size.
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: Tauri 应用程序利用每个用户系统上已有的 Web 视图。一个 Tauri 应用程序仅包含特定于该应用程序的代码和资产，无需为每个应用程序捆绑浏览器引擎。这意味着最小的
    Tauri 应用程序可以小于 600KB。
- en: Learn more about creating optimized apps in the [App Size concept](/concept/size/).
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 了解更多有关在[应用大小概念](/concept/size/)中创建优化应用程序的信息。
- en: Since Tauri uses web technologies that means that virtually any frontend framework
    is compatible with Tauri. The [Frontend Configuration guide](/start/frontend/)
    contains common configurations for popular frontend frameworks and the [Rendering
    concept](/concept/rendering/) discusses which rendering techniques work best with
    Tauri (such as SPAs and SSGs).
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Tauri 使用 Web 技术，这意味着几乎任何前端框架都与 Tauri 兼容。[前端配置指南](/start/frontend/)包含流行前端框架的常见配置，而[渲染概念](/concept/rendering/)讨论了与
    Tauri 最佳配合的渲染技术（如单页应用程序和静态站点生成）。
- en: Bindings between JavaScript and Rust are available to developers using the `invoke`
    function in JavaScript and Swift and Kotlin bindings are available for [Tauri
    Plugins](/develop/plugins/).
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 JavaScript 中的 `invoke` 函数和 Swift 及 Kotlin 绑定的开发者可以使用[Tauri 插件](/develop/plugins/)。
- en: '[TAO](https://github.com/tauri-apps/tao) is responsible for Tauri window creation
    and [WRY](https://github.com/tauri-apps/wry) is responsible for web view rendering.
    These are libraries maintained by Tauri and can be consumed directly if deeper
    system integration is required outside of what Tauri exposes.'
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[TAO](https://github.com/tauri-apps/tao)负责 Tauri 窗口的创建，而[WRY](https://github.com/tauri-apps/wry)负责
    Web 视图的渲染。这些是由 Tauri 维护的库，如果需要在 Tauri 所暴露的范围之外进行更深入的系统集成，可以直接使用。'
- en: In addition, Tauri maintains a number of plugins to extend what core Tauri exposes.
    You can find those plugins alongside those provided by the community in the [Plugins
    section](/plugin/).
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Tauri 维护了许多插件，以扩展核心 Tauri 的功能。您可以在[插件部分](/plugin/)找到这些插件，以及社区提供的插件。
- en: © 2024 Tauri Contributors. CC-BY / MIT
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: © 2024 Tauri 贡献者。CC-BY / MIT
