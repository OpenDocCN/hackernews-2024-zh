- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-29 13:20:12'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-29 13:20:12
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: How Does BlueSky Work?
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: BlueSky 是如何工作的？
- en: 来源：[https://steveklabnik.com/writing/how-does-bluesky-work](https://steveklabnik.com/writing/how-does-bluesky-work)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://steveklabnik.com/writing/how-does-bluesky-work](https://steveklabnik.com/writing/how-does-bluesky-work)
- en: Feb 24 2024
  id: totrans-split-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2024年2月24日
- en: One of the reasons I am enthusiastic about BlueSky is because of the way that
    it works. So in this post, I am going to lay out some of the design and the principles
    behind this design, as I understand them. I am not on the BlueSky team, so these
    are my takes only.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我对BlueSky感到热情的原因之一是它的工作方式。因此，在这篇文章中，我将阐述我理解的一些设计和原则。我不是BlueSky团队的一员，所以这些仅是我的观点。
- en: Let’s begin.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧。
- en: Why does BlueSky exist?
  id: totrans-split-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: BlueSky为什么存在？
- en: 'Here’s what [the BlueSky Website](https://bsky.social) says right now:'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 现在这是[BlueSky网站](https://bsky.social)的内容：
- en: Social media is too important to be controlled by a few corporations. We’re
    building an open foundation for the social internet so that we can all shape its
    future.
  id: totrans-split-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 社交媒体对于少数几家公司来说太重要了。我们正在为社交互联网构建一个开放的基础，以便我们所有人都能够塑造其未来。
- en: This is the big picture.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这是整体构想。
- en: 'Okay so that’s a great idea, but like, what does that *mean*? Currently, BlueSky
    is a microblogging application, similar to Twitter and Mastodon. How does that
    fit into the big picture? Well, while it’s true that BlueSky is a microblogging
    application, that’s not the whole story: BlueSky is an initial application to
    prove out the viability of [the Authenicated Transfer Protocol](https://atproto.com/),
    known as AT, ATP, or “atproto” for short. BlueSky is the “building” and atproto
    is the “open foundation for the social internet.”'
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，这是一个很好的想法，但是，这意味着什么？目前，BlueSky是一个微博应用程序，类似于Twitter和Mastodon。它如何融入整体构想？虽然BlueSky确实是一个微博应用程序，但这并不是全部：BlueSky是证明[鉴权传输协议](https://atproto.com/)（AT、ATP或简称“atproto”）可行性的初步应用程序。BlueSky是“构建”，而atproto是“社交互联网的开放基础”。
- en: 'An important thing to note: BlueSky is also a company. Some people look at
    a company saying “hey we’re building something that’s too big to be controlled
    by companies!” with skepticism. I think that’s a healthy starting point, but the
    answer for me is atproto.'
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 一个重要的事实是：BlueSky 也是一家公司。有些人对一家公司表示“嘿，我们正在建造一些太大以至于无法被公司控制的东西！”持怀疑态度。我认为这是一个健康的起点，但对我来说答案是atproto。
- en: The interplay between these two things is important, but we’re going to start
    by exploring atproto, and then talk about how BlueSky is built on top of it.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这两者之间的互动非常重要，但我们将首先探讨atproto，然后再讨论BlueSky如何在其之上构建。
- en: Is this a cryptocurrency?
  id: totrans-split-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 这是一个加密货币吗？
- en: 'The first thing we have to get out of the way: If you hear “oh it’s a distributed
    network called ‘something protocol’” you may have a “is this a cryptocurrency?”
    alarm bell going off in your head.'
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先要搞清楚的一件事是：如果你听到“哦，这是一个名为‘某协议’的分布式网络”，你可能会在脑海中响起“这是一个加密货币吗？”的警报。
- en: Don’t worry, it’s not a cryptocurrency. It does use some technologies that originated
    in the cryptocurrency space, but this isn’t a blockchain, or a DAO, or NFTs, or
    any of that. Just some cryptography and merkle trees and the like.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 别担心，这不是一种加密货币。它确实使用了一些起源于加密货币领域的技术，但这不是区块链、DAO、NFT或任何类似的东西。只是一些密码学和默克尔树等技术。
- en: What is the big picture with atproto?
  id: totrans-split-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: atproto 的整体构想是什么？
- en: 'Here’s what [the AT Protocol Overview](https://atproto.com/guides/overview)
    says:'
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这是[AT协议概述](https://atproto.com/guides/overview)中所说的：
- en: The Authenticated Transfer Protocol, aka atproto, is a federated protocol for
    large-scale distributed social applications.
  id: totrans-split-21
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 鉴权传输协议，即atproto，是用于大规模分布式社交应用的联邦化协议。
- en: 'Let’s break that down:'
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细分析一下：
- en: a federated protocol
  id: totrans-split-23
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一个联邦协议
- en: atproto is federated. This means that the various parts of the system can have
    multiple people running them, and that they communicate with each other.
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: atproto 是联邦化的。这意味着系统的各个部分可以由多个人管理，并且它们彼此通信。
- en: Choosing federation is a big part of how atproto delivers on the “can’t be controlled
    by one organization” promise. There are other parts too, but this is an important
    aspect of solving this.
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 选择联邦化是atproto实现“不受单一组织控制”的承诺的重要组成部分。还有其他部分，但这是解决问题的重要方面。
- en: for large-scale
  id: totrans-split-26
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 对于大规模
- en: If you want to scale, you have to design with scale in mind. atproto makes several
    interesting choices in order to distribute the load of running the system more
    onto the actors that can handle load, and less on those that can’t. This way,
    applications running on top of atproto can scale up to large userbases without
    issue.
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要扩展规模，必须考虑设计时的规模。atproto 在设计上做出了几个有趣的选择，以便将系统运行负载分散到能够处理负载的主体上，而不是不能处理负载的主体上。这样，运行在atproto之上的应用程序可以扩展到大型用户群体而无需担心问题。
- en: That’s the hope, at least. Earlier this week, BlueSky hit five million users,
    and is far more stable than Twitter was in the early days. That’s not as big as
    many social applications, but it’s not nothing either. We’ll see how this works
    out in practice.
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: 至少希望是这样。本周早些时候，BlueSky 用户达到了500万，比Twitter早期更加稳定。这与许多社交应用相比并不算大，但也不算小。我们将看看实际运作情况如何。
- en: distributed social applications
  id: totrans-split-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 分布式社交应用程序
- en: atproto is for connecting to others, so it’s focused on social applications.
    It also is currently 100% public, there are no private messages or similar. The
    reasons for this is that achieving private things in a federated system is very
    tricky, and they would rather get it right than ship something with serious caveats.
    Best for now to only use this stuff for things you want to be public.
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: atproto 用于连接他人，因此它专注于社交应用。它目前是100%公开的，没有私人消息或类似内容。这样做的原因是，在联合系统中实现私人内容非常棘手，他们宁愿做好了再发布，而不是发布一个带有严重警告的东西。现在最好只用这些东西来处理你想公开的内容。
- en: These applications are “distributed” because running them involves running them
    on the network directly. There’s no “BlueSky server,” there’s just servers running
    atproto distributing messages to each other, both BlueSky messages and whatever
    other messages from whatever other applications people create.
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这些应用程序之所以称为“分布式”，是因为运行它们涉及直接在网络上运行它们。没有“BlueSky服务器”，只有运行在 atproto 上的服务器相互分发消息，包括BlueSky消息以及人们创建的其他应用程序的消息。
- en: So that’s the high level, but what does that mean concretely?
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这是高层次的描述，但具体意味着什么？
- en: In atproto, *users* create *records* that are cryptographically signed to demonstrate
    authorship. Records have a schema called a *Lexicon*.
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在atproto中，*用户*创建*记录*，这些记录经过加密签名以证明作者身份。记录有一个称为*词汇表*的模式。
- en: Records are stored in *repositories*. Repositories run as a *service*, exposing
    HTTP and WebSockets. They then can then talk to each other and federate the records.
    These are often called PDSes, for “Personal Data Server.” Users either run their
    own PDS, or use one that someone else hosts for them.
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
  zh: 记录存储在*存储库*中。存储库作为*服务*运行，公开HTTP和WebSockets。然后它们可以相互通信并联合记录。这些通常称为PDS（个人数据服务器）。用户要么运行自己的PDS，要么使用别人为他们托管的PDS。
- en: 'Applications can be built by looking at the various records stored in the network,
    and doing things with them. These services all called *App Views*, because they
    are exposing a particular view of the information stored in the network. This
    view is created via the Lexicon system: building an application means that you
    define a Lexicon, structuring the data that you want to deal with, and then look
    at records that use your lexicon, ignoring the rest.'
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序可以通过查看网络中存储的各种记录并对其进行操作来构建。这些服务都称为*App Views*，因为它们展示了网络中存储信息的特定视图。此视图是通过Lexicon系统创建的：构建应用程序意味着你定义一个Lexicon，结构化你想处理的数据，然后查看使用你的词汇表的记录，忽略其余内容。
- en: Now, if this were all there is, there would be pretty serious scaling issues.
    For example, if every time I post a new update on BlueSky, if I had to send my
    post to every single one of my followers’ repositories, that would be extremely
    inefficent, and make running a popular repository very expensive to run. To fix
    this, there’s an additional kind of service, called a *relay*, that aggregates
    information in the network, and exposes it as a firehose to others. So in practice,
    App Views don’t look at Repositories, but instead, look at Relays. When I make
    a post, my respository won’t notify my followers’ repositories individually. My
    repository will notify a Relay, and my followers will use an App View that filters
    the ouput of the Relay to show only the posts of people they’re following. This
    does imply that Relays are often huge and expensive to run, however you could
    imagine running a smaller relay that only propogates posts from a smaller subset
    of users too. They don’t *have* to show everything on the network, though bigger
    ones will, of course.
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果仅仅是这样，就会存在严重的扩展问题。例如，如果每次我在BlueSky上发布新的更新时，我都必须将我的帖子发送到每一个关注我的存储库，那将是非常低效的，并且使运行一个受欢迎的存储库变得非常昂贵。为了解决这个问题，还有一种额外的服务类型，称为*中继*，它在网络中聚合信息，并将其作为消防栓公开给其他人。因此，在实践中，应用视图不看存储库，而是看中继。当我发帖时，我的存储库不会单独通知我的关注者的存储库。我的存储库会通知一个中继，我的关注者将使用一个应用视图来过滤中继的输出，只显示他们关注的人的帖子。这确实意味着中继通常非常庞大且昂贵，但您可以想象运行一个只传播较小用户子集的较小中继。它们并不*必须*显示网络上的所有内容，尽管较大的中继当然会这样做。
- en: 'Here this is in ASCII art:'
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是ASCII艺术图：
- en: '[PRE0]'
  id: totrans-split-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This is all you really need to know to understand the core of atproto: people
    create data, it’s shared in the network, and applications can interact with that
    data.'
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这是您理解atproto核心所需知道的全部内容：人们创建数据，数据在网络中共享，应用程序可以与这些数据进行交互。
- en: However, there are additional service types being introduced, with the possibility
    of more in the future. But before we talk about those, we have to explain some
    ideological commitments to understand why things are shaped the way they are.
  id: totrans-split-40
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，有额外的服务类型被引入，未来可能会有更多。但在讨论这些之前，我们必须解释一些意识形态承诺，以理解为什么事物被塑造成现在的样子。
- en: What is “speech vs reach”?
  id: totrans-split-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: “言论 vs 达到”是什么？
- en: 'Given that atproto is deliberately created to enable social applications, it
    needs to consider not just connecting people, but also disconnecting people. Moderation
    is a core component of any social application: “no moderation” is still a moderation
    strategy. BlueSky handles these sorts of questions by acknowledging that different
    people will have different preferences when it comes to moderation, and also that
    moderation at scale is difficult.'
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于atproto是有意创建以支持社交应用的，它需要考虑不仅是连接人们，还包括断开人们。管理是任何社交应用的核心组成部分：“无管理”仍然是一种管理策略。BlueSky通过承认不同的人在管理问题上有不同的偏好，并且承认在大规模上进行管理是困难的，来处理这些问题。
- en: 'As such, the protocol takes a “speech vs reach” approach to moderation. The
    stuff we’ve described so far falls under the “speech” layer. It is purely concerned
    with replicating your content across the network, without caring what the semantic
    contents of that content is. Moderation tools fall under the “reach” layer: you
    take all of that speech, but provide a way to limit the reach of stuff you don’t
    care to see yourself.'
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，该协议采取了“言论 vs 达到”方法来管理。到目前为止，我们描述的东西属于“言论”层。它纯粹关注在网络上复制您的内容，而不关心内容的语义内容是什么。管理工具属于“达到”层：您接受所有的言论，但提供一种方式来限制您不想看到的内容的传播范围。
- en: 'Sometimes, people say that BlueSky is “all about free speech” or “doesn’t do
    moderation.” This is simply inaccurate. Moderation tooling is encoded into the
    protocol itself, so that it can work with all content on the network, even non-BlueSky
    applications. Moreover, it gives you the ability to choose your own moderators,
    so that you aren’t beholden to anyone else’s choice of moderation or lack thereof.
    But I’m getting ahead of myself: let’s talk about feed generators and labelers.'
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，人们会说BlueSky“全面支持言论自由”或者“不进行管理”。这简直是不准确的。管理工具已经编码到协议本身中，以便可以处理网络上的所有内容，甚至非BlueSky应用。此外，它使您能够选择自己的管理者，这样您不必受制于他人的管理选择或缺乏管理。但我说得有点快了：让我们先来谈谈信息生成器和标签。
- en: What are feed generators?
  id: totrans-split-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 信息生成器是什么？
- en: Most social applications have the concept of a “feed” of content. This is broken
    out into its own kind of service in atproto, called a *feed generator*. A classic
    example of a feed is “computer, show me the posts of the people I follow in reverse
    chronological order.” Lately, algorithmic feeds have become popular with social
    networks, to the point of where some non-technical users refer to them as “algorithms.”
  id: totrans-split-46
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数社交应用程序都有“feed”内容的概念。在atproto中，这被单独划分为一种称为*feed generator*的服务类型。社交网络中经典的feed示例是“电脑，展示我按时间顺序倒序关注的人的帖子”。最近，算法feed在社交网络中变得很受欢迎，以至于一些非技术用户将它们称为“算法”。
- en: Feed generators take the firehose produced by a relay, and then show you a list
    of content, filtered and ordered by whatever metric the feed generator desires.
    You can then share these feeds with other users.
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
  zh: Feed generator获取由中继产生的信息流，并根据feed generator希望的任何指标对内容进行过滤和排序，然后向您显示内容列表。然后，您可以与其他用户分享这些feed。
- en: As a practical example, one of my favorite feeds is the [Quiet Posters](https://bsky.app/profile/did:plc:vpkhqolt662uhesyj6nxm7ys/feed/infreq)
    feed. This feed shows posts by people who don’t post very often. This makes it
    so much easier to keep up with people who get drowned out of my main feed. There
    are feeds like [the ‘Gram](https://bsky.app/profile/did:plc:vpkhqolt662uhesyj6nxm7ys/feed/followpics),
    which shows only posts that have pictures attatched. Or [My Bangers](https://bsky.app/profile/did:plc:q6gjnaw2blty4crticxkmujt/feed/bangers),
    which shows your most popular posts.
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个实际的例子，我最喜欢的feed之一是[Quiet Posters](https://bsky.app/profile/did:plc:vpkhqolt662uhesyj6nxm7ys/feed/infreq)
    feed。这个feed显示那些不经常发帖的人的帖子。这样做可以更容易跟上在我的主要feed中被淹没的人。还有像[the ‘Gram](https://bsky.app/profile/did:plc:vpkhqolt662uhesyj6nxm7ys/feed/followpics)这样的feed，只显示带有图片的帖子。或者[My
    Bangers](https://bsky.app/profile/did:plc:q6gjnaw2blty4crticxkmujt/feed/bangers)，显示你最受欢迎的帖子。
- en: 'This to me is one of the killer features of BlueSky over other microblogging
    tools: total user choice. If I want to make my own algorithm, I can do so. And
    I can share them easily with others. If you use BlueSky, you can visit any of
    those feeds and follow them too.'
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
  zh: 对我来说，这是BlueSky相比其他微博工具的一大杀手功能之一：完全由用户选择。如果我想制作自己的算法，我可以这样做。而且我可以轻松与他人分享。如果你使用BlueSky，你也可以访问这些feed并关注它们。
- en: Feeds are a recent addition to atproto, and therefore, while they do exist,
    they may not be feature complete just yet, and may undergo some change in the
    future. We’ll see. They’re working just fine from my perspective, but I haven’t
    been following the lower level technical details.
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
  zh: Feed是atproto的一个最近增加的功能，因此，虽然它们存在，但可能尚未完全功能化，并且可能在未来发生一些变化。我们会看到的。从我的角度来看，它们运行得很好，但我并没有关注低级技术细节。
- en: What are labelers?
  id: totrans-split-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是标注器？
- en: A *Labeler* is a service that applies *labels* to content or accounts. As a
    user, you can subscribe to a particular labeler, and then have your experience
    change based on the labels on posts.
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
  zh: '*Labeler*是一个为内容或账户添加*标签*的服务。作为用户，你可以订阅特定的labeler，然后根据帖子上的标签改变你的体验。'
- en: 'A labeler can do this via whatever method it pleases: automatically by running
    some sort of algorithm on posts, manually by having some human give a thumbs up
    or thumbs down, whatever method the person running the labeling service wants.'
  id: totrans-split-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一个标注器可以通过任何它喜欢的方法来实现这一点：通过在帖子上运行某种算法自动地，或者通过让一些人员给出赞或踩来手动地进行。无论是哪种方法，运行标注服务的人都可以自行决定。
- en: 'An example of a labeling service would be a blocklist: a label on the posts
    authored by people whose content you don’t want to see. Another example is an
    NSFW filter, which may run some sort of algorithm over pictures in posts, and
    labeling them if they believe they contain NSFW content.'
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
  zh: 标注服务的一个示例可能是一个屏蔽列表：对你不想看到内容的作者发布的帖子进行标记。另一个例子是一个NSFW过滤器，可能会对帖子中的图片运行某种算法，并在他们认为带有NSFW内容时进行标记。
- en: Labeling exists, but I do not believe you can run your own labeler yet. BlueSky
    runs their own, but there hasn’t been an external release that I am aware of.
    But once they do, you can imagine communities running their own services, adding
    whatever kind of labels they’d like.
  id: totrans-split-55
  prefs: []
  type: TYPE_NORMAL
  zh: 标注存在，但我不认为你可以运行自己的标注器。BlueSky运行他们自己的标注器，但据我所知，还没有外部发布。但一旦它们发布，你可以想象社区运行自己的服务，并添加任何他们想要的标签。
- en: How does moderation work in atproto?
  id: totrans-split-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: atproto中的审查工作是如何进行的？
- en: 'Putting this all together, we can see how moderation works: Feeds may choose
    to transform the feed based on labels, or App Views may take feeds and apply transformations
    based on asking a Labeler about it. These can be mixed and matched based on preference.'
  id: totrans-split-57
  prefs: []
  type: TYPE_NORMAL
  zh: 综合以上内容，我们可以看到调节是如何工作的：Feed可能会根据标签来转换Feed，或者App View可能会获取Feed并根据询问标签者的结果进行转换。这些可以根据个人偏好进行混合和匹配。
- en: This means you can choose your moderation experience, not just in applications,
    but also within it. Want a SFW feed, but allow NSFW content in another? You can
    do that. Want to produce a blocklist of people and share it with the world? You
    can do that.
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着您可以选择您的调节体验，不仅在应用程序中，还包括在其内部。想要一个适合所有年龄段的内容源，但在另一个地方允许成人内容？您可以做到。想要创建一个人员屏蔽列表并与世界分享？您也可以做到。
- en: Because these moderation tools work at the network level, rather than at the
    application level, they actually go *further* than in other systems. If someone
    builds an Instagram clone on atproto, that could also use your blocklist labeller,
    since your blocklist labeller works at the protocol level. Block someone in one
    place, and they can be blocked on every place, if you so choose. Maybe you subscribe
    to different moderation decisions in different applications. It is 100% up to
    you.
  id: totrans-split-59
  prefs: []
  type: TYPE_NORMAL
  zh: 因为这些调节工具是在网络级别而不是应用级别上运作的，所以它们实际上比其他系统要更进一步。如果有人在atproto上构建一个Instagram克隆应用，也可以使用您的屏蔽列表标签器，因为您的屏蔽列表标签器在协议级别上运作。在一个地方屏蔽某人，他们就可以在每个地方都被屏蔽，如果您愿意的话。也许您在不同应用程序中订阅了不同的调节决策。这完全取决于您。
- en: This model is significantly different from other federated systems, because
    you don’t really have an “account” on an “instance,” like in Mastodon. So a lot
    of people ask questions like “what happens when my instance gets defederated”
    which don’t exactly make sense as stated. You can achieve the same goal, by blocking
    a set of users based on some criteria, maybe you dislike a certain PDS and want
    to ignore posts that come from a certain one, but that is *your* choice and yours
    alone, it is not dictated by some “server owner” that your account resides on.
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模型与其他联合系统明显不同，因为你实际上没有一个像Mastodon那样的“实例”上的“账户”。因此，很多人会问诸如“我的实例何时取消联合”之类的问题，这样表述并不准确。您可以通过基于某些标准屏蔽一组用户来实现相同的目标，也许您不喜欢某个PDS并希望忽略来自某个特定PDS的帖子，但这是*您*的选择，只有您一个人做出，不是由某个“服务器所有者”决定的。
- en: So if you don’t have a home server, how does identity work?
  id: totrans-split-61
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，如果您没有一个主服务器，身份是如何运作的呢？
- en: How does identity and account portability work?
  id: totrans-split-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 身份和账户可携带性是如何工作的？
- en: There are a LOT of details to how identity works, so I’m going to focus on the
    parts that I find important. I am also going to focus on the part that is controversial,
    because that is important to talk about.
  id: totrans-split-63
  prefs: []
  type: TYPE_NORMAL
  zh: 有关身份工作的细节非常多，所以我将专注于我认为重要的部分。我还将专注于有争议的部分，因为这是需要讨论的重点。
- en: 'At its core, users have an identity number, called a “Decentralized Identifier,”
    or *[DID](https://www.w3.org/TR/did-core/)*. My DID looks like this: `did:plc:3danwc67lo7obz2fmdg6jxcr`.
    Feel free to follow me! Lol, of course that’s not the interface that you’ll see
    most of the time. Identity also involves a *handle*, which is a domain name. My
    handle is `steveklabnik.com`, unsurprisingly. You’ll see my posts on BlueSky as
    coming from `@steveklabnik.com`. This system also works well for people who don’t
    own a domain; if you sign up for BlueSky, it’ll give you the ability to choose
    a name, and then your handle is `@username.bsky.social`. I started off making
    posts as `@steveklabnik.bsky.social`, and then moved to `@steveklabnik.com`. But
    because the DID is stable, there was no disruption to my followers. They just
    saw the handle update in the UI.'
  id: totrans-split-64
  prefs: []
  type: TYPE_NORMAL
  zh: 从本质上讲，用户有一个称为“去中心化标识符”或*[DID](https://www.w3.org/TR/did-core/)*的身份号码。我的DID看起来像这样：`did:plc:3danwc67lo7obz2fmdg6jxcr`。欢迎随时关注我！当然，这不是您大部分时间看到的界面。身份还涉及一个*句柄*，即一个域名。我的句柄是`steveklabnik.com`，毫不意外。您会看到我在BlueSky上发布的帖子来自`@steveklabnik.com`。这个系统也适合那些没有自己域名的人；如果您注册BlueSky，它将允许您选择一个名字，然后您的句柄就是`@username.bsky.social`。我最初是以`@steveklabnik.bsky.social`的身份发帖，然后改为`@steveklabnik.com`。但由于DID是稳定的，我的关注者没有受到任何影响。他们只是在用户界面中看到句柄更新。
- en: You can use a domain as your handle by getting the DID your PDS generated for
    you, and then adding a `TXT` record in the DNS you use for that domain. If you’re
    not the kind of person who uses or even knows what DNS is, I envy you, but you
    can also use BlueSky’s partnership with NameCheap to register a domain and configure
    it to use as a handle without any technical knowledge necessary. You can then
    log into applications with your domain as the handle, and everything works nicely.
  id: totrans-split-65
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过获取PDS为您生成的DID，然后在您使用的DNS中为该域添加一个`TXT`记录来使用域作为您的处理。 如果您不是使用或甚至不知道DNS是什么类型的人，我会羡慕您，但您也可以利用BlueSky与NameCheap的合作关系注册域并配置它作为处理而无需任何技术知识。
    然后，您可以使用域作为处理登录应用程序，一切都可以很好地运作。
- en: This is also how BlueSky delivers true “account portability,” partially because,
    well, there isn’t really a concept of an account. The person who uses a given
    DID uses cryptography to sign the content they create, and then that content is
    replicated across the network. “Your account” can’t really be terminated, because
    that would mean someone forcibly stopping you from using keys that they don’t
    even have access to. If your PDS goes down, and you want to migrate to a new one,
    there’s a way to backfill the contents of the PDS from the network itself, and
    inform the network that your PDS has moved. It is real, meaningful account portability,
    and that is radically different from any similar service running today.^([1](#user-content-fn-1))
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是BlueSky提供真正的“账户可携带性”的方式，部分原因是，实际上没有账户的概念。 使用给定DID的人使用密码学来签署他们创建的内容，然后该内容被复制到网络上。
    “您的账户”实际上不能被终止，因为这意味着有人强行阻止您使用他们甚至无法访问的密钥。 如果您的PDS崩溃，并且您希望迁移到新的PDS，有一种方法可以从网络本身填补PDS的内容，并通知网络您的PDS已移动。
    这是真正的，有意义的账户可携带性，这与今天运行的任何类似服务都大不相同。
- en: But.
  id: totrans-split-67
  prefs: []
  type: TYPE_NORMAL
  zh: 但。
- en: The devil is in the details, and I think this is one of the more meaningful
    criticisms of BlueSky and atproto.
  id: totrans-split-68
  prefs: []
  type: TYPE_NORMAL
  zh: 魔鬼在细节中，我认为这是对BlueSky和atproto更有意义的批评之一。
- en: 'You see, there are different “methods” of creating a DID. BlueSky supports
    two methods: `did:web`, which is based on domain names. There are some drawbacks
    with this method that I don’t personally fully understand well enough to describe,
    I’m sure I’ll write something in-depth about DIDs in the future.'
  id: totrans-split-69
  prefs: []
  type: TYPE_NORMAL
  zh: 您看，创建DID有不同的“方法”。 BlueSky支持两种方法：`did:web`，基于域名。 对于这种方法，有一些我个人理解不够深入以便描述的缺点，我相信我将来会写一些关于DID的深入内容。
- en: So because of that weakness, BlueSky has implemented their own DID method, called
    `did:plc`. The `plc` stands for “placeholder,” because even though they plan on
    supporting it indefinitely, it too has its weaknesses. And that weakness is that
    it involves asking a service that BlueSky runs in order to resolve the proper
    information. For example, [here is my lookup](https://plc.directory/did:plc:3danwc67lo7obz2fmdg6jxcr).
    This means that BlueSky can ban you in a more serious way than is otherwise possible
    thanks to the network design, which some people take to be a very serious issue.
  id: totrans-split-70
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这个弱点，BlueSky实施了他们自己的DID方法，称为`did:plc`。 `plc`代表“占位符”，因为即使他们计划无限期支持它，它也有其弱点。
    这个弱点是它涉及询问BlueSky运行的一个服务来解析正确的信息。 例如，[这里是我的查找](https://plc.directory/did:plc:3danwc67lo7obz2fmdg6jxcr)。
    这意味着由于网络设计，BlueSky可以比其他方式更严重地禁止您，这对一些人来说是一个非常严重的问题。
- en: So, is the flaw fatal? I don’t think so. The first reason is, if you really
    don’t want to engage with it, you can use `did:web`. Yes that isn’t great for
    other reasons; that’s why `did:plc` was created. But you do get around this issue.
  id: totrans-split-71
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，这个缺陷致命吗？ 我不这么认为。 第一个原因是，如果您真的不想与之交互，您可以使用`did:web`。 是的，这对其他原因并不理想；这就是为什么创建了`did:plc`。
    但您确实解决了这个问题。
- en: Another is that the BlueSky team has demonstrated, in my personal opinion, enough
    understanding and uncomfortableness with being in control here, and it’s designed
    in such a way that if other, better systems develop, you can move to them. They’ve
    also indicated that moving governance of `did:plc` to some sort of consensus model
    in the future is possible. There are options. Also, others could run a `did:plc`
    service and use that instead if they prefer, too.
  id: totrans-split-72
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个是，BlueSky团队在我个人看来已经表现出足够的理解和不舒服，而且它设计得足够灵活，以便如果出现其他更好的系统，您可以转移到它们。 他们还表示未来可能将`did:plc`的治理转移到某种共识模型中。
    有选择。 另外，其他人也可以运行`did:plc`服务并使用它来替代，如果他们更喜欢的话。
- en: I personally see this as an example of pragmatically shipping something, others
    see it as a nefarious plot. You’ll have to decide for yourself.
  id: totrans-split-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我个人认为这是实用地交付某物的一个例子，而其他人则认为这是一个阴谋。你需要自己决定。
- en: How is BlueSky built on top of atproto?
  id: totrans-split-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: BlueSky 如何在 atproto 的基础上构建？
- en: So, now that we understand atproto, we can understand BlueSky. BlueSky is an
    application built on top of the atproto network. They run an App View, and [a
    web application](https://bsky.app/) that uses that App View to work. They also
    run a PDS for users that sign up through the web app, as well as a relay that
    those PDSes communicate with.
  id: totrans-split-75
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，现在我们理解了 atproto，我们可以理解 BlueSky。BlueSky 是建立在 atproto 网络之上的一个应用程序。他们运行一个 App
    View，以及使用该 App View 工作的 [网页应用程序](https://bsky.app/)。他们还为通过网页应用程序注册的用户运行一个 PDS，以及这些
    PDS 通信的中继。
- en: They publish two Lexicons, one as `com.atproto.*` and one as `app.bsky.*`. The
    former are low level operations that any application on the network will need,
    and the ones specific to BlueSky are in the latter.
  id: totrans-split-76
  prefs: []
  type: TYPE_NORMAL
  zh: 他们发布了两个词汇表，一个是 `com.atproto.*`，另一个是 `app.bsky.*`。前者是任何网络上的应用程序都需要的低级操作，而后者是专门为
    BlueSky 设计的。
- en: But one nice thing about BlueSky in particular is that they’ve taken the product
    goals that nobody should know any of this nerd shit to be able to use BlueSky.
    The lack of instances means there’s no “I need to pick an instance to create an
    account” flow, and the portability means that if my host goes down, I can move,
    and my followers are none the wiser.
  id: totrans-split-77
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是关于 BlueSky 的一个好处是，他们已经将产品目标定为任何人都不应该了解这些“极客”东西才能使用 BlueSky。实例的缺乏意味着没有“我需要选择一个实例来创建帐户”的流程，而可移植性意味着如果我的主机崩溃，我可以迁移，我的追随者们却毫不知情。
- en: How will others build applications on top of atproto?
  id: totrans-split-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他人将如何在 atproto 的基础上构建应用程序？
- en: You can create an atproto app by creating a Lexicon. You’ll then want to run
    an App View that does things with data on the network involving your lexicon,
    and your application will want to give people the ability to write data to their
    PDS using your lexicon.
  id: totrans-split-79
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过创建一个词汇表来创建一个 atproto 应用程序。然后，你需要运行一个 App View，在网络上处理与你的词汇表相关的数据，而你的应用程序将希望让人们能够使用你的词汇表向他们的
    PDS 写入数据。
- en: I myself am considering doing so. We’ll see.
  id: totrans-split-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我自己正在考虑这样做。我们将看到。
- en: Concluding thoughts
  id: totrans-split-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论思考
- en: So yeah, on the technical side of things, that’s an overview of how atproto
    and BlueSky work. I think this design is very clever. Furthermore, I think the
    separation of concerns between atproto and BlueSky are very meaningful, as having
    a “killer app” for the network gives a reason to use it. It also is a form of
    dogfooding, making sure that atproto is good enough to be able to build real applications
    on.
  id: totrans-split-82
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，在技术方面，这是 atproto 和 BlueSky 如何工作的概述。我认为这个设计非常聪明。此外，我认为 atproto 和 BlueSky 之间的关注点分离非常有意义，因为为网络提供“杀手级应用程序”是使用它的原因。这也是一种狗粮测试，确保
    atproto 足够好，能够构建真实的应用程序。
- en: I’m sure I’ll have more to say about all of this in the future.
  id: totrans-split-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信将来我会对所有这些有更多的话要说。
- en: '* * *'
  id: totrans-split-84
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'Here’s my post about this post on BlueSky:'
  id: totrans-split-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我关于 BlueSky 这篇帖子的帖子：
- en: <bluesky-post theme="light"><template shadowrootmode="open"></template></bluesky-post>
  id: totrans-split-86
  prefs: []
  type: TYPE_NORMAL
  zh: <bluesky-post theme="light"><template shadowrootmode="open"></template></bluesky-post>
