- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 13:25:31'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 13:25:31'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: JEDEC Extends DDR5 Memory Specification to 8800 MT/s, Adds Anti-Rowhammer Features
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JEDEC将DDR5内存规范扩展至8800 MT/s，并增加了抗行锤功能
- en: 来源：[https://www.anandtech.com/show/21363/jedec-extends-ddr5-specification-to-8800-mts-adds-anti-rowhammer-features](https://www.anandtech.com/show/21363/jedec-extends-ddr5-specification-to-8800-mts-adds-anti-rowhammer-features)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.anandtech.com/show/21363/jedec-extends-ddr5-specification-to-8800-mts-adds-anti-rowhammer-features](https://www.anandtech.com/show/21363/jedec-extends-ddr5-specification-to-8800-mts-adds-anti-rowhammer-features)
- en: When JEDEC released its DDR5 specification (JESD79) back in 2020, the standard
    setting organization [defined precise specs for modules with speed bins of up
    to 6400 MT/s](https://www.anandtech.com/show/16143/insights-into-ddr5-subtimings-and-latencies),
    while leaving the spec open to further expansions with faster memory as technology
    progressed. Now, a bit more than three-and-a-half years later, and the standards
    body and its members are gearing up to release a faster generation of DDR5 memory,
    which is being laid out in the newly updated JESD79-JC5 specification. The latest
    iteration of the DDR5 spec defines official DDR timing specifications up to 8800
    MT/s, as well as adding some new features when it comes to security.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 当JEDEC于2020年发布其DDR5规范（JESD79）时，这个标准制定组织[定义了高达6400 MT/s速度桶的模块的精确规格](https://www.anandtech.com/show/16143/insights-into-ddr5-subtimings-and-latencies)，同时随着技术的进步，留下了进一步扩展规范以适应更快内存的空间。现在，三年半多一点时间过去了，标准机构及其成员正在准备发布更新的DDR5内存更快一代，这一代在新的更新的JESD79-JC5规范中得到了详细说明。DDR5规范的最新版本定义了官方的DDR时序规范，速度高达8800
    MT/s，并在安全性方面增加了一些新功能。
- en: Diving in, the new specification outlines settings for memory chips (on all
    types of memory modules) with data transfer rates up to 8800 MT/s (AKA DDR5-8800).
    This suggests that all members of the JESD79 committee that sets the specs for
    DDR5 — including memory chip makers and memory controller designers — agree that
    DDR5-8800 is a viable extension of the DDR5 specification both from performance
    and cost point of view. Meanwhile, the addition of higher speed bins is perhaps
    enabled by another JEDEC feature introduced in this latest specification, which
    is the Self-Refresh Exit Clock Sync for I/O training optimization.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 深入研究后，新规范概述了支持高达8800 MT/s数据传输速率（即DDR5-8800）的内存芯片设置（适用于所有类型的内存模块）。这表明，JESD79委员会的所有成员（包括内存芯片制造商和内存控制器设计者）认为DDR5-8800不仅在性能上而且在成本上都是可行的扩展DDR5规范。与此同时，更高速度桶的添加可能是由这一最新规范引入的另一个JEDEC功能实现的，该功能是用于I/O训练优化的自刷新退出时钟同步。
- en: '| JEDEC DDR5-A Specifications |'
  id: totrans-split-8
  prefs: []
  type: TYPE_TB
  zh: '| JEDEC DDR5-A 规格 |'
- en: '| *AnandTech* | Data Rate MT/s | CAS Latency (cycles) | Absolute Latency (ns)
    | Peak BW GB/s |'
  id: totrans-split-9
  prefs: []
  type: TYPE_TB
  zh: '| *AnandTech* | 数据速率 MT/s | CAS延迟 (周期) | 绝对延迟 (ns) | 峰值带宽 GB/s |'
- en: '| DDR5-3200 | A | 3200 | 22 | 22 | 22 | 13.75 | 25.6 |'
  id: totrans-split-10
  prefs: []
  type: TYPE_TB
  zh: '| DDR5-3200 | A | 3200 | 22 | 22 | 22 | 13.75 | 25.6 |'
- en: '| DDR5-3600 | A | 3600 | 26 | 26 | 26 | 14.44 | 28.8 |'
  id: totrans-split-11
  prefs: []
  type: TYPE_TB
  zh: '| DDR5-3600 | A | 3600 | 26 | 26 | 26 | 14.44 | 28.8 |'
- en: '| DDR5-4000 | A | 4000 | 28 | 28 | 28 | 14 | 32 |'
  id: totrans-split-12
  prefs: []
  type: TYPE_TB
  zh: '| DDR5-4000 | A | 4000 | 28 | 28 | 28 | 14 | 32 |'
- en: '| DDR5-4400 | A | 4400 | 32 | 32 | 32 | 14.55 | 35.2 |'
  id: totrans-split-13
  prefs: []
  type: TYPE_TB
  zh: '| DDR5-4400 | A | 4400 | 32 | 32 | 32 | 14.55 | 35.2 |'
- en: '| DDR5-4800 | A | 4800 | 34 | 34 | 34 | 14.17 | 38.4 |'
  id: totrans-split-14
  prefs: []
  type: TYPE_TB
  zh: '| DDR5-4800 | A | 4800 | 34 | 34 | 34 | 14.17 | 38.4 |'
- en: '| DDR5-5200 | A | 5200 | 38 | 38 | 38 | 14.62 | 41.6 |'
  id: totrans-split-15
  prefs: []
  type: TYPE_TB
  zh: '| DDR5-5200 | A | 5200 | 38 | 38 | 38 | 14.62 | 41.6 |'
- en: '| DDR5-5600 | A | 5600 | 40 | 40 | 40 | 14.29 | 44.8 |'
  id: totrans-split-16
  prefs: []
  type: TYPE_TB
  zh: '| DDR5-5600 | A | 5600 | 40 | 40 | 40 | 14.29 | 44.8 |'
- en: '| DDR5-6000 | A | 6000 | 42 | 42 | 42 | 14 | 48 |'
  id: totrans-split-17
  prefs: []
  type: TYPE_TB
  zh: '| DDR5-6000 | A | 6000 | 42 | 42 | 42 | 14 | 48 |'
- en: '| DDR5-6400 | A | 6400 | 46 | 46 | 46 | 14.38 | 51.2 |'
  id: totrans-split-18
  prefs: []
  type: TYPE_TB
  zh: '| DDR5-6400 | A | 6400 | 46 | 46 | 46 | 14.38 | 51.2 |'
- en: '| DDR5-6800 | A | 6800 | 48 | 48 | 48 | 14.12 | 54.4 |'
  id: totrans-split-19
  prefs: []
  type: TYPE_TB
  zh: '| DDR5-6800 | A | 6800 | 48 | 48 | 48 | 14.12 | 54.4 |'
- en: '| DDR5-7200 | A | 7200 | 52 | 52 | 52 | 14.44 | 57.6 |'
  id: totrans-split-20
  prefs: []
  type: TYPE_TB
  zh: '| DDR5-7200 | A | 7200 | 52 | 52 | 52 | 14.44 | 57.6 |'
- en: '| DDR5-7600 | A | 7600 | 54 | 54 | 54 | 14.21 | 60.8 |'
  id: totrans-split-21
  prefs: []
  type: TYPE_TB
  zh: '| DDR5-7600 | A | 7600 | 54 | 54 | 54 | 14.21 | 60.8 |'
- en: '| DDR5-8000 | A | 8000 | 56 | 56 | 56 | 14 | 64.0 |'
  id: totrans-split-22
  prefs: []
  type: TYPE_TB
  zh: '| DDR5-8000 | A | 8000 | 56 | 56 | 56 | 14 | 64.0 |'
- en: '| DDR5-8400 | A | 8400 | 60 | 60 | 60 | 14.29 | 67.2 |'
  id: totrans-split-23
  prefs: []
  type: TYPE_TB
  zh: '| DDR5-8400 | A | 8400 | 60 | 60 | 60 | 14.29 | 67.2 |'
- en: '| DDR5-8800 | A | 8800 | 62 | 62 | 62 | 14.09 | 70.4 |'
  id: totrans-split-24
  prefs: []
  type: TYPE_TB
  zh: '| DDR5-8800 | A | 8800 | 62 | 62 | 62 | 14.09 | 70.4 |'
- en: When it comes to the JEDEC standard for DDR5-8800, it sets relatively loose
    timings of CL62 62-62 for A-grade devices and CL78 77-77 for lower-end C-grade
    ICs. Unfortunately, the laws of physics driving DRAM cells have not improved much
    over the last couple of years (or decades, for that matter), so memory chips still
    must operate with similar absolute latencies, driving up the relative CAS latency.
    In this case 14ns remains the gold standard, with CAS latencies at the new speeds
    being set to hold absolute latencies around that mark. But in exchange for systems
    willing to wait a bit longer (in terms of cycles) for a result, the new spec improves
    the standard's peak memory bandwidth by 37.5%.
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 就DDR5-8800的JEDEC标准而言，它为A级设备设置了相对宽松的时序，CL62 62-62，而对于低端C级ICs则是CL78 77-77。不幸的是，驱动DRAM单元的物理定律在过去几年（或者几十年）内并没有得到太大改善，因此内存芯片仍然必须以类似的绝对延迟操作，从而增加了相对的CAS延迟。在这种情况下，14ns仍然是黄金标准，新速度下的CAS延迟设置以保持绝对延迟大约在这个标记上。但是，作为系统为了等待结果而愿意等待更长时间（以周期为单位）的交换，新规范提高了37.5%的标准内存带宽。
- en: This of course is just the timings set in the JEDEC specification, which is
    primarily of concern for server vendors. So we'll have to see just how much harder
    consumer memory manufacturers can push things for their XMP/EXPO-profiled memory.
    Extreme overclockers are already hitting speeds as high as [11,240 MT/s](https://www.tomshardware.com/news/ddr5-hits11240-mts)
    with current-generation DRAM chips and CPUs, so there may be some more headroom
    to play with in the next generation.
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这仅仅是JEDEC规范中设置的时间，主要关注于服务器供应商。因此，我们将看到消费者内存制造商在其XMP/EXPO配置的内存中能够推动多大的速度。极限超频者已经使用当前一代DRAM芯片和CPU达到了[11,240
    MT/s](https://www.tomshardware.com/news/ddr5-hits11240-mts)，因此在下一代中可能还有更多的空间可以利用。
- en: Meanwhile, on the security front, the updated spec makes a couple of changes
    that have been put in place seemingly to address [rowhammer-style exploits](https://en.wikipedia.org/wiki/Row_hammer).
    The big item here is Per-Row Activation Counting (PRAC), which true to its name,
    enables DDR5 to keep a count of how often a row has been activated. Using this
    information, memory controllers can then determine if a memory row has been excessively
    activated and is at risk of causing a neighboring row's bits to flip, at which
    point they can back off to let the neighboring row properly refresh and the data
    re-stabilize.
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 与此同时，在安全方面，更新的规范做出了几项变更，看起来是为了应对[rowhammer风格的漏洞](https://en.wikipedia.org/wiki/Row_hammer)。这里的重要内容是每行激活计数（PRAC），正如其名，使DDR5能够记录一行被激活的次数。利用这些信息，内存控制器可以确定一行内存是否被过度激活，并可能导致相邻行的位翻转，此时它们可以减少激活以允许相邻行适当刷新和数据重新稳定。
- en: Notably here, the JEDEC press release doesn't use the rowhammer name at any
    point (unfortunately, we haven't been able to see the specification itself). But
    based on the description alone, this is clearly intended to thwart rowhammer attacks,
    since these normally operate by forcing a bit flip between refreshes through a
    large number of activations.
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里值得注意的是，JEDEC的新闻稿在任何地方都没有使用rowhammer这个名字（不幸的是，我们还没有看到规范本身）。但仅根据描述，显然旨在阻止rowhammer攻击，因为这些攻击通常通过大量激活在刷新之间强制位翻转来操作。
- en: Digging a bit deeper, PRAC seems to be based on a recent Intel patent, *Perfect
    Row Hammer Tracking with Multiple Count Increments* ([US20220121398A1](https://patents.google.com/patent/US20220121398A1/en)),
    which describes a very similar mechanism under the name "Perfect row hammer tracking"
    (PRHT). Notably, the Intel paper calls out that this technique has a performance
    cost associated with it because it increases the overall row cycle time. Ultimately,
    as the vulnerability underpinning rowhammer is a matter of physics (cell density)
    rather than logic, it's not too surprising to see that any mitigation of it comes
    with a cost.
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 深入挖掘一些，PRAC似乎基于最近Intel的专利，*使用多次计数增量进行完美的行锤追踪* ([US20220121398A1](https://patents.google.com/patent/US20220121398A1/en))，描述了一个非常类似的机制，以“完美行锤追踪”（PRHT）命名。值得注意的是，Intel的论文指出，这种技术会增加总体行周期时间，因此会带来性能成本。最终，由于rowhammer底层的漏洞是物理学问题（单元密度），而不是逻辑问题，看到对其任何缓解措施都伴随着成本并不令人意外。
- en: The updated DDR5 specification also deprecates support for Partial Array Self
    Refresh (PASR) within the standard, citing security concerns. PASR is primarily
    aimed at power efficiency for mobile memory to begin with, and as a refresh-related
    technology, presumably overlaps some with rowhammer – be it a means to attack
    memory, or an obstruction to defending against rowhammer. Either way, with mobile
    devices increasingly moving to low-power optimized LPDDR technologies anyhow,
    the depreciation of PASR does not immediately look like a major concern for consumer
    devices.
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: 更新后的DDR5规范还取消了对标准内部的部分阵列自刷新（PASR）的支持，原因是安全顾虑。PASR主要面向移动内存的功耗效率，作为一种与刷新相关的技术，可能与行锤效应有些重叠——无论是作为攻击内存的手段，还是作为防御行锤效应的障碍。不管怎样，随着移动设备越来越多地采用低功耗优化的LPDDR技术，PASR的取消对消费设备来说并不立即看起来是一个主要关切。
