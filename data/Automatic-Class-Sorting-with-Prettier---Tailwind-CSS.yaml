- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:54:28'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:54:28'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Automatic Class Sorting with Prettier - Tailwind CSS
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Automatic Class Sorting with Prettier - Tailwind CSS
- en: 来源：[https://tailwindcss.com/blog/automatic-class-sorting-with-prettier](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://tailwindcss.com/blog/automatic-class-sorting-with-prettier](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier)
- en: People have been talking about the best way to sort your utility classes in
    Tailwind projects for [at least four years](https://github.com/tailwindlabs/discuss/issues/97).
    Today we’re excited to announce that you can finally stop worrying about it with
    the release of our official [Prettier plugin for Tailwind CSS](https://github.com/tailwindlabs/prettier-plugin-tailwindcss).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 人们已经讨论了至少四年关于在[Tailwind项目中对实用类进行排序的最佳方式](https://github.com/tailwindlabs/discuss/issues/97)。今天，我们很高兴地宣布，通过我们的官方[Prettier
    Tailwind CSS插件](https://github.com/tailwindlabs/prettier-plugin-tailwindcss)的发布，您终于可以不再担心这个问题了。
- en: This plugin scans your templates for class attributes containing Tailwind CSS
    classes, and then sorts those classes automatically following our [recommended
    class order](/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 此插件扫描您的模板，查找包含Tailwind CSS类的类属性，然后自动按照我们的[推荐类顺序](/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted)对这些类进行排序。
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: It works seamlessly with custom Tailwind configurations, and because it’s just
    a [Prettier](https://prettier.io/) plugin, it works anywhere Prettier works —
    including every popular editor and IDE, and of course on the command line.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 它与自定义Tailwind配置无缝配合，并且因为它只是一个[Prettier](https://prettier.io/)插件，所以它可以在Prettier可用的任何地方工作——包括每个流行的编辑器和IDE，当然也包括命令行。
- en: 'To get started, install `prettier-plugin-tailwindcss` as a dev-dependency:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用，请将`prettier-plugin-tailwindcss`安装为dev依赖项：
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then add the plugin to your [Prettier configuration file](https://prettier.io/docs/en/configuration):'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 然后将插件添加到您的[Prettier配置文件](https://prettier.io/docs/en/configuration)中：
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You can also [load the plugin by using the `--plugin` flag with the Prettier
    CLI, or by using the `plugins` option with the Prettier API](https://prettier.io/docs/en/plugins.html#using-plugins).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过使用Prettier CLI的`--plugin`标志或使用Prettier API的`plugins`选项来[加载插件](https://prettier.io/docs/en/plugins.html#using-plugins)。
- en: '* * *'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: At its core, all this plugin does is organize your classes in the same order
    that Tailwind orders them in your CSS.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本插件的核心功能是按照Tailwind在您的CSS中的顺序组织您的类。
- en: This means that any classes in the base layer will be sorted first, followed
    by classes in the components layer, and then finally classes in the utilities
    layer.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着基础层中的任何类将首先进行排序，然后是组件层中的类，最后是实用程序层中的类。
- en: '[PRE3]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Utilities themselves are sorted in the same order we sort them in the CSS as
    well, which means that any classes that override other classes always appear later
    in the class list:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 实用程序本身也按照我们在CSS中对它们进行排序的顺序进行排序，这意味着任何覆盖其他类的类始终出现在类列表的后面：
- en: '[PRE4]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The actual order of the different utilities is loosely based on the box model,
    and tries to put high impact classes that affect the layout at the beginning and
    decorative classes at the end, while also trying to keep related utilities together:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 不同实用工具的实际顺序基本上是基于盒模型，并尝试将影响布局的高影响类放在开头，装饰类放在末尾，同时还尝试保持相关的实用程序在一起：
- en: '[PRE5]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Modifiers like `hover:` and `focus:` are grouped together and sorted after
    any plain utilities:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`hover:`和`focus:`等修饰符被分组在一起，并在任何普通工具类之后进行排序：'
- en: '[PRE6]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Responsive modifiers like `md:` and `lg:` are grouped together at the end in
    the same order they’re configured in your theme — which is smallest to largest
    by default:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 响应式修饰符（如`md:`和`lg:`）被分组在一起，按照主题中配置的顺序进行排序——默认情况下是从最小到最大：
- en: '[PRE7]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Any custom classes that don’t come from Tailwind plugins (like classes for
    targeting a third-party library) are always sorted to the front, so it’s easy
    to see when an element is using them:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 任何不来自Tailwind插件的自定义类（比如用于定位第三方库的类）始终排序到最前面，因此很容易看出元素是否正在使用它们：
- en: '[PRE8]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '* * *'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: We think [Prettier gets it right](https://prettier.io/docs/en/option-philosophy.html)
    when it comes to being opinionated and offering little in terms of customizability
    — at the end of the day the biggest benefit to sorting your classes is that it’s
    just one less thing to argue with your team about.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们认为[Prettier的处理方式是正确的](https://prettier.io/docs/en/option-philosophy.html)，因为它具有明确的观点并且在定制性方面提供的内容很少——在一天结束时，对类进行排序的最大好处就是它少了一件事可以与团队争论。
- en: We’ve tried really hard to come up with a sort order that is easy to understand
    and communicates the most important information as fast as possible.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们非常努力地设计了一种易于理解并能尽快传达最重要信息的排序方式。
- en: The plugin *will* respect your `tailwind.config.js` file and work with any Tailwind
    plugins you’ve installed, but **there is no way to change the sort order**. Just
    like with Prettier, we think that the benefits of auto-formatting will quickly
    outweigh any stylistic preferences you have and that you’ll get used to it pretty
    fast.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 插件*会*尊重你的`tailwind.config.js`文件，并与你安装的任何 Tailwind 插件一起工作，但**没有办法改变排序顺序**。就像使用
    Prettier 一样，我们认为自动格式化的好处很快就会超过你的任何风格偏好，并且你会很快适应它。
- en: Ready to try it out? [Check out the full documentation on GitHub →](https://github.com/tailwindlabs/prettier-plugin-tailwindcss)
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 准备好试试吗？[在 GitHub 上查看完整文档 →](https://github.com/tailwindlabs/prettier-plugin-tailwindcss)
