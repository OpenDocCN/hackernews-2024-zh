- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-29 12:46:43'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-29 12:46:43'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Win32 Is The Only Stable ABI on Linux
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Linux 上，Win32 是唯一稳定的 ABI
- en: 来源：[https://blog.hiler.eu/win32-the-only-stable-abi/](https://blog.hiler.eu/win32-the-only-stable-abi/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://blog.hiler.eu/win32-the-only-stable-abi/](https://blog.hiler.eu/win32-the-only-stable-abi/)
- en: Win32 Is The Only Stable ABI on Linux
  id: totrans-split-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Linux 上，Win32 是唯一稳定的 ABI
- en: 2022-08-15, by ivyl
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 2022-08-15，由 ivyl
- en: TL;DR
  id: totrans-split-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: TL;DR
- en: Glibc 2.36 was released and all the games using EAC EOS are no longer playable.
  id: totrans-split-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Glibc 2.36 发布后，使用 EAC EOS 的所有游戏都不再可玩。
- en: A user did bisect and found [the offending commit](https://github.com/ValveSoftware/Proton/issues/6051#issuecomment-1206888814).
  id: totrans-split-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有用户进行了二分法，找到了[有问题的提交](https://github.com/ValveSoftware/Proton/issues/6051#issuecomment-1206888814)。
- en: I’ve filed [a Glibc bug](https://sourceware.org/bugzilla/show_bug.cgi?id=29456)
    hoping for a quick revert.
  id: totrans-split-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我已经提交了[一个 Glibc bug](https://sourceware.org/bugzilla/show_bug.cgi?id=29456)，希望能快速恢复。
- en: Turns out other things are also broken.
  id: totrans-split-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结果还有其他问题也出现了。
- en: Most likely it will stay this way.
  id: totrans-split-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 很可能会一直保持这种情况。
- en: Win32 (via Wine + friends) is the only stable ABI on Linux :-P
  id: totrans-split-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Linux 上，Win32（通过 Wine + 其他工具）是唯一稳定的 ABI :-P
- en: '`DT_HASH` and `DT_GNU_HASH`'
  id: totrans-split-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`DT_HASH` 和 `DT_GNU_HASH`'
- en: In the ELF format there are two ways of providing a hash table of symbols. `DT_HASH`
    and `DT_GNU_HASH`. The first one is part of [SYSV generic ABI](http://www.sco.com/developers/gabi/latest/ch5.dynamic.html#hash)
    and is well documented and marked as mandatory. `DT_GNU_HASH` is a newer, smaller,
    and faster replacement that is [not documented](https://sourceware.org/legacy-ml/binutils/2006-10/msg00377.html),
    implemented in a few places (Glibc, GNU ld, Musl, LLVM, mold, etc.) and a subject
    of a [couple](https://flapenguin.me/elf-dt-gnu-hash) of [blog](http://deroko.phearless.org/dt_gnu_hash.txt)
    posts that I’ve [found](https://blogs.oracle.com/solaris/post/gnu-hash-elf-sections).
    Turns out it also doesn’t provide the same functionality as `DT_HASH`. To get
    the number of symbols you have to [completely parse it](https://groups.google.com/g/generic-abi/c/th5919osPAQ/m/hRL78ooqBAAJ).
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在 ELF 格式中，提供符号哈希表的两种方法。`DT_HASH` 和 `DT_GNU_HASH`。第一种是[SYSV 通用 ABI](http://www.sco.com/developers/gabi/latest/ch5.dynamic.html#hash)
    的一部分，有着良好的文档记录，并标记为强制性。`DT_GNU_HASH` 是一种更新、更小、更快的替代品，它[没有被文档化](https://sourceware.org/legacy-ml/binutils/2006-10/msg00377.html)，在几个地方实现（Glibc、GNU
    ld、Musl、LLVM、mold 等），并且是[几篇](https://flapenguin.me/elf-dt-gnu-hash) [博客](http://deroko.phearless.org/dt_gnu_hash.txt)
    [文章](https://blogs.oracle.com/solaris/post/gnu-hash-elf-sections) 的主题。事实证明，它也没有提供与
    `DT_HASH` 相同的功能。要获取符号数，您必须[完全解析它](https://groups.google.com/g/generic-abi/c/th5919osPAQ/m/hRL78ooqBAAJ)。
- en: It’s worth noting that unless you are building `ELFOSABI_NONE` binaries you
    are [not forced to follow the generic ABI](https://groups.google.com/g/generic-abi/c/th5919osPAQ/m/CWQyAu36AwAJ).
    Glibc uses `ELFOSABI_GNU` so technically not including `DT_HASH` is fine.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，除非您正在构建 `ELFOSABI_NONE` 二进制文件，否则您[无需遵循通用 ABI](https://groups.google.com/g/generic-abi/c/th5919osPAQ/m/CWQyAu36AwAJ)。Glibc
    使用 `ELFOSABI_GNU`，因此技术上不包括 `DT_HASH` 是可以的。
- en: Glibc was forcing having both sections for a very long time claiming to maintain
    compatibility. It was [recently dropped](https://sourceware.org/git/?p=glibc.git;a=commitdiff;h=e47de5cb2d4dbecb58f569ed241e8e95c568f03c)
    and the build instead relies on “the defaults”.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: Glibc 强制长时间要求同时保留两个部分以维持兼容性。它[最近已经被取消](https://sourceware.org/git/?p=glibc.git;a=commitdiff;h=e47de5cb2d4dbecb58f569ed241e8e95c568f03c)，而构建现在依赖于“默认设置”。
- en: The Regression(s)
  id: totrans-split-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 回归问题
- en: This problem was first noticed by rolling-release distros users when [games
    using EAC EOS stopped working](https://github.com/ValveSoftware/Proton/issues/6051).
    There’s also an open source project that has regressed - a frame rate limiter
    called [libstrangle](https://bugs.gentoo.org/863863). The non-EAC game [Shovel
    Knight is broken as well](https://github.com/ValveSoftware/Proton/issues/6051#issuecomment-1212748397).
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题最初是由 rolling-release 发行版用户注意到的，当时[使用 EAC EOS 的游戏停止工作](https://github.com/ValveSoftware/Proton/issues/6051)。还有一个开源项目出现了回退
    - 一个叫做[libstrangle](https://bugs.gentoo.org/863863)的帧率限制器。非 EAC 游戏[Shovel Knight
    也出了问题](https://github.com/ValveSoftware/Proton/issues/6051#issuecomment-1212748397)。
- en: Those are only a few breakages users of the more bleeding-edge distros found
    shortly after the Glibc 2.36 release. I suspect there will be more broken games
    (and other software) once 2.36 will hit the mainstream.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这些只是在 Glibc 2.36 发布后，更 bleeding-edge 的发行版用户发现的几个破坏。我怀疑一旦 2.36 成为主流，会有更多游戏（和其他软件）出现问题。
- en: To ABI Or Not To ABI
  id: totrans-split-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ABI 还是非 ABI
- en: I suggest you read through all the linked discussions and develop your own opinion
    on who is responsible for what exactly.
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议您阅读所有链接的讨论，并对每个问题的责任形成自己的看法。
- en: Personally I share [Linus’ opinion](https://youtu.be/5PmHRSeA2c8?t=509) that
    changing ABI is okay as long as no one has noticed, but once it gets noticed -
    then it’s a regression. Once it’s a thing people depend on, it becomes a feature.
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 就我个人而言，我赞同[Linus的观点](https://youtu.be/5PmHRSeA2c8?t=509)，即改变ABI是可以接受的，只要没有人注意到，但一旦被注意到，那么它就是一个退步。一旦成为人们依赖的东西，它就变成了一个特性。
- en: Sadly not everything can be easily modified to accommodate or recompiled.
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，并非一切都可以轻松修改以适应或重新编译。
- en: Shifting the problem downstream onto the distributions is also problematic and
    [adds to fragmentation](https://gitlab.com/torkel104/libstrangle/-/issues/59).
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 将问题转嫁给发行版也是问题的一部分，并且[增加了分裂性](https://gitlab.com/torkel104/libstrangle/-/issues/59)。
- en: I know that [`DT_GNU_HASH` is a thing for 16 years already](https://sourceware.org/pipermail/libc-alpha/2022-August/141304.html)
    and most distributions have switched to using it and only it by default. For those
    16 years, it was Glibc who provided the compatibility and overrode the defaults
    for everyone and there never were any easy-to-spot deprecation warnings. It’s
    also unrealistic to expect every ELF consumer to keep up with undocumented developments
    of the format.
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道[`DT_GNU_HASH`已经存在了16年了](https://sourceware.org/pipermail/libc-alpha/2022-August/141304.html)，大多数发行版已经默认使用它，并且只使用它。在这16年里，是Glibc提供了兼容性，并为所有人覆盖了默认设置，从来没有出现过容易发现的弃用警告。期望每一个ELF消费者跟上格式未经记录的发展也是不现实的。
- en: Why `--hash-style=gnu` is The Default?
  id: totrans-split-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么`--hash-style=gnu`是默认值？
- en: Kinda by accident? GCC’s default behavior is to allow linkers to do whatever
    they want. The GNU Linker defaults to “both”
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 有点偶然吗？GCC的默认行为是允许链接器做任何它们想做的事情。GNU链接器的默认值是“both”，
- en: '[PRE0]'
  id: totrans-split-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: while [mold defaults to “sysv”](https://github.com/rui314/mold/blob/415673a49e24b1f4189000b9eb4fb1a36a697093/elf/mold.h#L1475).
    So why most things are built with –hash-style=gnu? On a lot of distributions gcc
    -v claims that
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: 而[mold默认为“sysv”](https://github.com/rui314/mold/blob/415673a49e24b1f4189000b9eb4fb1a36a697093/elf/mold.h#L1475)。那么为什么大多数东西都使用`--hash-style=gnu`？在很多发行版中，gcc
    -v 声称
- en: '[PRE1]'
  id: totrans-split-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: which seems to be a leftover from the days long gone where `DT_GNU_HASH` was
    so young that ld’s default was still sysv. Distributions wanted to have the promised
    speedup so they have just forced this and it stuck.
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这似乎是在DT_GNU_HASH还年轻得多的时代的遗留物，ld的默认值仍然是sysv。发行版希望获得承诺的加速，因此他们强制执行了这一点并且坚持了下来。
- en: This seems to spread further - clang does distro detection and [seems to be
    mimicking](https://github.com/llvm/llvm-project/blob/b405407/clang/lib/Driver/ToolChains/Linux.cpp#L241-L244)
    whatever the distro is doing with their default gcc.
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这似乎正在扩散 - clang进行了发行版检测，并[似乎在模仿](https://github.com/llvm/llvm-project/blob/b405407/clang/lib/Driver/ToolChains/Linux.cpp#L241-L244)发行版使用的默认gcc。
- en: Final Thoughts
  id: totrans-split-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最后的思考
- en: I think this whole situation shows why creating native games for Linux is challenging.
    It’s hard to blame developers for targeting Windows and relying on Wine + friends.
    It’s just much more stable and much less likely to break and stay broken.
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为整个情况说明了为Linux创建本地游戏的挑战性。很难责怪开发者将目标对准Windows并依赖Wine和朋友们。这只是更加稳定，更不容易出现问题和继续保持问题。
