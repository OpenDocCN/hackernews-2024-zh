- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 14:24:52'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:24:52
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: software-development/commit-messages.md at master · aaronjensen/software-development
    · GitHub
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: software-development/commit-messages.md at master · aaronjensen/software-development
    · GitHub
- en: 来源：[https://github.com/aaronjensen/software-development/blob/master/commit-messages.md](https://github.com/aaronjensen/software-development/blob/master/commit-messages.md)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://github.com/aaronjensen/software-development/blob/master/commit-messages.md](https://github.com/aaronjensen/software-development/blob/master/commit-messages.md)
- en: '[← Articles](/aaronjensen/software-development/blob/master/README.md#articles)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[← 文章](/aaronjensen/software-development/blob/master/README.md#articles)'
- en: Subject-First Commit Messages
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 以主题为先的提交消息
- en: '[](#subject-first-commit-messages)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[](#subject-first-commit-messages)'
- en: Note
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This article is a description of just a small part of our development process.
    Our goal with all of our practices is to enable developers to be just as productive
    on old projects as they are on new projects.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这篇文章只描述了我们开发过程的一小部分。我们所有做法的目标都是使开发人员在旧项目上和新项目上一样高效。
- en: 'I''d recommend starting with this article that describes that goal:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议先阅读这篇文章，它描述了这个目标：
- en: '[The Goal: Continuity](/aaronjensen/software-development/blob/master/continuity.md)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[目标：连续性](/aaronjensen/software-development/blob/master/continuity.md)'
- en: 'Take a moment and scan, not read, the following list as quickly as you can:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 抽出一点时间，快速扫描而不是阅读以下列表：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Did you spot the line about the `field_name` method?
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否注意到了关于 `field_name` 方法的那一行？
- en: 'Then, do the same thing here with these lines. Again, scan quickly, don''t
    read:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，用同样的方式扫描这些行。再次快速扫描，不要阅读：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Did you spot a message about the Store?
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你看到了关于 Store 的消息吗？
- en: The first list is a sample of commit message from [Rails](https://github.com/rails/rails).
    The second is from the [`entity-store` project in Eventide](https://github.com/eventide-project/entity-store).
    Chances are, unless you are already in the orbit of the Eventide community the
    first commit message style is what you are used to. It's likely what your team
    uses, as it is the commit message style that is typically recommended as a ["best
    practice"](/aaronjensen/software-development/blob/master/best-practices.md).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个列表是来自[Rails](https://github.com/rails/rails)的提交消息样本。第二个是来自[Eventide 中的 `entity-store`
    项目](https://github.com/eventide-project/entity-store)。除非你已经在 Eventide 社区的轨道上，否则第一个提交消息样式可能是你所习惯的。很可能是你的团队所使用的，因为这是通常推荐的提交消息样式，被认为是一种["最佳实践"](/aaronjensen/software-development/blob/master/best-practices.md)。
- en: The second style likely feels foreign, and possibly uncomfortable. It's passive
    voice and indicative mood, rather than the more common active voice and imperative
    mood. So why do the Eventide project and many teams that use Eventide choose to
    use this subject-first style of commit messages? Because it is more scannable.
    It is optimized for human cognition. Humans don't tend to read when looking at
    lists unless they absolutely need to. We scan. And when we scan, we want to see
    the most important things come first. Furthermore, the subject-first commit message
    style makes the commit about the change, rather than it being about what the person
    did that made the change. It's not about the self. It's about the code.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种样式可能感觉陌生，可能不太舒服。它是被动语态和陈述语气，而不是更常见的主动语态和祈使语气。那么为什么 Eventide 项目和许多使用 Eventide
    的团队选择使用这种以主题为先的提交消息样式呢？因为它更易于扫描。它经过了人类认知的优化。人们在查看列表时通常不会阅读，除非他们绝对需要。我们会扫描。当我们扫描时，我们希望首先看到最重要的事情。此外，以主题为先的提交消息样式使提交与变更相关，而不是与做出变更的人相关。它不是关于个人。它关乎代码。
- en: Check Your Own Repository
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查你自己的仓库
- en: '[](#check-your-own-repository)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[](#check-your-own-repository)'
- en: 'Try this in one of your repositories:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的一个仓库中尝试这个：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: What do you see? Imagine that's all you see when you scan. That's not a perfect
    simulation, as when we scan we may pattern match further into the string, we may
    read two words or so, we may teach ourselves that the first word is unimportant
    and try to skip it, but all of that requires additional effort. Our job is hard
    enough as it is, so we want to take every chance we can to make it easier on ourselves.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你看到了什么？想象一下，当你快速扫描时，你只看到了这些内容。这并不是一个完美的模拟，因为当我们扫描时，我们可能会进一步模式匹配字符串，我们可能会读取两个单词左右，我们可能会教自己第一个单词是无关紧要的并试图跳过它，但所有这些都需要额外的努力。我们的工作已经够难了，所以我们要尽一切可能让它变得更容易。
- en: Like all of our process and design decisions, we decided to use this technique
    based on a-priori knowledge, research, first principles, and observation. Here
    are a few links to related research with regard to list processing (which is how
    commit message summaries are often consumed). Note that we did not refer to these
    specific articles when making our decision, these are just examples.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 像我们所有的过程和设计决策一样，我们决定使用这种技术是基于先验知识、研究、第一原则和观察。以下是一些与列表处理相关的研究链接（这通常是提交消息摘要的消费方式）。请注意，我们在做出决定时并没有参考这些具体的文章，这些只是例子。
- en: When I first encountered the subject-first naming style that the Eventide project
    uses, I didn't like it. I didn't like it because of my own bias and my preference
    to conform to what is "common". It didn't look like what I was used to and I argued
    against it initially. I eventually recognized the benefit of scannability and
    decided to try it on my current team. It took some time to get used to writing
    messages in that style, and every new team member requires some amount of training
    and reinforcement. We are now three years in to using this style and our team
    now has a strong preference for it.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 当我第一次遇到 Eventide 项目使用的主题优先命名风格时，我并不喜欢它。我不喜欢它是因为我的个人偏见和我倾向于符合“常规”的偏好。它看起来不像我习惯的样子，最初我反对它。我最终认识到了可扫描性的好处，并决定在我的当前团队中尝试它。习惯用那种风格写信息需要一些时间，每个新的团队成员都需要一定的培训和强化。我们现在已经使用了这种风格三年了，我们的团队现在对它有了强烈的偏好。
- en: I would recommend trying this style out in one of your projects. You might be
    surprised once you get over the initial reaction to it and you get accustomed
    to writing and reading messages in this style.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议在你的项目中尝试这种风格。一旦你克服了最初的反应，并习惯了用这种风格写作和阅读信息，你可能会感到惊讶。
- en: 'Here are some guidelines that we follow:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是我们遵循的一些指南：
- en: You don't always need a verb if you are introducing something new. For example,
    "Widget tests" is preferred over "Widget tests are added".
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果引入新事物，你并不总是需要一个动词。例如，“小部件测试”优先于“添加小部件测试”。
- en: We prefer to use "is corrected," rather than "is fixed". E.g., "Widget reconciliation
    is corrected"
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们更喜欢使用“已更正”而不是“已修复”。例如，“小部件对账已更正”。
- en: When something is refactored or improved in some way, we tend to use "is clarified".
    E.g., "Widget creation is clarified"
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当某事被重构或以某种方式改进时，我们倾向于使用“已澄清”。例如，“小部件创建已澄清”。
- en: When describing a rename, use "rather than". E.g., "Widget, rather than sprocket"
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在描述重命名时，使用“而不是”。例如，“小部件，而不是齿轮”。
- en: When describing a version increase, be explicit about both the old and the new
    version. E.g., "Package version is increased from 1.1.1 to 1.2.0"
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述版本增加时，要明确指出新旧版本。例如，“包版本从 1.1.1 增加到 1.2.0”。
- en: Don't bother with the 50 character subject rule, make the first line as long
    as it needs to be. Brevity is useful, but 50 characters is too limiting in my
    experience.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要费心遵循 50 字符主题规则，让第一行尽可能长。简洁是有用的，但在我看来，50 个字符太限制了。
- en: '* * *'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[Comments](https://github.com/aaronjensen/software-development/discussions/4)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](https://github.com/aaronjensen/software-development/discussions/4)'
- en: '[Subscribe to be notified of new articles](https://github.com/aaronjensen/software-development/discussions/8)'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[订阅以接收新文章通知](https://github.com/aaronjensen/software-development/discussions/8)'
- en: '[All Articles](https://github.com/aaronjensen/software-development/blob/master/README.md#articles)'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[所有文章](https://github.com/aaronjensen/software-development/blob/master/README.md#articles)'
- en: '* * *'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Copyright Aaron Jensen 2023-present
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 版权所有 Aaron Jensen 2023-present
