- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 14:39:35'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:39:35
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 2023-q4
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2023-q4
- en: 来源：[https://www.gnu.org/software/hurd/news/2023-q4.html](https://www.gnu.org/software/hurd/news/2023-q4.html)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.gnu.org/software/hurd/news/2023-q4.html](https://www.gnu.org/software/hurd/news/2023-q4.html)
- en: Hello! Welcome to a new qoth. This qoth covers new and interesting GNU/Hurd
    developments in Q4 of 2023!
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 你好！欢迎来到新的 qoth。本期 qoth 涵盖了 2023 年第四季度 GNU/Hurd 的新鲜和有趣的发展！
- en: Samuel Thibault fixed gcc's Hurd's default pie and [added static pie support](https://lists.gnu.org/archive/html/bug-hurd/2023-10/msg00061.html).
    He also added a [whatis command](https://lists.gnu.org/archive/html/bug-hurd/2023-10/msg00007.html)
    to GNU Mach's kernel debugger, which can determine what an address points to (a
    stack? a port? some kalloc? ...). He also added [hurd-amd64 support to GCC](https://lists.debian.org/debian-hurd/2023/11/msg00039.html).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Samuel Thibault 修复了 gcc 的 Hurd 的默认 pie 并且 [添加了静态 pie 支持](https://lists.gnu.org/archive/html/bug-hurd/2023-10/msg00061.html)。他还向
    GNU Mach 的内核调试器添加了一个 [whatis 命令](https://lists.gnu.org/archive/html/bug-hurd/2023-10/msg00007.html)，可以确定地址指向什么（堆栈？端口？一些
    kalloc？...）。他还向 GCC 添加了 [hurd-amd64 支持](https://lists.debian.org/debian-hurd/2023/11/msg00039.html)。
- en: 'Samuel requested that the Hurd team set up a [continuous integration,](https://lists.gnu.org/archive/html/bug-hurd/2023-12/msg00007.html)
    so that when developers make code changes, they can be certain that they did not
    break anything. It turns out that the Hurd supports several different environments:
    32 bit, 64 bit, 32-on-64 bit, ACPI, non-ACPI, SMP, non-SMP, Xen, etc. Apparently
    Flavio has a [personal CI](https://github.com/flavioc/cross-hurd/actions/runs/7080757561),
    but it is set up in a Debian independent way. If you are interested in helping
    the Hurd project set up a CI, then please get in touch!'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Samuel 要求 Hurd 团队建立一个 [持续集成](https://lists.gnu.org/archive/html/bug-hurd/2023-12/msg00007.html)，这样当开发人员进行代码更改时，他们可以确信没有破坏任何东西。结果发现
    Hurd 支持多种不同的环境：32 位，64 位，32 位在 64 位上，ACPI，非 ACPI，SMP，非 SMP，Xen 等。显然，Flavio 有一个
    [个人 CI](https://github.com/flavioc/cross-hurd/actions/runs/7080757561)，但它是以 Debian
    独立的方式设置的。如果你有兴趣帮助 Hurd 项目建立 CI，请与我们联系！
- en: Luca Dariz worked on adding [some simple GNU Mach user-space tests](https://lists.gnu.org/archive/html/bug-hurd/2023-10/msg00031.html)
    . With a working MiG, a GNU/Linux machine can run make check in the GNU Mach source
    code, which will launch qemu to ensure that 32 bit (PAE and non PAE), 32 on 64
    bit, and full 64 bit GNU Mach works. We currently do this testing on GNU/Linux,
    because qemu does not run on the Hurd.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Luca Dariz 致力于添加 [一些简单的 GNU Mach 用户空间测试](https://lists.gnu.org/archive/html/bug-hurd/2023-10/msg00031.html)。通过一个工作的
    MiG，GNU/Linux 机器可以在 GNU Mach 源代码中运行 make check，这将启动 qemu 来确保 32 位（PAE 和非 PAE），32
    位在 64 位上和完整的 64 位 GNU Mach 可以工作。我们目前在 GNU/Linux 上进行这些测试，因为 qemu 不能在 Hurd 上运行。
- en: Many people worked on the Hurd's new [x86_64 bit support](https://lists.gnu.org/archive/html/bug-hurd/2023-10/msg00036.html).
    A 64-bit debian buildd is set up, and we can bootstrap a chroot! The hurd-amd64
    wanna-build infrastructure is also set up. We are having issues reliably building
    packages on a 64-bit Hurd, which lead Samuel to uncover and fix [a proc leak](https://lists.gnu.org/archive/html/bug-hurd/2023-11/msg00035.html).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 许多人致力于 Hurd 的新的 [x86_64 位支持](https://lists.gnu.org/archive/html/bug-hurd/2023-10/msg00036.html)。建立了一个
    64 位的 debian buildd，并且我们可以启动一个 chroot！hurd-amd64 想要构建基础设施也已经建立。我们在 64 位 Hurd 上可靠地构建软件包存在问题，这导致
    Samuel 发现并修复了 [一个 proc 泄漏](https://lists.gnu.org/archive/html/bug-hurd/2023-11/msg00035.html)。
- en: Flavio Cruz [improved GNU Mach's IPC](https://lists.gnu.org/archive/html/bug-hurd/2023-11/msg00033.html)
    by reordering `mach_msg_type_t` fields to byte align `msgt_name` and `msgt_size`.
    He also created a patch series to [avoid message resizing for x86_64](https://lists.gnu.org/archive/html/bug-hurd/2023-11/msg00028.html).
    He also [removed untyped mach RPC code](https://lists.gnu.org/archive/html/bug-hurd/2023-11/msg00026.html).
    GNU Mach uses typed IPC. The Hurd could support both typed and untyped, but it
    appears that the Hurd only uses typed RPC. So it seems best to remove any untyped
    RPC code.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Flavio Cruz 通过重新排列 `mach_msg_type_t` 字段以字节对齐 `msgt_name` 和 `msgt_size` 来 [改进了
    GNU Mach 的 IPC](https://lists.gnu.org/archive/html/bug-hurd/2023-11/msg00033.html)。他还创建了一个补丁系列来
    [避免 x86_64 的消息调整大小](https://lists.gnu.org/archive/html/bug-hurd/2023-11/msg00028.html)。他还
    [删除了无类型的 mach RPC 代码](https://lists.gnu.org/archive/html/bug-hurd/2023-11/msg00026.html)。GNU
    Mach 使用有类型的 IPC。Hurd 可以支持有类型和无类型的，但似乎 Hurd 只使用有类型的 RPC。因此，最好删除任何无类型的 RPC 代码。
- en: Sergey Bugaev added [GNU Mach entry re-coalescing support](https://darnassus.sceen.net/~hurd-web/open_issues/gnumach_vm_map_entry_forward_merging/).
    Essentially, Mach was not always able to merge two vm entries that are made next
    to each other, which was slowing down ext2, bash, etc. Sergey allowed GNU Mach
    to merge entries in the common cases, which greatly helps ext2fs for instance.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Sergey Bugaev 添加了[GNU Mach 条目重合支持](https://darnassus.sceen.net/~hurd-web/open_issues/gnumach_vm_map_entry_forward_merging/)。实质上，Mach
    有时无法合并相邻的两个 vm 条目，这导致了 ext2、bash 等的速度变慢。Sergey 让 GNU Mach 能够在常见情况下合并条目，这对于例如 ext2fs
    有很大帮助。
- en: Sergey is also working on [porting the Ladybird web browser](https://lists.gnu.org/archive/html/bug-hurd/2023-11/msg00013.html)
    to the Hurd. The author of this post uses the [netsurf web browser](https://www.netsurf-browser.org/)
    on the Hurd, which works on simple websites like wikipedia, but it badly renders
    javascript heavy websites, which makes many websites un-useable. If Sergey is
    successful in porting [Ladybird](https://ladybird.dev/), then Hurd users could
    start using sites like Github! It is worth noting that someone should update the
    [Firefox port](https://lists.debian.org/debian-hurd/2014/09/msg00070.html) as
    well.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Sergey 也正在努力[将 Ladybird 网页浏览器移植](https://lists.gnu.org/archive/html/bug-hurd/2023-11/msg00013.html)到
    Hurd 上。本帖作者在 Hurd 上使用 [netsurf 网页浏览器](https://www.netsurf-browser.org/)，它在像维基百科这样的简单网站上运行良好，但在渲染
    javascript 大量的网站时效果不佳，这使得许多网站无法使用。如果 Sergey 成功将 [Ladybird](https://ladybird.dev/)
    移植过来，那么 Hurd 用户就可以开始使用像 Github 这样的网站了！值得注意的是，有人应该也要更新[Firefox 的移植版](https://lists.debian.org/debian-hurd/2014/09/msg00070.html)。
- en: Sergey also started [porting the Hurd to AArch64!](https://lists.gnu.org/archive/html/bug-hurd/2023-12/msg00110.html)
    While a port to RISC-V might be more exciting, it is worth mentioning that AArch64
    is more established. What is interesting is that Sergey is already able to build
    Hurd servers for AArch64! Normally, in order to run the binaries, one would port
    GNU Mach to AArch64\. Luckily for us, he turned to GDB and directly ran a 'Hello
    World' Hurd AArch64 binary on Linux! This helped him fix some bugs along the way.
    We still need to define the ABI and complete the GNU Mach port, but this is exciting
    news!
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Sergey 还开始了[将 Hurd 移植到 AArch64！](https://lists.gnu.org/archive/html/bug-hurd/2023-12/msg00110.html)虽然对
    RISC-V 的移植可能更令人兴奋，但值得一提的是 AArch64 更加成熟。有趣的是，Sergey 已经能够为 AArch64 构建 Hurd 服务器！通常，为了运行二进制文件，需要将
    GNU Mach 移植到 AArch64。幸运的是，他转向了 GDB，并直接在 Linux 上运行了一个 'Hello World' Hurd AArch64
    二进制文件！这帮助他在途中修复了一些错误。我们仍然需要定义 ABI 并完成 GNU Mach 移植，但这是令人振奋的消息！
- en: Tobias Platen started [porting GNU Mach to Power9](https://lists.gnu.org/archive/html/bug-hurd/2023-10/msg00021.html).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Tobias Platen 开始[将 GNU Mach 移植到 Power9](https://lists.gnu.org/archive/html/bug-hurd/2023-10/msg00021.html)。
- en: So if you want to test if your favorite packages work on the Hurd and contribute
    towards making the full GNU system usable for a wider range of people, please
    [check the contributing page](../contributing.html).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果你想测试你喜爱的软件包是否在 Hurd 上工作，并为使完整的 GNU 系统对更广泛的人群可用做出贡献，请[查看贡献页面](../contributing.html)。
- en: '* * *'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: The **GNU Hurd** is the GNU project's replacement for the Unix kernel. It is
    a collection of servers that run on the Mach microkernel to implement file systems,
    network protocols, file access control, and other features that are implemented
    by the Unix kernel or similar kernels (such as Linux). [More detailed](../hurd/documentation.html).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**GNU Hurd** 是 GNU 项目用于替代 Unix 内核的项目。它是一组运行在 Mach 微内核上的服务器，用于实现文件系统、网络协议、文件访问控制以及
    Unix 内核或类似内核（如 Linux）实现的其他功能。[更详细内容](../hurd/documentation.html)。'
- en: '**GNU Mach** is the microkernel upon which a GNU Hurd system is based. It provides
    an Inter Process Communication (IPC) mechanism that the Hurd uses to define interfaces
    for implementing in a distributed multi-server fashion the services a traditional
    operating system kernel provides. [More detailed](../microkernel/mach/gnumach.html).'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**GNU Mach** 是 GNU Hurd 系统所基于的微内核。它提供了一种进程间通信（IPC）机制，Hurd 使用该机制以分布式多服务器方式定义实现传统操作系统内核提供的服务的接口。[更详细内容](../microkernel/mach/gnumach.html)。'
