- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 15:04:05'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 15:04:05'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Anatomy of a mapserver: how to leverage and visualize your geographical data'
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 地图服务器的解剖学：如何利用和可视化您的地理数据
- en: 来源：[https://www.go-inicio.com/blog/anatomy-of-a-mapserver-how-to-leverage-and-visualize-your-geographical-data](https://www.go-inicio.com/blog/anatomy-of-a-mapserver-how-to-leverage-and-visualize-your-geographical-data)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.go-inicio.com/blog/anatomy-of-a-mapserver-how-to-leverage-and-visualize-your-geographical-data](https://www.go-inicio.com/blog/anatomy-of-a-mapserver-how-to-leverage-and-visualize-your-geographical-data)
- en: '**Anatomy of a mapserver: how to leverage and visualize your geographical data**'
  id: totrans-split-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**地图服务器的解剖学：如何利用和可视化您的地理数据**'
- en: 'At Inicio we built Eywa, an algorithm that can find the best solar power plant
    location, using billions of geographical data points. Sometimes, it can be hard
    to make sense of all this data: forests, wet areas, cadastral parcels, etc.'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Inicio 我们建立了 Eywa，一个可以使用数十亿地理数据点找到最佳太阳能发电厂位置的算法。有时，理解所有这些数据可能很困难：森林、潮湿地区、地籍等。
- en: To help our teams get a sense of what this data actually **looks** like, we
    set up a tool to allow visualization in multiple clients. It’s a server that builds
    maps, it is built on a library called MapServer.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助我们的团队对这些数据实际**看起来**是什么有所了解，我们建立了一个工具，允许在多个客户端进行可视化。它是一个构建地图的服务器，建立在一个名为
    MapServer 的库上。
- en: 'Now, we use this server everywhere: from QA to visualize that our algorithm
    does what it’s supposed to, with the right data, to the business development teams
    who use it to select from the best location that the algorithm has found.'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们在各个地方都使用这个服务器：从 QA 以确保我们的算法是否按预期使用正确数据，到业务开发团队使用它来从算法找到的最佳位置中进行选择。
- en: This blog post will guide you through the things I wish I had known when I started
    setting up this piece of software at Inicio.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这篇博文将指导您在开始在 Inicio 设置这个软件时，我希望自己当初知道的事情。
- en: 'The types of soil in Brittany, each color represents a type of soil: Minerals,
    Limestone, Wet, etc.'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 布列塔尼的土壤类型，每种颜色代表一种类型的土壤：矿物质、石灰岩、潮湿等。
- en: '**Why do you need a MapServer?**'
  id: totrans-split-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**为什么需要一个 MapServer？**'
- en: '**Visualize**: Geographical data is inherently visual. We all have some affinity
    with reading maps and visualizing data in space. You can do as many transformations
    as you want on your spatial data, it will be hard to extract useful insights if
    you can never visualize it.'
  id: totrans-split-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可视化**：地理数据固有地是可视的。我们都对阅读地图和在空间中可视化数据有一定的亲和力。您可以对空间数据进行任意转换，但如果您无法将其可视化，将很难提取有用的见解。'
- en: '**Showcase**: Publish and showcase your insights to the world.'
  id: totrans-split-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**展示**：将您的见解发布并展示给世界。'
- en: '**Share**: Integrate your data to many GIS tools and web map visualizations.
    You have created an awesome data visualization and want to share it to the world?'
  id: totrans-split-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分享**：将您的数据集成到许多 GIS 工具和 Web 地图可视化中。您已经创建了一个很棒的数据可视化，想与世界分享？'
- en: It can be enough to setup an interactive map visualization on your website.**‍**
  id: totrans-split-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可以在您的网站上设置交互式地图可视化就足够了。**‍**
- en: '**Build: **Create a robust and always-up source to fit your business needs.'
  id: totrans-split-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建：** 创建一个健壮且始终更新的资源以适应您的业务需求。'
- en: '**What does it do?**'
  id: totrans-split-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**它能做什么？**'
- en: A mapping server connect to various geographical data sources. It can perform
    transformations, filtering, combinations, and styling. Then, it makes the data
    available through a server.
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一个地图服务器连接到各种地理数据源。它可以执行转换、过滤、组合和样式化。然后，通过服务器使数据可用。
- en: This may sound relatively simple, but geographical data is challenging. You
    need to take care of projections, indexing, and serving very complex geometries
    efficiently.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这听起来可能相对简单，但地理数据是具有挑战性的。您需要关注投影、索引和有效地提供非常复杂的几何数据。
- en: '**Why MapServer vs. Geoserver**'
  id: totrans-split-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**为什么选择 MapServer 而不是 Geoserver**'
- en: 'In the world of mapping servers there are two main alternatives: MapServer
    and Geoserver.'
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在地图服务器的世界中，有两个主要的选择：MapServer 和 Geoserver。
- en: At Inicio, we quickly realized we would need an extensible, flexible and fast
    mapping server to serve our large and ever growing amount of geographical data
    that we both ingest and produce.
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Inicio，我们很快意识到我们需要一个可扩展、灵活且快速的地图服务器来服务我们大量且不断增长的地理数据，我们既摄取又产生这些数据。
- en: 'MapServer is fast: it is built in C and makes heavy use of both the most established
    and fastest libraries for geometrical data manipulation: GDAL and PROJ.'
  id: totrans-split-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MapServer 速度快：它是用 C 语言构建的，并且大量使用了几何数据操作中最成熟和最快的库：GDAL 和 PROJ。
- en: MapServer is lightweight
  id: totrans-split-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MapServer 轻巧
- en: MapServer is configurable and scriptable
  id: totrans-split-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MapServer 是可配置和可脚本化的
- en: 'MapServer is open-source, and has been actively maintained by a large community
    for almost 30 years, and funded by large organizations such as NASA! (And when
    I say actively, I mean it: the latest release to date is from April 2023)'
  id: totrans-split-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MapServer 是开源的，并且已经由一个庞大的社区积极维护了将近 30 年，还得到了诸如 NASA 等大型组织的资助！（当我说积极维护时，我的意思是：截至
    2023 年 4 月的最新版本已发布）
- en: '**Anatomy of a Mapserver**'
  id: totrans-split-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**Mapserver 的结构解剖**'
- en: 'The components of a MapServer are:'
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: MapServer 的组成部分包括：
- en: '**What is a mapfile exactly?**'
  id: totrans-split-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**mapfile 究竟是什么？**'
- en: A mapfile is simply a config file written in MapServer’s configuration language.
    It defines everything the server needs to know to draw your map. Objects are defined
    with an opening tag, and .
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: mapfile 只是一个用 MapServer 配置语言编写的配置文件。它定义了服务器绘制地图所需的一切。对象用开放标签定义，并且。
- en: Here is a minimal example of a mapfile. The indents are optional, but useful
    to keep the whole structure clear.
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个 mapfile 的最小示例。缩进是可选的，但有助于保持整体结构清晰。
- en: 'Here’s an example file with comments:'
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个带有注释的示例文件：
- en: 💡 Choosing to make a custom config language for the MapServer configuration
    files is an surprising choice.
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
  zh: 💡 选择为 MapServer 配置文件制定自定义配置语言是一个令人惊讶的选择。
- en: It probably made sense when this library was created, but it doesn’t seem to
    add any advantage over something like JSON or TOML, which are well supported nowadays
    and come with a lot of tooling.
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当这个库被创建时可能是有意义的，但现在似乎没有比 JSON 或 TOML 等现在得到广泛支持和配备大量工具的东西更有优势。
- en: At Inicio, we actually use [Pydantic](https://docs.pydantic.dev/latest/) models
    that mirror the structure of these config files, and serialized them to the mapfile
    format! This allows us to generate and manipulate these config files as Python
    object, without worrying about the uncommon syntax. “Configuration-as-code”
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Inicio，我们实际上使用 [Pydantic](https://docs.pydantic.dev/latest/) 模型来镜像这些配置文件的结构，并将它们序列化为
    mapfile 格式！这使我们能够生成和操作这些配置文件作为 Python 对象，而不必担心不常见的语法。“配置即代码”
- en: ‍**‍**
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**‍**'
- en: '**What kind of data sources can I use?**'
  id: totrans-split-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**我可以使用什么样的数据源？**'
- en: You can serve a lot of different type of geographical data from MapServer. These
    data sources are the backbone of your server.
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从 MapServer 中提供各种不同类型的地理数据。这些数据源是服务器的支柱。
- en: Data can be read from a file in one of the many supported formats (e.g. Shapefile,
    GML, GeoJSON, KML, [and many more](https://mapserver.org/input/vector/index.html#vector)).
  id: totrans-split-40
  prefs: []
  type: TYPE_NORMAL
  zh: 数据可以从文件中读取，支持多种格式（例如 Shapefile、GML、GeoJSON、KML，[以及更多](https://mapserver.org/input/vector/index.html#vector)）。
- en: Another option that we use a lot at Inicio is the ability to read data directly
    from a database. We run a Postgis-enabled database to store most of our geographical
    data, and our MapServer directly fetches what it needs from it.
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Inicio，我们经常使用的另一个选项是直接从数据库中读取数据的能力。我们运行一个支持 Postgis 的数据库来存储大部分地理数据，我们的 MapServer
    直接从中获取所需的数据。
- en: 'Running a query against a database in a mapfile looks something like this:'
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在 mapfile 中对数据库运行查询看起来像这样：
- en: The required fields are one unique `id` and a `geometry` (or postigs `geography`).
    Here we export extra fields that will be used to display information within the
    layer, such as coloring the area depending on the type of vegetal.
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
  zh: 必填字段是一个唯一的 `id` 和一个 `geometry`（或 postigs `geography`）。在这里，我们导出额外的字段，这些字段将用于在图层内显示信息，例如根据植物类型着色区域。
- en: When serving a lot of data, using spatial indexes is crucial, and the server
    knows how to take advantage of them when displaying data within a bounding box.
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在提供大量数据时，使用空间索引至关重要，服务器知道如何在显示边界框内的数据时利用它们。
- en: '**What is a layer? How can I make one?**'
  id: totrans-split-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**什么是图层？如何创建一个？**'
- en: Layers are the underlying structure of the data you will make available with
    the server.
  id: totrans-split-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图层是您将通过服务器提供的数据的基础结构。
- en: The layer below is an example of serving forest data directly from the database
    to a WMS endpoint.
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的图层是一个示例，直接从数据库向 WMS 端点提供森林数据。
- en: At Inicio, we use standard protocols for serving our data, such as WMS. It is
    supported by most GIS software and libraries, and allows serving a lot of data
    efficiently.
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Inicio，我们使用标准协议来提供我们的数据，比如 WMS。它被大多数 GIS 软件和库支持，并允许高效地提供大量数据。
- en: ‍
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: 💡 **What is** [**WMS**](https://en.wikipedia.org/wiki/Web_Map_Service)**?**
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
  zh: 💡 **什么是** [**WMS**](https://en.wikipedia.org/wiki/Web_Map_Service)**？**
- en: The Web Map Service is a standard for serving geographical data. It is based
    on XML, and usually serves data in the form of images (PNG, JPEG, etc.).
  id: totrans-split-51
  prefs: []
  type: TYPE_NORMAL
  zh: Web Map Service 是用于提供地理数据的标准。它基于 XML，通常以图像的形式（PNG、JPEG 等）提供数据。
- en: This format makes it simple to display complex spatial data in a visual way.
    It can serve vector and raster data within a bounding box by rendering said data
    to an image and sending it back.
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这种格式使得以视觉方式显示复杂的空间数据变得简单。它可以通过将数据呈现为图像并发送回来，在一个边界框内提供矢量和栅格数据。
- en: 'Let’s go step by step, decoding the layer definition above:'
  id: totrans-split-53
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们一步步地解码上面的图层定义：
- en: '**What metadata should I add for a WMS server layer?**'
  id: totrans-split-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**我应该为WMS服务器层添加什么元数据？**'
- en: The first part contains a bunch of metadata for your layer. There are a some
    required metadata for serving data through WMS such as `"wms_include_items"` which
    specifies if all the input data should be included in the layer.
  id: totrans-split-55
  prefs: []
  type: TYPE_NORMAL
  zh: 第一部分包含了层的一些元数据。为了通过WMS提供数据，有一些必需的元数据，比如`"wms_include_items"`，它指定是否应该在层中包括所有输入数据。
- en: '**Definition**'
  id: totrans-split-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**定义**'
- en: This part defines the source of the data, how to access it, if it should be
    displayed, the extent it covers and the projection it should be available in.
  id: totrans-split-57
  prefs: []
  type: TYPE_NORMAL
  zh: 此部分定义了数据的来源，如何访问它，是否应该显示它，它覆盖的范围以及应该以哪种投影方式提供它。
- en: '**How do you specifiy the style?**'
  id: totrans-split-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**你如何指定样式？**'
- en: The last part is about styling the layer. This means defining the color, width
    opacity and all the other details of the layer’s object.
  id: totrans-split-59
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一部分是关于给图层设置样式。这意味着定义图层对象的颜色、宽度、透明度以及所有其他细节。
- en: The neat part here is that the color can be returned as part of the SQL query.
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的好处是颜色可以作为SQL查询的一部分返回。
- en: '**How can I run it? With a CGI-capable server**'
  id: totrans-split-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**我如何运行它？通过支持CGI的服务器**'
- en: We now talk about the front-side of our server.
  id: totrans-split-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们谈论我们服务器的前端。
- en: This is maybe another marker of MapServer’s respectable age, but the recommended
    way of running it is through a CGI-capable server, which usually means an Apache
    HTTP server (which is getting close to 30 years old!).
  id: totrans-split-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这也许是MapServer尊贵年龄的另一个标志，但推荐的运行方式是通过一个支持CGI的服务器，通常意味着一个Apache HTTP服务器（已接近30年历史！）。
- en: This is a battle tested server software, that is currently running incredibly
    many servers in small and large structures. It is also super customizable, making
    it an overall reliable and powerful software. However, this comes at the cost
    of simplicity, and it is easy to get lost in the customization options which basically
    let you do anything (including dangerous stuff ☠️).
  id: totrans-split-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个经过战斗考验的服务器软件，目前在小型和大型结构中运行着非常多的服务器。它也是超级可定制的，使其成为一个总体可靠和强大的软件。然而，这是以简单性为代价的，很容易在基本上可以让你做任何事情（包括危险的事情
    ☠️）的定制选项中迷失方向。
- en: For our production server, we chose to get an Apache server running with a good
    config inside a well protected part of our infra. Then, another front-facing reverse-proxy
    handles all the heavy-lifting of HTTPS, authentication, serving other services
    as well as some static files.
  id: totrans-split-65
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的生产服务器，我们选择在我们基础设施的一个受保护良好的部分内运行一个配置良好的Apache服务器。然后，另一个前端反向代理处理所有的重要工作，包括HTTPS、身份验证、提供其他服务以及一些静态文件。
- en: '**Where to go next?**'
  id: totrans-split-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**接下来怎么办？**'
- en: Once you have a MapServer serving WMS up and running, and you are getting some
    usage, you might want to consider caching the tiles served to make access quicker
    (at the cost of storage and complexity). At Inicio, we use [mapproxy](https://mapproxy.org/)
    to cache our WMS tiles. [MapCache](https://mapserver.org/mapcache/index.html),
    from the same developers as MapServer, could also be worth a try.
  id: totrans-split-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦您的MapServer提供了WMS并运行起来，并且您正在得到一些使用，您可能想考虑缓存提供的瓦片以使访问更快（以存储和复杂性为代价）。在Inicio，我们使用[mapproxy](https://mapproxy.org/)来缓存我们的WMS瓦片。[MapCache](https://mapserver.org/mapcache/index.html)，来自MapServer的同一开发者，也可能值得一试。
- en: Scripting the creation of layers. Once you start serving several data sources,
    writing Mapfiles may start to feel repetitive, and it gets very tempting to script
    their generation. You could cook up your own solution like we did, or use an external
    library such as [MapScript](https://mapserver.org/mapscript/index.html).
  id: totrans-split-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 脚本化创建图层。一旦开始提供多个数据源，编写Map文件可能会开始感觉重复，而且很容易诱惑到脚本生成它们。你可以像我们一样自己做出解决方案，或者使用像[MapScript](https://mapserver.org/mapscript/index.html)这样的外部库。
- en: There are a lot of potential optimizations and tuning to be done on a MapServer,
    depending on your use case. The [MapServer doc](https://mapserver.org/optimization/index.html)
    has some great tips to get you started.
  id: totrans-split-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在MapServer上有很多潜在的优化和调优可以进行，这取决于你的使用情况。[MapServer文档](https://mapserver.org/optimization/index.html)中有一些很好的提示可以帮助你入门。
- en: ‍
  id: totrans-split-70
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
