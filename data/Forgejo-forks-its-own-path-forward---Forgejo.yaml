- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:55:37'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:55:37'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Forgejo forks its own path forward — Forgejo
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Forgejo在前进中铸造自己的道路 — Forgejo
- en: 来源：[https://forgejo.org/2024-02-forking-forward/](https://forgejo.org/2024-02-forking-forward/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://forgejo.org/2024-02-forking-forward/](https://forgejo.org/2024-02-forking-forward/)
- en: Since its [inception](../2022-12-15-hello-forgejo/), Forgejo (a self-hosted
    git forge, like GitHub) has been a soft fork of Gitea. Upgrading to it was - and
    for the time being, remains to be - as simple as [changing the URL from which
    the release is downloaded](../download/). Over time, the way Forgejo is governed
    and developed evolved. To be able to provide stable, secure, reliable releases,
    Forgejo requires a [reasonable effort made at writing tests](https://codeberg.org/forgejo/governance/src/branch/main/PullRequestsAgreement.md)
    for each change that goes into the code. This has worked out remarkably well,
    as it caught both regressions in imported code, and mistakes in proposed changes.
    Furthermore, Forgejo has accepted features and other changes that are not available
    in Gitea, and has [diverged](#the-hard-forking-process) in other ways already.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 自 [创立](../2022-12-15-hello-forgejo/) 以来，Forgejo（一个类似于 GitHub 的自托管 Git Forge）一直是
    Gitea 的软分叉。将其升级到此版本 - 至少在当前阶段仍然如此 - 就像 [更改下载发行版的 URL](../download/) 一样简单。随着时间的推移，Forgejo
    的治理和开发模式得到了发展。为了能够提供稳定、安全、可靠的发布版本，Forgejo 要求对每一次代码更改都进行 [合理的测试工作](https://codeberg.org/forgejo/governance/src/branch/main/PullRequestsAgreement.md)。这一策略非常成功，它不仅捕捉到了导入代码中的回归问题，还发现了提议更改中的错误。此外，Forgejo
    还接受了一些在 Gitea 中不可用的功能和其他更改，并且在其他方面已经 [分叉](#the-hard-forking-process) 了。
- en: 'Today, Forgejo has a healthy number of people contributing to its main mission:'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，Forgejo有许多人参与其主要使命：
- en: The community is in control, and ensures we develop to address community needs.
  id: totrans-split-8
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 社区拥有控制权，并确保我们开发以解决社区需求。
- en: We will help liberate software development from the shackles of proprietary
    tools.
  id: totrans-split-9
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将帮助解放软件开发，摆脱专有工具的枷锁。
- en: To continue living by that statement, a [decision was made](https://codeberg.org/forgejo/governance/issues/58)
    in early 2024 to become a hard fork. By doing so, Forgejo is no longer bound to
    Gitea, and can forge its own path going forward, allowing maintainers and contributors
    to reduce tech debt at a much higher pace, and implement changes - whether they’re
    new features or bug fixes - that would otherwise have a high risk of conflicting
    with changes made in Gitea. Simply put, the governance and development models
    of Gitea and Forgejo diverged over time, and so did their goals. Becoming a hard
    fork is the culmination of that divergence.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了继续遵循这一声明，于 2024 年初 [做出了决定](https://codeberg.org/forgejo/governance/issues/58)
    成为硬分叉。通过这样做，Forgejo 不再受制于 Gitea，并且可以自行前进，允许维护者和贡献者以更高的速度减少技术债务，并实施新功能或错误修复等更改，这些更改否则可能会与
    Gitea 中的更改冲突。简而言之，Gitea 和 Forgejo 的治理和开发模式随着时间的推移而分歧，它们的目标也有所不同。成为硬分叉是这种分歧的顶点。
- en: The hard forking process[](#the-hard-forking-process)
  id: totrans-split-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 硬分叉过程[](#the-hard-forking-process)
- en: 'Forgejo has been, since its inception late 2022, a soft fork of Gitea which
    means it contains all of Gitea, both good and bad, with Forgejo having little
    control over what it is built on. However, some parts of Gitea were already “hard-forked”
    before:'
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: Forgejo 自 2022 年末成立以来，一直是 Gitea 的软分叉，这意味着它包含了整个 Gitea 的代码，包括好的和坏的，而 Forgejo
    对构建的内容几乎没有控制权。然而，在此之前，Gitea 的某些部分已经被“硬分叉”了：
- en: Most of these steps were taken to liberate parts of the code base from proprietary
    solutions, to manage them with free software instead, and in the same process,
    make it simpler to manage Forgejo-specific changes. All while keeping the impact
    on the software itself minimal.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 大部分这些步骤是为了解放代码库的部分内容，从专有解决方案转而使用自由软件来管理，并在这一过程中，使得管理Forgejo特定变更更加简单。同时，尽量减少对软件本身的影响。
- en: Consequences of becoming a hard fork[](#consequences-of-becoming-a-hard-fork)
  id: totrans-split-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 成为硬分叉的后果[](#consequences-of-becoming-a-hard-fork)
- en: As of Forgejo v1.21, Forgejo contains all of Gitea, and that has the benefit
    of allowing Forgejo to be a drop-in replacement. With the decision to become a
    hard fork, this will no longer be guaranteed. It will remain possible to upgrade
    from the latest [Gitea version released](https://github.com/go-gitea/gitea/releases/tag/v1.21.5)
    at the time of the hard fork, but versions past that will not have such a guarantee.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 自 Forgejo v1.21 版本开始，Forgejo 包含了所有的 Gitea 功能，并且这样做有利于使 Forgejo 成为一个即插即用的替代品。但是，随着决定进行硬分叉，这一点将不再被保证。在硬分叉时仍然可以从当时发布的最新[Gitea
    版本](https://github.com/go-gitea/gitea/releases/tag/v1.21.5)升级，但在此之后的版本将不再有此保证。
- en: As such, if you were considering upgrading to Forgejo, we encourage you to do
    that sooner rather than later, because as the projects naturally diverge further,
    doing so will become ever harder. It will not happen overnight, it may not even
    happen soon, but eventually, Forgejo will stop being a drop-in replacement.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果您考虑升级到 Forgejo，我们建议您尽早行动，因为随着项目自然分歧的进一步加深，升级将变得越来越困难。这不会一夜之间发生，甚至可能不会很快发生，但最终，Forgejo
    将停止作为一个即插即用的替代品。
- en: The Forgejo API will strive to remain compatible with the Gitea API going forward,
    after the hard fork. Existing APIs at the time of the fork are public, and changing
    them is a breaking change, which has to be evaluated very carefully, and not done
    lightly. Future APIs should similarly be evaluated, and Forgejo will try to remain
    compatible with Gitea. However, Forgejo contributors shall also use their own
    judgement whether to implement an API or not, and how - with the previous goals
    in mind.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在硬分叉后，Forgejo API 将努力保持与 Gitea API 的兼容性。分叉时存在的 API 是公开的，对它们进行更改将是一个破坏性的变更，必须非常谨慎地评估，不能轻率地进行。未来的
    API 同样需要进行评估，Forgejo 将尝试与 Gitea 保持兼容。然而，Forgejo 的贡献者也将根据自己的判断决定是否以及如何实现一个 API，同时考虑先前的目标。
