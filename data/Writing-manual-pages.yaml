- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 14:59:26'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:59:26
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Writing manual pages
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写手册页
- en: 来源：[https://liw.fi/manpages/](https://liw.fi/manpages/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://liw.fi/manpages/](https://liw.fi/manpages/)
- en: Introduction
  id: totrans-split-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Manual pages are the canonical type of documentation for Unix systems. They
    are a bit arcane, but for a technology several decades old, they've held up quite
    well. The arcane bit is the markup language. This is a brief tutorial on writing
    good manual pages, at least for the typical cases. You'll be assumed to be familiar
    with reading manual pages already.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 手册页是 Unix 系统的经典文档类型。它们有点晦涩，但对于一个几十年历史的技术来说，它们的效果相当不错。晦涩的部分是标记语言。这是一个关于撰写良好手册页的简短教程，至少适用于典型情况。假设您已经熟悉阅读手册页。
- en: There are actually many ways to produce manual pages. The **`man`(1)** command
    needs a file using **`troff`(1)** formatting commands. [`troff`](http://en.wikipedia.org/wiki/Troff)
    is a typesetting system from the 1970s, written by the Unix developers. The `troff`
    file can be written manually, or generated from other formats, such as DocBook
    or Perl POD markup. On Linux, `groff`, the GNU implementation of `troff`, is used.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上有许多方法可以生成手册页。 **`man`(1)** 命令需要使用 **`troff`(1)** 格式化命令的文件。[`troff`](http://en.wikipedia.org/wiki/Troff)
    是 Unix 开发者在 1970 年代编写的排版系统。`troff` 文件可以手动编写，也可以从其他格式（如 DocBook 或 Perl POD 标记）生成。在
    Linux 上，使用 GNU 实现的 `troff`，即 `groff`。
- en: Conventions in manual pages
  id: totrans-split-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 手册页中的约定
- en: 'The important thing is that the formatted page follows manpage typesetting
    and other conventions, so that readers can efficiently extract the needed information
    from them. This bit is important: manpages are **reference documentation,** intended
    to **quickly answer questions** like "what is the purpose of this command" or
    "is there an option to show more information about files".'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是格式化的页面要遵循手册页排版和其他约定，以便读者能够高效地从中提取所需信息。这点很重要：手册页是**参考文档**，旨在**快速解答**诸如“此命令的目的是什么”或“是否有选项可以显示更多有关文件的信息”的问题。
- en: 'Here are some of the more important conventions:'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一些更重要的约定：
- en: the page should be short and to the point, without sacrificing clarity
  id: totrans-split-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手册页应简洁明了，但不失清晰度
- en: use only the usual sections, in the usual order; see **`man-pages`(7)** for
    details
  id: totrans-split-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '仅使用通常的部分，按照通常的顺序；有关详细信息，请参阅 **`man-pages`(7)** '
- en: in particular, give a brief, readable summary of command line syntax in SYNOPSIS;
    if there are a lot of options, list them in the OPTIONS section
  id: totrans-split-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特别是在概要中对命令行语法进行简要易读的总结；如果有许多选项，请在选项部分列出它们
- en: format the OPTIONS section so that options are in bold and their optional arguments
    are in italic, to improve fast skimming of the page
  id: totrans-split-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 格式化选项部分，使选项以粗体显示，并将其可选参数以斜体显示，以便快速浏览页面
- en: for anything that is complicated to use, add an EXAMPLE section
  id: totrans-split-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于任何复杂使用的内容，请添加一个示例部分
- en: 'add examples for the common cases, not just special ones: you may think your
    program is obvious to use, but not everyone will find it so'
  id: totrans-split-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加一些常见情况下的示例，而不仅仅是特殊情况：你可能认为你的程序很容易使用，但并非所有人都会这么认为
- en: don't forget ENVIRONMENT and FILES sections
  id: totrans-split-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要忘记环境和文件部分
- en: the SEE ALSO section is also often useful to add
  id: totrans-split-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另外，SEE ALSO 部分通常也很有用
- en: Example manual page
  id: totrans-split-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例手册页面
- en: '`troff` is a programming language for typesetting. It has a macro facility,
    and several macro packages have been written for writing manual pages. The most
    common of these is the `-man` one. Here''s an example of a manpage, using that:'
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`troff` 是一种排版语言。它具有宏功能，并已编写了几个用于编写手册页的宏包。其中最常见的是 `-man`。以下是使用该语言的一个手册页示例：'
- en: '[PRE0]'
  id: totrans-split-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Save that in a file, called `corrupt.1`, and then view it using the command
    `man -l corrupt.1`. The output should be approximately like this (after a manual
    conversion to HTML to allow fonts):'
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 将其保存到名为 `corrupt.1` 的文件中，然后使用命令 `man -l corrupt.1` 查看。输出应大致如下（经手动转换为 HTML 以允许字体）：
- en: '`CORRUPT(1)'
  id: totrans-split-24
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`CORRUPT(1)`'
- en: '**NAME**'
  id: totrans-split-25
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**名称**'
- en: corrupt - modify files by randomly changing bits
  id: totrans-split-26
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: corrupt - 通过随机更改位来修改文件
- en: '**SYNOPSIS**'
  id: totrans-split-27
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**概要**'
- en: '**corrupt** [**-n** BITS] [**--bits** BITS] file...'
  id: totrans-split-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**corrupt** [**-n** BITS] [**--bits** BITS] file...'
- en: '**DESCRIPTION**'
  id: totrans-split-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**描述**'
- en: '**corrupt** modifies files by toggling a randomly chosen bit.'
  id: totrans-split-30
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**corrupt** 通过切换随机选择的位来修改文件。'
- en: '**OPTIONS**'
  id: totrans-split-31
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**选项**'
- en: '**-n**, **--bits**=BITS'
  id: totrans-split-32
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**-n**, **--bits**=BITS'
- en: Set the number of bits to modify. Default is one bit.
  id: totrans-split-33
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 设置要修改的位数。默认为一位。
- en: CORRUPT(1)`
  id: totrans-split-34
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: CORRUPT(1)`
- en: 'The title: `.TH`'
  id: totrans-split-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标题：`.TH`
- en: 'Every manual page should start by specifying its title:'
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: 每个手册页都应从指定其标题开始：
- en: '[PRE1]'
  id: totrans-split-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Here, `CORRUPT` is the name of the manual page, and `1` is the section in which
    the manual page belongs (section 1 for user commands, 2 for system calls, etc;
    see **`man-pages`(7)`** for the whole list).
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`CORRUPT`是手册页的名称，`1`是手册页所属的部分（用户命令的第1部分，系统调用的第2部分等；请参见**`man-pages`(7)**获取整个列表）。
- en: 'You can additionally add three more pieces of information: the date of this
    revision of the manual page, where the program it documents came from, and the
    title of the whole book to which this page belongs to. I pretty much never use
    the optional ones: keeping the date up to date is a pain, and the others are not
    all that useful for my personal projects.'
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以添加三个信息：本手册页修订的日期，文档化程序的来源以及此页所属整本书的标题。我几乎从不使用可选的内容：保持日期最新更新很麻烦，其他对于我的个人项目并不是很有用。
- en: '`NAME` section'
  id: totrans-split-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`NAME`部分'
- en: '[PRE2]'
  id: totrans-split-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The NAME section declares the name of command that is being documented. It also
    gives a very brief explanation of what it does. These two parts are separated
    by backslash-dash. That's a magic combination, the `man` command requires it.
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`NAME`部分声明正在文档化的命令的名称。它还给出了它做什么的非常简短的解释。这两部分由反斜杠-dash分隔。这是一个魔法组合，`man`命令要求使用它。'
- en: This section is the source for data for `man -k` searches. That's a useful feature,
    and it is good to pay a bit of attention to making the brief explanation as useful
    as possible. However, do keep it brief; having it be broken on several lines looks
    bad. (It may be a sign of a badly designed program if the brief explanation is
    hard to write.)
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
  zh: 此部分是`man -k`搜索的数据源。这是一个有用的功能，并且值得稍微注意确保简短的解释尽可能有用。但是要保持简洁；解释分成几行看起来很糟糕。（如果简短的解释很难写，这可能是程序设计不良的迹象。）
- en: The Debian and derivatives `man` implementation comes with `lexgrog`, which
    can verify that you get the NAME section right.
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
  zh: Debian及其派生的`man`实现附带了`lexgrog`，它可以验证您是否正确地获取了`NAME`部分。
- en: '`SYNOPSIS` section'
  id: totrans-split-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`SYNOPSIS`部分'
- en: '[PRE3]'
  id: totrans-split-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In this section, we give the user a summary of how the command line syntax
    of the program looks like. Font usage is important here, and carries information.
    All the parts that are in bold are things that the user is expected to write verbatim.
    Italic indicates values the user is expected to fill in. Normal font is used for
    syntax meta-characters: for the brackets that indicate optionality, and the ellipsis
    that indicates repetition.'
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在此部分，我们向用户提供程序命令行语法的摘要。字体使用在这里很重要，并携带信息。所有以粗体显示的部分是用户期望逐字写的内容。斜体表示用户期望填写的值。正常字体用于语法元字符：用于表示可选性的方括号和表示重复的省略号。
- en: Using fonts
  id: totrans-split-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用字体
- en: 'Fonts can be set in two ways: either using the dot-commands, or the backslash-f
    escapes. The `.B` command (where the dot is at the beginning of a line) typesets
    the rest of the line in bold face. Similarly, `.I` typesets in italics (but terminals
    show that as underline), and `.R` in what `troff` calls the roman font, and the
    rest of us call the normal font. You can combine these, `.BR` typesets the first
    word on the line in bold, the second in normal font. The output will have no space
    between the words: `.BR manpagename (7)` would be the usual way to refer to another
    manual page. If a word has spaces in it, use double quotes: `.B "far and away"`
    for example.'
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
  zh: 字体可以通过两种方式设置：使用点命令或反斜杠-f转义。`.B`命令（点在行的开头）使该行剩余部分以粗体显示。类似地，`.I`以斜体显示（但终端显示为下划线），`.R`使用`troff`称为罗马字体，我们称为普通字体。您可以组合这些命令，`.BR`将第一个单词设置为粗体，第二个单词设置为普通字体。输出中单词之间没有空格：`.BR
    manpagename (7)`通常是引用另一页手册的方式。如果单词中有空格，请使用双引号：`.B "far and away"` 例如。
- en: Backslash-f escapes work anywhere on a line, and sometimes they're easier to
    use than the dot-commands. Their effect also does not end at the end of a line.
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
  zh: 反斜杠-f转义可以在行中的任何位置使用，并且有时比点命令更容易使用。它们的效果也不会在行的末尾结束。
- en: An unfortunate bit of arcane syntax is that dashes in options should be prefixed
    by backslashes. Thus, write `\-\-bits`, not just `--bits`. The Debian and Ubuntu
    implementation of `man` treats them the same, for terminal output, but this is
    not portable. Technically a naked `-` means a hyphen, whereas `\-` means a minus
    sign. Typographically these are distinct, and they are also distinct in Unicode.
    The typesetter is free to break a line at a hyphen, but not at a minus. For dashes
    in options, you should thus use minuses, but in normal text, for normal words,
    the hyphen.
  id: totrans-split-51
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，一个令人遗憾的古怪语法是选项中的破折号应该用反斜杠前缀。因此，写成`\-\-bits`，而不只是`--bits`。对于终端输出，Debian和Ubuntu的`man`实现将它们视为相同，但这不是可移植的。从技术上讲，裸的`-`表示连字符，而`\-`表示减号。在印刷上，它们是不同的，Unicode中它们也是不同的。排版者可以在连字符处换行，但不能在减号处换行。因此，在选项中的破折号应该使用减号，但在正常文本中，用于普通单词的连字符。
- en: '`DESCRIPTION` section'
  id: totrans-split-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`DESCRIPTION`部分'
- en: '[PRE4]'
  id: totrans-split-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The DESCRIPTION section describes what the program does, in more detail than
    the NAME section. There are no artificial size limits here, but it's still good
    style to avoid being long-winded. At the same time, it is perhaps best to not
    be quite as terse as the example.
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
  zh: DESCRIPTION部分详细描述程序的功能，比NAME部分更详细。这里没有人为的大小限制，但避免冗长的文风仍然是好的风格。同时，也许最好不要像例子那样简洁。
- en: Paragraphs and line structure
  id: totrans-split-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 段落和行结构
- en: If you write more than one paragraph, start the other paragraphs with the `.PP`
    command. Do not just leave an empty line; this makes `troff` sometimes do the
    wrong thing. In fact, the manual page source should have no empty lines at all.
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果写了多个段落，请使用`.PP`命令开始其他段落。不要只留空行；这有时会导致`troff`做出错误的处理。事实上，手册页源文件根本不应有空行。
- en: '`troff` prefers you to start every sentence on a new line. This lets it typeset
    end-of-sentence whitespace better, when it produces output using proportional
    fonts. Also, this makes it easier to compare versions of a manpage with `diff`.'
  id: totrans-split-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`troff` 更倾向于每句话都在新行开始。这样做有助于它在使用比例字体输出时更好地排版句尾的空白。此外，这样做也更容易比较`diff`版本的手册页。'
- en: More about fonts
  id: totrans-split-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多关于字体的信息
- en: There are some more font conventions.
  id: totrans-split-59
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些字体约定。
- en: use bold for the command you are documenting
  id: totrans-split-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于你正在文档化的命令，请使用粗体。
- en: 'refer to other manual pages like this: **`man-pages`(7)** (easiest to achieve
    like this: `.BR man-pages (7)`)'
  id: totrans-split-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参考其他手册页如此：**`man-pages`(7)**（最简单的实现方式是`.BR man-pages (7)`）
- en: filenames in italics
  id: totrans-split-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件名使用斜体
- en: See **`man-pages`(7)** for more details.
  id: totrans-split-63
  prefs: []
  type: TYPE_NORMAL
  zh: 查看更多详情，请参阅**`man-pages`(7)**。
- en: '`OPTIONS` section'
  id: totrans-split-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`OPTIONS`部分'
- en: '[PRE5]'
  id: totrans-split-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Options are perhaps the most tedious part to document. It is also the part where
    proper formatting gives the most benefit to the reader.
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
  zh: 选项可能是文档中最繁琐的部分。同时，正确的格式给读者带来了最大的好处。
- en: First, there is the list structure. This is achieved with the `.TP` command,
    which is kind of magic. It takes the *next* line, and does not indent it, and
    then indents the rest of the paragraph. This gives the nice indented-paragraph
    style that makes it easy to quickly scan even a long list of options to find the
    right one.
  id: totrans-split-67
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，有列表结构。这是通过`.TP`命令实现的，这种命令有一种魔法效果。它接受*下一行*，不缩进它，然后缩进段落的其余部分。这提供了漂亮的缩进段落样式，使得即使是长长的选项列表，也能轻松快速地找到正确的选项。
- en: That first, un-indented line describes the option, giving its name, and indicates
    if it gets an argument or not. If there are several names for an option (a long
    one, and a one-letter one, for example), they should be on the same line, separated
    by commas. The one-letter option name does not get the option argument, to keep
    things short.
  id: totrans-split-68
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行不缩进的描述选项，给出其名称，并指示它是否有参数。如果一个选项有多个名称（例如长名称和单字母名称），它们应该在同一行上，用逗号分隔。单字母选项名称不带选项参数，以保持简洁。
- en: 'Fonts are again used to clarify things:'
  id: totrans-split-69
  prefs: []
  type: TYPE_NORMAL
  zh: 字体再次用于澄清事物：
- en: the name of the option (including any dashes at the beginning) is in bold
  id: totrans-split-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选项的名称（包括开头的任何破折号）用粗体表示
- en: any argument is in italic, but the equals sign (if any) is in normal font
  id: totrans-split-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何参数都用斜体表示，但等号（如果有的话）使用普通字体
- en: the comma between options is in normal font
  id: totrans-split-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选项之间的逗号使用普通字体
- en: Comments in `troff` source
  id: totrans-split-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`troff`源文件中的注释'
- en: '`troff` also supports comments: start a line with `.\"` and it is a comment.
    You can use them, for example, to add white space between descriptions of options
    in the OPTIONS section (remember, no empty lines).'
  id: totrans-split-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`troff` 也支持注释：以`.\"`开头的行将被视为注释。例如，可以使用它们在OPTIONS部分的选项描述之间添加空白（记住，不能有空行）。'
- en: Marking up examples
  id: totrans-split-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标记示例
- en: Most manual pages benefit from an `EXAMPLES` section, which shows basic use
    of the command. Sometimes advanced use is also useful to show, but basic use is
    almost always useful, because that's what people need most often.
  id: totrans-split-76
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数手册页面受益于一个`EXAMPLES`部分，显示命令的基本用法。有时显示高级用法也是有用的，但基本用法几乎总是最需要的，因为这是人们最常需要的。
- en: 'Marking up examples of command line use is a bit tricky in manual pages. Here''s
    an example of an example:'
  id: totrans-split-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在手册页面中标记命令行使用的示例有些棘手。这里是一个示例的示例：
- en: '[PRE6]'
  id: totrans-split-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'A few new `troff` commands:'
  id: totrans-split-79
  prefs: []
  type: TYPE_NORMAL
  zh: 几个新的`troff`命令：
- en: '`.nf` turns off paragraph filling mode: we don''t want that for showing command
    lines.'
  id: totrans-split-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.nf`关闭段落填充模式：我们不希望显示命令行时使用。'
- en: '`.fi` turns it back on.'
  id: totrans-split-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.fi`重新开启它。'
- en: '`.RS` starts a relative margin indent: examples are more visually distinguishable
    if they''re indented.'
  id: totrans-split-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.RS`开始相对边距缩进：如果缩进，示例会更加视觉上的可区分。'
- en: '`.RE` ends the indent.'
  id: totrans-split-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.RE`结束缩进。'
- en: '`\\` puts a backslash in the output. Since `troff` uses backslash for fonts
    and other in-line commands, it needs to be doubled in the manual page source so
    that the output has one.'
  id: totrans-split-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`\\`在输出中放置一个反斜杠。由于`troff`在行内命令中使用反斜杠来表示字体和其他内容，因此在手册页面源文件中必须将其加倍，以便输出中有一个反斜杠。'
- en: 'The backslash is used to show that the shell command line is broken into two
    physical lines, even if it is just one logical command. This is fairly commonly
    needed in manual pages: the page width is usually only 80 monospace characters
    wide, and with margins and indentations there''s often only about 60 or 65 characters
    per line in the example. Command line examples therefore need to be wrapped, and
    it''s better to be done explicitly in the manual page source than letting the
    `man` program do it.'
  id: totrans-split-85
  prefs: []
  type: TYPE_NORMAL
  zh: 反斜杠用于显示shell命令行被分成两行，即使它只是一个逻辑命令。这在手册页面中相当常见：页面宽度通常只有80个等宽字符，加上边距和缩进后，示例中通常每行只有60或65个字符。因此，命令行示例需要换行，最好是在手册页面源文件中明确指定，而不是让`man`程序自行处理。
- en: Other ways of creating manual pages
  id: totrans-split-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建手册页面的其他方式
- en: This example used the `-man` macros for `troff`, since that is the most common
    way to write manual pages. However, they are admittedly arcane at this point in
    history. They're pretty easy to write, but not nearly as convenient as, say, Perl
    POD markup, or DocBook markup (see the refentry element). However, those other
    markup languages require conversion tools to produce a file that `man` can actually
    use, and the tools do not always properly follow the manpage formatting conventions.
  id: totrans-split-87
  prefs: []
  type: TYPE_NORMAL
  zh: 本示例使用了`troff`的`-man`宏，因为这是撰写手册页面的最常用方式。然而，必须承认，这些方式在当前历史阶段已经有些过时。虽然它们相对容易编写，但不像Perl
    POD标记或DocBook标记（参见refentry元素）那样方便。然而，这些其他标记语言需要转换工具才能生成`man`实际可用的文件，并且这些工具并不总是能正确地遵循手册页的格式约定。
- en: SEE ALSO
  id: totrans-split-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另见
- en: 'For more information about writing manual pages, see:'
  id: totrans-split-89
  prefs: []
  type: TYPE_NORMAL
  zh: 关于撰写手册页面的更多信息，请参阅：
- en: '**`man`(7)**, for the `-man` macros'
  id: totrans-split-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**`man`(7)**，用于`-man`宏'
- en: '**`mdoc`(7)**, for an alternative set of `troff` macros'
  id: totrans-split-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**`mdoc`(7)**，另一组`troff`宏的替代方式'
- en: '**`man-pages`(7)**, for manpage structure and font conventions'
  id: totrans-split-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**`man-pages`(7)**，用于手册页面的结构和字体约定'
- en: '[Branden Robinson''s Debconf5 talk](http://web.archive.org/web/20060102171907/people.debian.org/~branden/talks/wtfm/)'
  id: totrans-split-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Branden Robinson''s Debconf5 talk](http://web.archive.org/web/20060102171907/people.debian.org/~branden/talks/wtfm/)'
- en: 'Other ways to create manual pages:'
  id: totrans-split-94
  prefs: []
  type: TYPE_NORMAL
  zh: 创建手册页面的其他方法：
- en: '**`perlpod`(1)**, for Perl POD markup and conversion'
  id: totrans-split-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**`perlpod`(1)**，用于Perl POD标记和转换'
- en: '[asciidoc](http://asciidoc.org)'
  id: totrans-split-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[asciidoc](http://asciidoc.org)'
