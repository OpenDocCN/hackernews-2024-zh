- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 13:00:27'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 13:00:27
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Home · thmsmlr
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 主页 · thmsmlr
- en: 来源：[https://thmsmlr.com/cheap-infra](https://thmsmlr.com/cheap-infra)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://thmsmlr.com/cheap-infra](https://thmsmlr.com/cheap-infra)
- en: 'One thing is certain in life: if you’re getting something for a steal, someone
    is getting screwed, and it’s probably you elsewhere. This isn’t an anti-capitalist
    rant, it’s just the truth. Companies don’t exist if they don’t make money. Unless
    there’s some innovation, rest assured that you’re overpaying somewhere else.'
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 生活中有一件事是确定无疑的：如果你以超低价格得到了什么东西，肯定是其他地方有人在被宰割，而且很可能是你。这不是反资本主义的怒吼，这只是事实。如果公司不赚钱，它们就不存在。除非有某种创新，否则可以肯定地说你在其他地方支付了过高的价格。
- en: Last week, I was reminded of this when I saw something on Amazon for cheaper
    than it was listed at Costco. Costco has the lowest cost structure in the industry.
    It doesn’t make sense. However, this post isn’t about $3 mosquito repellent and
    loss leaders. This is a post about AWS and the cloud.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 上周，在亚马逊看到一些比在Costco列出的更便宜的东西时，我想起了这件事。Costco在行业中拥有最低的成本结构。这是没有意义的。但是，这篇文章不是关于3美元的驱蚊剂和亏本销售。这是关于AWS和云的一篇文章。
- en: It’s well known that Amazon makes the majority of its profits from AWS, and
    yet so many people talk about how the cloud is so cheap. That cannot be so. You
    are getting screwed.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 众所周知，亚马逊大部分利润来自AWS，然而还有很多人谈论云是如此便宜。这是不可能的。你正在被宰割。
- en: '**Here’s some math.**'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**这里有一些数学。**'
- en: From First Principles
  id: totrans-split-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从第一原理出发
- en: Suppose you’re relatively ambitious. You want to create a top 1000 website on
    the internet, say [businessinsider.com](https://www.businessinsider.com/) for
    example. According to [SimilarWeb](https://www.similarweb.com/website/businessinsider.com)
    at the time of writing they are a global top 1000 website (587 to be exact) and
    get around 200M visitors a month. Each visitor does on average 2 pages per visit,
    so 400M HTML documents are needed to be served every month. Sampling a few stories
    on Business Insider it looks like the standard HTML document for a story is on
    the order of 75KB compressed. Multiply those together and you 30TB of bandwidth
    just for the HTML.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你相对雄心勃勃。你想在互联网上创建一个前1000名的网站，比如[businessinsider.com](https://www.businessinsider.com/)。根据[SimilarWeb](https://www.similarweb.com/website/businessinsider.com)的数据，他们是全球前1000名网站（确切地说是第587名），每月大约有2亿访客。每位访客平均访问2页，因此每月需要提供4亿个HTML文档。在Business
    Insider的几篇报道中抽样，似乎一个标准的故事HTML文档压缩后大约为75KB。将这些乘在一起，你需要每月30TB的带宽来提供HTML内容。
- en: That sounds like a lot, but consider that we’re not assuming a CDN for the HTML,
    because your website might not be a news website. Your HTML might be dynamically
    served for each request. Consider still that Business Insider articles have a
    bunch of inline javascript that can probably be shipped off to a CDN in your superior
    implementation. 75KB of compressed HTML is A LOT. Desipte that, 30TB/month is
    only 11MB/sec, and in Business insider’s case that’s only about 150 request/sec.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 那听起来很多，但请考虑，我们并没有假设HTML使用CDN，因为您的网站可能不是新闻网站。您的HTML可能是根据每个请求动态提供的。仍需考虑的是，Business
    Insider的文章中有大量内联JavaScript，这些可能可以在您优化的实现中发送到CDN。75KB的压缩HTML实在是太多了。尽管如此，每月30TB只相当于11MB/秒，而在Business
    Insider的情况下，这只是大约150个请求/秒。
- en: Reduce the HTML size, increase the number of requests, either way, with a CDN
    serving your JS, CSS, and images, you can have a top 1000 website if your app
    code can produce 11MB/sec of HTML. That’s an incredibly low bar. Even the slowest
    interpreted language can do 10x that on modern hardware.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 减少HTML大小，增加请求数量，无论如何，通过CDN为您的JS、CSS和图像提供服务，您的应用代码如果能产生11MB/秒的HTML，就可以拥有一个前1000名的网站。这是一个非常低的门槛。即使是最慢的解释性语言在现代硬件上也能做到10倍以上。
- en: The latest AMD server processors have 64 cores and 128 theads. Their newest
    Zen 5, Turin server processors are rumored to have 192 cores. On a dual socket
    server you’ll be up near the 400 core count range with 768 threads. **You can
    serve the world from a single box.** Why do we need Docker, serverless, horizontal
    scalability again?
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 最新的AMD服务器处理器拥有64个核心和128个线程。据传言，他们最新的Zen 5、Turin服务器处理器将拥有192个核心。在双插槽服务器上，您将接近400个核心，768个线程。**您可以通过单个盒子为世界提供服务。**为什么我们还需要Docker、无服务器、水平扩展性呢？
- en: You might be thinking, that’s some clever bit of math there, but what about
    latency? You can’t deny the speed of light, Thomas, the fundamental physics of
    the universe! That’s what the marketing department of these cloud vendors are
    going on about these days right? You need to be on the edge, they say. Be close
    to your users. Minimize latency. It’s true, and we believe in physics in this
    household, but the specifics are a bit more interesting.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 也许你会想，这是一些巧妙的数学技巧，但延迟呢？你不能否认光速，托马斯，宇宙的基本物理原理！这是这些云供应商市场部门目前正在谈论的内容吧？他们说你需要处于边缘。靠近你的用户。将延迟最小化。这是真的，我们在这个家庭中信仰物理学，但具体情况更有趣。
- en: Edging feels good, but doesn’t deliver the goods
  id: totrans-split-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 边缘感觉不错，但不能实现预期效果。
- en: Let’s get a grounding on the lower limits of latency. At the speed of light
    it would require 200ms to do a roundtrip across the globe. However, in practice
    this generally ends up being about 300ms to a good data center on the other side
    of the planet.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来了解一下延迟的下限。光速下，在全球范围内往返需花费200毫秒。然而，实际情况是，在地球另一边的良好数据中心通常需要约300毫秒。
- en: Now once again, let’s assume you have your JS, CSS, and media being delivered
    from a CDN, then **the real question is if you can shave 300ms off your server
    processing in the initial render, you’ve effectively moved your server across
    the world next to your user.**
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在再次假设您的JS、CSS和媒体是从CDN传送的，那么**真正的问题是，如果您在初始渲染中能够节省300毫秒的服务器处理时间，您实际上已经将您的服务器移到了靠近用户的全球位置。**
- en: Given this framing, the edge technologies start to not look so good. While yes
    there has been huge strides in second generation serverless technology to solve
    the coldboot problem which used to easily eat up that 300ms latency budget, there
    is still the problem of databases.
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这样的背景，边缘技术开始显得不那么优越了。虽然第二代无服务器技术在解决冷启动问题方面取得了巨大进展，这个问题曾经轻松耗尽了300毫秒的延迟预算，但数据库问题仍然存在。
- en: No matter how you design your site, SPA, SSR, some hybrid in between you can’t
    get around that if there is at least one database query involved in rendering
    your page, you have to go back to your database in us-east-1\. Thereby shifting
    the latency from user to origin server, to edge server to origin server.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您如何设计您的站点，SPA、SSR、某些混合形式，如果在呈现页面时涉及至少一个数据库查询，您都必须回到您在us-east-1的数据库。从而将延迟从用户转移到起始服务器，再到边缘服务器和起始服务器。
- en: Some might argue that inter-data center connections are faster than user-data
    center connections, and that may or may not be true, but doesn’t mean you can’t
    put your website behind something like Cloudfront and get all those benefits without
    “running on the edge”.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 有人可能会争论数据中心之间的连接比用户与数据中心之间的连接更快，这可能是对也可能不是，但这并不意味着你不能将你的网站放在Cloudfront背后，享受所有这些好处，而不必“运行在边缘”。
- en: Worse still, most sufficiently complicated pages require 5+ database queries
    to render. Most web frameworks are single threaded where each of those queries
    are running in series back and forth to us-east-1 making latency worse than just
    going there once and having all the database queries be data-center local.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 更糟糕的是，大多数复杂页面需要进行5次以上的数据库查询才能呈现。大多数Web框架是单线程的，每个查询在us-east-1之间串行运行，使延迟比只去那里一次并使所有数据库查询都在数据中心本地运行更糟糕。
- en: You notice how all of Vercel’s edge demos only display the time? It’s because
    that’s about the only useful information on the edge.
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否注意到 Vercel 的所有边缘演示都只显示时间？那是因为那是边缘上唯一有用的信息。
- en: '*Nobody ever thinks about the database.*'
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: '*没有人会考虑数据库。*'
- en: A good rule of thumb is that inter-datacenter communication is 10x slower than
    intra-datacenter communication which is 10x slower than on-device communication.
    Given those 192 core AMD servers, SQlite is looking pretty nice. Makes up for
    a good bit of those 300ms.
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一个很好的经验法则是，数据中心间通信比数据中心内通信慢10倍，而后者比设备内通信慢10倍。鉴于那些192核的AMD服务器，SQLite看起来相当不错。弥补了那300毫秒的大部分时间。
- en: And we haven’t even talked about cost
  id: totrans-split-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我们甚至还没有谈论成本。
- en: '[Hetzner.com](https://www.hetzner.com/cloud). Just look at this site and tell
    me you aren’t being robbed.'
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[Hetzner.com](https://www.hetzner.com/cloud)。看看这个网站，告诉我你没有被敲诈。'
- en: For a 16 core server with 64GB of RAM and an NVM drive, Hetzner charges $0.34/hr.
    An equivalent x86 server on AWS EC2 is the m5a.4xlarge at $0.68/hr. Not only that,
    for bandwidth Hetzner gives you 20TB of data for free then charges $1.5/TB there
    after. AWS only gives you 100GB for free and charges a ridiculous $90/TB.
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一个带有16核心、64GB RAM 和 NVM 驱动器的服务器，Hetzner 每小时收费 $0.34。在 AWS EC2 上相当的 x86 服务器是
    m5a.4xlarge，每小时收费 $0.68。不仅如此，对于带宽，Hetzner 给你免费提供20TB 的数据，之后每TB 收费 $1.5。AWS 只给你免费提供100GB，之后每TB
    收费高达 $90。
- en: If you’re using one of the edge cloud vendors, prices are even more ridiculous.
    Vercel for instance charges $200/TB over the first free TB of bandwidth. These
    cloud vendors give you tons of stuff for free to lock you in, just to kill you
    when you scale as if you need it, but as we established before, you probably don’t.
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在使用边缘云供应商之一，价格会更加离谱。例如，Vercel 在超过免费的第一个TB 的带宽后，每TB 收费 $200。这些云供应商给你很多东西是免费的，目的是为了锁住你，但是在你扩展时却会让你感到困扰，但正如我们之前所建立的，你可能并不需要这些。
- en: The reality of the situation
  id: totrans-split-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 这就是实际情况。
- en: Unless you have some specific usecase for the cloud. Maybe you’re transcoding
    video, running your own AI models, or doing something that legitimately stresses
    a system, your website or SaaS can probably run off a single server. It’ll be
    cheaper and simpler to maintain. Plop one in Virginia and you can get the English
    speaking world in under 100ms of latency.
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: 除非你有云计算的某些特定用例。也许你在转码视频，运行自己的 AI 模型，或者在做一些确实会对系统造成压力的事情，你的网站或 SaaS 可能只需一个服务器就能运行。这样更便宜，也更简单维护。在弗吉尼亚州放一个服务器，你就可以在100毫秒内覆盖英语世界。
- en: Use SQLite locally on the box, you don’t need a managed database. Use [Litestream](https://github.com/benbjohnson/litestream)
    to continuously back it up. Get a CDN to cache your CSS, JS and images. Server
    render your page close to your SQLite to minimize back and forths, increasing
    performance.
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在本地使用 SQLite，你不需要一个托管的数据库。使用 [Litestream](https://github.com/benbjohnson/litestream)
    进行持续备份。使用 CDN 缓存你的 CSS、JS 和图片。在靠近你的 SQLite 的服务器上渲染页面，以减少往返次数，提高性能。
- en: Your CI can just SCP your code to the box, NGINX supports zero downtime deploys.
    Don’t bother with docker and virtualization and all that nonsense, it just slows
    down your code and slows down your CI/CD.
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你的 CI 可以直接将代码 SCP 到服务器上，NGINX 支持零停机部署。不要费心使用 Docker 和虚拟化之类的东西，它只会减慢你的代码速度，影响你的
    CI/CD。
- en: They say you’ll need it to scale. Most likely you don’t. Tales of horizontal
    scalability is the most anti-moore’s law thing our industry has ever espoused.
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
  zh: 他们说你需要它来扩展。大多数情况下，你其实并不需要。关于水平扩展的传闻，是我们行业中最违背摩尔定律的事情。
- en: The reality is servers are getting more capable faster than the internet is
    growing. If you really care about latency, throw a server in Germany, and one
    in California, route your writes to your primary, use your local read replica
    for reads.
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现实情况是服务器的能力增长速度比互联网增长速度更快。如果你真的关心延迟问题，把一个服务器放在德国，一个放在加利福尼亚，把写操作路由到主服务器，使用本地的读取副本进行读取。
- en: It’ll scale just fine, be way less complex to manage, and considerably cheaper.
    11MB/sec doesn’t have to be so hard.
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: 它将非常容易扩展，管理起来也更简单，并且成本大大降低。11MB/sec 不必这么难。
