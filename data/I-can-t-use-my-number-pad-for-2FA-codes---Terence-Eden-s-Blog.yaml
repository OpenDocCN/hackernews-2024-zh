- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: '类别: 未分类'
- en: 'date: 2024-05-27 13:17:01'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: '日期: 2024-05-27 13:17:01'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: I can’t use my number pad for 2FA codes – Terence Eden’s Blog
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我无法使用我的数字键盘输入2FA代码 – Terence Eden's Blog
- en: 来源：[https://shkspr.mobi/blog/2024/04/i-cant-use-my-number-pad-for-2fa-codes/](https://shkspr.mobi/blog/2024/04/i-cant-use-my-number-pad-for-2fa-codes/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://shkspr.mobi/blog/2024/04/i-cant-use-my-number-pad-for-2fa-codes/](https://shkspr.mobi/blog/2024/04/i-cant-use-my-number-pad-for-2fa-codes/)
- en: This has to be the most infuriating bug report I've ever submitted.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这肯定是我提交过的最令人恼火的错误报告。
- en: I went to type in my 2FA code on a website - but no numbers appeared on screen.
    Obviously, I was an idiot and had forgotten to press the NumLock button. D'oh!
    I toggled it on and typed again. No numbers appeared. I switched to another tab,
    my numbers appeared when I typed them. So I was reasonably confident that my keyboard
    was working.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我要在一个网站上输入我的2FA代码 - 但屏幕上没有显示任何数字。显然，我是个笨蛋，忘记按NumLock按钮了。哎呀！我切换了它并重新输入。仍然没有显示数字。我切换到另一个选项卡，当我输入它们时，我的数字出现了。因此，我相当确信我的键盘是正常工作的。
- en: I swapped back to the 2FA entry and tried again. Still nothing. Then I tried
    typing the numbers using the number row on my keyboard. My 2FA code appeared.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我切换回2FA输入并再次尝试。仍然没有任何反应。然后我尝试使用键盘顶部的数字行输入数字。我的2FA代码出现了。
- en: WHAT IN THE SAINTED NAME OF ALPHONSE CHAPANIS IS GOING ON?!?!?
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 究竟是什么鬼？！？
- en: Developers often use JavaScript to "improve" the standard features of HTML.
    For example, using `<input type="number">` has some [accessibility concerns](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/number#accessibility_concerns)
    and using [`inputmode="numeric"`](https://css-tricks.com/everything-you-ever-wanted-to-know-about-inputmode/#aa-numeric)
    is great for showing a number key board on mobile, but not much else.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者经常使用JavaScript来"改进"HTML的标准功能。例如，使用`<input type="number">`会有一些[可访问性问题](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/number#accessibility_concerns)，而使用[`inputmode="numeric"`](https://css-tricks.com/everything-you-ever-wanted-to-know-about-inputmode/#aa-numeric)在移动设备上显示数字键盘非常棒，但用途不大。
- en: So a developer wants a reliable way to make sure a user can *only* type numbers.
    Fair enough.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，开发者希望找到一种可靠的方法，确保用户*只能*输入数字。说得也对。
- en: There are two ways to do this - a right way and a wrong way - using [`KeyboardEvent`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent).
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种方法可以做到这一点 - 正确的方法和错误的方法 - 使用[`KeyboardEvent`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent)。
- en: One way is to [listen for the character being sent from the keyboard](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key)
    - known as the `key`.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一种方法是[监听从键盘发送的字符](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key)
    - 称为`key`。
- en: The other is to [listen for the *button* being pressed on the keyboard](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code)
    - known as the `code`.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种方法是[监听键盘上按下的*按钮*](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code)
    - 称为`code`。
- en: A good demo of this is at [keyjs.dev](https://keyjs.dev/) - play around with
    it to see what keyboard buttons your browser can detect.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这在[keyjs.dev](https://keyjs.dev/)上有一个很好的演示 - 尝试一下，看看你的浏览器能检测到哪些键盘按钮。
- en: When I press 7 on the top row of my keyboard, the key is 7 and the code is **`Digit7`**.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当我在键盘顶部行按下7键时，键是7，而代码是**`Digit7`**。
- en: But when I press 7 on my number pad, the key is 7 but the code is **`Numpad7`**.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 但是当我在我的数字键盘上按下7键时，键是7，但代码是**`Numpad7`**。
- en: The JavaScript on the website was rejecting any key code which wasn't a "Digit"!
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 网站上的JavaScript在拒绝不是“Digit”的任何键码！
- en: Perhaps I am a weirdo for insisting on both having and using my numpad? Perhaps
    developers need to test on something other than MacBooks? Perhaps JavaScript was
    a mistake and the Web would be better without it?
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 或许我是一个怪人，坚持同时拥有并使用我的数字键盘？也许开发者需要在除了MacBook之外的设备上进行测试？也许JavaScript是个错误，Web没有它会更好？
- en: Either way, don't be like that website. Let users type in using whatever keys
    they like.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，不要像那个网站一样。让用户使用他们喜欢的任何键输入。
