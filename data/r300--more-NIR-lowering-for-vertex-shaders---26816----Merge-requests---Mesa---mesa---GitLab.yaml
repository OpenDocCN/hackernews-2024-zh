- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 14:29:51'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:29:51
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'r300: more NIR lowering for vertex shaders (!26816) · Merge requests · Mesa
    / mesa · GitLab'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: r300：对顶点着色器进行更多 NIR 降级（!26816）· 合并请求 · Mesa / mesa · GitLab
- en: 来源：[https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/26816](https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/26816)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/26816](https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/26816)
- en: This MR moves the most of the remaining backend lowering into NIR. Specifically,
    ftrunc, fcsel (when suitable) and flrp. The backend lowering paths are removed.
    This is a prerequisite for more backend cleanups, for example I have a MR ready
    to get rid of backend DCE for vertex shaders.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 MR 将大部分剩余的后端降级移到了 NIR 中。具体来说，ftrunc、fcsel（适用时）和 flrp。已删除了后端降级路径。这是更多后端清理的先决条件，例如我已经准备好了一个
    MR 来消除顶点着色器的后端 DCE。
- en: To be honest I tried to get this right like five times already, initially even
    before nir_to_rc and I always failed to make it work reasonably. The reason why
    this is more tricky than the usual lowering is the required pass order. In fact
    all the opcodes that we are lowering comes either from integer lowering (ftrunc)
    or bool lowering. We can't do bool lowering in the main loop in finalize nir (most
    notably because peephole select expects bools for ifs) and while early integer
    lowering is OK in tests and seems to work, Emma voiced some opposition to it previously.
    Therefore all of this now happens when translating to the backend IR. For the
    same reason there are some custom algebraic passes doing the same lowering that
    we would normally used the common nir_opt_algebraic. In an ideal world we would
    do the lowering before late algebraic, so if we lower the fcsels all all the way
    to add+muls we can optimally generate ffmas, but I couln'd get this right so we
    just emit ffmas directly when lowering the flrps that come from the fcsels...
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 老实说，我已经尝试了五次才做到这一点，最初甚至在 nir_to_rc 之前，我总是失败了。之所以比通常的降级更棘手的原因是所需的传递顺序。事实上，我们降级的所有操作码都来自整数降级（ftrunc）或布尔降级。我们不能在
    finalize nir 中的主循环中进行布尔降级（特别是因为 peephole select 需要布尔值进行条件判断），虽然早期整数降级在测试中是可以的，并且似乎可以工作，但
    Emma 之前曾对此表示反对。因此，所有这些都是在转换到后端 IR 时发生的。出于同样的原因，有一些自定义代数传递执行相同的降级，我们通常会使用通用的 nir_opt_algebraic。在理想的情况下，我们应该在晚期代数之前进行降级，因此如果我们将
    fcsels 一直降级到 add+muls，我们可以最佳地生成 ffmas，但我无法做到这一点，所以当我们降低来自 fcsels 的 flrps 时，我们直接发出
    ffmas...
- en: Doing the fcsel lowering in NIR on R500 (we have a native CMP but the vertex
    engine has the limitation that it can't read from three different TMP registers)
    is also unfortunately much more complex than doing it in the backend, one needs
    to look through the fneg and fabs and also check whether constant and inputs will
    be copy propagated or not. In the end this is a lot of code, so in total this
    series is mostly even (NIR fcsel lwoering vs the TRUNC, LRP and CMP backend removal),
    but opens a way for more cleanups in a future.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在 R500 上对 NIR 进行 fcsel 降级（我们有一个本地的 CMP，但顶点引擎有一个限制，即它不能从三个不同的 TMP 寄存器中读取）也不幸比在后端中进行要复杂得多，需要查看
    fneg 和 fabs，还要检查常量和输入是否会被复制传播。最终这是大量的代码，因此总体上这个系列大部分是平衡的（NIR fcsel 降级 vs TRUNC、LRP
    和 CMP 后端删除），但为将来进行更多清理铺平了道路。
- en: Shader-db-wise this is a bit of a win for R500 (by doing the fcsel lowering
    in nir, we still have info if this is fcsel_lt/ge or fcsel and we can save the
    comparison for the later case if we have to lower it), and mostly even on R300
    see individual commits for detailed stats.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Shader-db-wise 这对于 R500 稍微有所胜利（通过在 NIR 中执行 fcsel 降级，我们仍然拥有信息，即这是 fcsel_lt/ge
    还是 fcsel，如果必须降级，则可以保存比较），在 R300 上也大多是平衡的，详细统计请参见单个提交。
