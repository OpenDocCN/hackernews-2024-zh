- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:55:54'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:55:54'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Procedure for the creation of vector databases Benchmark tests and their results
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向量数据库创建基准测试及其结果的过程
- en: 来源：[https://www.adesso.de/en/news/blog/procedure-for-the-creation-of-vector-databases-benchmark-tests-and-their-results.jsp](https://www.adesso.de/en/news/blog/procedure-for-the-creation-of-vector-databases-benchmark-tests-and-their-results.jsp)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.adesso.de/en/news/blog/procedure-for-the-creation-of-vector-databases-benchmark-tests-and-their-results.jsp](https://www.adesso.de/en/news/blog/procedure-for-the-creation-of-vector-databases-benchmark-tests-and-their-results.jsp)
- en: Vectors and Vector Databases
  id: totrans-split-6
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 向量和向量数据库
- en: A vector is a mathematical object that can be represented as an ordered collection
    of numbers, called components, that correspond to the extent of the vector along
    different coordinate axes. In two-dimensional space (a plane), a vector can be
    represented as (x,y), where x and y are the components along the horizontal and
    vertical axes, respectively. In three-dimensional space, a vector can be represented
    as (x,y,z), with components along the x, y and z axes. There are many ways to
    define a concept of similarity between a pair of vectors (Euclidean distance and
    cosine similarity are two examples). Euclidean distance generalises our natural
    concept of the distance between two points on a plane (#pythagoreantheorem), while
    cosine similarity captures the idea that two vectors are similar if they point
    in roughly the same direction.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 向量是一个数学对象，可以表示为有序的数字集合，称为分量，这些分量对应于向量沿不同坐标轴的延伸。在二维空间（平面）中，向量可以表示为 (x,y)，其中 x
    和 y 是沿水平和垂直轴的分量。在三维空间中，向量可以表示为 (x,y,z)，分别沿 x、y 和 z 轴的分量。有许多方法可以定义一对向量之间的相似度概念（欧几里得距离和余弦相似度是其中两个例子）。欧几里得距离推广了我们在平面上两点之间距离的自然概念（#pythagoreantheorem），而余弦相似度则捕捉了两个向量如果指向大致相同方向则它们相似的想法。
- en: 'At their core, vector databases are designed to store collections of metadata-enriched
    vectors of the same size, and to perform fast approximate similarity searches
    over such a collection. The question they can answer efficiently in a short time
    is:'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在其核心，向量数据库旨在存储相同大小的元数据丰富的向量集合，并在这样的集合上执行快速的近似相似度搜索。它们能在短时间内高效地回答以下问题：
- en: “Given an arbitrary vector X, what are the 5 approximately closest vectors to
    X in a stored collection?”.
  id: totrans-split-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “给定任意向量 X，存储集合中与 X 最接近的 5 个近似向量是什么？”。
- en: The power of vector databases is unlocked when the stored vectors are obtained
    as semantic embeddings of their associated metadata, and the similarity between
    two vectors captures the concept of semantic proximity of the metadata. If the
    metadata is natural language, this can be achieved using an embedding algorithm
    such as word2vec or a large language model such as Aleph Alpha's Luminous or the
    OpenAI GPT models.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当存储的向量作为其关联元数据的语义嵌入时，向量数据库的能力得到释放，并且两个向量之间的相似度捕捉了元数据的语义接近度概念。如果元数据是自然语言，则可以使用诸如word2vec这样的嵌入算法或大型语言模型，例如Aleph
    Alpha的Luminous或OpenAI GPT模型来实现这一点。
- en: From an application perspective, such a vectorised document store can serve
    as a knowledge store for the retrieval phase of a Retrieval Augmented Generation
    (RAG) architecture.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 从应用程序的角度来看，这样一个向量化的文档存储可以作为检索增强生成（RAG）架构中检索阶段的知识存储。
- en: 'You can also find more information in this blog post on the topic: "[A clever
    way to retrieve information: conversational agents as a tool to access knowledge
    held at the company](https://www.adesso.de/en/news/blog/a-clever-way-to-retrieve-information-conversational-agents-as-a-tool-to-access-knowledge-held-at-the-company-2.jsp)".'
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以在此博客文章中找到更多关于该主题的信息：“[智能检索信息的巧妙方法：对话代理作为访问公司知识的工具](https://www.adesso.de/en/news/blog/a-clever-way-to-retrieve-information-conversational-agents-as-a-tool-to-access-knowledge-held-at-the-company-2.jsp)”。
- en: Benchmarking Vector Databases
  id: totrans-split-13
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 向量数据库基准测试
- en: 'When you are building a data-intensive application (or any application for
    that matter), finding the sweet spot on a performance/cost scale for each component
    is critical. For a vector database, there are two important performance issues:'
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当您构建数据密集型应用程序（或任何应用程序）时，找到每个组件在性能/成本比例上的最佳位置至关重要。对于向量数据库而言，有两个重要的性能问题：
- en: 1\. How long does it take to insert a vector (including making it discoverable
    for similarity searches)?
  id: totrans-split-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1\. 插入一个向量需要多长时间（包括使其可发现以进行相似度搜索）？
- en: 2\. Given an input vector, how long does it take to find the N nearest vectors?
  id: totrans-split-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2\. 给定一个输入向量，查找前 N 个最近向量需要多长时间？
- en: It is important to note that the answers to the second question should always
    be seen in the light of the accuracy of the approximation. After all, the worse
    an approximation is allowed to be, the easier it is to derive it quickly. When
    optimising the accuracy of the similarity search, one often has to carefully adjust
    parameters that can strongly influence the time consumption of both the upload
    and the search, and whose choice is highly dependent on the structure of the underlying
    dataset. Therefore, in order to keep the parameter space for our benchmark test
    manageable, we focus on investigating the above issues without optimising for
    similarity search accuracy.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：第二个问题的答案应始终根据近似的准确性来看待。毕竟，允许近似程度越差，就越容易快速推导出它。在优化相似性搜索的准确性时，通常需要仔细调整可以强烈影响上传和搜索时间消耗的参数，并且这些选择高度依赖于底层数据集的结构。因此，为了保持我们基准测试中的参数空间可管理性，我们专注于研究上述问题，而不是优化相似性搜索的准确性。
- en: The Databases
  id: totrans-split-18
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 数据库
- en: In our experiment, we benchmarked three open source contenders in the vector
    database race - Chroma, Qdrant and Weaviate.
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的实验中，我们对向量数据库竞争中的三个开源竞争者 - Chroma、Qdrant和Weaviate进行了基准测试。
- en: Chroma
  id: totrans-split-20
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: Chroma
- en: Chroma is an AI-native, open source embedding database. The company has raised
    an impressive $18 million seed round, led by Astasia Myers of Quiet Capital, underlining
    investors' belief in its potential. Chroma advertises itself as coming with batteries,
    allowing developers to spin up database instances quickly and conveniently, making
    development easier.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: Chroma是一个AI原生的开源嵌入式数据库。该公司通过Quiet Capital的Astasia Myers领导的一轮1800万美元的种子轮融资，进一步突显了投资者对其潜力的信心。Chroma宣传自己携带电池，允许开发人员快速便捷地启动数据库实例，从而使开发工作更加轻松。
- en: Weaviate
  id: totrans-split-22
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: Weaviate
- en: Weaviate is an open source search engine and database, developed by Amsterdam-based
    SeMI Technologies since 2019\. Weaviate's stated mission is to democratise search
    capabilities, which have previously been monopolised by a few major tech companies.
    The company's software gives customers the option to run it on their infrastructure,
    allowing them to maintain control of their data behind their firewalls. The company
    also offers a managed cloud service, Weaviate Cloud, which provides additional
    flexibility for organisations that prefer a cloud-based approach to data management.
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: Weaviate是一个由总部位于阿姆斯特丹的SeMI Technologies自2019年以来开发的开源搜索引擎和数据库。Weaviate的宣布使命是民主化搜索功能，这些功能以前由少数几家主要技术公司垄断。该公司的软件允许客户在其基础架构上运行它，从而使他们能够在他们的防火墙后维护其数据。该公司还提供托管云服务Weaviate
    Cloud，为偏好基于云的数据管理方法的组织提供额外的灵活性。
- en: Qdrant
  id: totrans-split-24
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: Qdrant
- en: Qdrant is an open source vector database that started more than two years ago
    with a mission to build a vector database using Rust as the system programming
    language. In early 2023, Qdrant expanded its offering with the launch of Qdrant
    Cloud, a managed vector database solution serving more than 1,000 Qdrant clusters.
    Qdrant is now expanding its offering with managed on-premises solutions for enterprise
    customers, further solidifying its position as a versatile and accessible vector
    database solution.
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: Qdrant是一个开源向量数据库，两年多前开始使用Rust作为系统编程语言构建向量数据库的使命。2023年初，Qdrant通过推出Qdrant Cloud扩展了其产品线，这是一个管理的向量数据库解决方案，服务于超过1,000个Qdrant集群。Qdrant目前正在通过为企业客户提供托管的本地解决方案来扩展其产品线，进一步巩固其作为多功能和可访问的向量数据库解决方案的地位。
- en: The Experiment
  id: totrans-split-26
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 实验
- en: In our benchmark, we tested the performance of Chroma, Qdrant and Weaviate in
    terms of vector upload and retrieval performance using the GloVe 100 angular dataset.
    This dataset is a collection of 1.1 million 100-dimensional vectors obtained as
    a word representation by the GloVe algorithm.
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的基准测试中，我们使用GloVe 100角度数据集测试了Chroma、Qdrant和Weaviate在向量上传和检索性能方面的表现。这个数据集是GloVe算法产生的一个包含1.1百万个100维向量的词表示集合。
- en: You can find more information about glove100_angular [here](https://www.tensorflow.org/datasets/catalog/glove100_angular).
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[这里](https://www.tensorflow.org/datasets/catalog/glove100_angular)找到关于glove100_angular的更多信息。
- en: To test vector insertion performance, we loaded 1,183,514 100-dimensional vectors
    in batches of approximately 1000 vectors into each database on each of the test
    infrastructures. This tests the database's ability to ingest data quickly and
    efficiently, a key metric for use cases involving large amounts of data.
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试向量插入性能，我们以大约1000个向量的批次加载了1,183,514个100维向量到每个测试基础设施上的每个数据库中。这测试了数据库快速高效地摄取数据的能力，这对于涉及大量数据的应用案例而言是关键的度量标准。
- en: For vector retrieval, we performed 10,000 queries on the loaded data. This measures
    the search speed of the database, which is critical for applications that need
    to provide fast results to user queries.
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: 对于向量检索，我们对加载的数据执行了10,000次查询。这测量了数据库的搜索速度，对于需要快速响应用户查询的应用程序至关重要。
- en: 'The infrastructure for our tests included three sizes of Azure virtual machines
    (VMs) - small (S), medium (M) and large (L). Each virtual machine was tested with
    both a hard disk drive (HDD) and a solid state drive (SSD). The specifications
    for each VM size were:'
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的测试基础设施包括三种尺寸的 Azure 虚拟机（VM）- 小型（S）、中型（M）和大型（L）。每台虚拟机都分别使用了硬盘驱动器（HDD）和固态硬盘（SSD）进行了测试。每种
    VM 尺寸的规格如下：
