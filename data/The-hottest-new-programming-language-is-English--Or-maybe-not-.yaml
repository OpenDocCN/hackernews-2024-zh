- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:47:59'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:47:59'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: The hottest new programming language is English! Or maybe not.
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最热门的新编程语言是英语！或者可能并不是。
- en: 来源：[https://garymarcus.substack.com/p/the-hottest-new-programming-language](https://garymarcus.substack.com/p/the-hottest-new-programming-language)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://garymarcus.substack.com/p/the-hottest-new-programming-language](https://garymarcus.substack.com/p/the-hottest-new-programming-language)
- en: 'Surely one of the hottest, and maybe smartest tweets of 2023, came from the
    AI star Andrej Karpathy, who joined OpenAI a few weeks later, and then left again
    (for the second time) a few days ago:'
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 无疑，2023年最热门、可能也是最聪明的推文之一，来自AI明星安德烈·卡帕西，他几周后加入了OpenAI，然后几天前再次离开（第二次）：
- en: '*The New Yorker*  [quoted it](https://www.newyorker.com/magazine/2023/12/11/the-inside-story-of-microsofts-partnership-with-openai),
    and almost 4 million people viewed it. It’s not hard to see why. Programming in
    English, as opposed to languages like Python, C++, Fortran or Lisp, has long been
    a dream. The [most exciting article I ever read in](https://www.technologyreview.com/2007/01/01/227178/anything-you-can-do-i-can-do-meta/)
    *[Technology Review](https://www.technologyreview.com/2007/01/01/227178/anything-you-can-do-i-can-do-meta/),*
    was about pointed towards that prospect. At the time Charles Simonyi, an early
    Microsoft employee who lead the Microsoft Word project was building a startup
    company, founded in 2002, called Intentional Software, the goal of which was to
    let developers specify what they wanted as abstractly as possible, without having
    to write pesky computer code. The point was that “The customer wouldn’t feel straitjacketed
    by a programming language. Everyone would be happy.” As far I know, though, they
    didn’t entirely succeed; in 2017 [Simonyi sold the company back to Microsoft](https://www.zdnet.com/home-and-office/work-life/microsoft-buys-intentional-software-simonyi-to-rejoin-microsoft/),
    and returned there. The product was never widely released, to my knowledge.'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: '*《纽约客》* [引用了它](https://www.newyorker.com/magazine/2023/12/11/the-inside-story-of-microsofts-partnership-with-openai)，几乎有
    400 万人看过。为什么这么受欢迎不难理解。与像 Python、C++、Fortran 或 Lisp 这样的语言不同，长期以来编程使用英语一直是一个梦想。[我曾阅读过的最令人激动的文章](https://www.technologyreview.com/2007/01/01/227178/anything-you-can-do-i-can-do-meta/)，刊登在
    *[Technology Review](https://www.technologyreview.com/2007/01/01/227178/anything-you-can-do-i-can-do-meta/)*，指向了这个前景。在那时，查尔斯·西蒙尼，微软早期员工，负责
    Microsoft Word 项目，成立了一家初创公司，2002 年成立，名为 Intentional Software，其目标是让开发人员尽可能抽象地指定他们想要的内容，而不必编写麻烦的计算机代码。关键是“客户不会感到受到编程语言的限制。每个人都会很开心。”
    据我所知，尽管如此，他们并未完全成功；2017 年，[西蒙尼将公司卖给了微软](https://www.zdnet.com/home-and-office/work-life/microsoft-buys-intentional-software-simonyi-to-rejoin-microsoft/)，并回到了那里。据我所知，该产品从未广泛发布。'
- en: Programming in English itself (a step beyond what Simonyi was working on) would
    be grand. No weird punctuation to learn, no idiosyncrasies of specific programming
    languages, no bothering to memorize how a given language worked. You could think
    in your native language, without having to translate into the rigid structures
    of machines.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 编程本身使用英语（比西蒙尼正在研究的更进一步）将是伟大的。没有奇怪的标点符号需要学习，没有特定编程语言的怪癖，也不必记住某种语言的工作方式。你可以用你的母语思考，而不必将其翻译成机器的严格结构。
- en: With LLMs, we can finally glimpse what that future might feel like.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 有了LLM，我们终于可以一窥未来可能会是什么样子。
- en: But the truth is it doesn’t work that well yet. But that doesn’t mean people
    aren’t trying.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 但事实上它还没有运作得那么好。但这并不意味着人们没有在尝试。
- en: In fact, if the internet rumors are to be believed (and generally people seem
    to believe this particular one), GPT-4 is itself “programmed” partly in English,
    with an internal “[system prompt](https://patmcguinness.substack.com/p/gpt-4-system-prompt-revealed)”,
    hidden from the user, but ubiquitously in the background, as an unseen part of
    the conversation.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，如果互联网上的传闻是真的（并且一般人似乎相信这个特定的传闻），GPT-4 本身部分“编程”使用的是英语，具有一个隐藏的“[系统提示](https://patmcguinness.substack.com/p/gpt-4-system-prompt-revealed)”，但是普遍存在于背景中，作为对话中不可见的部分。
- en: Patrick McGuiness’s Substack
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: Patrick McGuiness 的 Substack
- en: 'recently explained a trick that’s been floating around on the internet, and
    way you can (allegedly) get the system to spit out its internal prompt, the first
    little bit of visible here:'
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 最近解释了一个在互联网上流传的技巧，以及你可以（据说）让系统吐出它的内部提示，这里第一段可见：
- en: That’s a *program*, in essence for ChatGPT to follow.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 实质上这是一个*程序*，供ChatGPT遵循。
- en: 'The whole thing, for those who are interested, is allegedly [here](https://x.com/dylan522p/status/1755086111397863777?s=61)
    in this hard-to-read screenshot:'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些感兴趣的人来说，整个事情据称 [在这里](https://x.com/dylan522p/status/1755086111397863777?s=61)，这是一张难以阅读的截图：
- en: §
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: §
- en: This morning on LinkedIn, Tim Estes pointed out to me something that is absolutely
    fascinating.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 今天早上在 LinkedIn 上，Tim Estes向我指出了一些非常迷人的事情。
- en: 'If the system really is being “programmed in English” *it is not always doing
    what is being asked to do*:'
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果系统真的是在“用英语编程”*它并不总是按照所要求的去执行*：
- en: Much of what Reid Southen, Katie Conrad, and I recently described is in flagrant
    violation of those directives.
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: Reid Southen、Katie Conrad和我最近描述的大部分内容，明显违反了这些指令。
- en: §
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: §
- en: 'As a coder who calls himself BioBootloader on X points out, we have entered
    a whole new era:'
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个自称为BioBootloader的程序员在X上指出的，我们已经进入了一个全新的时代：
- en: Paraphrasing slightly, writing your program in English “prompts” is fast upfront,
    but downstream may lead to serious challenges in debugging.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 略作改述，用英文“提示”编写程序前期快速，但下游可能导致严重的调试挑战。
- en: I have been coding since I was 8 years old (for money in college, but mostly
    just for fun). The thing about computers had, until now, always been that they
    do *exactly* what you tell them to do. If a program I wrote didn’t work, it was
    because I made a mistake. If I tracked down the mistake, and fixed it, I could
    be confident that the system would work properly. It was a kind of glorious social
    contract; I do my part, and the system does its part. My trust in the coding infrastructure
    was essentially absolute.
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我从8岁开始编程（在大学里为了赚钱，但大部分时间只是为了好玩）。关于计算机的事情，直到现在，总是它们*精确地*执行你要求的操作。如果我写的程序不起作用，那是因为我犯了错误。如果我找出了错误并加以修正，我可以相信系统将正常工作。这是一种辉煌的社会契约；我做我的部分，系统做它的部分。我对编码基础设施的信任基本上是绝对的。
- en: We have apparently just entered a new and different and frightening era, in
    which debugging involves not only fixing our own mistakes but coming to terms
    with machines that may or may not uphold their end of the bargain.
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，我们已经进入了一个新的、不同的、令人恐惧的时代，在这个时代，调试不仅涉及修复我们自己的错误，还需要与可能或不可能遵守协议的机器达成一致。
- en: Already, [there is an argument that the quality of code has declined](https://www.gitclear.com/coding_on_copilot_data_shows_ais_downward_pressure_on_code_quality),
    in the era in which large language models have been used as copilots.
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，已经有人争论代码质量已经下降，[在大语言模型被用作代码副驾驶的时代](https://www.gitclear.com/coding_on_copilot_data_shows_ais_downward_pressure_on_code_quality)。
- en: And of course the idea of “smart contracts”, another form of moshing together
    language and code, has never really taken off.
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，“智能合约”的概念，这是另一种混合语言和代码的形式，从未真正起飞。
- en: §
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: §
- en: Karpathy’s reinvention of Simonyi’s dream is sexy as hell. Who wouldn’t to program
    in English? And it’s easy see LLMs as the first real, though imperfect realization
    of Simony’s dream.
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: Karpathy对Simonyi的梦想的重新发明实在是太性感了。谁不想用英语编程呢？而且很容易看出LLM作为Simony的梦想的第一个真正、虽然不完美的实现。
- en: But classical, formal, deterministic programming languages exist for a reason.
    They allow programs to specify with precision what they want. As Phil Libin pointed
    out in a message to me this morning, discussing a draft of this essay, “The reason
    that software engineering is done in formal languages is not because formal languages
    make it harder to specify what you want than English. Obviously. It’s because
    formal languages make it much, much easier to specify what you want.”
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，经典的、形式化的、确定性的编程语言是有其存在的理由的。它们允许程序精确地规定它们想要什么。正如Phil Libin今天早上在给我的一封信中指出的那样，讨论这篇文章的草稿，“软件工程使用形式语言的原因不是因为形式语言比英语更难规定你想要的内容。显而易见。而是因为形式语言使得规定你想要的内容变得容易得多。”
- en: In the new regime, caveat emptor.
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在新的体制下，买方自负。
- en: '***Gary Marcus** generally loves progress, but worries about where we are headed.*'
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: '***Gary Marcus** 通常对进步充满喜爱，但对我们所走向的地方感到担忧。*'
