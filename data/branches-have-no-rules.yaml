- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 14:26:12'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:26:12
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: branches have no rules
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分支没有规则
- en: 来源：[https://wizardzines.com/comics/branches-have-no-rules/](https://wizardzines.com/comics/branches-have-no-rules/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://wizardzines.com/comics/branches-have-no-rules/](https://wizardzines.com/comics/branches-have-no-rules/)
- en: you might expect git to enforce some rules about branches
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你可能期望 git 强制执行一些关于分支的规则
- en: 'some rules you might imagine:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想象到的一些规则：
- en: you can’t remove commits from a branch, only add them
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你不能从一个分支中删除提交，只能添加它们。
- en: the `main` branch has to stay more less in sync with `origin/main`
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`main` 分支必须保持与 `origin/main` 大致同步'
- en: But there are no rules.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 但没有规则。
- en: 'git character with demon hat: want to do something horrible to your branch?
    no problem!'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: git 恶魔头戴帽子：想对你的分支做一些可怕的事情？没问题！
- en: there are literally no rules
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 真的没有规则。
- en: 'commands that you can use to do weird stuff to a branch:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一些你可以用来对分支做奇怪事情的命令：
- en: instead of rules, we have conventions
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我们没有规则，只有约定。
- en: 'for example:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: run `git pull` often to keep your `main` up to date
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 经常运行 `git pull` 来保持你的 `main` 更新。
- en: if you’re working with a big team, don’t commit to `main` directly
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你正在与一个大团队合作，不要直接提交到 `main`。
- en: Illustration of the git demon talking to a nonplussed stick figure with curly
    hair.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 一幅图示，展示了 git 恶魔与一位头发卷曲的困惑的人物交谈。
- en: 'git demon: you’ve just gotta be really careful to not do the wrong thing and
    not mess up your branch'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: git 恶魔：你只需非常小心，不要做错事，也不要弄乱你的分支
- en: 'person: um… thanks?'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 人物：嗯... 谢谢？
- en: 'our only saviour: the reflog'
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我们唯一的救星：reflog（引用日志）。
- en: '`git reflog BRANCHNAME`'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`git reflog BRANCHNAME`'
- en: will show you the history of every change to the branch, so you can always undo
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 将向你展示分支的每一次更改的历史，所以你可以随时撤消。
- en: the reflog is a VERY unfriendly UI, but it’s always there.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: reflog 是一个非常不友好的用户界面，但它总是存在的。
