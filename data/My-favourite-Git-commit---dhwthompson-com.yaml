- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:30:27'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:30:27'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: My favourite Git commit | dhwthompson.com
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我最喜欢的Git提交 | dhwthompson.com
- en: 来源：[https://dhwthompson.com/2019/my-favourite-git-commit](https://dhwthompson.com/2019/my-favourite-git-commit)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://dhwthompson.com/2019/my-favourite-git-commit](https://dhwthompson.com/2019/my-favourite-git-commit)
- en: I like Git commit messages. Used well, I think they’re one of the most powerful
    tools available to document a codebase over its lifetime. I’d like to illustrate
    that by showing you my favourite ever Git commit.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢Git提交信息。如果使用得当，我认为它们是记录代码库整个生命周期中最强大的工具之一。我想通过展示我最喜欢的Git提交来说明这一点。
- en: This commit is from my time at the Government Digital Service, working on GOV.UK.
    It’s from a developer by the name of [Dan Carley](https://twitter.com/dancarley),
    and it has the rather unassuming name of “[Convert template to US-ASCII to fix
    error](https://github.com/alphagov/govuk-puppet/commit/63b36f93bf75a848e2125008aa1e880c5861cf46)”.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这个提交来自我在政府数字服务工作的时间，当时我在GOV.UK上工作。它来自一个名叫[丹·卡利（Dan Carley）](https://twitter.com/dancarley)的开发者，名为“[将模板转换为US-ASCII以修复错误](https://github.com/alphagov/govuk-puppet/commit/63b36f93bf75a848e2125008aa1e880c5861cf46)”。
- en: '![](img/d75485dc720a1398bd509932bbf1a419.png)'
  id: totrans-split-8
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d75485dc720a1398bd509932bbf1a419.png)'
- en: 'A quick aside: one of [the benefits of coding in the open](https://gds.blog.gov.uk/2017/09/04/the-benefits-of-coding-in-the-open/),
    as practised at GDS, is that it’s possible to share examples like this outside
    the organisation that produced them. I’m not sure who first introduced that idea
    to GDS – it was well-established by the time I joined – but I’m forever grateful
    to them.'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 一个快速的旁注：[在公开编码的好处](https://gds.blog.gov.uk/2017/09/04/the-benefits-of-coding-in-the-open/)之一，正如GDS所实践的，是可以分享像这样的例子到组织外部。我不确定是谁最早向GDS引入了这个想法
    - 我加入时它已经得到很好的实践 - 但我永远感激他们。
- en: Why I like this commit
  id: totrans-split-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我为什么喜欢这个提交
- en: I’ve lost count of the number of times I’ve shared this as an example of what
    commit messages can do. It’s fun because of the ratio of commit message to code
    change, but that’s not why I think it’s worth sharing.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经失去了分享这种提交信息可以做到的次数。它很有趣，因为提交信息与代码变更的比例，但这并不是我认为值得分享的原因。
- en: In a different organisation, from a different developer, this entire commit
    message might have been `change whitespace`, or `fix bug`, or (depending on the
    team’s culture) some less than flattering opinions about the inventor of the non-breaking
    space. Instead, Dan took the time to craft a really useful commit message for
    the benefit of those around him. I’d like to step through a few of the ways I
    think this is a really good example.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在另一个组织中，来自不同开发者的整个提交信息可能是`change whitespace`，或者`fix bug`，或者（根据团队文化）对非断行空格发明者的一些不那么令人满意的观点。但是，丹花时间为他周围的人精心制作了一个非常有用的提交信息。我想逐步介绍一些我认为这是一个很好的例子的方法。
- en: It explains the reason for the change
  id: totrans-split-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 它解释了变更的原因
- en: 'The best commit messages I’ve seen don’t just explain **what** they’ve changed:
    they explain **why**. In this instance:'
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我看过的最好的提交信息不仅仅解释了**改变了什么**：它们还解释了**为什么**。在这个例子中：
- en: '[PRE0]'
  id: totrans-split-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Without this level of detail, we could hazard a guess that this commit fixed
    some kind of parsing error in some tool or other. Thanks to the commit message,
    we know exactly which tool it was.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 没有这么详细的信息，我们可能会猜测这个提交修复了某个工具中的某种解析错误。由于提交信息，我们确切知道是哪个工具。
- en: This kind of information can be really valuable to document, and is all too
    easy to lose as people forget the original context behind their work, move on
    to other teams, and eventually leave the organisation.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这种信息可能对文档非常有价值，但很容易因为人们忘记他们工作背后的原始上下文，转移到其他团队，最终离开组织而丢失。
- en: It’s searchable
  id: totrans-split-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 它是可搜索的
- en: 'One of the first things in this commit message is the error message that inspired
    the change:'
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这个提交信息中的第一件事情之一是激发了变化的错误信息：
- en: '[PRE1]'
  id: totrans-split-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Anyone else who comes across this error can search through the codebase, either
    by running `git log --grep "invalid byte sequence"` or by [using GitHub’s commit
    search](https://github.com/alphagov/govuk-puppet/search?q=%22invalid+byte+sequence%22&type=Commits).
    In fact, from the looks of the search results, multiple people did so, and found
    out who had found this problem before, when they came across it, and what they
    did about it.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 其他遇到这个错误的人可以通过运行`git log --grep "invalid byte sequence"`或者通过[使用GitHub的提交搜索](https://github.com/alphagov/govuk-puppet/search?q=%22invalid+byte+sequence%22&type=Commits)来搜索代码库。实际上，从搜索结果来看，有多人这样做，并且找到了在遇到问题时，谁先发现了这个问题，他们当时做了什么。
- en: It tells a story
  id: totrans-split-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 它讲述了一个故事
- en: 'This commit message goes into a lot of detail about what the problem looked
    like, what the process of investigating it looked like, and what the process of
    fixing it looked like. For example:'
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这个提交消息详细描述了问题的状况，调查过程的样子，以及解决过程的样子。例如：
- en: '[PRE2]'
  id: totrans-split-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This is one of the areas commit messages can really shine, because they’re documenting
    the change itself, rather than documenting a particular file, or function, or
    line of code. This makes them a great place to document this kind of extra information
    about the journey the codebase has taken.
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这是提交消息可以真正发挥作用的一个领域，因为它们记录了变更本身，而不是特定文件、函数或代码行。这使得它们成为记录代码库旅程中这种额外信息的绝佳地点。
- en: It makes everyone a little smarter
  id: totrans-split-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 这使得每个人都变得更聪明
- en: 'One thing Dan did here that I really appreciate was to document the commands
    he ran at each stage. This can be a great lightweight way to spread knowledge
    around a team. By reading this commit message, someone can learn quite a few useful
    tips about the Unix toolset:'
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: Dan 在这里做的一件我非常欣赏的事情是记录他在每个阶段运行的命令。这可以成为团队中传播知识的一个很好的轻量级方式。通过阅读这个提交消息，有人可以学到关于
    Unix 工具集的一些非常有用的技巧：
- en: they can pass an `-exec` argument into `find` to run a command against each
    file found
  id: totrans-split-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 他们可以传递 `-exec` 参数给 `find`，对找到的每个文件运行一个命令
- en: that adding a `\+` onto the end of this command does something interesting (it
    passes many filenames into a single `file` command, rather than running the command
    once per file)
  id: totrans-split-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在这个命令的末尾添加 `\+` 做了一些有趣的事情（它将许多文件名传递给单个 `file` 命令，而不是对每个文件运行一次命令）
- en: '`file --mime` can tell them the MIME type of a file'
  id: totrans-split-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`file --mime` 可以告诉它们文件的 MIME 类型'
- en: '`iconv` exists'
  id: totrans-split-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iconv` 存在'
- en: The person who reviews this change can learn these things. Anyone who finds
    this commit later can learn these things. Over enough time and enough commits,
    this can become a really powerful multiplier for a team.
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: 审查此更改的人可以学到这些东西。任何稍后找到此提交的人都可以学到这些东西。随着时间和提交量的增加，这可以成为团队的一个非常强大的乘数。
- en: It builds compassion and trust
  id: totrans-split-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 它建立了同情心和信任
- en: '[PRE3]'
  id: totrans-split-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This last paragraph adds an extra bit of human context. Reading these words,
    it’s hard not to feel just a little bit of Dan’s frustration at having to spend
    an hour tracking down a sneaky bug, and satisfaction at fixing it.
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一段增加了额外的人文背景。阅读这些文字，很难不感受到 Dan 在追踪一个顽固 bug 上花了一个小时的一点挫折感，以及修复它时的满足感。
- en: Now imagine a similar message attached to a short-term hack, or a piece of prototype
    code that made its way into production and set down roots (as pieces of prototype
    code love to do). A commit message like this makes it much easier to remember
    that every change has a human on the other end of it, making the best decision
    they could given the information they had at the time.
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在想象一条类似的消息附加在一段短期 hack 上，或者一段原型代码进入生产并扎根下来（正如原型代码喜欢做的那样）。像这样的提交消息使得记住每次变更背后都有一个人，这个人在给出当时拥有的信息的情况下做出了最佳决策，变得更加容易。
- en: Good commits matter
  id: totrans-split-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 良好的提交消息很重要
- en: I’ll admit this is an extreme example, and I wouldn’t expect all commits (especially
    ones of this size) to have this level of detail. Still, I think it’s an excellent
    example of explaining the context behind a change, of helping others to learn,
    and of contributing to the team’s collective mental model of the codebase.
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我承认这是一个极端的例子，我不会期望所有提交（特别是这种规模的提交）具有这种详细程度。不过，我认为这是一个解释变更背景、帮助他人学习并为团队的代码库建立集体心智模型的优秀例子。
- en: 'If you’re interested in learning a bit more about the benefits of good commit
    messages, and some of the tools that make it easier to structure your changes
    around them, I can recommend:'
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有兴趣了解更多关于良好提交消息的好处，以及一些可以帮助你围绕它们的更改结构化的工具，我可以推荐：
