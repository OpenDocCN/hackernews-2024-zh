- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-29 12:40:33'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-29 12:40:33'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Mutt on Windows without WSL — Dan's Musings
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Windows上使用MSYS2而无需WSL — 丹的思考
- en: 来源：[https://blog.djhaskin.com/blog/mutt-on-windows-without-wsl/](https://blog.djhaskin.com/blog/mutt-on-windows-without-wsl/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://blog.djhaskin.com/blog/mutt-on-windows-without-wsl/](https://blog.djhaskin.com/blog/mutt-on-windows-without-wsl/)
- en: Introduction
  id: totrans-split-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍
- en: I have this weird hobby of trying to get good unix tools to run natively on
    Windows. I find this is the most efficient use of my laptop's resources, and therefore
    the nicest experience. WSL is nice, but it takes up a lot of RAM on my system.
    I prefer to use [MSYS2](https://www.msys2.org/docs/what-is-msys2/). Getting unix
    tools to work correctly under MSYS2 is a challenge, as we'll see, and for me,
    that's part of the fun.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我有一个奇怪的爱好，就是试图让好的Unix工具在Windows上本地运行。我发现这是我笔记本电脑资源使用效率最高的方式，因此是最愉快的体验。WSL很好用，但它在我的系统上占用了大量内存。我更喜欢使用[MSYS2](https://www.msys2.org/docs/what-is-msys2/)。在MSYS2下正确地使用Unix工具是一个挑战，正如我们将看到的，对我来说，这也是一部分乐趣。
- en: Prerequisites
  id: totrans-split-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 先决条件
- en: These prerequisites are not just to use mutt, but to use msys2 successfully
    in any capacity for development or other work. These are the steps I follow to
    maximize my chances of success with msys2.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这些先决条件不仅适用于使用mutt，而且适用于在任何开发或其他工作中成功使用msys2。这些是我遵循的步骤，以最大化在msys2上成功的机会。
- en: Msys2 needs to be installed. I like to use [scoop](https://scoop.sh/) to install
    it (and everything else on Windows, preferably). Just be sure to run `scoop hold
    msys2`. You do NOT want scoop reinstalling msys2 every half second for "updates"
    when you can just run `pacman -Syu` inside msys2 to get all the needed updates
    from there.
  id: totrans-split-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Msys2需要安装。我喜欢使用[scoop](https://scoop.sh/)安装它（以及Windows上的其他所有东西，最好）。只需确保运行`scoop
    hold msys2`。当你可以只需在msys2内运行`pacman -Syu`获取所有所需的更新时，你不希望scoop每隔半秒钟就重新安装msys2以进行“更新”。
- en: There should be no spaces in your USERPROFILE path. I know this is hard, but
    it's worth it. I usually do this by creating a local user named `nospaces` or
    something, logging in to that user, and only THEN logging into my Microsoft Windows
    account after my `C:\Users\<me>` folder has been created, etc.
  id: totrans-split-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在你的USERPROFILE路径中不应该有空格。我知道这很难，但这很值得。我通常通过创建一个名为`nospaces`或类似的本地用户来实现这一点，在那个用户中登录，然后在我的`C:\Users\<me>`文件夹创建后，再登录我的Microsoft
    Windows账户。
- en: 'Your MSYS2 installation should have this as its `/etc/fstab`, as the One True
    Way of ensuring your MSYS2 home directory is also your `USERPROFILE` directory:'
  id: totrans-split-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的MSYS2安装应该将此作为其`/etc/fstab`，这是确保你的MSYS2主目录也是你的`USERPROFILE`目录的唯一正确方法：
- en: '[PRE0]'
  id: totrans-split-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If you used scoop to install msys2, you can put the above file under `C:\Users\<you>\scoop\apps\msys2\current\etc\fstab`
    and it should work.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用scoop安装msys2，你可以将上述文件放在`C:\Users\<you>\scoop\apps\msys2\current\etc\fstab`下，应该就能工作。
- en: Instructions
  id: totrans-split-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 说明
- en: 'From a mingw64 MSYS2 prompt, type the following to install gpg, mux and msmtp:'
  id: totrans-split-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从mingw64 MSYS2提示符中，输入以下内容以安装gpg、mux和msmtp：
- en: '[PRE1]'
  id: totrans-split-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We configure mutt as per usual, but I found that mutt can''t send emails for
    some reason. So configure it to use [msmtp](https://marlam.de/msmtp/) for that
    part, and then everything works. Here is my gmail config (found under `~/.mutt/home.account`):'
  id: totrans-split-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们按照通常的方法配置mutt，但我发现mutt由于某种原因无法发送电子邮件。因此，我配置它使用[msmtp](https://marlam.de/msmtp/)处理此部分，然后一切正常。这是我的gmail配置（位于`~/.mutt/home.account`下）：
- en: '[PRE2]'
  id: totrans-split-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In this file, I use a shell script called [multipass](https://git.sr.ht/~skin/dotfiles/tree/main/item/dot-local/bin/multipass)
    that looks up passwords from [KeePassXC](https://keepassxc.org/) using [git-credential-keepassxc](https://github.com/Frederick888/git-credential-keepassxc).
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个文件中，我使用一个名为[multipass](https://git.sr.ht/~skin/dotfiles/tree/main/item/dot-local/bin/multipass)的shell脚本，它通过[git-credential-keepassxc](https://github.com/Frederick888/git-credential-keepassxc)从[KeePassXC](https://keepassxc.org/)中查找密码。
- en: We also see that I use `msmtp` configured to send using the home account.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还看到我使用`msmtp`配置为使用home账户发送邮件。
- en: 'Here is my `msmtp` config:'
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我的`msmtp`配置：
- en: '[PRE3]'
  id: totrans-split-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `msmtp` program has to use a [*different* multipass](https://git.sr.ht/~skin/dotfiles/tree/main/item/Windows/Executables/multipass.bat)
    because it is "Windows aware" and NOT "msys2 aware", having not been compiled
    with [the "msys2" subsystem](https://www.msys2.org/wiki/MSYS2-introduction/),
    but rather with the "mingw64" subsystem. While we're on that subject, that file
    (above) must be written to `~/msmtprc.txt` on Windows, another gotcha I had. It's
    this back-and-forth windows-not-windows fence upon which msys2 teeters that makes
    it so important to have the msys2 home directory the same as the "windows" home
    directory. I find it makes things less confusing at times.
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 由于“msys2”子系统而不是“mingw64”子系统编译，所以`msmtp`程序必须使用[*不同的多通道（multipass）*](https://git.sr.ht/~skin/dotfiles/tree/main/item/Windows/Executables/multipass.bat)，因为它是“Windows感知”的而不是“msys2感知”的。顺便说一句，上述文件必须写入`~/msmtprc.txt`，这是我遇到的另一个注意点。正是在这种来回窗口-非窗口的边界上，msys2才显得如此重要，因为它的主目录必须与“Windows”主目录相同。我发现这样有时候会让事情不那么混乱。
- en: 'Finally, here is my `~/.muttrc`:'
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，这是我的`~/.muttrc`：
- en: '[PRE4]'
  id: totrans-split-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Anyway, then I''m able to fire up and use mutt in the msys2 mingw64 terminal:'
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，我能够在msys2 mingw64终端上启动并使用mutt：
- en: '[PRE5]'
  id: totrans-split-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
