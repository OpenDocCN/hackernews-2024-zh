- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: category：未分类
- en: 'date: 2024-05-27 14:54:33'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: date：2024-05-27 14:54:33
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Ledger: Stripe’s system for tracking and validating money movement'
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ledger：Stripe 跟踪和验证资金流动的系统
- en: 来源：[https://stripe.com/blog/ledger-stripe-system-for-tracking-and-validating-money-movement](https://stripe.com/blog/ledger-stripe-system-for-tracking-and-validating-money-movement)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://stripe.com/blog/ledger-stripe-system-for-tracking-and-validating-money-movement](https://stripe.com/blog/ledger-stripe-system-for-tracking-and-validating-money-movement)
- en: Last Black Friday to Cyber Monday, Stripe processed 300 million transactions
    with a total payment volume of $18.6B—and the Stripe API maintained greater than
    99.999% availability. Underlying these metrics is our Global Payments and Treasury
    Network (GPTN) that manages the complexity of accepting payments, money storage,
    and money movement. Today, Stripe supports more than 135 currencies and payment
    methods through partnerships with local banks and financial networks in 185 countries.
    These entities provide different interfaces, data models, and behaviors, and Stripe
    continually manages this complexity so developers can quickly integrate the GPTN
    into their businesses.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 上一次黑色星期五到网络星期一，Stripe 处理了 3 亿笔交易，总支付金额达到 186 亿美元—而 Stripe API 保持了超过 99.999%
    的可用性。这些指标的基础是我们的全球支付和财务网络（GPTN），管理着接受支付、资金存储和资金流动的复杂性。今天，Stripe 通过与 185 个国家的地方银行和金融网络的合作，支持超过
    135 种货币和支付方式。这些实体提供不同的接口、数据模型和行为，而 Stripe 则不断管理这种复杂性，使开发人员能够快速将 GPTN 集成到他们的业务中。
- en: Internally, Stripe needs to guarantee that what we expect to happen during payment
    processing actually happens for internal customers and external auditors of our
    data. We built Ledger, an immutable and auditable log, as a trustworthy system
    of record for all of our financial data. Ledger standardizes our representation
    of money movement, and it serves as the scalable foundation for our automated
    Data Quality (DQ) Platform—guaranteeing Stripe faithfully manages money for users.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在内部，Stripe 需要保证支付处理过程中我们期望发生的事情确实发生，以满足我们内部客户和外部数据审核员的需求。我们构建了 Ledger，一个不可变且可审计的日志，作为我们所有财务数据的可信记录系统。Ledger
    标准化我们对资金流动的表达，并作为我们自动化数据质量（DQ）平台的可扩展基础—确保 Stripe 忠实地为用户管理资金。
- en: Many existing systems provide primitives for accurate accounting, but the real
    world is imperfect, incomplete, and constantly changing. We witness basic and
    obvious failures like malformed reports or propagated errors from banking or network
    partners, and also broad macroeconomic changes such as currencies ceasing to exist
    or large banks collapsing overnight. While we aspire to an orderly ideal, at Stripe
    scale, that’s impossible—instead we built a system that keeps these imperfections
    manageable and bounded.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 许多现有系统提供了准确会计的基本原语，但现实世界是不完美的、不完整的，且在不断变化。我们目睹了像是报告格式不正确或从银行或网络合作伙伴传播的错误等基本和显而易见的失败，以及广泛的宏观经济变化，如货币停止存在或大银行在一夜之间倒闭。在
    Stripe 的规模下，虽然我们希望有条不紊的理想，但这是不可能的—因此，我们建立了一个能够使这些缺陷可管理和有界的系统。
- en: Ledger models internal data-producing systems with common patterns, and it relies
    on proactive alerting to surface issues and proposed solutions. Each day, Ledger
    sees five billion events and 99.99% of our dollar volume is fully ingested and
    verified within four days. Of that activity, 99.999% is monitored, categorized,
    and triaged through rich investigative tooling—while the remaining long-tail is
    reliably handled through manual analysis. Together, Ledger and the DQ Platform
    ensure over 99.9999% explainability of money movement, even as Stripe’s data volume
    has grown 10x.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: Ledger 模型内部数据生成系统，采用常见模式，并依靠积极的警报来提出问题和建议解决方案。每天，Ledger 处理五十亿事件，我们的美元交易量的 99.99%
    在四天内完全接收和验证。在这些活动中，99.999% 通过丰富的调查工具进行监控、分类和分析—剩余的长尾则通过手动分析可靠处理。Ledger 与 DQ 平台共同确保超过
    99.9999% 的资金流动可解释性，即使 Stripe 的数据量增长了 10 倍。
- en: In this blog post, we’ll share technical details on how we built this state-of-the-art
    money movement tracking system, and describe how teams at Stripe interact with
    the data quality metrics that underlie our global payments network.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇博文中，我们将分享关于如何构建这一最先进的资金流动追踪系统的技术细节，并描述 Stripe 团队如何与支撑我们全球支付网络的数据质量指标进行交互。
- en: How Stripe processes payments
  id: totrans-split-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Stripe 如何处理支付
- en: The GPTN in part is a payment processing network consisting of customer business
    calls to Stripe’s API and Stripe’s interactions with a variety of banks and payment
    methods. There is complexity in tracking the requests Stripe makes to partners,
    the physical money movement between financial partners, and the reporting Stripe
    receives back. We make this multifaceted problem tractable by segmenting the Stripe
    platform into discrete services, databases, and APIs/gRPC interfaces, which lets
    us solve individual problems without getting overwhelmed by the broader system.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: GPTN部分是一个支付处理网络，由客户业务调用Stripe的API以及Stripe与各种银行和支付方法的交互组成。跟踪Stripe向合作伙伴发出的请求、金融合作伙伴之间的实际资金移动以及Stripe收到的报告存在复杂性。我们通过将Stripe平台划分为离散服务、数据库和API/gRPC接口来使这个多方面的问题变得可解决，这样我们可以解决个别问题，而不会被更广泛的系统所淹没。
- en: The challenge with this approach is that there is no intrinsic mechanism forcing
    these systems to represent or deliver data in the same way. Some might operate
    in real time, while others may operate on a monthly cadence with vastly different
    data volumes; some producers generate billions of events per day, while others
    may only generate a few hundred. Moreover, each system might have its own definitions
    of correctness or reliability. We require a mechanism that can deal with these
    variations and prove that these individual systems are collectively modeling our
    financials correctly.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法的挑战在于，没有内在机制强制这些系统以相同的方式表示或传递数据。有些可能实时操作，而其他可能以月度频率运行，数据量迥异；一些生产者每天生成数十亿个事件，而其他可能只生成几百个。此外，每个系统可能都有自己的正确性或可靠性定义。我们需要一种能够处理这些变化并证明这些个别系统共同正确建模我们财务状况的机制。
- en: A simplified summary view of Stripe’s interactions with external entities
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: Stripe与外部实体互动的简化摘要视图
- en: How we designed Ledger
  id: totrans-split-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们如何设计账本
- en: The Stripe services mentioned above have independent responsibilities, but they
    collaborate to solve a large federated problem. An ideal solution provides a mental
    model for correctness—supported by trustworthy statistics—that easily generalizes
    to new use cases. Further, we want to represent all activity on the Stripe platform
    in a common data structure that can be analyzed by a single system.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 上述的Stripe服务具有独立的责任，但它们合作解决一个大型的联邦问题。一个理想的解决方案提供了一个正确性的心理模型——由可信的统计数据支持——可以轻松推广到新的用例。此外，我们希望将Stripe平台上的所有活动表示为一个通用的数据结构，可以被单一系统分析。
- en: 'This is the way we approach it:'
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们处理它的方式：
- en: Ledger encodes a state machine representation of producer systems, and models
    its behavior as a logical fund flow—the movement of balances (events) between
    accounts (states).
  id: totrans-split-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 账本将生产系统的状态机表示编码，并将其行为建模为逻辑基金流——账户（状态）之间的余额（事件）移动。
- en: Ledger computes all account balances to evaluate the health of the system, grouped
    by various subdivisions to generate comprehensive statistics.
  id: totrans-split-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 账本计算所有账户余额，以评估系统的健康状况，根据各种细分生成全面的统计数据。
- en: This approach abstracts individual differences between underlying systems and
    provides mathematical evidence that they are functioning correctly.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法抽象了底层系统之间的个别差异，并提供了它们正常运行的数学证据。
- en: Ledger as a semantic data store
  id: totrans-split-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 账本作为语义数据存储
- en: Ledger is a faithful representation of the underlying state of all payment processes
    on the Stripe platform. Instead of computing a derived dataset based on incoming
    data pipelines, Ledger models the actual work of producer systems, recording each
    operation as a transaction. Ledger modeling may diverge from upstream data, but
    we guard against these cases explicitly with data completeness checks.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 账本是Stripe平台所有支付流程底层状态的忠实表示。账本不是基于传入数据管道计算派生数据集，而是模拟生产系统的实际工作，将每个操作记录为交易。账本建模可能会偏离上游数据，但我们通过数据完整性检查明确防范这些情况。
- en: Combined with our other data quality metrics, we can safely rely on Ledger’s
    data representation to monitor external systems. If we instrument Ledger, we indirectly
    instrument the data-producing pipelines. And, if we identify a problem, we alert
    our internal users to which part of their data pipeline is broken—and exactly
    how they can fix it.
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 结合我们的其他数据质量指标，我们可以安全地依赖账本的数据表示来监视外部系统。如果我们仪表化账本，我们间接仪表化数据生产流水线。如果我们发现问题，我们会向我们的内部用户报警，指出他们数据管道的哪个部分出了问题——以及他们如何修复它。
- en: Processing a charge with a creation event for a pending charge, and a release
    event for completion
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 处理   处理待付费用的创建事件和完成事件的收费。
- en: Inside of Ledger, we represent this activity as a movement of balances between
    two discrete states (creation and release), turning the above process into an
    observable state machine.
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在账本内部，我们将这一活动表示为在两个离散状态（创建和完成）之间的余额移动，将上述过程转化为一个可观察的状态机。
- en: Processing a charge in Ledger, represented by a creation event for a pending
    charge and a release event for completion
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在账本中处理费用，表示为待付费用的创建事件和完成事件。
- en: System abstraction
  id: totrans-split-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 系统抽象。
- en: Ledger also abstracts producer systems. Instead of separately monitoring handoffs
    between data pipelines, we model systems as connected fund flows moving money
    between accounts. Because Ledger is a transaction-level system of record, we can
    prove that even complex multisystem pipelines with multiple stages of handoff
    are working correctly. We also model data consistency between otherwise disconnected
    systems, and we track individual transactions through their entire lifecycle.
    We call this tracing, and, at our scale, this totals to billions of daily transactions.
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: 账本还抽象了生产系统。我们不再单独监控数据管道之间的交接，而是将系统建模为连接账户之间的资金流动。由于账本是一个事务级的记录系统，我们可以证明即使是复杂的多系统管道，包含多个交接阶段，也能正确运行。我们还对断开连接的系统之间的数据一致性进行建模，并跟踪每笔交易的整个生命周期。我们称之为追踪，在我们的规模下，这总共达到每天数十亿笔交易。
- en: Unifying separate systems with fund flows
  id: totrans-split-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过资金流动统一不同的系统。
- en: 'Consider an abstract end-to-end fund flow: for example, a business adding funds
    to its balance. This requires moving funds between banks, reconciling money movement
    with third-party reporting, and matching regulatory reporting with financial reporting.
    The fund flow spans multiple internal team boundaries, with discrete events published
    to different systems at different times. If we model this fund flow with logical
    constructs, Ledger can unify this data across separate systems and monitor its
    correctness.'
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑一个抽象的端到端资金流：例如，一个企业向其余额中增加资金。这需要在银行之间转移资金，将资金流动与第三方报告进行对账，并将监管报告与财务报告匹配。资金流跨越多个内部团队边界，分离事件在不同的系统上以不同的时间发布。如果我们用逻辑构造建模这个资金流，账本可以统一这些系统中的数据，并监控其正确性。
- en: Immutability
  id: totrans-split-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 不可变性。
- en: At its core, Ledger is an immutable log of events. Transactions previously published
    into Ledger cannot be deleted or modified, and we can always reconstruct past
    state by processing all events up to that point. All constructs—balances, fund
    flows, data quality controls, and so on—are transformations of the static underlying
    structure. Ledger’s immutability ensures we can audit and reproduce any data point
    at any time. Immutability justifies our data quality measures by guaranteeing
    that we can explain and analyze the exact problematic data.
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: 账本的核心是一个不可变的事件日志。先前发布到账本的交易不能被删除或修改，我们始终可以通过处理所有事件到那一时刻的过程重构过去的状态。所有构造——余额、资金流、数据质量控制等——都是静态基础结构的转换。账本的不可变性确保我们可以随时审计和重现任何数据点。不变性通过保证我们能够解释和分析确切的有问题数据，来证明我们的数据质量措施。
- en: How we designed the Data Quality (DQ) Platform
  id: totrans-split-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们如何设计数据质量（DQ）平台。
- en: 'Ledger is the foundation for our Data Quality (DQ) Platform, which unifies
    detection of money movement issues and response tooling. Empirically, the DQ Platform
    ensures reliable and timely reporting across Stripe’s key lines of business: we
    maintained a 99.999% readiness target, even as data volume grew 10x.'
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
  zh: 账本是我们数据质量（DQ）平台的基础，统一了资金流动问题的检测和响应工具。经验表明，DQ平台确保了Stripe关键业务线的可靠及时报告：即使数据量增长了10倍，我们也保持了99.999%的可用性目标。
- en: 'Transaction-level fund flows give us powerful tools to reason about complex
    interconnected subcomponents. We analyze these abstractions with a set of trustworthy
    DQ metrics that measure the health of a fund flow. These metrics are based on
    a common set of questions across all fund flows. For a specific cross-section
    of data, evaluated at time X, we look at:'
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
  zh: 事务级的资金流为我们提供了强大的工具来推理复杂的互联子组件。我们使用一组可信的数据质量指标来分析这些抽象，这些指标衡量资金流的健康状况。这些指标基于所有资金流的共同问题集合。对于特定的数据横截面，在时间X进行评估，我们关注：
- en: '**Clearing:** Did the fund flow complete correctly?'
  id: totrans-split-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**清算：** 资金流是否正确完成？'
- en: '**Timeliness:** Did the data arrive on time?'
  id: totrans-split-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**时效性：** 数据是否按时到达？'
- en: '**Completeness:** Do we have a complete representation of the underlying data
    system?'
  id: totrans-split-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完整性：** 我们是否对底层数据系统有完整的表现？'
- en: We then compose DQ metrics on individual fund flows to provide scoring and targeted
    guidance for technical experts. These measurements roll up to create a unified
    DQ score—a system with a 99.99% data quality score is extremely unlikely to hide
    major problems—turning a complex distributed analysis problem into a straightforward
    tabulation exercise. Technical users can likewise trust that improving DQ scores
    reflect true improvement in underlying system behavior and accuracy.
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们会根据各个资金流的数据质量指标（DQ metrics）进行打分和针对技术专家提供有针对性的指导。这些测量结果会汇总为一个统一的DQ分数——系统获得99.99%的数据质量分数极不可能掩盖重大问题——这将一个复杂的分布式分析问题转变为一个简单的统计练习。技术用户同样可以信任，提高的DQ分数反映了底层系统行为和准确性的真正改善。
- en: Clearing
  id: totrans-split-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 清算
- en: Ledger is based on double-entry bookkeeping, a standard method for guaranteeing
    that all money in a system is fully accounted for by balancing credits and debits.
    Grounding our analysis in this construct gives us a mathematical proof of correctness.
    If you’ve never encountered this term before, a helpful explainer is [“An Engineer’s
    Guide to Double-Entry Bookkeeping.”](https://anvil.works/blog/double-entry-accounting-for-engineers)
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
  zh: 分类账（Ledger）基于双重记账法，这是一种保证系统中所有资金都经过贷方和借方平衡完全核对的标准方法。在这一构造的基础上进行分析可以给我们带来数学上的正确性证明。如果您之前从未听说过这个术语，可以参考[“工程师双重记账指南”。](https://anvil.works/blog/double-entry-accounting-for-engineers)
- en: Using double-entry bookkeeping to validate money movement is similar to analyzing
    a flow of water through a network of pipes (processes) ending in reservoirs (balance
    sheets). At steady state, terminal (nonclearing) reservoirs are full, and intermediate
    (clearing) pipes are empty. If there is water stuck in the pipes, then you have
    a problem—in other words, unresolved balances on the balance sheet.
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
  zh: 使用双重记账来验证资金流动类似于分析通过管道网络（过程）最终进入储水池（资产负债表）的水流。在稳态下，终端（非清算）储水池是满的，而中间（清算）管道是空的。如果管道中有积水，那么就会有问题——换句话说，资产负债表上存在未解决的余额。
- en: Traditionally, bookkeeping is purely an accounting construct, but we apply these
    ideas in a novel way. Rather than just tabulating cash flow in and out, we’re
    simultaneously modeling internal data system behaviors that may have nothing to
    do with physical movement of money—for example, currency conversion, report parsing,
    estimation, or billing analysis. We can use the same bookkeeping concepts to reason
    about those systems and evaluate their correctness in a much more general way.
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，记账纯粹是会计构造，但我们以一种新颖的方式应用这些思想。我们不只是简单地列出资金的流入和流出，而是同时建模内部数据系统的行为，这些行为可能与资金的实际移动无关，例如货币转换、报告解析、估算或账单分析。我们可以使用相同的记账概念来推理这些系统，并以一种更加普遍的方式评估它们的正确性。
- en: Detecting problems
  id: totrans-split-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检测问题
- en: 'Clearing measures the fraction of Ledger that is appropriately zeroed out at
    steady state. Consider an example that models two steps of a flow: `charge creation`
    (potential money movement) and `release` (funds becoming available). As you follow
    the flow, keep in mind these definitions:'
  id: totrans-split-45
  prefs: []
  type: TYPE_NORMAL
  zh: 清算衡量的是在稳态下被适当清零的分类账（Ledger）的比例。考虑一个模拟两个步骤流程的例子：`charge creation`（潜在资金移动）和 `release`（资金可用）。在跟随流程时，请记住以下定义：
- en: '**Accounts** are buckets of money distinguished by their type (e.g., `charge_unsubmitted`)
    and properties (e.g.,`id`, `business`).'
  id: totrans-split-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**账户**是通过其类型（例如，`charge_unsubmitted`）和属性（例如，`id`、`business`）区分的资金存储桶。'
- en: '**Events** move money between accounts (e.g., `charge.creation` and `charge.release`).'
  id: totrans-split-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件** 在账户之间转移资金（例如，`charge.creation` 和 `charge.release`）。'
- en: At time `T0`, the `charge.creation` event sets up a balance in the undisbursed
    account; then at `T1`, `charge.release` completes the flow and moves the funds
    to the `business_balance` account.
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在时间 `T0`，`charge.creation` 事件在未支付账户中设立余额；然后在 `T1`，`charge.release` 完成了流程并将资金移至
    `business_balance` 账户。
- en: It is important to note that the `creation` and `release` events are completely
    independent. Even if they arrive out of order, or are created by different sources,
    Ledger maintains accurate fund flows through the identifier for `business` and
    `id`. But, if the `release` event is never published or has the wrong `id`, Ledger
    would not clear the balance in the associated `charge_undisbursed` account, and
    it would instead hold the balance in a different instance of `charge_undisbursed`.
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是`creation`和`release`事件是完全独立的。即使它们以不同的顺序到达或由不同的来源创建，总账仍通过`business`和`id`的标识符维护准确的资金流动。但是，如果`release`事件从未发布或具有错误的`id`，总账将不会清算与`charge_undisbursed`账户相关联的余额，并且它会将余额保留在`charge_undisbursed`的另一个实例中。
- en: Example clearing issue
  id: totrans-split-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例清算问题
- en: 'Consider next how a wrong value (`business: B` vs. `business: A`) results in
    two clearing accounts with nonzero balance. Instead of having one reservoir of
    money for `business: A`, we wind up with two—one for `business: A` and one for
    `business: B`.'
  id: totrans-split-51
  prefs: []
  type: TYPE_NORMAL
  zh: '接下来考虑一个错误值（`business: B` vs. `business: A`）导致两个清算账户余额不为零。与为`business: A`单独一个资金池不同，我们最终得到了两个——一个用于`business:
    A`，另一个用于`business: B`。'
- en: Generalizing from this example, we repeat this process for every fund flow,
    account type, and property-based subdivision inside of Ledger. Even when we have
    billions of transactions, a single missing, late, or incorrect transaction immediately
    creates a detectable accuracy issue with a simple query—for example, “*Find the
    clearing Accounts with nonzero balance.”*
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个例子中泛化，我们对总账内的每笔资金流动、账户类型和基于属性的细分都重复此过程。即使我们有数十亿的交易量，一个单独的缺失、延迟或错误的交易会立即通过简单的查询创建一个可检测的准确性问题，例如，“*查找清算账户余额不为零的账户。”*
- en: Timeliness
  id: totrans-split-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 及时性
- en: Clearing prevents persistent problems, but we also need to guarantee data arrives
    on time for time-sensitive functions such as monthly report generation. Producers
    create time stamps when integrating with Ledger, and we measure the delta between
    when data first enters the Stripe platform and when it reaches Ledger. We set
    a hard threshold on the data delivery window, and we create headroom for subsequent
    reporting, analysis, and manipulations to guarantee 99.999% timeliness.
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
  zh: 清算防止持久性问题，但我们还需要确保数据按时到达，以满足诸如月度报告生成之类的时效性功能。生产者在与总账集成时创建时间戳，并测量数据首次进入Stripe平台和到达总账之间的时间差。我们设置了数据交付窗口的严格阈值，并为后续的报告、分析和操作创造了余地，以确保99.999%的及时性。
- en: Completeness
  id: totrans-split-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 完整性
- en: We guarantee data completeness and guard against missing data from upstream
    systems with explicit cross-system checks alongside automated anomaly detection.
    For example, we ensure that every ID in a producer database has a matching Ledger
    event. We also run statistical modeling on data availability. We have models for
    every account type that use historical trends to calculate expected data arrival
    time and, if events do not appear, we interpret this as potentially missing data.
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过明确的跨系统检查和自动异常检测，保证数据完整性，并防止来自上游系统的数据丢失。例如，我们确保生产者数据库中的每个ID都有匹配的总账事件。我们还对数据可用性进行统计建模。我们为每种账户类型建立模型，利用历史趋势计算预期的数据到达时间，如果事件没有出现，我们会解释这可能是缺失数据。
- en: How teams at Stripe explore DQ metrics
  id: totrans-split-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Stripe团队如何探索DQ指标
- en: 'On top of the DQ Platform, we built hierarchical automated alerting and rich
    tooling. We combine interactive metric displays with analysis and guidance. The
    experience for internal leaders and team members focuses on proactive feedback,
    simple manipulation of data, and meaningful metrics. We also provide use-case-specific
    context that depends on which part of the business is using it. For example, consider
    how we show team-level DQ metrics for our periodic financial reporting, which
    we call Accounting Close. Note: some details are blocked out for privacy.'
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在DQ平台之上，我们建立了分层自动警报和丰富的工具。我们将交互式度量显示与分析和指导相结合。内部领导和团队成员的体验侧重于积极的反馈、数据简单操作和有意义的指标。我们还提供依赖于业务部门的使用情况特定的上下文。例如，考虑我们如何为我们的周期性财务报告展示团队级别的DQ指标，我们称之为会计结算。注：部分细节由于隐私问题被屏蔽。
- en: 'The topline view is generally in a good state, but there are areas for improvement
    at the team level within the Payment Engineering group. For example, the 50% score
    for Aging Balances means that some clearing issues have persisted over time:'
  id: totrans-split-59
  prefs: []
  type: TYPE_NORMAL
  zh: 总体视图通常处于良好状态，但在支付工程团队内部的团队层面存在改进空间。例如，50%的老账户余额得分意味着一些清算问题长期存在：
- en: A single team-level view of data quality metrics
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
  zh: 数据质量指标的单一团队级视图
- en: This team-level view shows DQ metrics alongside a call to action including auto-generated
    tickets, relevant resources, and tool links—everything required for self-service.
    For leaders, this view provides the exact dollar impact of DQ issues.
  id: totrans-split-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这种团队级视图显示了与行动呼叫相关的 DQ 指标，包括自动生成的工单、相关资源和工具链接——所有这些都是自助服务所需的。对于领导者而言，此视图提供了 DQ
    问题的确切经济影响。
- en: Tactical views
  id: totrans-split-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 战术视图
- en: DQ scores drop when a problem is observed in Ledger. Although Ledger is a projection
    of underlying systems, Ledger problems are not usually problems of transcription
    or data modeling in Ledger. They primarily reveal real problems with system implementations,
    integrations, or physical money movement. In these cases, we provide tactical
    views to trace issues back to their root cause inside Stripe platforms or external
    systems.
  id: totrans-split-63
  prefs: []
  type: TYPE_NORMAL
  zh: 当在总账中观察到问题时，DQ 得分会下降。虽然总账是底层系统的投影，但总账问题通常不是总账中的抄录或数据建模问题。它们主要揭示了系统实施、集成或实际货币流动的真正问题。在这些情况下，我们提供战术视图，以追溯问题根源，无论是在
    Stripe 平台内部还是外部系统中。
- en: Consider an uncleared balance of a specific account type—a processing fee that
    must be invoiced and paid. At steady state, the invoice should be paid and the
    balance is zero, but over time we observe a nonclearing balance.
  id: totrans-split-64
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑特定账户类型的未结清余额——必须开具和支付的处理费用。在稳态下，发票应该支付，余额为零，但随着时间的推移，我们观察到一个不清零的余额。
- en: Investigation and attribution
  id: totrans-split-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 调查和归因
- en: 'Clicking on a point in the graph generates SQL queries in Presto (our ad-hoc
    SQL query engine) and surfaces relevant data: reference keys, metadata, ownership,
    and tips. If a Ledger user is unable to debug and publish a correction—perhaps
    because the root cause is related to an infrastructure or third-party incident
    outside their control—they can reassign ownership to the right internal stakeholders
    and exclude it from alerting.'
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
  zh: 单击图中的某一点会在 Presto 中生成 SQL 查询（我们的特别SQL查询引擎），并呈现相关数据：参考键、元数据、所有权和提示信息。如果总账用户无法调试和发布校正——也许是因为根本原因与他们无法控制的基础设施或第三方事件有关——他们可以重新分配所有权给正确的内部利益相关者，并将其排除在警报之外。
- en: 'When issues are attributed to a known incident, we can retroactively analyze
    the impact to DQ metrics across teams to fully understand how Stripe was affected:'
  id: totrans-split-67
  prefs: []
  type: TYPE_NORMAL
  zh: 当问题归因于已知事件时，我们可以回顾性地分析各团队在数据质量指标上的影响，以充分了解 Stripe 受到的影响：
- en: Combined, we have the ability to measure and analyze data quality, identify
    root-cause problems, and flexibly interact with the underlying data constructs
    to manage our problem load over time. In this case, fixing problems in Ledger
    may involve republishing data from source systems.
  id: totrans-split-68
  prefs: []
  type: TYPE_NORMAL
  zh: 综合来看，我们具备测量和分析数据质量、识别根本原因问题，并灵活地与底层数据结构交互的能力，以随时间管理我们的问题负载。在这种情况下，解决总账中的问题可能涉及重新发布来自源系统的数据。
- en: Data correction
  id: totrans-split-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据校正
- en: Ledger is our system of record and must remain an evergreen representation of
    truth. Persistent problems reduce visibility into new problems and may result
    in incorrect reporting or derived datasets. Because Ledger is an immutable log
    of events, we can’t run simple queries to mutate the state; instead, we have to
    revert and reprocess prior operations. If an incident occurs, we need a tool for
    correcting data at scale.
  id: totrans-split-70
  prefs: []
  type: TYPE_NORMAL
  zh: 总账是我们的记录系统，必须保持真理的常青表现。持续存在的问题会降低对新问题的可见性，并可能导致不正确的报告或派生数据集。由于总账是事件不可变的日志，我们无法运行简单的查询来改变状态；相反，我们必须回退并重新处理之前的操作。如果发生事件，我们需要一种工具来规模化地纠正数据。
- en: We built a supporting utility to create and safely execute migrations, protected
    by a data quality tool that generates out-of-band reports on the production impact
    of proposed changes. Together, these tools approximate a CI pipeline for ad-hoc
    data repair operations. All operations must go through a two-phase review and
    commit of the data—and its associated DQ impact.
  id: totrans-split-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建立了一个支持性实用工具，用于创建并安全执行迁移，受到数据质量工具的保护，该工具会生成关于提议更改生产影响的带外报告。这些工具共同近似于用于特别数据修复操作的
    CI 管道。所有操作必须经过数据及其相关 DQ 影响的两阶段审查和提交。
- en: Fewer data problems, more reliable reporting
  id: totrans-split-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 减少数据问题，提高报告的可靠性
- en: Our systems need to operate within a messy reality, but the innovations described
    in this blog post drive us towards a trustworthy and explainable operational model.
    Likewise, as businesses and mechanisms for money movement inevitably evolve, Stripe
    is empowered to keep pace with that change.
  id: totrans-split-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的系统需要在混乱的现实中运作，但本文介绍的创新推动我们朝着可信和可解释的运营模型迈进。同样，随着企业和资金流动机制的不可避免的演变，Stripe有能力跟上这一变化的步伐。
- en: The DQ Platform ensures reliable and timely reporting across all Stripe business
    lines. The combination of clearing, timeliness, and completeness metrics ensures
    that internal stakeholders can make sound judgments about the correctness of underlying
    data systems without worrying about maintaining complex specialized knowledge.
  id: totrans-split-74
  prefs: []
  type: TYPE_NORMAL
  zh: DQ平台确保了跨所有Stripe业务线的可靠和及时的报告。结算、及时性和完整性指标的结合确保内部利益相关者可以就底层数据系统的正确性做出明智的判断，而无需担心维护复杂的专业知识。
- en: The digital economy will continue to accelerate, and our focus is on building
    robust and scalable systems to power it. In the future, we want to improve timeliness
    to minute-level analysis and response—offering lower latency processing, which
    will strengthen fraud detection and increase available response time to address
    possible financial problems.
  id: totrans-split-75
  prefs: []
  type: TYPE_NORMAL
  zh: 数字经济将继续加速，我们的重点是构建强大和可扩展的系统来支撑它。未来，我们希望提高到分钟级别的时效性分析和响应能力，提供更低延迟的处理，这将增强欺诈检测并增加可用的响应时间，以解决可能的财务问题。
- en: We are also investing in advanced enrichment capabilities that allow us to declaratively
    compose new datasets and reporting interfaces while guaranteeing that they meet
    our data quality bar. This work safely evolves the complexity of our internal
    systems alongside Stripe’s growth.
  id: totrans-split-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还在投资先进的丰富能力，使我们能够在保证符合我们数据质量标准的同时，以声明方式组合新数据集和报告界面。这项工作安全地推动了我们内部系统的复杂性与Stripe的增长相辅相成。
- en: We’re excited to continue to solve hard, important problems. If you are too,
    consider joining our [engineering team](https://stripe.com/jobs/search?query=engineer).
  id: totrans-split-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们很高兴继续解决艰难而重要的问题。如果你也有兴趣，请考虑加入我们的[工程团队](https://stripe.com/jobs/search?query=engineer)。
