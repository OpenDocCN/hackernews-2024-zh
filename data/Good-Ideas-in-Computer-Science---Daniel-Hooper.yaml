- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 13:38:45'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 13:38:45'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Good Ideas in Computer Science ・ Daniel Hooper
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算机科学中的好理念 ・ Daniel Hooper
- en: 来源：[https://danielchasehooper.com/posts/good-ideas-in-cs/](https://danielchasehooper.com/posts/good-ideas-in-cs/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://danielchasehooper.com/posts/good-ideas-in-cs/](https://danielchasehooper.com/posts/good-ideas-in-cs/)
- en: 'Programmers love arguing for their favorite technologies. C++ vs Rust. Mac
    vs PC. These arguments overshadow the victories of Computer Science — the ideas
    that we all agree on. To unearth these ideas, I recently [asked a simple question](https://twitter.com/DanielcHooper/status/1778795850107424827)
    on Twitter/X:'
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 程序员喜欢为他们喜欢的技术争论。C++ vs Rust. Mac vs PC. 这些争论掩盖了计算机科学的胜利——我们都同意的理念。为了发掘这些理念，我最近在Twitter/X上[提出了一个简单的问题](https://twitter.com/DanielcHooper/status/1778795850107424827)：
- en: What ideas in computer science are universally considered good?
  id: totrans-split-7
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 计算机科学中哪些理念是被普遍认为是好的？
- en: 'By “universally considered good” I mean they *aren’t* debated. Ideas so widespread
    and effective that you might not even think of them as being invented. Each idea
    may not be suitable in all situations, but you won’t find a programmer that thinks
    you should *never* use them. I intentionally focus on *ideas*, not *implementations*.
    For example: Unix contains many good ideas, but is not on the list because it
    is an implementation.'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: “普遍认为是好的”指的是它们没有被争议。这些理念是如此广泛和有效，以至于你可能甚至不认为它们是被发明的。每个理念在所有情况下可能并不适用，但你不会找到一个程序员认为你应该*从不*使用它们。我有意地专注于*理念*，而不是*实现*。例如：Unix
    包含许多好的理念，但它不在列表中，因为它是一种实现。
- en: 'Here’s my list, including the year each idea appeared:'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我的列表，包括每个理念出现的年份：
- en: 'Intentionally excluded:'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 故意排除：
- en: Garbage Collection
  id: totrans-split-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 垃圾收集
- en: There are many examples of teams fighting the garbage collector to hit performance
    goals^(. The [CPU/Memory performance gap](http://gec.di.uminho.pt/discip/minf/ac0102/1000Gap_Proc-Mem_Speed.pdf)
    necessitates control over memory to have performant code.)
  id: totrans-split-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有许多团队的例子表明，为了达到性能目标，他们与垃圾收集器作斗争^(。[CPU/内存性能差距](http://gec.di.uminho.pt/discip/minf/ac0102/1000Gap_Proc-Mem_Speed.pdf)需要对内存进行控制，以编写高性能代码。)
- en: Databases
  id: totrans-split-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库
- en: 'Databases are more than just one idea, with many ways to combine those ideas
    into a “database shape”. Some good ideas in databases: [Structured query language](https://en.wikipedia.org/wiki/SQL),
    [B-trees](https://en.wikipedia.org/wiki/B-tree), [ACID transactions](https://en.wikipedia.org/wiki/ACID).'
  id: totrans-split-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数据库不只是一个概念，有很多种方式将这些概念组合成“数据库形状”。数据库中的一些好主意：[结构化查询语言](https://zh.wikipedia.org/wiki/SQL)，[B树](https://zh.wikipedia.org/wiki/B树)，[ACID事务](https://zh.wikipedia.org/wiki/ACID)。
- en: Other data structures and algorithms
  id: totrans-split-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他数据结构和算法
- en: There are too many to list. Few are as universal as arrays and hashmaps, which
    appear in almost all programs.
  id: totrans-split-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些理念太多了，很少有像数组和哈希表这样普遍存在于几乎所有程序中的理念。
- en: Object Oriented Programming
  id: totrans-split-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 面向对象编程
- en: There is a large group of programmers that do not consider Object Oriented Programming
    good^(. I recommend [data oriented design](https://github.com/dbartolini/data-oriented-design)
    as a replacement worldview.)
  id: totrans-split-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有一大群程序员认为面向对象编程不好^(。我推荐使用[data oriented design](https://github.com/dbartolini/data-oriented-design)作为一种替代的世界观。)
- en: By 1974, 50 years ago, we had most of what we call modern computing. Today’s
    fundamentals are the same — a C programmer from 1974 would feel at home on a modern
    computer except for the alien-like speed. I hope we have new ideas that in 50
    years will be universally considered good.
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 到了1974年，也就是50年前，我们已经拥有了现代计算的大部分内容。今天的基础原理与当时相同——一个1974年的C程序员在现代计算机上可能感到宾至如归，除了外星般的速度。我希望在50年后我们会有新的理念，这些理念将被普遍认为是好的。
- en: Discuss on [Twitter](https://twitter.com/DanielcHooper/status/1782446647047311466)
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在[Twitter上讨论](https://twitter.com/DanielcHooper/status/1782446647047311466)
- en: Discuss on [Lobste.rs](https://lobste.rs/s/kruxyr/good_ideas_computer_science)
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在[Lobste.rs上讨论](https://lobste.rs/s/kruxyr/good_ideas_computer_science)
