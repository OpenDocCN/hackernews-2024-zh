- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:53:18'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:53:18'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Observable 2.0 | Observable
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Observable 2.0 | Observable
- en: 来源：[https://observablehq.com/blog/observable-2-0](https://observablehq.com/blog/observable-2-0)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://observablehq.com/blog/observable-2-0](https://observablehq.com/blog/observable-2-0)
- en: 'Today we’re launching [Observable 2.0](https://observablehq.com/product) with
    a bold new vision: an open-source static site generator for building fast, beautiful
    data apps, dashboards, and reports.'
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，我们推出[Observable 2.0](https://observablehq.com/product)，具有全新的大胆愿景：一个用于构建快速、美观的数据应用程序、仪表板和报告的开源静态站点生成器。
- en: Our mission is to help teams communicate more effectively with data. Effective
    presentation of data is critical for deep insight, nuanced understanding, and
    informed decisions. Observable notebooks are great for ephemeral, *ad hoc* data
    exploration. But notebooks aren’t well-suited for polished dashboards and apps.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的使命是帮助团队通过数据更有效地沟通。有效的数据展示对于深入洞察、细致理解和明智决策至关重要。Observable笔记本非常适合临时的*即席*数据探索。但笔记本不适合精心制作的仪表板和应用程序。
- en: Enter [Observable Framework](https://observablehq.com/framework/).
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 进入[Observable Framework](https://observablehq.com/framework/)。
- en: 'With Framework, you can build the best data apps your team has ever seen. Framework
    combines the power of **JavaScript on the front-end** for interactive graphics,
    with **any language on the back-end** for data preparation and analysis. SQL,
    Python, R, Rust, Go… you name it. It’s the polyglot programmer’s dream. Everything
    you need is at your fingertips: interactive charts and inputs, responsive grids,
    themes, dark mode, keyboard-friendly navigation, and more. And because it’s code,
    there’s no limit to customization!'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Framework，您可以构建团队见过的最佳数据应用程序。Framework结合了前端的**JavaScript**的交互图形能力和后端的**任何语言**的数据准备和分析能力。SQL、Python、R、Rust、Go……你说了算。这是多语言程序员的梦想。您所需的一切都近在咫尺：交互式图表和输入、响应式网格、主题、暗模式、键盘友好的导航等等。而且因为它是代码，定制的可能性无限！
- en: Framework is free and [open-source](https://github.com/observablehq/framework).
    Projects are just local files. Use your favorite editor, preview locally, check
    it all into git, write unit tests, add CI/CD, even work offline. You can host
    projects anywhere or deploy instantly to Observable to share them securely with
    your team.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 框架是免费和[开源](https://github.com/observablehq/framework)的。项目只是本地文件。使用您喜欢的编辑器，在本地预览，全部提交到git，编写单元测试，添加CI/CD，甚至离线工作。您可以将项目托管在任何地方，或立即部署到Observable，与团队安全共享。
- en: 'Observable Framework solves the “last mile” problem of data apps: loading data.
    Conventional dashboards are slow because they run queries on view while the user
    waits; Framework’s data loaders run *on build* so that pages load instantly. And
    because data loaders run on your servers, you control privacy and security. If
    you’re ready to dive in, visit our [Getting started tutorial](https://observablehq.com/framework/getting-started),
    or open a terminal and run:'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: Observable Framework解决了数据应用程序的“最后一英里”问题：加载数据。传统的仪表板因为在用户等待时在视图上运行查询而变慢；Framework的数据加载器在*构建时*运行，因此页面加载瞬间完成。并且由于数据加载器在您的服务器上运行，您控制隐私和安全。如果您准备好深入了解，请访问我们的[入门教程](https://observablehq.com/framework/getting-started)，或打开终端并运行：
- en: npm init @observablehq
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: npm init @observablehq
- en: If you’d like to hear more about why we built Framework, please read on.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想了解我们为何构建Framework的更多信息，请继续阅读。
- en: This moment — Observable 2.0 — reflects lessons learned over many years.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 此刻——Observable 2.0——反映了多年的经验教训。
- en: We believe the lightweight, collaborative nature of computational notebooks
    makes them ideal for exploring data and answering *ad hoc* questions. We founded
    Observable in 2016, pioneering a [reactive, web-first approach](https://medium.com/@mbostock/a-better-way-to-code-2b1d2876a3a0)
    to notebooks and seeking to make data visualization easier, more practicable,
    and more social. We dreamed that notebooks might be the “one ring to rule them
    all” — powering not just notes, but apps, dashboards, and reports.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们认为计算笔记本的轻量化、协作性质使其成为探索数据和回答*即席*问题的理想选择。我们于2016年创立Observable，开创了一种[反应式、面向Web的方法](https://medium.com/@mbostock/a-better-way-to-code-2b1d2876a3a0)来处理笔记本，并希望使数据可视化更加简单、更加实用和更加社交化。我们梦想着笔记本可能成为“统治它们所有”的“一环”——不仅驱动笔记，还驱动应用程序、仪表板和报告。
- en: 'Yet no single interface can excel at every task. As cool as reactive notebooks
    are, a notebook can’t compete with a custom web app in terms of user experience.
    Notebooks are constrained by:'
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，没有一个单一的界面可以在每个任务上都表现出色。尽管反应性笔记本很酷，但在用户体验方面，笔记本无法与定制Web应用程序竞争。笔记本受到以下限制：
- en: A single-column, narrow layout
  id: totrans-split-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单列、窄布局
- en: Low visual information density
  id: totrans-split-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 低视觉信息密度
- en: Always-visible editor chrome
  id: totrans-split-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 始终可见的编辑器界面
- en: These same limitations make notebooks great for tinkering and learning — the
    code is always at your fingertips, adjacent to the output — but not so great for
    presentation. To fill that latter role, we need better data apps.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 同样的限制使得笔记本非常适合修补和学习 —— 代码始终触手可及，毗邻输出 —— 但并不适合展示。为了填补后者的角色，我们需要更好的数据应用。
- en: A good data app embodies an empirical perspective; it fosters a shared understanding.
    Whereas notebooks tend to be for individuals, data apps are more often for a team.
    And whereas notebooks tend to be transient byproducts of point-in-time exploration,
    data apps often sustain value over time as people return to see how things change.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一个优秀的数据应用体现了经验主义的观点；它促进了共享理解。而笔记本往往是为个人而设，数据应用则更常用于团队。而笔记本往往是时间点探索的临时副产品，数据应用则经常因人们返回查看事物变化而持续产生价值。
- en: 'The differences between notebooks and data apps extend to development. A notebook
    editor desires speed: jotting down thoughts, running a query, sketching a chart.
    A data app developer prioritizes correctness, performance, and maintainability:
    making careful, deliberate changes that others depend on, favoring code review
    and testing before publishing.'
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记本和数据应用之间的差异延伸到开发过程中。笔记本编辑器追求速度：记录想法，运行查询，草绘图表。数据应用开发者则优先考虑正确性、性能和可维护性：谨慎而深思熟虑地进行更改，他人依赖的变更，倾向于代码审查和发布前测试。
- en: 'We had three goals in mind when we set out to reimagine data app development:'
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在重新设想数据应用开发时有三个目标：
- en: '**A better developer workflow** — meeting the needs of developers'
  id: totrans-split-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**更好的开发者工作流程** — 满足开发者的需求'
- en: '**A better user experience** — the “proof is in the pudding”'
  id: totrans-split-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**更好的用户体验** — “试吃布丁”的证明'
- en: '**A better data architecture** — solving the “last mile” problem'
  id: totrans-split-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**更好的数据架构** — 解决“最后一英里”问题'
- en: A better developer workflow **👩‍💻**[](/blog/observable-2-0#a-better-developer-workflow)
  id: totrans-split-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一个更好的开发者工作流程 **👩‍💻**[可查看](/blog/observable-2-0#a-better-developer-workflow)
- en: Modern development is built on [files](https://stephango.com/file-over-app).
    Files have myriad strengths, but the strongest is interoperability. When every
    tool uses files, it’s far easier to incorporate a new tool — and now Observable
    — into your workflow.
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现代开发基于[文件](https://stephango.com/file-over-app)。文件有无数优点，但最强大的是互操作性。当每个工具都使用文件时，将新工具
    —— 现在包括 Observable —— 整合到您的工作流程中就更容易了。
- en: This isn’t just about using your preferred text editor. Now you can bring your
    own source control and code review system, too. You can write unit tests and run
    linters. You can automate builds with continuous integration or deployment. You
    can work offline. You can self-host. You can generate or edit content programmatically,
    say to format code or to find-and-replace across files.
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这不仅仅是使用您喜欢的文本编辑器。现在您还可以带上自己的源代码控制和代码审查系统。您可以编写单元测试并运行代码检查工具。您可以通过持续集成或部署来自动构建。您可以离线工作。您可以自主托管。您可以以编程方式生成或编辑内容，例如格式化代码或在文件间查找和替换。
- en: As we break new ground with Observable Framework, we’re further improving interoperability
    by adopting vanilla JavaScript syntax. And we’re deprecating require in favor
    of modern ES import. These changes make Observable easier to learn, and to share
    code with other applications. (We’ll port these improvements back to Observable
    notebooks in the future.)
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们在 Observable 框架中开拓新领域，我们通过采用原始 JavaScript 语法进一步改进了互操作性。我们正在弃用 require，而更倾向于现代的
    ES import。这些变化使 Observable 更易于学习，并与其他应用程序共享代码。（我们将来会将这些改进回溯到 Observable 笔记本中。）
- en: '**A better user experience 😍**[](/blog/observable-2-0#a-better-user-experience)'
  id: totrans-split-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**更好的用户体验 😍**[可查看](/blog/observable-2-0#a-better-user-experience)'
- en: 'A toolmaker can’t care only about the developer experience — what does the
    developer experience matter if the resulting app is not demonstrably better? The
    merit of a creative tool should be judged by the quality of its creations, not
    its process. Or: “the proof of the pudding is in the eating.”'
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: 工具制作者不能只关心开发者体验 —— 如果生成的应用程序没有明显改进，开发者体验又有何意义呢？一个创意工具的价值应该由其作品的质量而非其过程来评判。或者说：“试吃布丁的时候就知道布丁的好坏。”
- en: We believe that well-designed tools help developers build more efficiently by
    focusing their efforts on high-value work. We favor opinionated tools, with defaults
    and conveniences that foster a good user experience. We nudge you into [the pit
    of success](https://blog.codinghorror.com/falling-into-the-pit-of-success/).
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们相信，设计良好的工具有助于开发人员通过集中精力进行高价值工作来更有效地构建。我们倾向于有意见的工具，具有默认设置和便利性，促进良好的用户体验。我们鼓励您进入[成功的坑](https://blog.codinghorror.com/falling-into-the-pit-of-success/)。
- en: Framework’s lightweight Markdown syntax — with light and dark mode, thoughtful
    colors, responsive grids, and built-in navigation — gives you beautiful pages
    from the start. It’s highly customizable if you need it, but it’s quick to get
    started with batteries included.
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
  zh: 框架的轻量级Markdown语法 — 包括浅色和深色模式、考虑周到的颜色、响应式网格和内置导航 — 从一开始就为您提供了美丽的页面。如果需要，它可以高度定制，但包含了所需功能，因此快速上手。
- en: 'Most importantly, Framework’s data architecture practically forces your app
    to be *fast* because data is precomputed. Performance is critical for dashboards:
    users don’t like to wait, and dashboards only create value if users look at them.
    Slow dashboards waste time. (And you certainly don’t want your database and dashboard
    falling over under load!)'
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的是，框架的数据架构实际上迫使您的应用程序保持*快速*，因为数据是预先计算的。对于仪表板来说，性能至关重要：用户不喜欢等待，仪表板只有在用户查看时才能创造价值。慢速仪表板浪费时间。（而且您肯定不希望您的数据库和仪表板在负载下崩溃！）
- en: A better data architecture[](/blog/observable-2-0#a-better-data-architecture)
  id: totrans-split-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更好的数据架构[](/blog/observable-2-0#a-better-data-architecture)
- en: Every data visualization requires data. Obviously. But less obviously, each
    data visualization requires highly-specific data prepared with that visualization
    in mind. In fact, most of the work of visualization isn’t choosing visual encodings
    or laying out axes or visualizing *per se* — it’s preparing data. As I wrote [previously](https://observablehq.com/@mbostock/10-years-of-open-source-visualization),
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
  zh: 每个数据可视化都需要数据。显而易见。但不那么明显的是，每个数据可视化都需要专门为该可视化准备的高度特定的数据。事实上，大多数可视化工作并不是选择视觉编码或布局轴或进行视觉化
    * per se * — 而是准备数据。正如我之前写过的那样[（先前）](https://observablehq.com/@mbostock/10-years-of-open-source-visualization)，
- en: working with data should be 80% of the work of visualization. Visualization
    is the end result of analysis — the visible manifestation of data, to be seen,
    shared, and appreciated by experts and non-experts alike — and as such it sometimes
    gets too much credit. To produce a visualization, one must first find data, clean
    it, transform, join, model, etc. Working with data is sometimes needlessly denigrated
    as “janitorial” when it represents the critical step of understanding the data
    as it is, warts and all.
  id: totrans-split-38
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 处理数据应该占可视化工作的80%。可视化是分析的最终结果 — 数据的可见体现，可以被专家和非专家看到、分享和赞赏 — 因此有时它获得了太多的赞誉。要制作可视化，必须首先找到数据，清理、转换、连接、建模等。有时将处理数据不当地贬低为“清洁工作”，而它实际上是理解数据的关键步骤，无论其有何缺陷。
- en: Given how much work goes into preparing data, it follows that developers want
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到准备数据需要大量工作，开发人员希望
- en: to use any language (say Python or R or SQL),
  id: totrans-split-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用任何语言（比如Python、R或SQL），
- en: to use any library (say NumPy or dplyr),
  id: totrans-split-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用任何库（比如NumPy或dplyr），
- en: to use any data source (database, data warehouse, API, files, *etc*.), and
  id: totrans-split-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用任何数据源（数据库、数据仓库、API、文件 *等*），
- en: to crunch data ahead of time (offline)
  id: totrans-split-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提前处理数据（离线）
- en: while still leveraging JavaScript in the browser for interactive graphics.
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
  zh: 同时仍然在浏览器中利用JavaScript进行交互式图形展示。
- en: Framework’s data loaders solve this “last mile” problem by computing static
    data snapshots at build time. These snapshots can be highly-optimized (and aggregated
    and anonymized), minimizing the data you send to the client. And since a data
    loader is just a fancy way of generating a file on-demand (with clever caching
    and routing), loaders can be written in any language and use any library. This
    flexibility is not unlike [CGI](https://en.wikipedia.org/wiki/Common_Gateway_Interface)
    from 30 years ago, and [Unix pipes](https://en.wikipedia.org/wiki/Pipeline_(Unix)).
    And since data loaders run on your servers, viewers don’t need direct access to
    the underlying data sources, and your dashboards are more secure and robust.
  id: totrans-split-45
  prefs: []
  type: TYPE_NORMAL
  zh: Framework 的数据加载器通过在构建时计算静态数据快照来解决这个“最后一英里”问题。这些快照可以高度优化（聚合和匿名化），从而最大限度地减少发送到客户端的数据量。由于数据加载器只是按需生成文件的一种高级方式（具有智能缓存和路由），可以用任何语言编写和使用任何库。这种灵活性与
    30 年前的 [CGI](https://zh.wikipedia.org/wiki/通用网关接口) 和 [Unix 管道](https://zh.wikipedia.org/wiki/管道_(Unix))
    非常相似。由于数据加载器在您的服务器上运行，查看者不需要直接访问底层数据源，从而使您的仪表板更加安全和健壮。
- en: The speed of modern data warehouses is astonishing. But far too often something
    is missing for new analysis — some untapped data source, some not-yet-materialized
    view for a query to run at interactive speeds. Framework’s data loaders let you
    bypass these hurdles and produce a fast dashboard without “heavy lifting” in your
    data warehouse. And once your analysis demonstrates value, you can shift work
    to your data warehouse and simplify your data loaders. Framework lets you build
    faster and quickly validate your ideas.
  id: totrans-split-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现代数据仓库的速度令人惊叹。但很多时候，新分析缺少一些东西——一些未开发的数据源，或者查询在交互速度下运行的尚未实现的视图。Framework 的数据加载器让您可以跳过这些障碍，在数据仓库中进行快速的仪表板构建，而无需进行“重活”。一旦您的分析证明了其价值，您可以将工作转移到数据仓库并简化数据加载器。Framework
    让您可以更快地构建并快速验证您的想法。
- en: We believe Framework will change how you think about data, and effect a better
    user experience. And by securely hosting apps alongside notebooks, Observable
    now offers an end-to-end solution for data analysis and presentation.
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们相信 Framework 将改变您对数据的思考方式，从而带来更好的用户体验。通过安全地托管应用程序和笔记本，Observable 现在为数据分析和展示提供了端到端的解决方案。
- en: We wouldn’t be here without the support, feedback, and encouragement from you
    — our community. Thank you for using Observable notebooks, Observable Plot, and
    D3\. We’re thrilled to share Observable Framework with you now, and can’t wait
    to hear what you think.
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
  zh: 没有您——我们的社区的支持、反馈和鼓励——我们就不可能在这里。感谢您使用 Observable 笔记本、Observable Plot 和 D3\. 我们非常高兴现在与您分享
    Observable Framework，并且迫不及待想知道您的想法。
- en: To learn more about Framework, [read the docs](https://observablehq.com/framework/).
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解 Framework 的更多信息，请[阅读文档](https://observablehq.com/framework/)。
- en: To share your questions or feedback, please [visit our forum](https://talk.observablehq.com/latest).
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多信息或提出问题或反馈，请[访问我们的论坛](https://talk.observablehq.com/latest)。
