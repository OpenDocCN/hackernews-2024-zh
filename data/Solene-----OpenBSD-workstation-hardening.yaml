- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 14:28:41'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:28:41
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Solene''% : OpenBSD workstation hardening'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Solene'%：OpenBSD 工作站加固
- en: 来源：[https://dataswamp.org/~solene/2023-12-31-hardened-openbsd-workstation.html](https://dataswamp.org/~solene/2023-12-31-hardened-openbsd-workstation.html)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://dataswamp.org/~solene/2023-12-31-hardened-openbsd-workstation.html](https://dataswamp.org/~solene/2023-12-31-hardened-openbsd-workstation.html)
- en: 1\. Introduction [§](#_Introduction)
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 介绍 [§](#_Introduction)
- en: I wanted to share a list of hardening you can do on your OpenBSD workstation,
    and explaining the threat model of each change.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我想分享一些您可以在 OpenBSD 工作站上进行的加固，并解释每个更改的威胁模型。
- en: '[OpenBSD official project website](https://www.openbsd.org)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[OpenBSD 官方项目网站](https://www.openbsd.org)'
- en: Feel free to pick any tweak you find useful for your use-case, many are certainly
    overkill for most people, but depending on the context, these changes could make
    sense for others.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 随意选择您发现对您的用例有用的任何调整，对于大多数人来说，许多调整肯定是过度的，但根据上下文，这些更改对其他人可能是有意义的。
- en: 2\. User configuration [§](#_User_configuration)
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 用户配置 [§](#_User_configuration)
- en: There are some tweaks that could be done in the configuration of a user to improve
    the security.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在用户配置中可以做一些调整以提高安全性。
- en: 2.1\. The Least privileges [§](#_The_Least_privileges)
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.1\. 最小权限 [§](#_The_Least_privileges)
- en: In order to prevent a program to escalate privileges, remove yourself from the
    wheel group, and don't set any doas or sudo permission.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为了防止程序提升权限，请将自己从 wheel 组中移除，并且不要设置任何 doas 或 sudo 权限。
- en: If you need root privileges, switch to a TTY using the root user.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要 root 权限，请使用 root 用户切换到 TTY。
- en: 2.2\. Multiple-factor authentication [§](#_Multiple-factor_authentication)
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.2\. 多因素身份验证 [§](#_Multiple-factor_authentication)
- en: In some cases, it may be desirable to have a multiple factor authentication,
    this mean that in order to log in your system, you would need a TOTP generator
    (phone app typically, or a password manager such as KeePassXC) in addition to
    your regular password.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，希望使用多因素身份验证，这意味着为了登录您的系统，您需要除了常规密码之外的 TOTP 生成器（通常是手机应用，或者密码管理器，如 KeePassXC）。
- en: This would protect against people nearby who may be able to guess your system
    password.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这将防止附近的人可能猜测您的系统密码。
- en: I already wrote a guide explaining how to add TOTP to an OpenBSD login.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经写了一篇指南，解释了如何将 TOTP 添加到 OpenBSD 登录中。
- en: '[Blog post: Multi-factor authentication on OpenBSD](https://dataswamp.org/~solene/2021-02-06-openbsd-2fa.html)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[博客文章：OpenBSD 上的多因素身份验证](https://dataswamp.org/~solene/2021-02-06-openbsd-2fa.html)'
- en: 2.3\. Home directory permission [§](#_Home_directory_permission)
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.3\. 主目录权限 [§](#_Home_directory_permission)
- en: The permissions of the user directory should be 700, so only the owner and root
    could browse it.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 用户目录的权限应该是 700，因此只有所有者和 root 可以浏览它。
- en: Ideally, you should add `umask 077` to your user environment, so every new directory
    or file permissions will be restricted to your user only.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，您应该将 `umask 077` 添加到您的用户环境中，这样每个新目录或文件的权限都将限制为仅限于您的用户。
- en: 3\. Firewall [§](#_Firewall)
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 防火墙 [§](#_Firewall)
- en: There are some interesting policies to configure with the help of OpenBSD firewall
    Packet Filter.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些有趣的策略可以通过 OpenBSD 防火墙 Packet Filter 进行配置。
- en: 3.1\. Block inbound [§](#_Block_inbound)
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.1\. 阻止入站 [§](#_Block_inbound)
- en: By default, it's good practice to disable all incoming traffic except the responses
    to established sessions (so servers can reply to your requests). This protects
    against someone on your local network / VPN to access network services that would
    be listening on the network interfaces.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，禁用除了对已建立会话的响应之外的所有传入流量是一个良好的做法（这样服务器就可以回复您的请求）。 这样可以防止您本地网络/ VPN 中的某人访问正在监听网络接口上的网络服务。
- en: 'In `/etc/pf.conf` you would have to replace the default:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `/etc/pf.conf` 中，您将不得不替换默认值：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'By the following:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 通过以下方式：
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Then, reload with `pfctl -f /etc/pf.conf`, if you ever need to allow a port
    on the network, add the according rule in the file.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，如果您需要允许网络上的某个端口，请使用 `pfctl -f /etc/pf.conf` 重新加载，并在文件中添加相应的规则。
- en: 3.2\. Filter outbound [§](#_Filter_outbound)
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.2\. 过滤出站 [§](#_Filter_outbound)
- en: It may be useful and effective to block outbound traffic, but this only work
    effectively if you know exactly what you need because you will have to allow hosts
    and remote ports manually.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 阻止出站流量可能是有用且有效的，但只有当您确切地知道您需要什么时，因为您将需要手动允许主机和远程端口。
- en: It would protect against a program trying to exfiltrate data using a non-allowed
    port/host.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 它将防止程序尝试使用非允许的端口/主机外泄数据。
- en: 4\. Disabling network for the desktop user [§](#_Disabling_network_for_the_desktop_user)
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为桌面用户禁用网络[§](#_Disabling_network_for_the_desktop_user)
- en: Disabling network by default is an important mitigation in my opinion. This
    will protect against any program your run and try to act rogue, if they can't
    figure there is a proxy, they won't be able to connect to the Internet.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 禁用网络是一项重要的缓解措施，我认为。这将防止任何程序试图行事的恶意行为，如果它们无法确定是否存在代理，它们将无法连接到互联网。
- en: This could also save you from mistaken commands that would pull stuff from the
    network like pip, npm and co. I think it's always great to have a tight control
    on which program should do networking and which shouldn't. On Linux this is actually
    easy to do, but on OpenBSD we can't restrict a single program so a proxy is the
    only solution.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这也可以使您免受误操作的命令，这些命令会从网络拉取诸如pip、npm等内容。我认为能够严格控制哪些程序应该进行网络连接，哪些程序不应该进行网络连接是非常重要的。在Linux上，这实际上很容易实现，但在OpenBSD上，我们无法限制单个程序，因此代理是唯一的解决方案。
- en: This can be done by creating a new user named `_proxy` (or whatever the name
    you prefer) using `useradd -s /sbin/nologin -m _proxy` and adding your SSH key
    to its authorized_keys file.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过创建一个名为`_proxy`（或者您喜欢的其他名称）的新用户来实现。使用`useradd -s /sbin/nologin -m _proxy`命令并将您的SSH密钥添加到其authorized_keys文件中。
- en: 'Add this rule at the end of your file `/etc/pf.conf` and then reload with `pfctl
    -f /etc/pf.conf`:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在文件`/etc/pf.conf`的末尾添加此规则，然后使用`pfctl -f /etc/pf.conf`重新加载：
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now, if you want to allow a program to use the network, you need to:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您希望允许某个程序使用网络，您需要：
- en: 'toggle the proxy ON with the command: `ssh -N -D 10000 _proxy@localhost` which
    is only possible if your SSH private key is unlocked'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用命令`ssh -N -D 10000 _proxy@localhost`将代理切换为打开状态，这仅在您的SSH私钥已解锁时才可能。
- en: configure a SOCKS5 proxy in the program
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在程序中配置一个SOCKS5代理
- en: 4.0.1\. Some network fixes [§](#_Some_network_fixes)
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一些网络修复[§](#_Some_network_fixes)
- en: Most programs will react to a proxy configured in a variable named `http_proxy`
    or `https_proxy` or `all_proxy`, however it's not a good idea to globally define
    these variables for your user as it would be a lot easier to a program to use
    the proxy automatically, which is against the essence of this proxy.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数程序会对命名为`http_proxy`、`https_proxy`或`all_proxy`的变量中配置的代理做出反应，但是为您的用户全局定义这些变量并不是一个好主意，因为程序更容易自动使用代理，这与这个代理的本质相违背。
- en: 4.0.1.1\. SSH [§](#_SSH)
  id: totrans-46
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: SSH[§](#_SSH)
- en: By default, you won't be able to ssh to anything except on a local user, we
    need to proxy every remote ssh connection through the local _proxy user.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，除了本地用户外，您将无法ssh到任何地方，我们需要通过本地_proxy用户代理每个远程ssh连接。
- en: 'In `~/.ssh/config`:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在`~/.ssh/config`中：
- en: '[PRE3]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 4.0.1.2\. Chromium [§](#_Chromium)
  id: totrans-50
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Chromium[§](#_Chromium)
- en: If you didn't configure GNOME proxy settings, Chromium / Ungoogled Chromium
    won't use a proxy, except if you add a command line parameter `--proxy-server=socks5://localhost:10000`.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有配置GNOME代理设置，Chromium / Ungoogled Chromium将不会使用代理，除非您添加命令行参数`--proxy-server=socks5://localhost:10000`。
- en: I tried to manually modified the dconf database where the "GNOME" settings are
    to configure the proxy, but I didn't get it to work (it used to work for me, but
    I can't succeed anymore).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我尝试手动修改dconf数据库，其中包含“GNOME”设置以配置代理，但我没有成功（以前我成功过，但现在我无法成功）。
- en: 4.0.1.3\. Syncthing [§](#_Syncthing)
  id: totrans-53
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 同步[§](#_Syncthing)
- en: If you use syncthing, you need to proxy all its traffic through the SSH tunnel.
    This is done by setting the environment variable `all_proxy=socks5://localhost:10000`
    in the program environment.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用syncthing，您需要将其所有流量通过SSH隧道代理。这通过在程序环境中设置环境变量`all_proxy=socks5://localhost:10000`来完成。
- en: 5\. Live in a temporary file-system [§](#_Live_in_a_temporary_file-system)
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 居住在临时文件系统中[§](#_Live_in_a_temporary_file-system)
- en: It's possible to have most of your home directory be a temporary file system
    living in memory, with a few directories with persistency.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将大部分家目录设置为驻留在内存中的临时文件系统，只有少数目录具有持久性。
- en: This change would prevent anyone from using temporary files or cache left-over
    from previous session.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 此更改将阻止任何人使用前一会话遗留的临时文件或缓存。
- en: The most efficient method to achieve this is to use the program home-impermanence
    that I wrote for this use case, it handles a list of files/directories that should
    be persistent.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 实现这一点最有效的方法是使用我为此用例编写的程序home-impermanence，它处理应该持久存在的文件/目录列表。
- en: '[Blog post: Reproducible clean $HOME on OpenBSD using impermanence](https://dataswamp.org/~solene/2022-03-15-openbsd-impermanence.html)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[博客文章：在OpenBSD上使用impermanence实现可重复的干净$HOME目录](https://dataswamp.org/~solene/2022-03-15-openbsd-impermanence.html)'
- en: If you only want to start fresh using a template (that doesn't evolve on use),
    you can check the flag `-P` of `mount_mfs` which allows populating the fresh memory
    based file system using an existing directory.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您只想使用一个模板来开始（在使用过程中不会发生变化），您可以检查`mount_mfs`的标志`-P`，它允许使用现有目录填充基于新鲜内存的文件系统。
- en: '[OpenBSD man page: mount_mfs(8)](https://man.openbsd.org/mount_mfs)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[OpenBSD man页面：mount_mfs(8)](https://man.openbsd.org/mount_mfs)'
- en: 6\. Disable webcam and microphone [§](#_Disable_webcam_and_microphone)
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6\. 禁用网络摄像头和麦克风 [§](#_Disable_webcam_and_microphone)
- en: Good news! I take the opportunity here to remember OpenBSD disables by default
    the video and audio recording of the various capable devices, instead, they will
    appear to work but record empty stream of data.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 好消息！我在这里抓住机会提醒您，OpenBSD默认禁用各种可用设备的视频和音频录制，而是它们将表现出正常工作的样子，但录制的是空的数据流。
- en: They can be manually enabled by changing the sysctls `kern.audio.record` or
    `kern.video.record` to 1 when you need to use them.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 当您需要使用它们时，可以通过更改sysctls `kern.audio.record` 或 `kern.video.record` 为1来手动启用它们。
- en: Some laptop manufacturer offer the option to have a physical switch to disable
    microphone and webcam, so you can be confident about their state (Framework).
    Some other manufacturer also allow to not put any webcam and microphone (NovaCustom,
    Nitropad). Finally, open source firmwares like Coreboot can offer a bios setting
    to disable these peripherals, it should be trustable in my opinion.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 一些笔记本电脑制造商提供了一个物理开关选项，可以禁用麦克风和网络摄像头，这样您就可以放心它们的状态（Framework）。一些其他制造商还允许不安装任何网络摄像头和麦克风（NovaCustom，Nitropad）。最后，像Coreboot这样的开源固件可以提供一个BIOS设置来禁用这些外围设备，我认为这是可信的。
- en: 7\. Disabling USB ports [§](#_Disabling_USB_ports)
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 7\. 禁用USB端口 [§](#_Disabling_USB_ports)
- en: If you need to protect your system from malicious USB devices (usually in an
    office environment), you should disable them in the BIOS/Firmware if possible.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要保护系统免受恶意USB设备的攻击（通常是在办公环境中），则应尽可能在BIOS/固件中禁用它们。
- en: If it's not possible, then you could still disable the kernel drivers at boot
    time using this method.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不可能，那么您仍然可以在启动时使用此方法禁用内核驱动程序。
- en: 'Create the file `/etc/bsd.re-config` and add the content to it:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 创建文件`/etc/bsd.re-config`并添加以下内容：
- en: '[PRE4]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This will disable the support for USB 3 and 2 controllers. On a desktop computer,
    you may want to use PS/2 peripherals in these conditions.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这将禁用对USB 3和2控制器的支持。在台式计算机上，在这些情况下，您可能想使用PS/2外设。
- en: 8\. System-wide services [§](#_System-wide_services)
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 8\. 系统范围的服务 [§](#_System-wide_services)
- en: 8.1\. Clamav antivirus [§](#_Clamav_antivirus)
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.1\. Clamav防病毒软件 [§](#_Clamav_antivirus)
- en: While this one may make you smile, if there is a chance it saves you once, I
    think it's still a valuable addition to any kind of hardening. A downloaded attachment
    from an email, or rogue JPG file could still harm your system.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这可能会让你笑一笑，但如果有机会能够救你一次，我认为这仍然是任何加固措施中的一项有价值的补充。来自电子邮件的下载附件，或者恶意的JPG文件仍然可能损害您的系统。
- en: OpenBSD ships a fully working clamav service, don't forget to enable freshclam,
    the viral database updater.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: OpenBSD提供了一个完全可用的clamav服务，请不要忘记启用freshclam，病毒数据库更新程序。
- en: 8.2\. Auto-update [§](#_Auto-update)
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.2\. 自动更新 [§](#_Auto-update)
- en: I already covered it in a previous article about anacron, but in my opinion,
    auto-updating the packages and base system daily on a computer is the minimum
    that should be done everywhere.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经在之前的一篇关于anacron的文章中讨论过这个问题，但我认为，在计算机上每天自动更新软件包和基本系统是到处都应该做的最低限度。
- en: '[Anacron: useful OpenBSD examples](https://dataswamp.org/~solene/2023-06-28-anacron.html#_Useful_examples)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[Anacron：有用的OpenBSD示例](https://dataswamp.org/~solene/2023-06-28-anacron.html#_Useful_examples)'
- en: 9\. System configuration [§](#_System_configuration)
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 9\. 系统配置 [§](#_System_configuration)
- en: 9.1\. Memory allocation hardening [§](#_Memory_allocation_hardening)
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9.1\. 内存分配加固 [§](#_Memory_allocation_hardening)
- en: The OpenBSD malloc system allows you to enable some extra checks, like use after
    free, heap overflow or guard pages, they can be all enabled at once. This is really
    efficient for security as most security exploits relies on memory management issues,
    BUT it may break software that have memory management issues (there are many of
    them). Using this mode will also impact the performance negatively, as the system
    needs to do more checks for each piece of allocated memory.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: OpenBSD malloc系统允许您启用一些额外的检查，例如使用之后释放，堆溢出或者保护页，它们都可以一次性全部启用。这对于安全性非常高效，因为大多数安全漏洞都依赖于内存管理问题，但它可能会破坏具有内存管理问题的软件（这样的软件有很多）。使用这种模式也会对性能产生负面影响，因为系统需要对每个分配的内存块进行更多的检查。
- en: 'In order to enable it, add this to `/etc/sysctl.conf`:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 为了启用它，请添加以下内容到 `/etc/sysctl.conf`：
- en: '[PRE5]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: It can be immediately enabled with `sysctl vm.malloc_conf=S`, and disabled by
    setting no value `sysctl vm.malloc_conf=""`.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 可以立即通过 `sysctl vm.malloc_conf=S` 启用，通过设置无值 `sysctl vm.malloc_conf=""` 来禁用。
- en: The program `ssh` and `sshd` always run with this flag enabled, even if it's
    disabled system-wide.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 程序 `ssh` 和 `sshd` 始终使用此标志运行，即使系统范围内已禁用。
- en: 10\. Some ideas to go further [§](#_Some_ideas_to_go_further)
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 10\. 更深入的一些想法 [§](#_Some_ideas_to_go_further)
- en: 10.1\. Specialized proxies [§](#_Specialized_proxies)
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 10.1\. 专用代理 [§](#_Specialized_proxies)
- en: 'It could be possible to have different proxy users, with each restriction to
    the remote ports allowed, we could imagine proxies like:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 可能存在不同的代理用户，每个用户限制到允许的远程端口，我们可以想象像这样的代理：
- en: http / https / ftp
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: http / https / ftp
- en: ssh only
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅限 ssh
- en: imap / smtp
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: imap / smtp
- en: etc....
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 等等....
- en: Of course, this is even more tedious than the multipurpose proxy, but at least,
    it's harder for a program to guess what proxy to use, especially if you don't
    connect them all at once.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这比多用途代理更加麻烦，但至少，程序很难猜出要使用哪个代理，尤其是如果您不同时连接它们。
- en: 10.2\. Run process using dedicated users [§](#_Run_process_using_dedicated_users)
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 10.2\. 使用专用用户运行进程 [§](#_Run_process_using_dedicated_users)
- en: I wrote a bit about this in the past, for command line programs, running them
    in dedicated local users over SSH make sense, as long as it's still practical.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我以前写过一点关于这个问题，对于命令行程序来说，在 SSH 上以专用本地用户运行它们是有道理的，只要这仍然实际可行。
- en: '[Dedicated users to run processes](https://dataswamp.org/~solene/2019-11-12-dedicated-users-processes.html)'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用专用用户运行进程](https://dataswamp.org/~solene/2019-11-12-dedicated-users-processes.html)'
- en: But if you need to run graphical programs, this becomes tricky. Using `ssh -Y`
    gives the remote program a full access to your display server, which has access
    to everything else running, not great... You could still rely on `ssh -X` which
    enables X11 Security extensions, but you have to trust the implementation, and
    it comes with issues like no shared clipboard, poor performance and programs crashing
    when attempting to access a legit resource that is blocked by the security protocol...
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 但是如果需要运行图形程序，则变得棘手。使用 `ssh -Y` 让远程程序完全访问您的显示服务器，该服务器可以访问正在运行的所有其他内容，这并不理想...
    您仍然可以依赖 `ssh -X`，它启用了 X11 安全扩展，但必须信任其实现，并且存在问题，如没有共享剪贴板、性能不佳以及尝试访问由安全协议阻止的合法资源时程序崩溃...
- en: In my opinion, the best way to achieve isolation for graphical programs would
    be to run a dedicated VNC server in the local user, and connect from your own
    user. This should be better than running on your own X locally.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在我看来，实现图形程序隔离的最佳方法是在本地用户中运行专用的 VNC 服务器，并从您自己的用户连接。这比在本地运行 X 要好。
- en: 10.3\. Encrypted home with USB unlocking [§](#_Encrypted_home_with_USB_unlocking)
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 10.3\. 带 USB 解锁的加密家目录 [§](#_Encrypted_home_with_USB_unlocking)
- en: In a setup where the computer is used by multiple person, the system encryption
    may be tedious because everyone have to remember the main passphrase, you have
    no guarantee one won't write it down on a post-it... In that case, it may be better
    to have a personal volume, encrypted, for each user.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算机被多人使用的设置中，系统加密可能很麻烦，因为每个人都必须记住主密码短语，你无法保证没有人会把它写在便签上... 在这种情况下，为每个用户创建一个个人加密卷可能更好。
- en: 'I don''t have an implementation yet, but I got a nice idea. Adding a volume
    for a user would look like the following:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我还没有实现，但我有一个好主意。为用户添加一个卷看起来像这样：
- en: take a dedicated USB memory stick for this user, this will be used as a "key"
    to unlock their data directory
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为此用户获取一个专用的 USB 存储器，它将用作解锁其数据目录的“密钥”
- en: overwrite the memory stick with random data
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用随机数据覆盖存储器
- en: create an empty disk file on the system, it will contain the encrypted virtual
    disk, use a random part of the USB disk for the passphrase (you will have to write
    down the length + offset)
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在系统上创建一个空磁盘文件，它将包含加密虚拟磁盘，使用 USB 磁盘的随机部分作为密码短语（您将必须记下长度 + 偏移量）
- en: write a rc file that looks for the USB disk volume if present, if so, tries
    to unlock and mount the partition upon boot
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写一个 `rc` 文件，如果检测到 USB 磁盘卷，则尝试在启动时解锁并挂载分区
- en: This way, you only need to have your USB memory stick plugged in when the system
    is booting, and it should automatically unlock and mount your personal encrypted
    volume. Note that if you want to switch user, you would have to reboot to unlock
    their drive if you don't want to mess with the command line.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，当系统启动时，您只需要将USB存储设备插入，它应该会自动解锁和挂载您的个人加密卷。请注意，如果您想切换用户，如果您不想用命令行操作，您将不得不重新启动以解锁他们的驱动器。
- en: 11\. Conclusion [§](#_Conclusion)
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 11\. 结论 [§](#_Conclusion)
- en: It's always possible to harden a system more and more, but the balance between
    real world security and actual usability should always be studied.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在系统中增加安全性是完全可能的，但是实际世界中安全性和可用性之间的平衡应该始终被研究。
- en: No one will use a too-much hardened system if they can't work on it efficiently,
    on the other hand, users expect their system to protect them against most common
    threats.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个系统过于硬化，没有人会高效地使用它；另一方面，用户希望他们的系统能保护他们免受大多数常见威胁的侵害。
- en: Depending on one's environment and threat model, it's important to configure
    their system accordingly.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 根据个人的环境和威胁模型，重要的是相应地配置他们的系统。
