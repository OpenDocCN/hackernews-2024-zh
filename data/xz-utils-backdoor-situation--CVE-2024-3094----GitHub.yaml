- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-29 12:45:49'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: xz-utils backdoor situation (CVE-2024-3094) · GitHub
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://gist.github.com/thesamesam/223949d5a074ebc3dce9ee78baad9e27](https://gist.github.com/thesamesam/223949d5a074ebc3dce9ee78baad9e27)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: FAQ on the xz-utils backdoor (CVE-2024-3094)
  id: totrans-split-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[](#faq-on-the-xz-utils-backdoor-cve-2024-3094)'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
- en: This is a living document. Everything in this document is made in good faith
    of being accurate, but like I just said; we don't yet know everything about what's
    going on.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
- en: On March 29th, 2024, a backdoor was discovered in [xz-utils](https://tukaani.org/xz/),
    a suite of software that gives developers lossless compression. This package is
    commonly used for compressing release tarballs, software packages, kernel images,
    and initramfs images. It is very widely distributed, statistically your average
    Linux or macOS system will have it installed for convenience.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: This backdoor is very indirect and only shows up when a few *known* specific
    criteria are met. Others may be yet discovered! However, this backdoor is *at
    least* triggerable by remote unprivileged systems connecting to public SSH ports.
    This has been seen in the wild where it gets activated by connections - resulting
    in performance issues, but we do not know yet what is required to bypass authentication
    (etc) with it.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
- en: 'We''re reasonably sure the following things need to be true for your system
    to be vulnerable:'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
- en: You need to be running a distro that uses glibc (for IFUNC)
  id: totrans-split-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You need to have versions 5.6.0 or 5.6.1 of xz or liblzma installed (xz-utils
    provides the library liblzma) - likely only true if running a rolling-release
    distro and updating religiously.
  id: totrans-split-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We know that the combination of *systemd* and *patched openssh* are vulnerable
    but pending further analysis of the payload, we cannot be certain that other configurations
    aren't.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
- en: While not scaremongering, it is important to be clear that **at this stage,
    we got lucky, and there may well be other effects of the infected liblzma**.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
- en: If you're running a publicly accessible `sshd`, then you are - as a rule of
    thumb for those not wanting to read the rest here - likely vulnerable.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
- en: If you aren't, it is unknown for now, but you should update as quickly as possible
    because investigations are continuing.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
- en: 'TL:DR:'
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
- en: 'Using a `.deb` or `.rpm` based distro with glibc and xz-5.6.0 or xz-5.6.1:'
  id: totrans-split-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Using systemd on publicly accessible ssh: update RIGHT NOW NOW NOW'
  id: totrans-split-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Otherwise: update RIGHT NOW NOW but prioritize the former'
  id: totrans-split-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Using another type of distribution:'
  id: totrans-split-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'With glibc and xz-5.6.0 or xz-5.6.1: update RIGHT NOW, but prioritize the above.'
  id: totrans-split-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: If all of these are the case, please update your systems to mitigate this threat.
    For more information about affected systems and how to update, please see [this
    article](https://xeiaso.net/notes/2024/xz-vuln/) or check the [xz-utils page on
    Repology](https://repology.org/project/xz/versions).
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
- en: This is not a fault of sshd, systemd, or glibc, that is just how it was made
    exploitable.
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
- en: 'This backdoor has several components. At a high level:'
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
- en: The release tarballs upstream publishes don't have the same code that GitHub
    has. This is common in C projects so that downstream consumers don't need to remember
    how to run autotools and autoconf. The version of `build-to-host.m4` in the release
    tarballs differs wildly from the upstream on GitHub.
  id: totrans-split-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'There are crafted test files in the `tests/` folder within the git repository
    too. These files are in the following commits:'
  id: totrans-split-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note that the bad commits have since been reverted in [e93e13c8b3bec925c56e0c0b675d8000a0f7f754](https://github.com/tukaani-project/xz/commit/e93e13c8b3bec925c56e0c0b675d8000a0f7f754)
  id: totrans-split-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A script called by `build-to-host.m4` that unpacks this malicious test data
    and uses it to modify the build process.
  id: totrans-split-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IFUNC, a mechanism in glibc that allows for indirect function calls, is used
    to perform runtime hooking/redirection of OpenSSH's authentication routines. IFUNC
    is a tool that is normally used for legitimate things, but in this case it is
    exploited for this attack path.
  id: totrans-split-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Normally upstream publishes release tarballs that are different than the automatically
    generated ones in GitHub. In these modified tarballs, a malicious version of `build-to-host.m4`
    is included to execute a script during the build process.
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
- en: 'This script (at least in versions 5.6.0 and 5.6.1) checks for various conditions
    like the architecture of the machine. Here is a snippet of the malicious script
    that gets unpacked by `build-to-host.m4` and an explanation of what it does:'
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
- en: '`if ! (echo "$build" | grep -Eq "^x86_64" > /dev/null 2>&1) && (echo "$build"
    | grep -Eq "linux-gnu$" > /dev/null 2>&1);then`'
  id: totrans-split-34
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: If amd64/x86_64 is the target of the build
  id: totrans-split-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And if the target uses the name `linux-gnu` (mostly checks for the use of glibc)
  id: totrans-split-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'It also checks for the toolchain being used:'
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-split-38
  prefs:
  - PREF_BQ
  type: TYPE_PRE
- en: 'And if you are trying to build a Debian or Red Hat package:'
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
- en: '`if test -f "$srcdir/debian/rules" || test "x$RPM_ARCH" = "xx86_64";then`'
  id: totrans-split-40
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This attack thusly seems to be targeted at amd64 systems running glibc using
    either Debian or Red Hat derived distributions. Other systems may be vulnerable
    at this time, but we don't know.
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
- en: Lasse Collin, the original long-standing xz maintainer, is currently working
    on auditing the `xz.git`.
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-split-43
  prefs: []
  type: TYPE_PRE
- en: 'If those conditions check, the payload is injected into the source tree. We
    have not analyzed this payload in detail. Here are the main things we know:'
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
- en: The payload activates if the running program has the process name `/usr/sbin/sshd`.
    Systems that put `sshd` in `/usr/bin` or another folder may or may not be vulnerable.
  id: totrans-split-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It may activate in other scenarios too, possibly even unrelated to ssh.
  id: totrans-split-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We don't entirely know the payload is intended to do. We are investigating.
  id: totrans-split-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Successful exploitation does not generate any log entries.
  id: totrans-split-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vanilla upstream OpenSSH isn't affected unless one of its dependencies links
    `liblzma`.
  id: totrans-split-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lennart Poettering had [mentioned](https://news.ycombinator.com/item?id=39867126)
    that it may happen via pam->libselinux->liblzma, and possibly in other cases too,
    but...
  id: totrans-split-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: libselinux does not link to liblzma. It turns out the confusion was because
    of an old downstream-only patch in Fedora and a stale dependency in the RPM spec
    which persisted long-beyond its removal.
  id: totrans-split-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: PAM modules are loaded too late in the process AFAIK for this to work (another
    possible example was `pam_fprintd`). Solar Designer [raised this issue](https://openwall.com/lists/oss-security/2024/03/31/9)
    as well on *oss-security*.
  id: totrans-split-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The payload is loaded into `sshd` indirectly. `sshd` is often patched to support
    [systemd-notify](https://www.freedesktop.org/software/systemd/man/249/systemd-notify.html)
    so that other services can start when sshd is running. `liblzma` is loaded because
    it''s depended on by other parts of `libsystemd`. This is not the fault of systemd,
    this is more unfortunate. The patch that most distributions use is available here:
    [openssh/openssh-portable#375](https://github.com/openssh/openssh-portable/pull/375).'
  id: totrans-split-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Update*: The OpenSSH developers have added [non-library integration](https://bugzilla.mindrot.org/show_bug.cgi?id=2641#c33)
    of the systemd-notify protocol so distributions won''t be patching it in via `libsystemd`
    support anymore. This change has been committed and will land in OpenSSH-9.8,
    due around June/July 2024.'
  id: totrans-split-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: If this payload is loaded in openssh `sshd`, the `RSA_public_decrypt` function
    will be redirected into a malicious implementation. We have observed that this
    malicious implementation can be used to bypass authentication. ~~Further research
    is being done to explain why.~~
  id: totrans-split-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Filippo Valsorda has shared [analysis](https://bsky.app/profile/filippo.abyssdomain.expert/post/3kowjkx2njy2b)
    indicating that the attacker must supply a key which is verified by the payload
    and then attacker input is passed to `system()`, giving remote code execution
    (RCE).
  id: totrans-split-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Jia Tan's [328c52da8a2bbb81307644efdb58db2c422d9ba7](https://git.tukaani.org/?p=xz.git;a=commitdiff;h=328c52da8a2bbb81307644efdb58db2c422d9ba7)
    commit contained a `.` in the CMake check for landlock sandboxing support. This
    caused the check to always fail so landlock support was detected as absent.
  id: totrans-split-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hardening of CMake's `check_c_source_compiles` has been proposed (see *Other
    projects*).
  id: totrans-split-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: IFUNC was introduced for *crc64* in [ee44863ae88e377a5df10db007ba9bfadde3d314](https://git.tukaani.org/?p=xz.git;a=commit;h=ee44863ae88e377a5df10db007ba9bfadde3d314)
    by *Hans Jansen*.
  id: totrans-split-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Hans Jansen* later went on to ask Debian to update xz-utils in [https://bugs.debian.org/1067708](https://bugs.debian.org/1067708),
    but this is quite a common thing for eager users to do, so it''s not necessarily
    nefarious.'
  id: totrans-split-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: We do not want to speculate on the people behind this project in this document.
    This is not a productive use of our time, and law enforcement will be able to
    handle identifying those responsible. They are likely patching their systems too.
  id: totrans-split-61
  prefs: []
  type: TYPE_NORMAL
- en: 'xz-utils had two maintainers:'
  id: totrans-split-62
  prefs: []
  type: TYPE_NORMAL
- en: Lasse Collin (*Larhzu*) who has maintained xz since the beginning (~2009), and
    before that, `lzma-utils`.
  id: totrans-split-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jia Tan (*JiaT75*) who started contributing to xz in the last 2-2.5 years and
    gained commit access, and then release manager rights, about 1.5 years ago. He
    was removed on 2024-03-31 as Lasse begins his long work ahead.
  id: totrans-split-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lasse regularly has internet breaks and was on one of these as this all kicked
    off. He has posted an update at [https://tukaani.org/xz-backdoor/](https://tukaani.org/xz-backdoor/)
    and is working with the community.
  id: totrans-split-65
  prefs: []
  type: TYPE_NORMAL
- en: Please be patient with him as he gets up to speed and takes time to analyse
    the situation carefully.
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
- en: This is the part which is very much in flux. It's early days yet.
  id: totrans-split-67
  prefs: []
  type: TYPE_NORMAL
- en: 'These two especially do a great job of analysing the initial/bash stages:'
  id: totrans-split-68
  prefs: []
  type: TYPE_NORMAL
- en: 'Other great resources:'
  id: totrans-split-69
  prefs: []
  type: TYPE_NORMAL
- en: There are concerns some other projects are affected (either by themselves or
    changes to other projects were made to facilitate the xz backdoor). I want to
    avoid a witch-hunt but listing some examples here which are already been linked
    widely to give some commentary.
  id: totrans-split-70
  prefs: []
  type: TYPE_NORMAL
- en: Tangential efforts as a result of this incident
  id: totrans-split-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](#tangential-efforts-as-a-result-of-this-incident)'
  id: totrans-split-72
  prefs: []
  type: TYPE_NORMAL
- en: This is for suggesting specific changes which are being considered as a result
    of this.
  id: totrans-split-73
  prefs: []
  type: TYPE_NORMAL
- en: 'CMake: [Consider hardening check_c_source_compiles](https://gitlab.kitware.com/cmake/cmake/-/issues/25846)
    - [MR](https://gitlab.kitware.com/cmake/cmake/-/merge_requests/9391)'
  id: totrans-split-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'bug-autoconf: [Add a syntax check to code snippets](https://savannah.gnu.org/support/?111048)'
  id: totrans-split-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'bug-autoconf: [autoreconf --force seemingly does not forcibly update everything](https://lists.gnu.org/archive/html/bug-autoconf/2024-03/msg00000.html)'
  id: totrans-split-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'systemd: [Reduce dependencies of libsystemd](https://github.com/systemd/systemd/issues/32028)'
  id: totrans-split-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Note*: There was prior work already on this in e.g. [systemd/systemd#31550](https://github.com/systemd/systemd/pull/31550).
    While it was initially thought that this [may have](https://openwall.com/lists/oss-security/2024/03/31/9)
    have caused acceleration of plans to backdoor xz, as the systemd changes had not
    yet landed in a release, the timing doesn''t seem to work out..'
  id: totrans-split-78
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '*xz-5.6.0*, the first known-backdoored version, was released on 2024-02-26.'
  id: totrans-split-79
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Per Debian's [package tracker](https://tracker.debian.org/pkg/xz-utils), *xz-5.6.0*
    was first added on that same day. This predates the systemd PR which was opened
    on 2024-02-29.
  id: totrans-split-80
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: That said, the [original PR](https://github.com/systemd/systemd/pull/31131)
    to move systemd towards more `dlopen()` for e.g. `kmod` was opened on 2024-01-30.
  id: totrans-split-81
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: On the same day, a systemd developer [suggested](https://github.com/systemd/systemd/pull/31131#issuecomment-1917954597)
    extending the approach to compression libraries.
  id: totrans-split-82
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'systemd: [RFC: expose dlopen() dependencies in an ELF section](https://github.com/systemd/systemd/pull/32234)'
  id: totrans-split-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'groff: [[PATCH] Distribute bootstrap and bootstrap.conf](https://lists.gnu.org/archive/html/groff/2024-03/msg00211.html)'
  id: totrans-split-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'GNU binutils: [Remove dependency on libjansson](https://inbox.sourceware.org/binutils/CACKH++ZCwhA9n9GfsWPmBQgsSrvfeOpLha0=UCpHzPDD8vQpNQ@mail.gmail.com/T/#u)'
  id: totrans-split-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: openssh
  id: totrans-split-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note that as covered above, OpenSSH are looking at removing the need for downstreams
    to patch in libsystemd by implementing a library-less version of the same functionality.
  id: totrans-split-87
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Andres Freund noticed an interesting [tangential bug/area for improvement](https://bugzilla.mindrot.org/show_bug.cgi?id=3675)
    when analysing the exploit, which would avoid checking against algorithms disabled
    by configuration. (This is not a vulnerability in OpenSSH and it wouldn't have
    prevented any of this, but it's come out of this whole thing nonetheless).
  id: totrans-split-88
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Auditing Linux distribution packages with [distro-backdoor-scanner](https://github.com/hlein/distro-backdoor-scanner)
  id: totrans-split-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: esr's [autodafe](https://gitlab.com/esr/autodafe/) to aid conversion from autotools
    -> Makefiles
  id: totrans-split-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'backseat-signed: [New supply-chain security tool: backseat-signed](https://lists.debian.org/debian-devel/2024/04/msg00088.html)'
  id: totrans-split-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Discussions in the wake of this
  id: totrans-split-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](#discussions-in-the-wake-of-this)'
  id: totrans-split-93
  prefs: []
  type: TYPE_NORMAL
- en: This is for linking to interesting general discussions, rather than specific
    changes being suggested (see above).
  id: totrans-split-94
  prefs: []
  type: TYPE_NORMAL
- en: 'Non-mailing list proposals:'
  id: totrans-split-95
  prefs: []
  type: TYPE_NORMAL
- en: Andres Freund who discovered the issue and reported it to *linux-distros* and
    then *oss-security*.
  id: totrans-split-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All the hard-working security teams helping to coordinate a response and push
    out fixes.
  id: totrans-split-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xe Iaso who resummarized this page for readability.
  id: totrans-split-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Everybody who has provided me tips privately, in #tukaani, or in comments on
    this gist.'
  id: totrans-split-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Please try to keep comments on the gist constrained to editorial changes
    I need to make, new sources, etc.**'
  id: totrans-split-100
  prefs: []
  type: TYPE_NORMAL
- en: There are various places to theorise & such, please see e.g. [https://discord.gg/TPz7gBEE](https://discord.gg/TPz7gBEE)
    (for both, reverse engineering and OSint). (I'm not associated with that Discord
    but the link is going around, so...)
  id: totrans-split-101
  prefs: []
  type: TYPE_NORMAL
- en: 'A few people have asked why Jia Tan followed me (@thesamesam) on GitHub. #tukaani
    was a small community on IRC before this kicked off (~10 people, currently has
    ~350). I''ve been in #tukaani for a few years now. When the move from self-hosted
    infra to github was being planned and implemented, I was around and starred &
    followed the new Tukaani org pretty quickly.'
  id: totrans-split-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I'm referenced in one of the [commits](https://git.tukaani.org/?p=xz.git;a=commit;h=72d2933bfae514e0dbb123488e9f1eb7cf64175f)
    in the original oss-security post that works around noise from the IFUNC resolver.
    This was a legitimate issue which applies to IFUNC resolvers in general. The GCC
    bug it led to ([PR114115](https://gcc.gnu.org/PR114115)) has been fixed.
  id: totrans-split-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: On reflection, there may have been a missed opportunity as maybe I should have
    looked into why I couldn't hit the reported Valgrind problems from Fedora on Gentoo,
    but this isn't the place for my own reflections nor is it IMO the time yet.
  id: totrans-split-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Add a table of releases + signer?
  id: totrans-split-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Include the injection script after the macro
  id: totrans-split-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mention detection?
  id: totrans-split-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Explain the bug-autoconf thing maybe wrt serial
  id: totrans-split-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Explain dist tarballs, why we use them, what they do, link to autotools docs,
    etc
  id: totrans-split-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '"Explaining the history of it would be very helpful I think. It also explains
    how a single person was able to insert code in an open source project that no
    one was able to peer review. It is pragmatically impossible, even if technically
    possible once you know the problem is there, to peer review a tarball prepared
    in this manner."'
  id: totrans-split-110
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Anyone can and should work on these. I'm just listing them so people have a
    rough idea of what's left.
  id: totrans-split-111
  prefs: []
  type: TYPE_NORMAL
- en: '**Ensuring Lasse Collin and xz-utils is supported**, even long after the fervour
    is over'
  id: totrans-split-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reverse engineering the payload (it's still fairly early days here on this)
  id: totrans-split-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Once finished, tell people whether:'
  id: totrans-split-114
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'the backdoor did anything else than waiting for connections for RCE, like:'
  id: totrans-split-115
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: call home (send found private keys, etc)
  id: totrans-split-116
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: load/execute additional rogue code
  id: totrans-split-117
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: did some other steps to infest the system (like adding users, authorized_keys,
    etc.) or whether it can be certainly said, that it didn't do so
  id: totrans-split-118
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: other attack vectors than via sshd were possible
  id: totrans-split-119
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: whether people (who had the compromised versions) can feel fully safe *if* they
    either had sshd not running OR at least not publicly accessible (e.g. because
    it was behind a firewall, nat, iptables, etc.)
  id: totrans-split-120
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Auditing all possibly-tainted xz-utils commits
  id: totrans-split-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Investigate other paths for `sshd` to get `liblzma` in its process (not just
    via `libsystemd`, or at least not directly)
  id: totrans-split-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This is already partly done and it looks like none exist, but it would be nice
    to be sure.
  id: totrans-split-123
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Checking other projects for similar injection mechanisms (e.g. similar build
    system lines)
  id: totrans-split-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Diff and review all "golden" upstream tarballs used by distros against the output
    of creating a tarball from the git tag for all packages.
  id: totrans-split-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Check other projecs which (recently) introduced IFUNC, as suggested by *thegrugq*.
  id: totrans-split-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This isn't a bad idea even outside of potential backdoors, given how brittle
    IFUNC is.
  id: totrans-split-127
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ???
  id: totrans-split-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: References and other reading material
  id: totrans-split-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](#references-and-other-reading-material)'
  id: totrans-split-130
  prefs: []
  type: TYPE_NORMAL
