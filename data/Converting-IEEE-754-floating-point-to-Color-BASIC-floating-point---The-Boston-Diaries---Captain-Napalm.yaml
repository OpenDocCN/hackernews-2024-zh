- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 14:32:56'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:32:56
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Converting IEEE-754 floating point to Color BASIC floating point - The Boston
    Diaries - Captain Napalm
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 IEEE-754 浮点数转换为 Color BASIC 浮点数 - The Boston Diaries - Captain Napalm
- en: 来源：[https://boston.conman.org/2024/02/28.1](https://boston.conman.org/2024/02/28.1)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://boston.conman.org/2024/02/28.1](https://boston.conman.org/2024/02/28.1)
- en: I'm still playing around with [floating point on the 6809](/2024/02/07.1)—specifically,
    support for floating point for the Color Computer. The format for floating point
    for Color BASIC (written by Microsoft) predates the [IEEE-754 Floating Point Standard](https://codedocs.org/what-is/ieee-754)
    by a few years and thus, isn't quite compatible. It's close, though. It's defined
    as an 8-bit exponent, biased by 129, a single sign bit (after the exponent) and
    31 bits for the mantissa (the leading one assumed). It also does *not* support
    ±∞ nor NaN. This differs from the IEEE-754 single precision that uses a single
    sign bit, an 8-bit exponent biased by 127 and 23 bits for the mantissa (which
    also assumes a leafing one) and support for infinities and NaN. The IEEE-754 double
    precision uses a single sign bit, an 11-bit exponent biased by 1023 and 52 bit
    for the mantissa (leading one assumed) plus support for infinities and NaN.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我仍在研究 [6809 上的浮点数](/2024/02/07.1) ——特别是对 Color Computer 的浮点数支持。Color BASIC 的浮点数格式（由
    Microsoft 编写）早于几年的 [IEEE-754 浮点数标准](https://codedocs.org/what-is/ieee-754) 并因此不完全兼容。不过它们很接近。它定义了一个
    8 位指数，偏置为 129，一个单独的符号位（在指数之后），以及 31 位用于尾数（假定了前导的 1）。它也 *不* 支持 ±∞ 或 NaN。这与 IEEE-754
    单精度有所不同，后者使用一个单独的符号位，一个偏置为 127 的 8 位指数，以及 23 位尾数（也假定了一个前导的 1），并支持 ∞ 和 NaN。IEEE-754
    双精度使用一个单独的符号位，一个偏置为 1023 的 11 位指数，52 位尾数（假定了前导的 1），以及支持 ∞ 和 NaN。
- en: 'So the Color BASIC is about halfway between single precision and double precision.
    This lead me to use IEEE-754 double precision for the Color Computer backend (generating
    an error for inifinities and NaN) [then massaging the resulting double into the
    proper format](https://github.com/spc476/a09/blob/8682748ac0f98d7f83bbdb0b6e772270cf3fc89f/frsdos.c#L292).
    I double checked this by finding some floating point constants in the Color BASIC
    ROM as shown in the book *Color BASIC Unravelled II*, ([available on the Computer
    Computer Archives](https://colorcomputerarchive.com/repo/Documents/Books/Unravelled%20Series/)),
    like this table:'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，Color BASIC 处于单精度和双精度之间的中间位置。这导致我在 Color Computer 后端使用 IEEE-754 双精度（生成无穷大和
    NaN 的错误）[然后将得到的双精度数据转换为适当的格式](https://github.com/spc476/a09/blob/8682748ac0f98d7f83bbdb0b6e772270cf3fc89f/frsdos.c#L292)。我通过查找《Color
    BASIC Unravelled II》书中的一些浮点常数来进行了双重检查（[可在计算机档案库找到](https://colorcomputerarchive.com/repo/Documents/Books/Unravelled%20Series/)），例如这张表：
- en: '[PRE0]'
  id: totrans-split-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Then using the byte values to populate a variable and printing it inside BASIC
    (this is the expression -2π³/3!):'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 然后使用字节值来填充一个变量并在 BASIC 中打印它（这是表达式 -2π³/3!）：
- en: '[PRE1]'
  id: totrans-split-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then using that to create a floating point value:'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 然后使用它来创建一个浮点数值：
- en: '[PRE2]'
  id: totrans-split-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Checking the resulting bytes that were generated:'
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 检查生成的字节结果：
- en: '[PRE3]'
  id: totrans-split-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'And adjusting the floating point constant until I got bytes that matched:'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 并调整浮点数常数直到得到匹配的字节：
- en: '[PRE4]'
  id: totrans-split-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: I figure it's “close enough.” The parsing code in the Color BASIC ROM is old
    and predates the IEEE-754 floating point standard, so a few different digits at
    the end I think is okay.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我觉得“足够接近”。Color BASIC ROM 中的解析代码过时，并且早于 IEEE-754 浮点数标准，因此我认为末尾的一些不同数字是可以接受的。
- en: 'As a final check, I wrote the following bit of code to calculate and display
    -2π³/3!, display the pre-calculated result, as well as display the pre-calculated
    value of 2π:'
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 作为最后的检查，我编写了以下代码片段来计算并显示 -2π³/3!，显示预计算结果，以及显示 2π 的预计算值：
- en: '[PRE5]'
  id: totrans-split-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The results were:'
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '[PRE6]'
  id: totrans-split-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The calculation results in -41.3417023 and the direct result stored in `answer`
    also prints out -41.3417023, so that matches and it reinforces my approach to
    this nominally right.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 计算结果为 -41.3417023，而存储在 `answer` 中的直接结果也打印为 -41.3417023，因此匹配并强化了我对此方法的实现。
- en: But I think Microsoft had issues with either generating some of the floating
    point constants for the larger terms, or transcribing the byte values of the larger
    terms. Take for instance -2π^(11)/11!. The correct answer is -15.0946426, but
    the bytes in the ROM define the constant -14.3813907, a difference of .7. And
    it's not like Color BASIC can't calculate that correctly—when I typed in the expression
    by hand, it was able to come up with -15.0946426.
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 但我认为微软在生成一些较大项的浮点常数或将较大项的字节值转录方面存在问题。例如，考虑到-2π^(11)/11!。正确答案是-15.0946426，但ROM中的字节定义常数为-14.3813907，相差0.7。而不像Color
    BASIC无法正确计算—当我手动输入表达式时，它能够得出-15.0946426。
- en: Or it could be that ~~Walter K. Zydhek,~~  author of *Color BASIC Unravelled
    II*, is wrong in his interpretation of the expressions used to generate the values,
    or his interpretation of what the values are used for. I'm not sure who is at
    fault here.
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 或者可能是《Color BASIC Unravelled II》的作者Walter K. Zydhek在生成值的表达式或他用于值的解释方面存在误解。我不确定谁在这里有错。
- en: Update on Friday, March 1^(st), 2024
  id: totrans-split-25
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 2024年3月1日星期五更新
- en: I was wrong about the authorship of *Color BASIC Unravelled II*. It was not
    Walter K. Zydhek, but some unknown author of Spectral Associates, a company that
    is no longer in business. All Zydhek did was to transcribe a physical copy of
    the book (which is no longer available for purchase anywhere) into a PDF and make
    it available.
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我错了关于《Color BASIC Unravelled II》的作者身份。它不是Walter K. Zydhek，而是一家已经不再运营的公司Spectral
    Associates的某位未知作者。Zydhek所做的只是将该书的实体副本转录成PDF，并提供下载。
- en: '* * *'
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Discussions about this entry
  id: totrans-split-28
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 讨论关于这个条目
- en: You have my permission to link freely to any entry here. Go ahead, I won't bite.
    I promise.
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以自由链接到这里的任何条目。去吧，我不会咬你。我保证。
- en: 'The dates are the permanent links to that day''s entries (or entry, if there
    is only one entry). The titles are the permanent links to *that* entry only. The
    format for the links are simple: Start with the base link for this site: [https://boston.conman.org/](https://boston.conman.org/),
    then add the date you are interested in, say [2000/08/01](/2000/08/01), so that
    would make the final URL:'
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这些日期是当天条目的永久链接（或如果只有一个条目，则是条目）。标题是仅次于*该*条目的永久链接。链接的格式很简单：从此站点的基本链接开始：[https://boston.conman.org/](https://boston.conman.org/)，然后添加您感兴趣的日期，比如[2000/08/01](/2000/08/01)，这将使最终URL如下：
- en: '[https://boston.conman.org/2000/08/01](https://boston.conman.org/2000/08/01)'
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://boston.conman.org/2000/08/01](https://boston.conman.org/2000/08/01)'
- en: You can also specify the entire month by leaving off the day portion. You can
    even select [an arbitrary portion of time.](/about/technical.html)
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过省略日期部分来指定整个月份。您甚至可以选择[任意时间段。](/about/technical.html)
- en: 'You may also note subtle shading of the links and that''s intentional: the
    “closer” the link is (relative to the page) the “brighter” it appears. It''s an
    experiment in using color shading to denote the distance a link is from here.
    If you don''t notice it, don''t worry; it''s not all *that* important.'
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以注意到链接的微妙阴影，这是有意的：链接越“接近”（相对于页面），它显得“更亮”。这是使用颜色阴影来表示链接距离这里的一种实验。如果您没有注意到，不要担心；这并不是*那么*重要。
- en: It is assumed that every brand name, slogan, corporate name, symbol, design
    element, et cetera mentioned in these pages is a protected and/or trademarked
    entity, the sole property of its owner(s), and acknowledgement of this status
    is implied.
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
  zh: 假定在这些页面中提到的每个品牌名称、口号、公司名称、符号、设计元素等均为受保护和/或注册商标的实体，其所有者独有，对此状态的承认是暗示的。
