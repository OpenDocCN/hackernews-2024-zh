- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 12:49:18'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 12:49:18'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'XZ Backdoor: Times, damned times, and scams'
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: XZ后门：时间、该死的时间和欺诈
- en: 来源：[https://rheaeve.substack.com/p/xz-backdoor-times-damned-times-and](https://rheaeve.substack.com/p/xz-backdoor-times-damned-times-and)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://rheaeve.substack.com/p/xz-backdoor-times-damned-times-and](https://rheaeve.substack.com/p/xz-backdoor-times-damned-times-and)
- en: 're: [https://www.openwall.com/lists/oss-security/2024/03/29/4](https://www.openwall.com/lists/oss-security/2024/03/29/4)'
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 're: [https://www.openwall.com/lists/oss-security/2024/03/29/4](https://www.openwall.com/lists/oss-security/2024/03/29/4)'
- en: '*Written by Rhea Karty and Simon Henniger*'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: '*Written by Rhea Karty and Simon Henniger*'
- en: 'There has been a recent backdoor found in the xz/liblzma tarball. In what is
    likely one of the largest breaches of trust in the free software ecosystem, this
    backdoor is likely to have been put in by Jia Tan, a long-time maintainer of xz.
    Throughout his tenure as a maintainer, Jia remained relatively mysterious — as
    is not uncommon in the community, little beyond his name (which is likely a lie)
    is known about him. Generally, anonymity in the free software sphere is a good
    thing: software is inherently based on accomplishment and merit, and there is
    no reason to know anything about a person’s identity. However, in this case, where
    someone built up the trust of a community for years and then abused it, it is
    interesting to see who they are. Luckily for us, Jia’s activity does provide some
    metadata which we can potentially use to learn more about him. So here’s an analysis
    on what we can learn from his work patterns and time zone.'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 最近在xz/liblzma tarball中发现了一个后门。这很可能是自由软件生态系统中信任最大的背叛之一，这个后门很可能是由长期担任xz维护者的贾坦（Jia
    Tan）放入的。在担任维护者期间，贾一直保持相对神秘 —— 这在社区中并不罕见，除了他的名字（可能是假的），我们几乎一无所知。通常，在自由软件领域中匿名是一件好事：软件本质上是基于成就和功绩的，没有理由了解一个人的身份。然而，在这种情况下，一个人建立了多年的社区信任，然后滥用了它，了解他们的身份变得很有趣。幸运的是，贾的活动确实提供了一些我们可以用来了解更多信息的元数据。因此，这里是关于我们可以从他的工作模式和时区中学到的分析。
- en: What is to be learned from times? The conditions under which software is created!
    Think about the wide range of things that time patterns tell us about — there
    are people who are paid to do code and those who work on it as a hobby. Those
    in some areas code during different times as others. There are holidays, sleep
    schedules, and work-life balance— code is not exempt from these. Understanding
    when someone codes helps us understand *why* and *where* they are coding for.
    Figuring these out can give us a much better idea about why and who did this.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 什么可以从时间中学到？软件创建的条件！思考一下时间模式告诉我们的广泛内容 —— 有些人被付费编写代码，有些人把它作为业余爱好。某些领域的人会在不同时间编写代码。还有节假日、睡眠时间表和工作与生活的平衡
    —— 代码并不例外。了解某人编写代码的时间有助于我们理解他们为何在何地编写。弄清楚这些可以让我们对此做出更好的了解。
- en: The following analysis was conducted on JiaT75’s ([https://github.com/JiaT75?tab=overview&from=2021-12-01&to=2021-12-31](https://github.com/JiaT75?tab=overview&from=2021-12-01&to=2021-12-31))
    commits to the XZ repository and their time stamps.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 对JiaT75的([https://github.com/JiaT75?tab=overview&from=2021-12-01&to=2021-12-31](https://github.com/JiaT75?tab=overview&from=2021-12-01&to=2021-12-31))对XZ库的提交和时间戳进行了以下分析。
- en: 'Let’s first address the elephant in the room: Yes, you can change Git timestamps
    to whatever you want. It doesn’t even take a degree in cybersec to do — setting
    the environment variables GIT_AUTHOR_DATE and GIT_COMMITTER_DATE as you commit
    is enough. If you forget and haven’t pushed yet, you can even change the date
    later as you amend the commit.'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先直面问题：是的，你可以将Git时间戳更改为任何你想要的时间。甚至不需要掌握网络安全学位 — 只要在提交时设置环境变量GIT_AUTHOR_DATE和GIT_COMMITTER_DATE即可。如果你忘了设置，且还没有推送，你甚至可以稍后修改提交时的日期。
- en: 'However, plausibly forging time data is actually hard: You shouldn’t push a
    commit that you made to look as though it was made in the future, and you also
    shouldn’t set a date that is so far in the past that the commit looks older than
    online discussions that it references. This means you will often not be able to
    change the time without adding latency, i.e., withholding commits and thus delaying
    project development -- and even then, getting it right every time is hard. After
    all, everyone who develops software knows how tempting it is to type the magic
    words “git commit” without having properly checked everything.'
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，似乎制造时间数据实际上很难：你不应该提交一个看起来是在将来提交的提交，你也不应该设置一个比在线讨论引用的时间还早得多的日期。这意味着你通常无法在不增加延迟的情况下改变时间，即不提交而延迟项目开发——即使这样，每次都把握准确也很困难。毕竟，每个开发软件的人都知道，在没有正确检查一切的情况下，输入“git
    commit”这几个魔术词是多么诱人。
- en: An easier way than actually changing the time would be to change only the time
    zone! Ideally, you would change it to something that still leads to somewhat plausible
    hours. For example, someone who works during regular European office hours but
    claims to be on the East Coast would likely raise some suspicion, as 11 am Central
    European Time is 5 AM Eastern, and who regularly works in the early morning? For
    a hacker, it is much more plausible to work in the afternoon and late at night,
    so someone who keeps regular office hours would want to change into a time zone
    about five hours ahead or so (so they start working at 2 pm (9 am real-time) and
    end at 10 pm (5 pm real time)).
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 比实际更容易的方法是只改变时区！理想情况下，你会改变到一些仍然导致相对合理的时间段的时区。例如，一个在欧洲正常办公时间工作但声称在东海岸的人很可能会引起一些怀疑，因为中欧时间上午11点是东部时间上午5点，谁会在清晨工作呢？对于一个黑客来说，在下午和深夜工作要合理得多，因此一个保持常规办公时间的人可能会想要改变到大约五小时前的时区（这样他们开始工作是下午2点（实际上是上午9点）并且结束工作是晚上10点（实际上是下午5点））。
- en: I think that is what Jia Tan did. Based on his name, he wanted people to believe
    he is Asian — specifically Chinese— and the vast majority of his commits (440)
    appear to have a UTC+08 time stamp. The +0800 is likely CST, the time zone of
    China (or Indonesia or Philippines or Western Australia), given almost no one
    lives in Siberia and the Gobi desert.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为这就是田佳做的事情。根据他的名字，他想让人们相信他是亚洲人——特别是中国人——他的绝大部分提交（440次）看起来都有UTC+08的时间戳。+0800很可能是中国标准时间（或印度尼西亚或菲律宾或西澳大利亚），因为几乎没有人生活在西伯利亚和戈壁沙漠。
- en: However, I believe that he is actually from somewhere in the UTC+02 (winter)/UTC+03
    (DST) timezone, which includes Eastern Europe (EET), but also Israel (IST), and
    some others. Forging time zones would be easy — no need to do any math or delay
    any commits. He likely just changed his system time to Chinese time every time
    he committed.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我认为他实际上来自UTC+02（冬季）/UTC+03（夏令时）时区的某个地方，这包括东欧（东欧时间，EET），还有以色列（以色列时间，IST），以及其他一些地方。伪造时区将会很容易——不需要做任何数学计算或者延迟提交。他可能只是每次提交时把系统时间改成中国时间。
- en: We see him usually working 9 am to 6 pm (adjusted to EET). This makes much more
    sense than someone working at midnight and 1 am on a Tuesday night (non-adjusted,
    using UTC+08).
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到他通常在早上9点到下午6点（根据EET调整）。这比一个人在周二晚上午夜和凌晨1点工作（不调整，使用UTC+08）要合理得多。
- en: 'Except sometimes, he forgot to change his time zone. There are 3 commits and
    6 commits, respectively, with UTC+02 and UTC+03\. The UTC+02 time zones match
    perfectly with the winter time (February and November), while the UTC+03 matches
    with summer (Jun, Jul, and early October). This matches perfectly with the daylight
    savings time switchover that happens in Eastern Europe; we see a switch to +0200
    in the winter (past the last weekend of October) and +0300 in the summer (past
    the last Sunday in March). Incidentally, this seems to be the same time zone as
    Lasse Collin and Hans Jansen. [Update Apr 2: As Joey Hess points out in the commits,
    most (but not all!) times when this happens, commits have Lasse Collin as Committer.
    However, it doesn’t happen on nearly all Jia commits committed by Lasse – many
    of those show a +0800 time zone. Hence, it is a bit unclear what is special about
    those +02/03 commits – they could still be a slip-up, or due to a boring change
    in the workflow.]'
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 除了有时他忘记更改自己的时区。分别有3次和6次提交，时区为UTC+02和UTC+03。UTC+02的时区完全匹配冬季时间（2月和11月），而UTC+03则匹配夏季时间（6月、7月和10月初）。这与东欧发生的夏令时转换完美匹配；我们看到冬季（10月最后一个周末之后）变为+0200，而夏季（3月最后一个星期日之后）变为+0300。巧合的是，这似乎与拉斯·柯林和汉斯·詹森的时区相同。【2023年4月2日更新：正如乔伊·赫斯在提交中指出的那样，大多数（但并非全部！）时间在这种情况下，提交由拉斯·柯林作为提交者。但并非所有贾的提交都由拉斯进行提交，其中许多显示+0800的时区。因此，这些+02/03提交有些不清楚具体情况——它们可能仍然是失误，或者由于工作流程的无聊变化。】
- en: OK, you say. That is one theory, but maybe not a plausible one at this point.
    What if he just flew from wherever he lived in UTC+08 to EET sometimes? Well,
    it turns out that when we take a closer look, we see that this is not plausible.
    Let’s analyze the few times when Jia was recorded in a non-+0800 time zone. Here,
    we notice that there are some situations where Jia switches between +0800 and
    +0300/+0200 in a seemingly implausible time. Indicating that perhaps he is not
    actually in +0800 CST time, as his profile would like us to believe.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: “好吧，”你说。这只是一个理论，但现在可能并不是一个合理的理论。如果他只是从他生活的UTC+08飞往EET呢？嗯，事实证明，当我们仔细观察时，我们会发现这不太可能。让我们分析一下贾被记录在非+0800时区的几次情况。在这里，我们注意到有些情况下，贾在+0800和+0300/+0200之间似乎不合理地切换。这表明也许他并不真正处于+0800
    CST时区，正如他的个人资料所想要让我们相信的那样。
- en: Notably, on 6 Oct 2022, we see two commits, one at 21:53:09 +0300 followed by
    another at 17:00:38 +0800\. If we do the math, there is about an 11-hour difference
    between the two commits. However, a flight from China to anywhere in Eastern Europe
    or the Middle East takes at least 10-12 hours raw flight time, and likely much
    longer, considering non-stop flights between these locations are rare.
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是在2022年10月6日，我们看到两次提交，分别是在21:53:09 +0300和17:00:38 +0800。如果我们进行计算，两次提交之间大约相差11小时。然而，从中国飞往东欧或中东的任何地方至少需要10-12小时的飞行时间，考虑到这些地点之间的直飞航班很少，实际时间可能要更长。
- en: 'Even more damning, on Jun 27, 2023, we see the following: one commit at 23:38:32
    +0800, another at 17:27:09 +0300\. This is only a difference in a matter of minutes!'
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 更加具有破坏力的是，2023年6月27日，我们看到以下情况：在23:38:32 +0800提交了一次，接着在17:27:09 +0300又提交了一次。这只是几分钟的时间差！
- en: 'There is also one more vital clue to which country he worked in: Holidays.
    We notice that Jia’s work schedule and holidays seem to align much better with
    an Eastern European than a Chinese person. Disclaimer: I am not an expert in Chinese
    holidays, so this very well could be inaccurate. I am referencing this list of
    bank holidays: [https://www.bankofchina.co.id/en-id/service/information/latest-news/2022/public-holidays-in-china-hk-and-the-us-in-2023.html](https://www.bankofchina.co.id/en-id/service/information/latest-news/2022/public-holidays-in-china-hk-and-the-us-in-2023.html)'
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个更为重要的线索表明他工作的国家是哪个：假日。我们注意到贾的工作时间表和假期似乎更符合东欧人而非中国人。声明：我不是中国假期的专家，因此这可能是不准确的。我参考的是这个银行假期列表：[https://www.bankofchina.co.id/en-id/service/information/latest-news/2022/public-holidays-in-china-hk-and-the-us-in-2023.html](https://www.bankofchina.co.id/en-id/service/information/latest-news/2022/public-holidays-in-china-hk-and-the-us-in-2023.html)
- en: 'Chinese bank holidays (just looking at 2023):'
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 中国银行节假日（仅查看2023年）：
- en: '- Working on 2023, 29 September: Mid Autumn Festival'
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: '- 2023年9月29日：中秋节'
- en: '- Working on 2023, 05 April: Tomb Sweeping Day'
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: '- 2023年4月5日：清明节'
- en: '- Working on 2023, 26, 22, 23, 24, 26, 27 Jan: Lunar New Year'
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: '- 2023年1月22日至26日：春节'
- en: 'Eastern European holidays:'
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 东欧假期：
- en: '- Never working on Dec 25: Christmas (for many EET countries)'
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: '- 从不工作于12月25日：圣诞节（对于许多东欧时间国家）'
- en: '- Never working Dec 31 or Jan 1: New Years'
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: '- 永远不工作于12月31日或1月1日：新年'
- en: 'To further investigate, we can try to see if he worked on weekends or weekdays:
    was this a hobbyist or was he paid to do this? The most common working days for
    Jia were Tue (86), Wed (85), Thu (89), and Fri (79).'
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步调查，我们可以尝试看看他是在周末还是工作日工作的：这是一种业余爱好还是他是被付费做这个？Jia最常工作的日子是周二（86）、周三（85）、周四（89）和周五（79）。
- en: Again, none of this is rock-solid evidence for anything — but we thought this
    was an interesting enough observation to post. Based on this, “Jia” most likely
    worked regular office hours and was based somewhere in UTC+02/03 (e.g. EET).
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，这一切都不能作为任何事情的确凿证据 —— 但我们认为这是一个足够有趣的观察结果，值得发布。基于此，"Jia"很可能是在UTC+02/03（例如东欧时间）的某个地方工作的。
- en: 'Update (Mar 31): Thank you all for your great feedback! We slightly updated
    the post: We switched around the times from the two commits where time zones change
    too quickly (our point stands; we just reversed the examples). We also clarified
    that UTC +02/03 includes a wider geographical range than just Eastern Europe.'
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: 'Update (Mar 31): 感谢大家的宝贵反馈！我们稍微更新了帖子：我们交换了两个提交的时间，因为时区变化过快（我们的观点仍然存在；我们只是颠倒了例子）。我们还澄清了UTC
    +02/03不仅包括东欧，而且包括更广泛的地理范围。'
