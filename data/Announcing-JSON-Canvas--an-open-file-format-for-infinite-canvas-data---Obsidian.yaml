- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:49:39'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:49:39'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Announcing JSON Canvas: an open file format for infinite canvas data - Obsidian'
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 宣布 JSON Canvas：一种开放的无限画布数据文件格式 - Obsidian
- en: 来源：[https://obsidian.md/blog/json-canvas/](https://obsidian.md/blog/json-canvas/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://obsidian.md/blog/json-canvas/](https://obsidian.md/blog/json-canvas/)
- en: Today we’re excited to announce that the [Obsidian Canvas](https://obsidian.md/canvas)
    file format is now called [JSON Canvas](https://jsoncanvas.org/) and has its own
    site, specification, and open source resources at [jsoncanvas.org](https://jsoncanvas.org/).
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，我们非常高兴地宣布，[Obsidian Canvas](https://obsidian.md/canvas) 文件格式现在称为 [JSON Canvas](https://jsoncanvas.org/)，并且拥有自己的网站、规范以及开源资源，位于
    [jsoncanvas.org](https://jsoncanvas.org/)。
- en: JSON Canvas can be implemented freely as an import, export, and storage format
    for [any app or tool](https://jsoncanvas.org/docs/apps/). All the resources associated
    with JSON Canvas are open source under the MIT license, and can be found [on GitHub](https://github.com/obsidianmd/jsoncanvas).
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: JSON Canvas 可以自由实现为[任何应用或工具](https://jsoncanvas.org/docs/apps/)的导入、导出和存储格式。所有与
    JSON Canvas 相关的资源都在 MIT 许可下开源，并可以在 [GitHub](https://github.com/obsidianmd/jsoncanvas)
    上找到。
- en: For the [release](https://obsidian.md/changelog/2022-12-05-desktop-v1.1.0/)
    of Obsidian Canvas we created the `.canvas` format with an open spec. We created
    this format because we felt it was essential to follow the [principles](https://obsidian.md/about)
    that have guided us since the start. Your Obsidian data should always be stored
    locally, accessible offline, completely in your control, in open file formats
    that are [easy to retrieve and read](https://stephango.com/file-over-app). For
    notes we achieve this by using plain text `.md` files with Markdown syntax, a
    widely supported format. However, infinite canvas data does not yet have a similarly
    established format.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Obsidian Canvas 的 [发布](https://obsidian.md/changelog/2022-12-05-desktop-v1.1.0/)，我们创建了
    `.canvas` 格式并提供了开放的规范。我们创建这种格式是因为我们认为遵循自从开始以来一直指导我们的 [原则](https://obsidian.md/about)
    是至关重要的。您的 Obsidian 数据应始终以本地方式存储，离线访问，完全在您的控制之下，以易于检索和阅读的开放文件格式（如 [stephango.com/file-over-app](https://stephango.com/file-over-app)）。对于笔记，我们通过使用
    Markdown 语法的纯文本 `.md` 文件实现了这一点，这是一种广泛支持的格式。然而，无限画布数据目前尚未有类似的已确立格式。
- en: While infinite canvas tools are not new, they have been quickly [growing in
    popularity](https://infinitecanvas.tools/). The JSON Canvas format was created
    in hopes of providing longevity, readability, interoperability, and extensibility
    to data created with infinite canvas apps. The format is designed to be easy to
    parse and give users ownership over their data.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管无限画布工具并不新鲜，但它们已经迅速地 [增长了人气](https://infinitecanvas.tools/)。JSON Canvas 格式的创建旨在为使用无限画布应用创建的数据提供长期性、可读性、互操作性和可扩展性。该格式设计简单易解析，并赋予用户对其数据的所有权。
- en: The JSON Canvas spec is currently at [version 1.0](https://jsoncanvas.org/spec/1.0).
    The spec is relatively conservative, it does not support every feature that canvas
    apps may want to implement. However we think it is a useful starting point to
    build upon, and we plan to continue improving on it over time.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: JSON Canvas 规范目前处于 [1.0 版](https://jsoncanvas.org/spec/1.0)。该规范相对保守，不支持画布应用可能想要实现的每个功能。然而，我们认为它是一个有用的起点，并计划随着时间的推移继续改进它。
