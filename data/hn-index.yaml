- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 14:47:38'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:47:38
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: hn-index
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: hn-index
- en: 来源：[https://www.alexmolas.com/2024/02/12/hn-index.html](https://www.alexmolas.com/2024/02/12/hn-index.html)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.alexmolas.com/2024/02/12/hn-index.html](https://www.alexmolas.com/2024/02/12/hn-index.html)
- en: <main>
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: <main>
- en: hn-index
  id: totrans-split-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: hn-index
- en: '*February 12, 2024 · 5 mins · 1066 words'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*2024年2月12日 · 5分钟 · 1066字'
- en: '* * *'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**TLDR** - I implemented an h-index calculator using HackerNews scores - [alexmolas.com/hn-index](https://www.alexmolas.com/hn-index).'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**TLDR** - 我用 HackerNews 分数实现了一个 h-index 计算器 - [alexmolas.com/hn-index](https://www.alexmolas.com/hn-index)。'
- en: '* * *'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: I’m always looking for new blogs to follow, and a good way to find good quality
    blogs is HackerNews. I already have a curated list of blogs, but I’m sure I’m
    missing a lot of them. One of my problems is that a priori it’s difficult to know
    which profiles are worth following and which are not. To solve this problem I
    decided to use h-index, a metric used in science to measure the impact of publications.
    With this metric, I can score HN users, and depending on the score decide whether
    to follow them or not. As quick reminder, according to [Wikipedia](https://en.wikipedia.org/wiki/H-index),
    the h-index is defined as
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我总是在寻找新的博客来关注，而要找到质量高的博客的好方法之一就是 HackerNews。我已经有一个精选的博客列表，但我确定我漏掉了很多。我的一个问题是事先很难知道哪些个人资料值得关注，哪些不值得。为了解决这个问题，我决定使用
    h-index，这是一种在科学中用来衡量出版物影响力的指标。通过这个指标，我可以给 HN 用户打分，并根据分数决定是否关注他们。作为一个快速提醒，根据 [Wikipedia](https://en.wikipedia.org/wiki/H-index)，h-index
    被定义为
- en: The h-index is defined as the maximum value of h such that the given author/journal
    has published at least h papers that have each been cited at least h times.
  id: totrans-split-13
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: h-index 被定义为 h 的最大值，使得给定的作者/期刊至少发表了 h 篇每篇被引用至少 h 次的论文。
- en: Fortunately, HackerNews exposes an open API to fetch the data of users and items,
    and with this information is more or less easy to compute this index. The API
    is documented in their GitHub ([HN API docs](https://github.com/HackerNews/API)).
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，HackerNews 提供了一个开放的 API 来获取用户和项目的数据，有了这些信息，计算这个指数就更或多或少容易了。API 的文档可以在他们的
    GitHub 上找到（[HN API 文档](https://github.com/HackerNews/API)）。
- en: In this post, I’ll explain how I’ve implemented this solution, and show how
    can you use it to compute your index.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我将解释我如何实现这个解决方案，并展示如何使用它来计算你的指数。
- en: User data
  id: totrans-split-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用户数据
- en: User data can be fetched from `https://hacker-news.firebaseio.com/v0/user/USER_NAME.json?print=pretty`,
    and you’ll get something like
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 用户数据可以从 `https://hacker-news.firebaseio.com/v0/user/USER_NAME.json?print=pretty`
    获取，你会得到类似以下的信息：
- en: '[PRE0]'
  id: totrans-split-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Item data
  id: totrans-split-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目数据
- en: User data can be fetched from `https://hacker-news.firebaseio.com/v0/item/ITEM_ID.json?print=pretty`,
    and you’ll get something like
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 用户数据可以从 `https://hacker-news.firebaseio.com/v0/item/ITEM_ID.json?print=pretty`
    获取，你会得到类似以下的信息：
- en: '[PRE1]'
  id: totrans-split-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: One of the problems I’ve faced here is that all the items are exposed in the
    same endpoint. This means that you can’t query specifically for stories. So you
    don’t know a priori if an item is a comment or a story. We’ll see later that this
    slows down quite a bit the computations.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这里面对的问题之一是所有的项目都暴露在同一个端点上。这意味着你不能特别查询故事。所以你事先不知道一个项目是评论还是故事。我们稍后会看到，这会显著减慢计算速度。
- en: Putting everything together
  id: totrans-split-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将所有内容整合在一起
- en: With these two endpoints, we have all the information we need to compute the
    h-index of a user. To do so we only need to get all the submissions a user has
    made, and then for each submission get the score it has. As I said before, we
    can’t know a priori which submissions of a user are stories and which comments,
    so we need to fetch first the data and then filter by type, which makes the process
    slower.
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这两个端点，我们就有了计算用户 h-index 所需的所有信息。为此，我们只需获取用户提交的所有内容，然后针对每个提交获取其得分。正如我之前所说，我们不能事先知道用户的哪些提交是故事，哪些是评论，所以我们需要先获取数据，然后按类型筛选，这使得过程变慢。
- en: I implemented the code to compute it in a [python script](https://github.com/alexmolas/alexmolas.github.io/blob/master/hn-index/script.py).
    The code is quite fast, and it takes around 20 seconds to compute the h-index
    for [pg](https://news.ycombinator.com/user?id=pg) which has more than 15k submissions,
    of which around 700 are stories. For my user, it takes around 1 second.
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我实现了计算它的代码在一个 [python 脚本](https://github.com/alexmolas/alexmolas.github.io/blob/master/hn-index/script.py)
    中。这段代码运行速度相当快，为 [pg](https://news.ycombinator.com/user?id=pg) 计算其有超过 15k 提交，其中大约
    700 是故事，大约需要 20 秒。对于我的用户，大约需要 1 秒。
- en: Making it accessible
  id: totrans-split-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使其可访问
- en: Then, I thought that if I wanted to make it accessible I should implement it
    directly in my site. And with some help from a well-known LLM I managed to do
    so. The functionality is now available at [HN-Index](https://www.alexmolas.com/hn-index/).
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我想如果我想让它更易访问，我应该直接在我的网站上实现它。并且在一位知名的LLM的帮助下，我成功地做到了。现在功能已经在[HN-Index](https://www.alexmolas.com/hn-index/)上可用。
- en: For some reasons unknown to me, the web version is much slower than the Python
    one, and I haven’t managed to make it faster yet. So if you know how to improve
    it please write me and I’ll change it. The JavaScript code to fetch and compute
    the index is [here](https://github.com/alexmolas/alexmolas.github.io/blob/master/hn-index/app.js).
    I’m not a JavaScript expert, don’t be too harsh judging the code.
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我不知道的某些原因，网页版本比Python版本慢得多，我还没有成功地加快它。所以如果你知道如何改进，请写信给我，我会改进的。用于获取和计算指数的JavaScript代码在[这里](https://github.com/alexmolas/alexmolas.github.io/blob/master/hn-index/app.js)。我不是JavaScript专家，请不要对代码过于苛刻。
- en: Some insights
  id: totrans-split-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一些见解
- en: Finally, let’s see who are the best HN users in terms of h-index. Since computing
    the index for all the users was unfeasible I decided to check it only for the
    [leaders](https://news.ycombinator.com/leaders). In the following table, we have
    the user with the highest h-index.
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们看看在h指数方面谁是最优秀的HN用户。由于计算所有用户的指数是不可行的，我决定仅检查[领导者](https://news.ycombinator.com/leaders)的指数。在下表中，我们有最高h指数的用户。
- en: '[PRE2]'
  id: totrans-split-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: On the other hand, it’s also interesting that some of the users in the leaderboard
    have a very low h-index, which means that almost all their karma comes from comments.
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，有趣的是排行榜上一些用户的h指数非常低，这意味着他们几乎所有的声望来自评论。
- en: '[PRE3]* </main>'
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE3]* </main>'
