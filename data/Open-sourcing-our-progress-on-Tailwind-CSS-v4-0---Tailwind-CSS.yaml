- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:39:50'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:39:50'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Open-sourcing our progress on Tailwind CSS v4.0 - Tailwind CSS
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们在 Tailwind CSS v4.0 上的开源进展 - Tailwind CSS
- en: 来源：[https://tailwindcss.com/blog/tailwindcss-v4-alpha](https://tailwindcss.com/blog/tailwindcss-v4-alpha)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://tailwindcss.com/blog/tailwindcss-v4-alpha](https://tailwindcss.com/blog/tailwindcss-v4-alpha)
- en: Last summer at Tailwind Connect [I shared a preview of Oxide](https://www.youtube.com/watch?v=CLkxRnRQtDE&t=2146s)
    — a new high-performance engine for Tailwind CSS that we’ve been working on, designed
    to simplify the developer experience and take advantage of how the web platform
    has evolved in recent years.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 上个夏天在 Tailwind Connect 大会上，[我分享了 Oxide 的预览](https://www.youtube.com/watch?v=CLkxRnRQtDE&t=2146s)
    — 这是 Tailwind CSS 的一个新的高性能引擎，我们一直在开发它，旨在简化开发者的体验，并充分利用近年来 Web 平台的发展。
- en: The new engine was originally going to ship as a v3.x release, but even though
    we’re committed to backwards compatibility, this feels so clearly like a new generation
    of the framework that it deserves to be v4.0.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 最初新引擎将作为 v3.x 发布，但尽管我们致力于向后兼容性，但这显然是框架的一个新世代，因此它应该是 v4.0。
- en: It’s still early and we’ve got [a lot of work to do](/blog/tailwindcss-v4-alpha#roadmap-to-v4-0),
    but today we’re [open-sourcing our progress](https://github.com/tailwindlabs/tailwindcss/tree/next)
    and tagging the first public [v4.0.0-alpha](https://www.npmjs.com/package/tailwindcss/v/4.0.0-alpha.3)
    so you can start experimenting with it and help us get to a stable release later
    this year.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 目前还处于早期阶段，我们有[很多工作要做](/blog/tailwindcss-v4-alpha#roadmap-to-v4-0)，但今天我们[公开了我们的进展](https://github.com/tailwindlabs/tailwindcss/tree/next)，并标记了第一个公开的
    [v4.0.0-alpha](https://www.npmjs.com/package/tailwindcss/v/4.0.0-alpha.3)，以便您开始尝试并帮助我们在今年晚些时候稳定发布。
- en: I’ll try keep it brief to save some of the excitement for the stable release,
    but if you like to play with very early and experimental stuff, there should be
    plenty of information here to get you going.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保留一些稳定版本的期待感，我将尽量简短，但如果您喜欢尝试非常早期和实验性的东西，这里应该有足够的信息让您开始。
- en: '* * *'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: The new engine is a ground-up rewrite, using everything we know about the framework
    now to better model the problem space, making things faster with a lot less code.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这个新引擎是从头开始重写的，利用我们现在对框架的全面了解来更好地建模问题空间，通过减少代码量，使得系统更快。
- en: '**Up to 10x faster** — we can do a full build of the Tailwind CSS website in
    105ms instead of 960ms, or our Catalyst UI kit in 55ms instead of 341ms.'
  id: totrans-split-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高达 10 倍的速度提升** — 我们可以将 Tailwind CSS 网站的完整构建时间从 960ms 缩短至 105ms，或将我们的 Catalyst
    UI kit 的构建时间从 341ms 缩短至 55ms。'
- en: '**Smaller footprint** — the new engine is over 35% smaller installed, even
    with the heavier native packages we ship like the parts we’ve rewritten in Rust
    and Lightning CSS.'
  id: totrans-split-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更小的足迹** — 这个新引擎的安装包体积减少了超过 35%，即使包含了我们重写为 Rust 和 Lightning CSS 的更重的原生包。'
- en: '**Rust where it counts** — we’ve migrated some of the most expensive and parallelizable
    parts of the framework to Rust, while keeping the core of the framework in TypeScript
    for extensibility.'
  id: totrans-split-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Rust 处理关键部分** — 我们已将框架中一些最昂贵且可并行化的部分迁移到了 Rust，同时保持框架核心在 TypeScript 中以实现可扩展性。'
- en: '**One dependency** — the only thing the new engine depends on is Lightning
    CSS.'
  id: totrans-split-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**仅一个依赖项** — 这个新引擎仅依赖于 Lightning CSS。'
- en: '**Custom parser** — we wrote our own CSS parser and designed our own data structures
    tailored to our needs, making parsing over 2x as fast for us as it was with PostCSS.'
  id: totrans-split-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自定义解析器** — 我们编写了自己的 CSS 解析器，并设计了符合我们需求的数据结构，使得我们的解析速度比使用 PostCSS 时快了两倍以上。'
- en: '* * *'
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Tailwind CSS v4 isn’t just a plugin anymore — it’s an all-in-one tool for processing
    your CSS. We’ve integrated [Lightning CSS](https://lightningcss.dev/) directly
    into the framework so you don’t have to configure anything about your CSS pipeline.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: Tailwind CSS v4 不再只是一个插件 — 它是一个处理您的 CSS 的一体化工具。我们直接将[Lightning CSS](https://lightningcss.dev/)集成到框架中，因此您无需配置任何关于
    CSS 流水线的内容。
- en: '**Built-in `@import` handling** — no need to setup and configure a tool like
    `postcss-import`.'
  id: totrans-split-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内置 `@import` 处理** — 无需设置和配置诸如 `postcss-import` 的工具。'
- en: '**Built-in vendor prefixing** — you don’t have to add `autoprefixer` to your
    projects anymore.'
  id: totrans-split-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内置供应商前缀** — 您不再需要将`autoprefixer`添加到您的项目中。'
- en: '**Built-in nesting support** — no plugins needed to flatten nested CSS, it
    works out of the box.'
  id: totrans-split-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内置嵌套支持** — 无需插件即可展开嵌套的 CSS，它能直接使用。'
- en: '**Syntax transforms** — modern CSS features like `oklch()` colors and media
    query ranges are transpiled to syntax with better browser support.'
  id: totrans-split-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语法转换** — 现代 CSS 功能如 `oklch()` 颜色和媒体查询范围会被转译为更好支持的语法。'
- en: We’re still shipping a PostCSS plugin, but we’re also exploring first-party
    bundler plugins, and we’re shipping an official Vite plugin with this first alpha
    release that you can try out today.
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们仍然提供一个 PostCSS 插件，但我们也在探索第一方打包器插件，并且在这个首个 alpha 版本中，我们还提供了一个官方的 Vite 插件供您今天试用。
- en: '* * *'
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: We’re looking into the future with Tailwind CSS v4 and trying to build a framework
    that’s going to feel cutting edge for years to come.
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在展望 Tailwind CSS v4 的未来，并努力构建一个在未来几年内仍然具有前沿感的框架。
- en: '**Native cascade layers** — we’re using real `@layer` rules now, which solves
    a ton of specificity problems we’ve wrestled with in the past.'
  id: totrans-split-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**本地级联层** — 我们现在真正使用 `@layer` 规则，解决了我们过去曾经苦苦挣扎的许多特异性问题。'
- en: '**Explicitly defined custom properties** — we use `@property` to define our
    internal custom properties with proper types and constraints, making it possible
    to do things like transition background gradients.'
  id: totrans-split-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显式定义的自定义属性** — 我们使用 `@property` 来定义我们的内部自定义属性，包括正确的类型和约束条件，使得可以执行诸如过渡背景渐变等操作。'
- en: '**Using `color-mix` for opacity modifiers** — making it easier than ever to
    use our opacity modifier syntax when using CSS variables for colors, or even adjusting
    the opacity of `currentColor`.'
  id: totrans-split-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用 `color-mix` 来调整不透明度** — 现在使用 CSS 变量时，使用我们的不透明度修改器语法变得比以往更加简单，甚至可以调整 `currentColor`
    的不透明度。'
- en: '**Container queries in core** — we’ve added support for container queries directly
    to core, with new `@min-*` and `@max-*` variants to support container query ranges.'
  id: totrans-split-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**核心中的容器查询** — 我们直接在核心中增加了对容器查询的支持，引入了新的 `@min-*` 和 `@max-*` 变体以支持容器查询范围。'
- en: We’re also working on refreshing our color palette with wide gamut colors, and
    introducing support for other modern CSS features like `@starting-style`, anchor
    positioning, and more.
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还在努力更新我们的色彩调色板，使用广色域色彩，并支持其他现代 CSS 功能，如 `@starting-style`、锚点定位等。
- en: '* * *'
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: The new architecture makes it possible to compose together variants that act
    on other selectors, like `group-*`, `peer-*`, `has-*`, and a new `not-*` variant
    we’re introducing for v4.
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: 新架构使得可以组合应用于其他选择器的变体，例如 `group-*`、`peer-*`、`has-*`，以及我们为 v4 引入的新的 `not-*` 变体。
- en: 'In earlier releases, variants like `group-has-*` were explicitly defined in
    the framework, but now `group-*` can compose with the existing `has-*` variant,
    which can compose with other variants like `focus`:'
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在早期版本中，像 `group-has-*` 这样的变体在框架中是显式定义的，但现在 `group-*` 可以与现有的 `has-*` 变体组合，还可以与其他变体如
    `focus` 组合：
- en: '[PRE0]'
  id: totrans-split-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: There’s no limits to this composability, and you can even write stuff like `group-not-has-peer-not-data-active:underline`
    if for some horrible reason that’s what you need to do.
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种组合性方面没有限制，甚至可以编写像 `group-not-has-peer-not-data-active:underline` 这样的东西，如果因为某些可怕的原因您确实需要这样做。
- en: '* * *'
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: You’ll notice that at least in these early alpha releases, it’s not even possible
    to configure your `content` paths. For most projects, you’re never going to need
    to do this ever again — Tailwind just finds your template files for you.
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些早期的 alpha 版本中，您会注意到甚至无法配置您的 `content` 路径。对于大多数项目来说，您再也不需要这样做了 — Tailwind
    会自动找到您的模板文件。
- en: 'We do this using one of two ways depending on how you’ve integrated Tailwind
    into your project:'
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这是通过两种方式之一来实现的，具体取决于您如何将 Tailwind 集成到您的项目中：
- en: '**Using the PostCSS plugin or the CLI**, Tailwind will crawl your entire project
    looking for template files, using a bunch of heuristics we’ve built in to keep
    things fast, like not crawling directories that are in your `.gitignore` file,
    and ignoring binary file formats.'
  id: totrans-split-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用 PostCSS 插件或 CLI**，Tailwind 将遍历您的整个项目，寻找模板文件，我们内置了许多启发式方法以保持快速，例如不遍历您 `.gitignore`
    文件中的目录，以及忽略二进制文件格式。'
- en: '**Using the Vite plugin**, we rely on the module graph. This is amazing because
    we know exactly what files you’re actually using, so it’s maximally performant,
    and with no false positives or negatives. We’re hoping to expand this approach
    outside of the Vite ecosystem with other bundler plugins in the future.'
  id: totrans-split-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用 Vite 插件**，我们依赖于模块图。这非常棒，因为我们确切地知道您实际使用了哪些文件，因此性能最大化，没有误报或漏报。我们希望未来能将这种方法扩展到
    Vite 生态系统之外的其他打包器插件中。'
- en: We’ll introduce a way to configure content paths explicitly in the future for
    sure, but we’re curious to see how well this automatic approach works for everyone
    — it’s working awesome in our own projects.
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将来会引入一种明确配置内容路径的方式，但我们很好奇这种自动化方法在大家项目中的表现如何 — 在我们自己的项目中，它运行得非常出色。
- en: '* * *'
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: A major goal of Tailwind CSS v4.0 is making the framework feel CSS-native, and
    less like a JavaScript library.
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
  zh: Tailwind CSS v4.0的一个主要目标是使框架感觉更像是CSS原生的，而不是JavaScript库。
- en: 'Once you’ve installed it, you add it to your project with a regular CSS `@import`
    statement:'
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完后，你可以通过普通的CSS `@import`语句将其添加到项目中：
- en: 'And instead of setting up all of your customizations in a JavaScript configuration
    file, you just use CSS variables:'
  id: totrans-split-45
  prefs: []
  type: TYPE_NORMAL
  zh: 而不是在JavaScript配置文件中设置所有自定义内容，现在你只需使用CSS变量：
- en: '[PRE1]'
  id: totrans-split-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The special `@theme` directive tells Tailwind to make new utilities and variants
    available based on those variables, letting you use classes like `3xl:text-neon-lime`
    in your markup:'
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
  zh: 特殊的`@theme`指令告诉Tailwind基于这些变量提供新的工具和变体，让你可以在标记中使用类似`3xl:text-neon-lime`的类：
- en: '[PRE2]'
  id: totrans-split-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Adding new CSS variables behaves like `extend` did in earlier versions of the
    framework, but you can override a whole set of variables by clearing the namespace
    with syntax like `--color-*: initial` before defining all of your custom values:'
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
  zh: '添加新的CSS变量的行为类似于在框架早期版本中的`extend`，但你可以通过类似`--color-*: initial`的语法清除命名空间以覆盖整个变量集：'
- en: '[PRE3]'
  id: totrans-split-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We’re still fine-tuning some of the naming conventions, but you can [explore
    the default theme on GitHub](https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/theme.css)
    to see what’s available to customize.
  id: totrans-split-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们仍在微调一些命名约定，但你可以[在GitHub上查看默认主题](https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/theme.css)，了解可供定制的内容。
- en: 'If you don’t want to explicitly clear the default theme and would rather start
    from scratch, you can import `"tailwindcss/preflight"` and `"tailwindcss/utilities"`
    directly to skip importing the default theme:'
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不想显式清除默认主题，而是想从头开始，可以直接导入`"tailwindcss/preflight"`和`"tailwindcss/utilities"`来跳过导入默认主题：
- en: '[PRE4]'
  id: totrans-split-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We also make all of your theme values available as native CSS variables in
    your custom CSS:'
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将所有主题值作为本地CSS变量提供给你的自定义CSS：
- en: '[PRE5]'
  id: totrans-split-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This makes it easy to reference any of your theme values in arbitrary values
    without needing the `theme()` function:'
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得在任意值中引用你的主题值变得更加容易，无需使用`theme()`函数：
- en: '[PRE6]'
  id: totrans-split-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'It also makes it possible to use your theme values when working with UI libraries
    like Framer Motion, without having to use the `resolveConfig()` function:'
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这还使得在使用UI库如Framer Motion时可以使用你的主题值，而不必使用`resolveConfig()`函数：
- en: '[PRE7]'
  id: totrans-split-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '* * *'
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'We don’t take breaking changes lightly, but there are a few things we’re doing
    differently in v4 so far that are worth sharing:'
  id: totrans-split-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不轻易进行重大改动，但目前在v4中有几件我们正在做的事情与以往有所不同，值得分享：
- en: '**Removed deprecated utilities** — we’ve removed utilities we stopped documenting
    a long time ago like `text-opacity-*`, `flex-grow-*`, and `decoration-slice` in
    favor of their modern replacements like `text-{color}/*`, `grow-*`, and `box-decoration-slice`.'
  id: totrans-split-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**移除不推荐使用的工具** — 我们已经移除了很久没有文档记录的工具，比如`text-opacity-*`、`flex-grow-*`和`decoration-slice`，而采用它们的现代替代品，如`text-{color}/*`、`grow-*`和`box-decoration-slice`。'
- en: '**PostCSS plugin and CLI are separate packages** — the main `tailwindcss` package
    doesn’t include these anymore since not everyone needs them, instead they should
    be installed separately using `@tailwindcss/postcss` and `@tailwindcss/cli`.'
  id: totrans-split-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PostCSS插件和CLI现在是独立的包** — 主要的`tailwindcss`包不再包含它们，因为并非所有人都需要，现在它们应该通过`@tailwindcss/postcss`和`@tailwindcss/cli`单独安装。'
- en: '**No default border color** — the `border` utility used to default to `gray-200`,
    but now it defaults to `currentColor` like the browser does. We made this change
    to make it harder to accidentally introduce a wrong gray into your project if
    you’re using `zinc` or `slate` or something else as your main gray.'
  id: totrans-split-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**没有默认的边框颜色** — `border`工具以前默认为`gray-200`，但现在默认为与浏览器相同的`currentColor`。我们做出这个改变是为了在项目中使用`zinc`或`slate`等其他主要灰色时，不会意外引入错误的灰色。'
- en: '**Rings are 1px by default** — the `ring` utility used to be a 3px blue ring
    by default, now it’s a 1px ring using `currentColor`. We find ourselves using
    the `ring-*` utilities as an alternative to borders in our projects, and using
    `outline-*` for focus rings, so we think making things consistent here is a helpful
    change.'
  id: totrans-split-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**默认情况下环形的宽度为1像素** — `ring`工具以前默认为3像素的蓝色环，现在默认为1像素并使用`currentColor`。我们在项目中发现自己更多地使用`ring-*`工具作为边框的替代品，并使用`outline-*`来表示焦点环，所以我们认为在这里保持一致性是一个有益的改变。'
- en: There are a handful of other really low-level implementation detail changes
    that might surface in some way in your projects, but nothing deliberate like these
    changes. If you bump into anything surprising, let us know.
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的项目中可能会出现一些其他非常低级的实现细节变化，但并非像这些变化那样有意为之。如果您碰到什么意外情况，请告诉我们。
- en: '* * *'
  id: totrans-split-67
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: This new engine is a ground-up rewrite, and up until now we’ve been focused
    entirely on this reimagined developer experience using the new configuration approach.
  id: totrans-split-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这个新引擎是从头开始重写的，直到现在我们完全专注于使用新配置方法重新构想的开发者体验。
- en: '**We put an enormous amount of value in backwards compatibility**, and that’s
    where the bulk of the work lies before we can tag a stable v4.0 release later
    this year.'
  id: totrans-split-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**我们非常重视向后兼容性**，这也是我们在今年晚些时候发布稳定v4.0版本前需要大量工作的地方。'
- en: '**Support for JavaScript configuration files** — reintroducing compatibility
    with the classic `tailwind.config.js` file to make migrating to v4 easy.'
  id: totrans-split-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**支持JavaScript配置文件** — 重新引入与经典的`tailwind.config.js`文件兼容，以便轻松迁移到v4版本。'
- en: '**Explicit content path configuration** — making it possible to tell Tailwind
    exactly where your templates are when automatic content detection isn’t good enough
    for your setup.'
  id: totrans-split-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显式内容路径配置** — 在自动内容检测对您的设置不够理想时，可以告诉Tailwind确切的模板位置。'
- en: '**Support for other dark modes** — right now we only support dark mode using
    media queries, and still need to reimplement the selector and variant strategies.'
  id: totrans-split-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**支持其他暗模式** — 目前我们仅通过媒体查询支持暗模式，仍需重新实现选择器和变体策略。'
- en: '**Plugins and custom utilities** — we don’t have support for plugins, or for
    writing custom utilities that automatically work with variants yet. Obviously
    we will make this work before a stable release.'
  id: totrans-split-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**插件和自定义实用工具** — 目前我们不支持插件，也不支持编写自定义实用工具以自动适应不同变体。显然，在稳定版本发布之前我们会解决这个问题。'
- en: '**Prefix support** — there’s no way to configure a prefix for your classes
    yet, but we’ll bring it back for sure.'
  id: totrans-split-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**前缀支持** — 目前还没有办法为您的类配置前缀，但我们肯定会在v4.0发布之前引入这一功能。'
- en: '**Safelists and blocklists** — can’t force Tailwind to generate certain classes
    or prevent it from generating other classes yet.'
  id: totrans-split-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**白名单和黑名单** — 目前不能强制Tailwind生成特定类，或者防止它生成其他类。'
- en: '**Support for `important` configuration** — there’s no way to make utilities
    all generate with `!important` right now, but we plan to implement it.'
  id: totrans-split-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**支持`important`配置** — 目前无法使所有实用工具都带有`!important`，但我们计划实现这一功能。'
- en: '**Support for the `theme()` function** — this isn’t needed for new projects
    because you can use `var()` now, but we’ll implement it for backwards compatibility.'
  id: totrans-split-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**支持`theme()`函数** — 对于新项目不需要此功能，因为现在可以使用`var()`，但我们将为向后兼容性实现它。'
- en: '**Standalone CLI** — we haven’t worked on a standalone CLI for the new engine
    yet, but will absolutely have it before the v4.0 release.'
  id: totrans-split-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**独立CLI** — 我们还没有为新引擎工作的独立CLI，但在v4.0发布之前肯定会有。'
- en: Aside from that, I’m sure we’ll find a lot of bugs to fix, some exciting new
    CSS features to sneak in, and refine some of these new APIs that need some more
    polish before a proper release.
  id: totrans-split-79
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我相信我们会发现很多需要修复的错误，一些令人兴奋的新CSS特性也会悄悄地加入，以及一些需要在正式发布之前进一步完善的新API。
- en: I don’t want to make promises on a specific release timeline, but I’d personally
    love to mark v4.0 as stable before the summer holiday season kicks in.
  id: totrans-split-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我不想在特定发布时间表上做承诺，但我个人非常希望在暑假开始之前将v4.0版本标记为稳定版本。
- en: '* * *'
  id: totrans-split-81
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: We’ve tagged a couple alpha releases already, and you can start playing with
    it in your projects today.
  id: totrans-split-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经发布了几个alpha版本，您可以从今天开始在您的项目中使用它。
- en: If you’re using the Tailwind CSS IntelliSense extension for VS Code, make sure
    you switch to the prerelease version from the extension page, and if you’re using
    our Prettier plugin, make sure you install the latest version.
  id: totrans-split-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在使用VS Code的Tailwind CSS智能感知扩展，请确保从扩展页面切换到预发布版本，如果您使用我们的Prettier插件，请确保安装最新版本。
- en: If you find an issue, please [let us know on GitHub](https://github.com/tailwindlabs/tailwindcss/issues/new/choose).
    We really want this thing to be bullet-proof before we tag a stable release and
    reporting any problems you find will help us a lot.
  id: totrans-split-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您发现问题，请在[GitHub上告诉我们](https://github.com/tailwindlabs/tailwindcss/issues/new/choose)。在我们标记稳定版本之前，我们真的希望这个工具能够无懈可击，报告您发现的任何问题将极大地帮助我们。
- en: 'Install the Tailwind CSS v4 alpha and our new Vite plugin:'
  id: totrans-split-85
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Tailwind CSS v4 alpha和我们的新Vite插件：
- en: '[PRE8]'
  id: totrans-split-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Then add our plugin to your `vite.config.ts` file:'
  id: totrans-split-87
  prefs: []
  type: TYPE_NORMAL
  zh: 然后将我们的插件添加到您的`vite.config.ts`文件中：
- en: '[PRE9]'
  id: totrans-split-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Finally, import Tailwind in your main CSS file:'
  id: totrans-split-89
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在您的主 CSS 文件中导入 Tailwind：
- en: 'Install the Tailwind CSS v4 alpha and the separate PostCSS plugin package:'
  id: totrans-split-90
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Tailwind CSS v4 alpha 和单独的 PostCSS 插件包：
- en: '[PRE10]'
  id: totrans-split-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Then add our plugin to your `postcss.config.js` file:'
  id: totrans-split-92
  prefs: []
  type: TYPE_NORMAL
  zh: 然后将我们的插件添加到您的 `postcss.config.js` 文件中：
- en: '[PRE11]'
  id: totrans-split-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Finally, import Tailwind in your main CSS file:'
  id: totrans-split-94
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在您的主 CSS 文件中导入 Tailwind：
- en: 'Install the Tailwind CSS v4 alpha and the separate CLI package:'
  id: totrans-split-95
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Tailwind CSS v4 alpha 和单独的 CLI 包：
- en: '[PRE12]'
  id: totrans-split-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Next, import Tailwind in your main CSS file:'
  id: totrans-split-97
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在您的主 CSS 文件中导入 Tailwind：
- en: 'Finally, compile your CSS using the CLI tool:'
  id: totrans-split-98
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，使用 CLI 工具编译您的 CSS：
- en: '[PRE13]'
  id: totrans-split-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
