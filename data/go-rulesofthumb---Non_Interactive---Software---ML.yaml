- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:46:32'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:46:32'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: go/rulesofthumb – Non_Interactive – Software & ML
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: go/rulesofthumb – Non_Interactive – 软件与机器学习
- en: 来源：[https://nonint.com/2024/01/06/go-rulesofthumb/](https://nonint.com/2024/01/06/go-rulesofthumb/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://nonint.com/2024/01/06/go-rulesofthumb/](https://nonint.com/2024/01/06/go-rulesofthumb/)
- en: Google has a neat internal website called “Rules of Thumb”, which compares the
    marginal cost of computational resources to the unit of a “SWE”. “SWE” refers
    to “Software Engineer” – which itself is the marginal cost to pay salary and benefits
    to the average engineer at the company. Throughout design docs at the company,
    you’ll see costs referred to in the units of SWE. For example, “deploying service
    <X> at 1000QPS will cost ~100 SWEs in resources”.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌有一个很棒的内部网站叫做“经验法则”，它比较了计算资源的边际成本与“SWE”单位。这里的“SWE”指的是“软件工程师”，这本身是公司平均工程师薪资和福利的边际成本。在公司的设计文档中，你会看到成本以SWE单位来表示。例如，“在1000QPS下部署服务<X>将花费大约100个SWE的资源”。
- en: I always thought comparing costs of fixed assets like compute, RAM, or database
    accesses to the cost of hiring a new employee was at once brilliant and dystopian.
    Brilliant because it allowed for some really interesting comparisons when thinking
    about how much effort to pour into optimizing some aspect of the stack – if you
    spent half a year optimizing something that saved 1 SWE of resources per year
    in a product that was growing, then that was a very good use of your time! It
    was also humbling to see how expensive each employee was – the unit of SWE came
    out to a rather ridiculous number of CPUs, RAM and/or hard disk space.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我总是认为，比较固定资产（如计算资源、RAM或数据库访问）的成本与雇佣新员工的成本，既是聪明又是反乌托邦的。聪明之处在于，在思考要为优化栈的某个方面投入多少努力时，它允许进行一些非常有趣的比较——如果你花半年时间优化某个东西，使得在一个增长的产品中每年节省了1个软件工程师的资源，那么这就是你时间非常好的利用！看到每个员工有多昂贵也是一种谦卑的体验——SWE单位来算，相当于相当可笑的CPU、RAM和/或硬盘空间的数量。
- en: 'The dystopian angle is obvious: there is an underlying implication that human
    labor is worth some amount of computational resources. This was never more than
    a joke at Google, as there was never any real chance that the average Googler
    could be replaced by a computer. You could only really compare costs.'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这个反乌托邦的角度显而易见：有一个潜在的暗示，即人类劳动的价值相当于一定量的计算资源。在谷歌，这从来不过是个玩笑，因为普通谷歌员工从来没有被计算机取代的真实可能性。你只能真正比较成本。
- en: 'Post 2023, that joke is a bit less funny. Compute is valuable, and getting
    more valuable. Given the choice between having a team of 3 people working under
    me or 1000 dedicated H100s for my work, I’d have to think for a little bit. Humans
    are certainly smarter than ChatGPT but they also take time to train, aren’t available
    at 3AM on a Saturday (and I don’t expect them to be!) and are hard to pick correctly.
    With more GPUs, I know exactly what I’m going to get: more synthetic data, faster
    iteration on a problem and ultimately a reliably better product thanks to scaling
    laws.'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 2023年后，这个玩笑就不那么好笑了。计算资源变得更有价值。在选择让一个团队的3个人在我手下工作还是拥有1000个专用的H100，我需要考虑一会儿。人类肯定比ChatGPT更聪明，但他们也需要时间来培训，在星期六凌晨3点他们不可用（我也不指望他们可用！），并且很难正确选择。有了更多的GPU，我知道我将会得到什么：更多的合成数据，在问题上更快的迭代，最终依靠扩展定律可以更可靠地得到更好的产品。
- en: 'This direct consideration of “more compute or more people?” certainly doesn’t
    exist out of very small niches like mine so far, but it’s interesting to me that
    it exists at all. I think that this is an all but guaranteed future for us all:
    humans will need to increasingly compete with the application of raw compute in
    all independent work. Social work will still be available and valued, but the
    act of going from problem to solution will increasingly have compute-bound solutions.
    If this happens in parallel to Moores law continuing at pace, the results will
    be interesting.'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 直接考虑“更多计算资源还是更多人力？”这样的问题，当然迄今只存在于像我这样的非常小的领域，但有趣的是它确实存在。我认为对我们所有人来说，这几乎是一个必然的未来：人类将需要越来越多地与原始计算的应用竞争。社会工作仍然可得并有价值，但从问题到解决方案的过程将越来越多地有计算绑定的解决方案。如果这与摩尔定律继续同步进行，结果将会很有趣。
- en: Even if we don’t achieve an autonomous “AGI”, this notion of “smart person augmented
    by AI techniques and lots of compute” being competitive with a team of specialists
    means go/rulesofthumb might become more literal than most of us ever thought it
    would be!
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 即使我们没有实现自主的“通用人工智能（AGI）”，“通过AI技术和大量计算增强的聪明人”与专家团队竞争的概念意味着，go/rulesofthumb可能比大多数人想象的更加字面化！
