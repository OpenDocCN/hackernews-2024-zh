- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 15:05:58'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 15:05:58'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: The successor to Research Unix was Plan 9 from Bell Labs • The Register
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 研究 Unix 的后继者是来自贝尔实验室的 Plan 9 • The Register
- en: 来源：[https://www.theregister.com/2024/02/21/successor_to_unix_plan_9/](https://www.theregister.com/2024/02/21/successor_to_unix_plan_9/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.theregister.com/2024/02/21/successor_to_unix_plan_9/](https://www.theregister.com/2024/02/21/successor_to_unix_plan_9/)
- en: FOSDEM 2024 To move forwards, you have to let go of the past. In the 1990s that
    meant incompatibility, but it no longer has to.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: FOSDEM 2024 要向前进，就必须放下过去。在上世纪90年代，这意味着不兼容，但现在不再是这样了。
- en: This article is the third based on *The Reg* FOSS desk's [talk at FOSDEM 2024](https://fosdem.org/2024/schedule/event/fosdem-2024-3095-one-way-forward-finding-a-path-to-what-comes-after-unix/).
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本文是基于 *The Reg* FOSS desk 在 [FOSDEM 2024](https://fosdem.org/2024/schedule/event/fosdem-2024-3095-one-way-forward-finding-a-path-to-what-comes-after-unix/)
    上的演讲的第三篇文章。
- en: The first part of [this short series](https://www.theregister.com/Tag/One%20Way%20Forward)
    talked about the [problem of software bloat](https://www.theregister.com/2024/02/12/drowning_in_code/).
    The second talked about the [history of UNIX](https://www.theregister.com/2024/02/16/what_is_unix/),
    and how its development continued at Bell Labs after commercial vendors picked
    up earlier versions and took them to market.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这个短系列的第一部分讨论了 [软件臃肿的问题](https://www.theregister.com/2024/02/12/drowning_in_code/)。第二部分讨论了
    [UNIX 的历史](https://www.theregister.com/2024/02/16/what_is_unix/)，以及在商业供应商采纳早期版本并将其推向市场后，贝尔实验室如何继续其开发。
- en: One of the results of this pattern of development was that Eighth Edition Unix
    didn't have much industry impact, and little if anything drew significantly upon
    the Ninth and Tenth Editions. Despite this, work continued, but what followed
    the Tenth Edition wasn't called "Unix" at all. Instead it was dubbed "Plan 9 from
    Bell Labs." This time, we want to look at why Plan 9 wasn't called Unix in the
    first place, and what can be done about that using features of 21st century hardware
    and software.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这种开发模式的一个结果是第八版 Unix 对行业影响不大，第九版和第十版也鲜有显著引用。尽管如此，工作仍在继续，但紧随第十版之后的不再被称为 "Unix"。取而代之的是
    "来自贝尔实验室的 Plan 9"。这一次，我们想探讨为什么 Plan 9 最初没有被称为 Unix，以及如何利用21世纪的硬件和软件特性来解决这个问题。
- en: '*The Reg* FOSS desk has [looked at Plan 9](https://www.theregister.com/Print/2013/11/01/25_alternative_pc_operating_systems/)
    a few times, including a more recent [look at the most active fork, 9Front](https://www.theregister.com/2022/11/02/plan_9_fork_9front/).
    Last year, we [discussed the significance of 9Front](https://www.theregister.com/2023/12/01/9front_humanbiologics/),
    especially comparing its size with that of modern Linux.'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*The Reg* FOSS desk 多次 [关注 Plan 9](https://www.theregister.com/Print/2013/11/01/25_alternative_pc_operating_systems/)，包括对更近期的
    [9Front 最活跃的分支进行了审视](https://www.theregister.com/2022/11/02/plan_9_fork_9front/)。去年，我们
    [讨论了 9Front 的重要性](https://www.theregister.com/2023/12/01/9front_humanbiologics/)，特别是将其与现代
    Linux 的规模进行比较。'
- en: Plan 9 took the concepts that led to Unix, and rethought them for the 1990s.
    This, like any big change, had consequences, and not all of them were positive.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: Plan 9 将导致 Unix 的概念重新思考，以适应上世纪90年代。与任何大的变革一样，这样做会产生后果，并非所有后果都是正面的。
- en: The good bits
  id: totrans-split-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 好的部分
- en: Plan 9 was in some way a second implementation of the core concepts of Unix
    and C, but reconsidered for a world of networked graphical workstations. It took
    many of the trendy ideas of late-1980s computing, both of academic theories and
    of the computer industry of the time, and it reinterpreted them through the jaded
    eyes of two great gurus, [Kenneth Thompson](https://www.theregister.com/2023/03/17/ken_thompson_is_a_maccie/)
    and [Dennis Ritchie](https://www.theregister.com/2011/10/13/dennis_ritchie_obituary/)
    ([and their students](https://www.theregister.com/2011/05/05/google_go/?page=2))
    – arguably, design geniuses who saw their previous good ideas misunderstood and
    misinterpreted.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: Plan 9 在某种程度上是 Unix 和 C 核心概念的第二次实现，但是重新考虑了面向网络图形工作站的世界。它汲取了80年代末计算机界的许多潮流理念，既有学术理论，也有当时计算机行业的思想，并通过两位伟大导师
    [肯尼斯·汤普逊](https://www.theregister.com/2023/03/17/ken_thompson_is_a_maccie/) 和
    [丹尼斯·里奇](https://www.theregister.com/2011/10/13/dennis_ritchie_obituary/)（[及其学生们](https://www.theregister.com/2011/05/05/google_go/?page=2)）的疲惫眼光重新解释了它们
    —— 他们可以被认为是设计上的天才，看到他们以前的好想法被误解和曲解。
- en: In Plan 9, networking is front and center. There are good reasons why this wasn't
    the case with Unix – it was being designed and built at the same time as [local
    area networking](https://www.cisco.com/c/en/us/products/switches/what-is-a-lan-local-area-network.html)
    was being invented. [UNIX Fourth Edition](https://gunkies.org/wiki/UNIX_Fourth_Edition),
    the first version written in C, was released in 1973 – the same year [as the first
    version of Ethernet](https://www.theregister.com/2023/06/30/ethernet_50th_birthday/).
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Plan 9 中，网络是前置的。Unix 之所以不是这样，有很多合理的理由 – 它在设计和建设时正值 [局域网](https://www.cisco.com/c/en/us/products/switches/what-is-a-lan-local-area-network.html)
    的发明时期。[UNIX 第四版](https://gunkies.org/wiki/UNIX_Fourth_Edition)，第一个用 C 语言编写的版本，发布于
    1973 年 – 同年也是 [以太网的第一个版本](https://www.theregister.com/2023/06/30/ethernet_50th_birthday/)。
- en: Plan 9 puts networking right into the heart of the design. While Unix was later
    used as the most common OS for standalone workstations, Plan 9 was designed for
    clusters of computers, some being graphical desktops and some shared servers.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: Plan 9 将网络功能置于设计的核心。而 Unix 后来被用作独立工作站的最常见操作系统，Plan 9 则是为计算机集群设计的，一些是图形桌面，一些是共享服务器。
- en: Plan 9 takes the idea of "everything is a file" and it makes it real. In Unix,
    it's really just an empty marketing slogan. Lots of things, such as trees of process
    IDs, aren't part of the file system. In some versions, they can be seen via bolted-on
    extras, such as the [`/proc`](https://eschrock.dtrace.org/2004/06/25/a-brief-history-of-proc/)
    in-memory [pseudo file system](https://superuser.com/questions/1198292/what-is-a-pseudo-file-system-in-linux)
    – but you won't find a `/proc` in macOS, for instance.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: Plan 9 接受了“一切皆为文件”的理念，并使其变为现实。在 Unix 中，这实际上只是一个空洞的营销口号。许多东西，比如进程 ID 的树，不是文件系统的一部分。在某些版本中，它们可以通过附加的额外部分看到，比如在
    [`/proc`](https://eschrock.dtrace.org/2004/06/25/a-brief-history-of-proc/) 内存中的[伪文件系统](https://superuser.com/questions/1198292/what-is-a-pseudo-file-system-in-linux)
    – 但在 macOS 中你不会找到 `/proc`。
- en: Under [Rio](https://wiki.xxiivv.com/site/rio.html), the current Plan 9 window
    system (which replaced the [older 8½ system](http://doc.cat-v.org/plan_9/4th_edition/papers/812/)),
    on-screen windows are represented as directories in the file system, and their
    contents are files. Other Plan 9 machines on the network are visible in your file
    system – subject to access permissions, of course – and you can see some of their
    file system right inside yours.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [Rio](https://wiki.xxiivv.com/site/rio.html) 下，当前的 Plan 9 窗口系统（取代了 [较旧的 8½
    系统](http://doc.cat-v.org/plan_9/4th_edition/papers/812/)），屏幕上的窗口被表示为文件系统中的目录，它们的内容是文件。网络上的其他
    Plan 9 机器在你的文件系统中可见 – 当然要受访问权限的限制，并且你可以在自己的文件系统中直接看到其中一些文件系统的内容。
- en: Because everything really is a file, displaying a window on another machine
    can be as simple as making a directory and populating it with some files. You
    can start programs on other computers, but display the results on yours – all
    without any need for X11 or any visible networking at all.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 因为一切都是文件，将窗口显示在另一台机器上可以如同创建一个目录并填充一些文件那样简单。你可以在其他计算机上启动程序，但在你自己的计算机上显示结果，而不需要任何
    X11 或者任何可见的网络。
- en: This means all the Unixy stuff about `telnet` and `rsh` and `ssh` and [X forwarding](https://goteleport.com/blog/x11-forwarding/)
    and so on just… goes away. It makes X11 look very overcomplicated, and it makes
    Wayland look like it was invented by Microsoft.
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着所有关于 `telnet`、`rsh`、`ssh` 以及 [X forwarding](https://goteleport.com/blog/x11-forwarding/)
    等的 Unix 风格的东西都…消失了。这让 X11 看起来非常复杂，也让 Wayland 看起来像是由微软发明的。
- en: As everything goes through the file system, it eliminates much of one of the
    biggest complex problems of microkernel designs – inter-process communications.
    Plan 9 is [not a microkernel](https://groups.google.com/g/comp.os.plan9/c/OZkgCN8jdAs/m/La-KQMbuhP0J)
    as such; it's more that in some ways, it makes the defining features of microkernels
    somewhat irrelevant.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 由于一切都通过文件系统进行，这消除了微内核设计中最大的复杂问题之一 – 进程间通信。Plan 9 并不是一个微内核，它更多地使微内核的定义特性在某些方面变得不那么重要。
- en: Plan 9 is not just a replacement kernel, or the layers above that. It's also
    a clustering system, and a network filesystem, and a container management system.
    In terms of functional blocks, we are talking about replacing Linux, and Ceph
    or Gluster or whatever, and all hypervisors, and all container systems, and Kubernetes
    and all that.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: Plan 9 不仅仅是一个替代内核或者其上的各层。它还是一个集群系统、一个网络文件系统，以及一个容器管理系统。从功能块的角度来看，我们在谈论取代 Linux，还有
    Ceph 或者 Gluster 或者其他类似的东西，以及所有的虚拟化程序、所有的容器系统，以及 Kubernetes 等等。
- en: As it was conceived as one tool for all this, it is much, much simpler than
    the gigabytes of complexity layered on top of Linux that makes Linux able to do
    this stuff.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 由于它被构想为处理所有这些问题的一个工具，因此它比在 Linux 之上堆叠的复杂性的几十亿字节要简单得多，这种复杂性使得 Linux 能够执行这些操作。
- en: Even so, Plan 9 is tiny. I talked to a couple of people from the 9front community
    when I wrote about it in November, and one chap gave me some numbers.
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 即便如此，Plan 9 却非常小。去年十一月我写作时，我和一些来自 9front 社区的人谈过，其中一位给了我一些数据。
- en: (That's including all the apps, demos and games, including Doom.)
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: （这包括所有应用程序、演示和游戏，包括 Doom。）
- en: 'As for complexity: the Plan 9 kernel has *38* system calls.'
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 至于复杂性：Plan 9 内核有 *38* 个系统调用。
- en: I've not been able to find a firm number for Linux, but I have some estimates.
    As of 2016, kernel 4.7 had about 335\. By 2017 that was up to 341\. I've tried
    to estimate the number for kernel 6.8 and I think there are 520 across all architectures.
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我没有找到 Linux 的确切数字，但我有一些估计。截至 2016 年，内核 4.7 有大约 335 个。到了 2017 年，这个数字增加到 341。我尝试估算内核
    6.8 的数字，我认为在所有架构上大约有 520 个。
- en: For comparison, Kubernetes alone is about two million lines of code. This is
    the price of bolting on a cluster management layer, instead of embedding it into
    your design.
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，Kubernetes 单独就有大约两百万行代码。这是将一个集群管理层添加到系统中，而不是将其嵌入到设计中的代价。
- en: A brief aside about file systems
  id: totrans-split-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 对文件系统的简要说明
- en: In case this all sounds a bit too theoretical, one of the problems if everything
    is in the file system is, of course, deciding where everything is located.
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果听起来有点太理论化，那么当一切都在文件系统中时，其中一个问题当然是决定一切的位置在哪里。
- en: Back in 2011, I [wrote about containers](https://www.theregister.com//Print/2011/07/18/brief_history_of_virtualisation_part_3)
    and called them a sysadmin's dream come true. That was about the same time that
    Docker launched.
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: 2011 年，我[写过关于容器的文章](https://www.theregister.com//Print/2011/07/18/brief_history_of_virtualisation_part_3)，并称其为系统管理员的梦想成真。那正是
    Docker 推出的同时。
- en: Containers are a sort of `chroot` on steroids. All the file paths in a given
    process start at a new root directory, and since in Unix almost everything is
    relative to the root directory, changing that isolates that process (and any children)
    from the rest of the OS.
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: 容器就像是增强版的 `chroot`。在给定进程中，所有文件路径都从一个新的根目录开始，而由于在 Unix 中几乎所有东西都是相对于根目录的，改变这一点会将该进程（以及任何子进程）与操作系统的其余部分隔离开来。
- en: Nowadays there are several forms of containerization on Linux, but [some of
    them](https://www.theregister.com/2016/07/05/containers_state_of_the_art/) use
    the Linux kernel's [`cgroups` feature](https://www.theregister.com/2014/05/23/google_containerization_two_billion/),
    which came out of Google. This separates the processes inside containers from
    one another by putting them inside different namespaces.
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在 Linux 上有几种形式的容器化，但[其中一些](https://www.theregister.com/2016/07/05/containers_state_of_the_art/)使用了
    Linux 内核的[`cgroups`特性](https://www.theregister.com/2014/05/23/google_containerization_two_billion/)，这是来自
    Google 的。它通过将它们置于不同的命名空间中来将容器内的进程互相隔离。
- en: The problem is that Unix, and therefore Linux, doesn't just have one global
    namespace because when it was designed these ideas were a bit new and undeveloped.
    Unix concepts that aren't part of a single namespace include user IDs, and group
    IDs, and process IDs, and all sorts of things that aren't represented in or expressed
    through that single global file system.
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: Unix 的问题在于它并不只有一个全局命名空间，因为当它设计时，这些概念还比较新而且不成熟。Unix 中不属于单一命名空间的概念包括用户 ID、组 ID、进程
    ID，以及很多并未在或通过单一全局文件系统中表示的东西。
- en: This is why [cgroups namespaces](https://man7.org/linux/man-pages/man7/cgroup_namespaces.7.html)
    exist – to split those namespaces up as well for more complete isolation. The
    problem is that it's a later, bolted-on feature so just as anything that works
    with `/proc` won't work on macOS – [or on OpenBSD](https://stackoverflow.com/questions/20465780/process-information-in-openbsd)
    – then anything that uses cgroups namespaces won't work on FreeBSD.
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么[cgroups 命名空间](https://man7.org/linux/man-pages/man7/cgroup_namespaces.7.html)存在的原因
    – 为了将这些命名空间进一步分离，以实现更完整的隔离。问题在于它是后来添加的功能，因此就像任何依赖 `/proc` 的东西在 macOS 上无法工作一样 –
    [或者在 OpenBSD 上](https://stackoverflow.com/questions/20465780/process-information-in-openbsd)
    – 依赖 cgroups 命名空间的东西在 FreeBSD 上也无法工作。
- en: Back to the Plan
  id: totrans-split-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 回到 Plan
- en: Namespaces are a [core part](http://doc.cat-v.org/plan_9/4th_edition/papers/names)
    of the Plan 9 design, and every individual process under Plan 9 has its own namespace.
    Because far more of the communications between parts of the OS is done via the
    file system. Thus, every process has its own view of the file system.
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: 命名空间是Plan 9设计的[核心部分](http://doc.cat-v.org/plan_9/4th_edition/papers/n)，Plan
    9下的每个单独进程都有其自己的命名空间。因为OS的各个部分之间的通信更多地通过文件系统进行。因此，每个进程都有自己对文件系统的视图。
- en: So, in effect, every process is in a container… Note, in a project [announced
    in 1990](https://dl.acm.org/doi/10.1145/155848.155861), a full decade before the
    first release of [FreeBSD jails](https://wiki.freebsd.org/Jails) in [FreeBSD 4.0](https://lists.freebsd.org/pipermail/freebsd-announce/2000-March/000529.html).
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，实际上，每个进程都在一个容器中……注意，在一个[1990年宣布的项目](https://dl.acm.org/doi/10.1145/155848.155861)中，在FreeBSD
    4.0中的[第一个版本](https://lists.freebsd.org/pipermail/freebsd-announce/2000-March/000529.html)发布前十年。
- en: 'The bad part: it flopped'
  id: totrans-split-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 坏的部分：它失败了
- en: If Plan 9 is so gosh-durned clever, why aren't we all using it? Well, some reasons
    are easy to enumerate.
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Plan 9 如此聪明，为什么我们不都在使用它呢？嗯，有一些原因很容易列举。
- en: Firstly, just as Unix itself at the beginning, it was an experimental OS. In
    their early years, they weren't intended for production use, and Plan 9 was a
    tool for research into operating system concepts. It was only licensed for commercial
    use with the Second Edition [in 1995](https://web.archive.org/web/20080706034735/http://9fans.net/archive/1995/07/16)
  id: totrans-split-40
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，就像 Unix 本身在开始时一样，它是一个实验性的操作系统。在早期，它们并不是用于生产使用的，Plan 9 是研究操作系统概念的工具。直到第二版在[1995年](https://web.archive.org/web/20080706034735/http://9fans.net/archive/1995/07/16)才获得商业使用许可。
- en: Secondly, back in the 20th century, Plan 9 wasn't open source. But in 2000,
    the Third Edition [was released as FOSS](https://www.theregister.com/2000/06/09/plan_9_goes_open_source/)
    under its own custom licence agreement, and then in 2014 it was [re-licensed under
    the GPL](https://www.theregister.com/2014/02/14/plan_9_moves_to_gnu_space/).
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，在20世纪初，Plan 9并不是开源的。但在2000年，第三版在其自定义许可协议下[发布为FOSS](https://www.theregister.com/2000/06/09/plan_9_goes_open_source/)，然后在2014年它被[重新许可为GPL](https://www.theregister.com/2014/02/14/plan_9_moves_to_gnu_space/)。
- en: Thirdly, Plan 9's very clean, minimalist conceptual design brings penalties.
    Since there is no "real" underlying view of the "true" file system, that means
    that there are quite a lot of things Plan 9 simply does not do. There are no links,
    either symbolic or hard.
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
  zh: 第三，Plan 9 非常清晰、极简的概念设计带来了一些惩罚。由于没有对“真实”文件系统的“真正”基础视图，这意味着 Plan 9 简单地不做很多事情。没有符号链接，也没有硬链接。
- en: Originally, its `mv` command simply [copied files then deleted the originals](https://groups.google.com/g/comp.os.plan9/c/1ghzz_q1NlE).
    This is the price of having the kernel talk to the local file system the same
    way that it talks to the file systems on other machines – via the [9P protocol](http://9p.cat-v.org/documentation/).
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
  zh: 最初，它的`mv`命令简单地[复制文件然后删除原始文件](https://groups.google.com/g/comp.os.plan9/c/1ghzz_q1NlE)。这是通过[9P协议](http://9p.cat-v.org/documentation/)，使得内核与本地文件系统通信的方式与其与其他机器上的文件系统通信的方式相同的代价。
- en: (Yes, this can be slow, and sounds extremely limiting, but this vulture was
    some five years into his career when the first Microsoft OS with hard links, Windows
    NT 3.1, was launched. Until MS-DOS 5 in 1991, DOS didn't have a `MOVE` command,
    and no Microsoft OS had anything like symbolic links prior Windows 95's "shortcuts.")
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
  zh: (是的，这可能会慢，听起来非常限制，但是这只秃鹫已经在他的职业生涯中度过了五年，当时第一个带有硬链接的微软操作系统 Windows NT 3.1 发布了。直到
    MS-DOS 5 在 1991 年发布，DOS 才没有`MOVE`命令，且在 Windows 95 的“快捷方式”之前，没有任何 Microsoft 操作系统有类似的符号链接。)
- en: Plan 9 is unfriendly, unforgiving, and hard to use. I am not some frothing Plan
    9 advocate. I do not routinely use it myself, although I keep a copy of 9front
    around in a VM. Over the years, I occasionally get a fresh version and play around
    with it.
  id: totrans-split-45
  prefs: []
  type: TYPE_NORMAL
  zh: Plan 9 是不友好的、不宽容的，使用起来很困难。我不是某种狂热的 Plan 9 支持者。我自己并不经常使用它，虽然我在虚拟机中保留了一个 9front
    的副本，多年来，我偶尔会拿来新版本玩耍。
- en: '[9front](http://9front.org/) has come quite a long way from the AT&T version.
    A non-guru such as myself can install it and try it, which is more than I could
    with the original version. But, as the [FQA page says](http://fqa.9front.org/fqa0.html):'
  id: totrans-split-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[9front](http://9front.org/) 相比于 AT&T 版本已经进步了很长一段路。像我这样的非专家可以安装并尝试它，这比我在原始版本中能做的更多。但正如[FQA页面所说](http://fqa.9front.org/fqa0.html)：'
- en: Plan 9 has a GUI, but it's very strange. But then it's a very strange OS.
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
  zh: Plan 9 有一个图形用户界面，但它非常奇怪。但它确实是一个非常奇怪的操作系统。
- en: The thing is, though, that when I started playing with Linux – roughly around
    [Slackware 3.0 in 1995](https://www.linux.co.cr/distributions/review/1995/0930.html),
    with kernel 1.0 – Linux was extremely basic, very unfriendly, and not very much
    actual use for anything. Linux has come an extraordinarily long way since then,
    even if it [still has little desktop penetration](https://www.theregister.com/2023/07/18/linux_desktop_debate/).
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
  zh: 问题是，当我开始使用Linux时——大约是在1995年的[Slackware 3.0](https://www.linux.co.cr/distributions/review/1995/0930.html)，使用的内核是1.0版本——Linux非常基础，非常不友好，实际上用处不大。自那以后，Linux走过了非常长的路程，即使它的[桌面渗透率仍然很低](https://www.theregister.com/2023/07/18/linux_desktop_debate/)。
- en: The killer is that Plan 9 is different enough from Unix – any Unix – that it's
    incompatible with Unix. Its creators did not call it Unix Eleventh Edition for
    good reasons. It changes fundamental parts of the design in ways that mean that
    bringing existing source code across and recompiling it won't work.
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
  zh: 致命的是，Plan 9与任何Unix都有足够的不同，以至于与Unix不兼容。它的创建者们有足够的理由没有把它称为Unix第十一版。它在设计的基本部分上做了根本性的改变，这意味着无法将现有的源代码带过来并重新编译。
- en: To pick a trivial example, Plan 9's version of C [prohibits nested `#include`
    directives](http://doc.cat-v.org/plan_9/4th_edition/papers/comp). Most non-trivial
    C programs contain lots of files, and those files all contain lots of `#include`
    statements. In Plan 9 C, only the top-level C file in a program can `#include`
    other files, and header files are not allowed `#include` at all. This means a
    bit more work for the programmer, but [it makes compilation much faster](https://go.dev/talks/2012/splash.article).
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
  zh: 举一个微不足道的例子，Plan 9的C版本[禁止嵌套的`#include`指令](http://doc.cat-v.org/plan_9/4th_edition/papers/comp)。大多数非平凡的C程序包含大量文件，而这些文件都包含大量的`#include`语句。在Plan
    9的C中，只有程序中的顶层C文件可以`#include`其他文件，而且头文件根本不允许`#include`。这意味着程序员需要做更多的工作，但是[这样做可以使编译速度更快](https://go.dev/talks/2012/splash.article)。
- en: It was good, but it wasn't good enough
  id: totrans-split-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 它很好，但不够好
- en: In order to displace an existing, well-established and deeply entrenched product
    – in this case, conventional Unix – a new successor product has to be significantly
    better than its forerunner to make it worth the cost of switching, even if that
    cost is just in time and effort, not money. We don't know of a snappy term for
    this rule, but there may be one, perhaps akin to Clayton Christensen's [revolutionary
    innovation](https://en.wikipedia.org/wiki/Disruptive_innovation). To paraphrase
    an old OS/2 marketing slogan, Plan 9 was "a better Unix than Unix" – but it wasn't
    better enough.
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
  zh: 为了取代一个现有的、根深蒂固的产品——在本例中是传统的Unix——一个新的继任产品必须显著优于其前身，使得切换的成本值得，即使这个成本只是时间和精力，而不是金钱。我们不知道这个规则有没有一个简洁的术语，但可能有一个，类似于克莱顿·克里斯滕森的[革命性创新](https://en.wikipedia.org/wiki/Disruptive_innovation)。用一个旧的OS/2营销口号来概括，Plan
    9是“比Unix更好的Unix”——但它还不够好。
- en: As another small side-note, Plan 9 wasn't the end of the original Unix line.
    There were ten editions of Research Unix, then a successor that was so different
    it wasn't Unix any more. That's Plan 9, and in a way, it is "UNIX 2.0."
  id: totrans-split-53
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个小的旁注是，Plan 9并不是原始Unix系列的终结。研究Unix有十个版本，然后是一个如此不同的继任者，它不再是Unix了。那就是Plan 9，在某种意义上，它是“UNIX
    2.0”。
- en: There is also a very different successor to Plan 9 itself. It is called [Inferno](https://www.vitanuova.com/inferno/),
    and it is, in a manner of speaking, "UNIX 3.0." I'm not going to go into any detail
    about it here today, as this article is already long enough, but it's interesting
    and well worth investigation.
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
  zh: Plan 9本身也有一个非常不同的继任者。它被称为[Inferno](https://www.vitanuova.com/inferno/)，某种意义上可以说是“UNIX
    3.0”。今天文章已经够长了，我就不在这里详细讨论它了，但这确实很有趣，值得深入探索。
- en: 9front is clever and impressive. It's also weird and inscrutable, but so was
    Linux around the time of Plan 9's first commercial release … and now look at it.
    Linux powers ChromeOS and Android, which means that aside from countless invisible
    servers, several billion people use Linux every day, even though they've never
    even heard of it.
  id: totrans-split-55
  prefs: []
  type: TYPE_NORMAL
  zh: 9front非常聪明和令人印象深刻。它也很奇怪和难以理解，但是当Plan 9首次商业发布时，Linux也是如此……现在看看吧。Linux驱动着ChromeOS和Android，这意味着除了无数不可见的服务器外，数十亿人每天都在使用Linux，即使他们从未听说过它。
- en: Even most "Linux distributions" software for the tiny number of people who know
    what an "operating system" is and care which one they use, are pretty easy now.
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
  zh: 即使对于那些了解“操作系统”并且关心他们使用哪一个的少数人来说，大多数“Linux发行版”现在也相当容易。
- en: But Plan 9 is not Unix, and it can't run Unix programs. You couldn't simply
    port Firefox or LibreOffice to Plan 9, as has been done to Windows and macOS and
    all the BSDs.
  id: totrans-split-57
  prefs: []
  type: TYPE_NORMAL
  zh: 但Plan 9不是Unix，不能运行Unix程序。你不能简单地像对Windows、macOS和所有BSDs做的那样，把Firefox或LibreOffice移植到Plan
    9上。
- en: There are tools to help with stuff like this, but they are a little rudimentary
    because the sort of people who value Plan 9 either don't want such things, or
    do things like that on other computers.
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些工具可以帮助处理这样的事情，但它们有点简陋，因为那些重视Plan 9的人要么不想要这样的东西，要么在其他计算机上进行这样的操作。
- en: For example, there is a Plan 9 Linux emulator, comparable to [the FreeBSD linuxulator](https://wiki.freebsd.org/Linuxulator).
    Plan 9's is called [Linuxemu](https://web.archive.org/web/20231119190241/http://9p.io/wiki/plan9/Linux_emulation/index.html)).
    It's old enough that it's 32-bit only, but until a few years ago so were [Solaris
    LX zones](https://docs.oracle.com/cd/E19455-01/817-1592/gepea/index.html) – then
    Joyent modernized them for the [SmartOS implementation](https://wiki.smartos.org/lx-branded-zones/).
  id: totrans-split-59
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，有一个Plan 9 Linux模拟器，类似于[FreeBSD的linuxulator](https://wiki.freebsd.org/Linuxulator)。Plan
    9的称为[Linuxemu](https://web.archive.org/web/20231119190241/http://9p.io/wiki/plan9/Linux_emulation/index.html))。它只支持32位，但直到几年前，[Solaris
    LX zones](https://docs.oracle.com/cd/E19455-01/817-1592/gepea/index.html)也是如此——然后Joyent为[SmartOS实现](https://wiki.smartos.org/lx-branded-zones/)现代化了它们。
- en: There is a Linux compatibility layer for porting source code [called APE](http://doc.cat-v.org/plan_9/4th_edition/papers/ape).
    There's an X11 server, [Equis](https://web.archive.org/web/20230927210129/https://9p.io/wiki/plan9/X11_installation/index.html).
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个用于移植源代码的Linux兼容性层，称为[APE](http://doc.cat-v.org/plan_9/4th_edition/papers/ape)。还有一个X11服务器，[Equis](https://web.archive.org/web/20230927210129/https://9p.io/wiki/plan9/X11_installation/index.html)。
- en: More importantly, 9front has a hypervisor [called VMX](http://man.9front.org/1/vmx),
    which uses the built-in virtualization of Intel and AMD chips. There's even a
    [guide](https://wiki.9front.org/vmx) to installing Void Linux in it. A VM can
    have just one core, but it is there and it does work, although, as the documentation
    says, VMX can and will crash your kernel.
  id: totrans-split-61
  prefs: []
  type: TYPE_NORMAL
  zh: 更重要的是，9front有一个称为VMX的[hypervisor](http://man.9front.org/1/vmx)，使用Intel和AMD芯片的内置虚拟化。甚至有一个[安装Void
    Linux的指南](https://wiki.9front.org/vmx)。虚拟机只能有一个核心，但它确实存在并且可以工作，尽管文档说，VMX可能会崩溃您的内核。
- en: So here is my idea.
  id: totrans-split-62
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这是我的想法。
- en: It's 2024\. We all have 64-bit machines now, and x86-32 is fading fast. Most
    distros no longer support it; even one of the last holdouts, Debian, is [planning
    to drop support](https://www.theregister.com/2023/12/19/debian_to_drop_x86_32/)
    in the next release.
  id: totrans-split-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是2024年。我们现在都有64位的机器，而x86-32正在迅速消失。大多数发行版不再支持它；甚至最后的一些坚持者之一，Debian，也计划在下一个版本中[停止支持](https://www.theregister.com/2023/12/19/debian_to_drop_x86_32/)。
- en: Modern PCs have lots of memory and lots of storage. These days, in Linux land,
    there are a number of "microVMs" such as [Amazon's Firecracker](https://www.theregister.com/2018/11/27/aws_sets_firecracker/).
    Recently that [gained support for FreeBSD guests](https://www.theregister.com/2023/08/29/freebsd_boots_in_25ms/)
    too. There are others, such as [Intel Clear Containers](https://www.theregister.com/2015/05/21/intel_wants_containers_to_be_alone_together_naturally/),
    which merged into [Kata Containers](https://www.theregister.com/2018/05/23/vmcontainer_chimera_kata_containers_emerges_from_lab/),
    and so on.
  id: totrans-split-64
  prefs: []
  type: TYPE_NORMAL
  zh: 现代PC具有大量内存和大量存储空间。在Linux领域，有许多像[Amazon's Firecracker](https://www.theregister.com/2018/11/27/aws_sets_firecracker/)这样的“微型虚拟机”。最近，它还[增加了对FreeBSD客户端的支持](https://www.theregister.com/2023/08/29/freebsd_boots_in_25ms/)。还有其他的，比如[Intel
    Clear Containers](https://www.theregister.com/2015/05/21/intel_wants_containers_to_be_alone_together_naturally/)，它们合并到[Kata
    Containers](https://www.theregister.com/2018/05/23/vmcontainer_chimera_kata_containers_emerges_from_lab/)等。
- en: MicroVMs can start a guest in milliseconds, and they are used for ["serverless"](https://www.theregister.com/Tag/Serverless/)
    cloud computing. Another lie, but let's not get into that.
  id: totrans-split-65
  prefs: []
  type: TYPE_NORMAL
  zh: 微型虚拟机可以在几毫秒内启动一个客户端，并且它们用于["无服务器"](https://www.theregister.com/Tag/Serverless/)云计算。还有一个谎言，但我们不要深入讨论。
- en: The idea is tiny VMs that are as quick and as ephemeral as containers. You start
    them, typically to run just one program, and when that completes, the VM exits.
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这个想法是小型虚拟机（**microVMs**），它们与容器一样快速和短暂。您启动它们，通常只运行一个程序，程序完成后，虚拟机就退出。
- en: If it were possible to run a microVM on 9front, you could, in principle, start
    a Linux app, use it, and quit it again, and on a modern computer not notice the
    delay from starting the VM.
  id: totrans-split-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在9front上运行微型虚拟机是可能的，你原则上可以启动一个Linux应用程序，使用它，然后再退出，而在现代计算机上几乎不会注意到从启动虚拟机开始的延迟。
- en: That also reduces the need for a Linux emulator. This is a complex task, and
    one that needs constant maintenance to track the moving target of the current
    Linux kernel. So let it go.
  id: totrans-split-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这也减少了对 Linux 模拟器的需求。这是一项复杂的任务，需要不断维护以跟踪当前 Linux 内核的变化目标。所以就此放手吧。
- en: There's an X server. If that were running already, or a dependency, new microVMs
    could connect to it, and thus run seamlessly inside Rio. I suspect that Equis
    needs some love and maintenance, and this would be very flaky at first, but the
    component parts of this tech are already out there.
  id: totrans-split-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个 X 服务器。如果它已经在运行，或者有一个依赖项，新的微虚拟机可以连接到它，从而在 Rio 中无缝运行。我怀疑 Equis 需要一些关爱和维护，在最初可能会很不稳定，但这项技术的组成部分已经存在。
- en: There's already a model for this. [Qubes](https://www.qubes-os.org/) has been
    around for [over a decade](https://www.theregister.com/2012/09/05/qubes_secure_os_released/)
    and it is [in active development](https://www.theregister.com/2022/02/09/qubes_vm_upgrade/).
    All user programs run inside dedicated VMs. In the case of Qubes, this is for
    additional security. Qubes is based on Fedora and the Xen hypervisor, but it's
    the concept rather than the implementation that is important here.
  id: totrans-split-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这方面已经有了一个模型。[Qubes](https://www.qubes-os.org/) 已经存在[十多年](https://www.theregister.com/2012/09/05/qubes_secure_os_released/)，并且正在[积极开发中](https://www.theregister.com/2022/02/09/qubes_vm_upgrade/)。所有用户程序都在专用的虚拟机中运行。在
    Qubes 的情况下，这是为了增加安全性。Qubes 基于 Fedora 和 Xen hypervisor，但这里重要的是概念而非实现。
- en: This need not be focused on graphical apps. So long as the app in a microVM
    gets its input from the file system and writes its output to the file system as
    well, this could enable Linux apps to offer some degree of interoperability with
    native Plan 9 ones, without bloating Plan 9 with all of the complexity of a modern
    Linux system. The messy stuff is kept neatly boxed up.
  id: totrans-split-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这不必专注于图形应用程序。只要微虚拟机中的应用程序从文件系统获取输入并将其输出到文件系统，这就可能使 Linux 应用程序能够与本机 Plan 9 应用程序在某种程度上实现互操作，而不会使
    Plan 9 充斥着现代 Linux 系统的复杂性。混乱的东西被整齐地盒装起来。
- en: 'There is potential here for incrementally bringing some tools across from Unix
    to Plan 9 in a way that was impossible when Plan 9 was built. Stage one: isolating
    apps in VMs. Stage two: bring the most useful smaller, simpler apps across to
    APE or something like it. Stage three: potentially rewrite the essentials as native
    Plan 9 apps. (For console apps, a native version of something like [ncurses](https://tldp.org/HOWTO/NCURSES-Programming-HOWTO/intro.html)
    would make life a great deal easier.)'
  id: totrans-split-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这里存在潜力，逐步将一些工具从 Unix 带到 Plan 9 的方式在 Plan 9 构建时是不可能的。第一阶段：在 VM 中隔离应用程序。第二阶段：将最有用的较小、较简单的应用程序带到
    APE 或类似的地方。第三阶段：可能将基本的东西重写为本机 Plan 9 应用程序。（对于控制台应用程序，像 [ncurses](https://tldp.org/HOWTO/NCURSES-Programming-HOWTO/intro.html)
    这样的本机版本会使生活变得轻松许多。）
- en: 'Over time, a move like this would inevitably mean that Plan 9 itself gradually
    got bigger and more complex … but then there already is a successor to Plan 9
    in the form of the [Inferno OS](https://github.com/inferno-os/inferno-os). As
    [others have observed before](https://yotam.net/posts/linux-namespaces-are-a-poor-mans-plan9-namespaces/):'
  id: totrans-split-73
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，这样的转变无疑意味着 Plan 9 本身逐渐变得更大更复杂……但是已经有了 Plan 9 的后继者，即 [Inferno OS](https://github.com/inferno-os/inferno-os)。正如[他人之前观察到的](https://yotam.net/posts/linux-namespaces-are-a-poor-mans-plan9-namespaces/)：
- en: This is just one option of many. But it's a potential path forward to a cleaner,
    less bloated future. There is a postscript to this coming soon, as well – the
    final part of the original FOSDEM talk looked at stripping down Linux into a dedicated
    VM operating system, with all the bare-metal functionality removed. ®
  id: totrans-split-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是众多选择之一。但这是通向更清洁、更少臃肿未来的潜在路径。这很快就会有后续，原始的 FOSDEM 演讲的最后部分将讨论将 Linux 精简为专用的虚拟机操作系统，剥离所有裸机功能。®
