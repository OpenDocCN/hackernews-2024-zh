- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 15:03:20'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 15:03:20
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Imitation Learning | the singularity is nearer
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模仿学习 | 单一性更近了
- en: 来源：[https://geohot.github.io//blog/jekyll/update/2023/11/18/imitation-learning.html](https://geohot.github.io//blog/jekyll/update/2023/11/18/imitation-learning.html)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://geohot.github.io//blog/jekyll/update/2023/11/18/imitation-learning.html](https://geohot.github.io//blog/jekyll/update/2023/11/18/imitation-learning.html)
- en: 7 years ago I started [comma.ai](https://comma.ai) with a simple idea.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 7年前我开始了 [comma.ai](https://comma.ai)，从一个简单的想法开始。
- en: 'Gather tons of human driving data, state action pairs: `(S_t, A_t)`'
  id: totrans-split-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 收集大量的人类驾驶数据，状态动作对：`(S_t, A_t)`
- en: Train a supervised model `f(S_t) -> A_t`
  id: totrans-split-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 训练一个监督模型 `f(S_t) -> A_t`
- en: Drive cars with that model.
  id: totrans-split-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用这个模型驾驶汽车。
- en: The exact original formulation was a model that predicts steering angle from
    image, then used a PID loop to bring the wheel to that desired angle.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 最初的确切公式是一个模型，从图像中预测转向角，然后使用PID环路将方向盘调整到期望的角度。
- en: '`f_steerangle(img_t) -> steerangle_t`'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: '`f_steerangle(img_t) -> steerangle_t`'
- en: This turns out not to work, it couldn’t even drive straight on highways. It
    would drive for maybe 10 seconds, but then [error would accumulate](https://www.ri.cmu.edu/pub_files/2015/3/InvitationToImitation_3_1415.pdf)
    and it would drift to one side of the lane or the other (funny enough, it did
    show reluctance to cross the lane line, but it was unusable as an ADAS system)
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 结果表明这并不起作用，它甚至无法在高速公路上直线行驶。它可能会行驶大约10秒，但随后 [误差会累积](https://www.ri.cmu.edu/pub_files/2015/3/InvitationToImitation_3_1415.pdf)，车辆会向车道的一侧或另一侧漂移（有趣的是，它表现出不愿越过车道线的倾向，但作为ADAS系统是无用的）。
- en: '* * *'
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: comma’s first solution was a model that predicted lane position.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: comma的第一个解决方案是预测车道位置的模型。
- en: '`f_lane(img_t) -> (left_lane_pos_t, right_lane_pos_t)`'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: '`f_lane(img_t) -> (left_lane_pos_t, right_lane_pos_t)`'
- en: While that alone couldn’t drive a car (especially not around turns), it functioned
    as a unbiased correction for the steering angle model, where `α` is the correction
    factor.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这本身不能驾驶汽车（尤其是在转弯时），但它作为转向角模型的一个无偏校正，其中 `α` 是校正因子。
- en: '`(f_steerangle(img_t) - α*f_lane(img_t).mean()) -> steerangle_t`'
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`(f_steerangle(img_t) - α*f_lane(img_t).mean()) -> steerangle_t`'
- en: This was basically shipped in the first version of [openpilot](https://github.com/commaai/openpilot).
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这基本上是在第一个版本的 [openpilot](https://github.com/commaai/openpilot) 中发布的。
- en: '* * *'
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: One major issue this struggled with was ground truthing the lane line model.
    Unlike steering angle, which has a simple sensor to measure it, “lane lines” don’t
    have a clear definition. They broke the end-to-endness of the system.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 一个主要问题是围绕着地面真实性的车道线模型。与测量转向角的简单传感器不同，“车道线”没有明确的定义。它们破坏了系统的端对端性。
- en: We referred to lanes as the “original sin” of comma, and tried really hard to
    remove them. I’m sad to say that there’s still lanes in our ground truthing stack
    today, but we have [made amazing strides](https://blog.comma.ai/end-to-end-lateral-planning/)
    in removing them, to the point that openpilot in 2020 could [drive on a dirt road](https://twitter.com/comma_ai/status/1309248079808229377?lang=en)
    without any lane lines.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将车道称为comma的“原罪”，并努力将其消除。我很遗憾地说，今天我们的地面真实性堆栈中仍然存在车道线，但是我们已经在 [消除它们方面取得了惊人的进展](https://blog.comma.ai/end-to-end-lateral-planning/)，以至于2020年的openpilot可以在没有任何车道线的情况下
    [行驶在土路上](https://twitter.com/comma_ai/status/1309248079808229377?lang=en)。
- en: However, the removal of lanes was done with a whole bunch of other hand coding.
    We have extended this to removing explicit use of cars with [experimental mode](https://blog.comma.ai/090release/),
    but some of our hand coded assumptions break down a bit more in the longitudinal
    case vs the lateral case.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，消除车道线是通过大量其他手工编码完成的。我们已将此扩展到在 [实验模式下消除显式使用的汽车](https://blog.comma.ai/090release/)，但与纵向情况相比，某些我们的手工编码假设在横向情况下更加脆弱。
- en: '* * *'
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Funny enough, things have come full circle, and we think we have a solution
    to behavioral cloning. I will explain the problem as I best understand it, and
    leave the solution as an exercise to the reader.
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 足够有趣的是，事情已经完全回到起点，我们认为我们有了行为克隆的解决方案。我将尽力理解问题，并将解决方案留给读者自行解决。
- en: Imagine running the steering angle model over time. At each time step, any model
    makes `ε` error.
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下随时间运行转向角模型。在每个时间步骤，任何模型都会产生 `ε` 误差。
- en: '[PRE0]'
  id: totrans-split-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This model is easy to train, and can achieve very low losses on a holdout set.
    However, it won’t drive a car, and that’s due to the `ε` errors altering the next
    image. Note that the errors don’t alter the next image in either train or test,
    but on the road it looks like:'
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模型很容易训练，并且可以在保留集上实现非常低的损失。但是，它无法驾驶汽车，这是由于`ε`误差改变了下一帧图像。请注意，这些错误不会在训练或测试中改变下一帧图像，但在道路上看起来是这样的：
- en: '[PRE1]'
  id: totrans-split-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If it is driving well depends on how far `img_t3'''` is from `img_t3`, which
    depends on what `ε_t0 + ε_t1 + ε_t2 + ε_t3 + ...` looks like in the limit.
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果它能够有效驾驶，取决于`img_t3'''`离`img_t3`有多远，这取决于极限情况下`ε_t0 + ε_t1 + ε_t2 + ε_t3 + ...`的形状。
- en: Are the `ε` correlated? In the best case they aren’t, but in practice they almost
    always are. And even if they aren’t correlated, that error *still* grows unbounded.
    You need them to be **anti-correlated**. You need the limit of that sum to be
    0.
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`ε`是否相关？在最好的情况下，它们不相关，但在实践中它们几乎总是相关的。即使它们不相关，该误差仍会无限增长。你需要它们是**反相关的**。你需要这个和的极限为0。'
- en: '* * *'
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: You need an estimator of accumulated episilon. Above, we use `f_lane(img_t).mean()`,
    but imagine the generic form.
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要一个累积ε的估算器。在上面，我们使用`f_lane(img_t).mean()`，但想象一下其通用形式。
- en: '[PRE2]'
  id: totrans-split-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Replace that `α*` expression at time t with a function `f_correction(img_t)`,
    and you are back at the working formulation above.
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
  zh: 将时间t处的`α*`表达式替换为一个函数`f_correction(img_t)`，你就回到了上述的工作公式。
- en: '`(f_steerangle(img_t) - α*f_correction(img_t)) -> steerangle_t`'
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`(f_steerangle(img_t) - α*f_correction(img_t)) -> steerangle_t`'
- en: The billion dollar question, how do you end-to-end ground truth `f_correction`?
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: 十亿美元的问题是，你如何端对端地确定`f_correction`的地面真值？
