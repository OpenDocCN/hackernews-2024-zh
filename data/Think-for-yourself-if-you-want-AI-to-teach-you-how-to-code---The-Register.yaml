- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 15:13:56'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 15:13:56'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Think for yourself if you want AI to teach you how to code • The Register
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如果你想让 AI 教你如何编程，请自行思考 • The Register
- en: 来源：[https://www.theregister.com/2024/01/27/ai_coding_automatic/](https://www.theregister.com/2024/01/27/ai_coding_automatic/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.theregister.com/2024/01/27/ai_coding_automatic/](https://www.theregister.com/2024/01/27/ai_coding_automatic/)
- en: Feature Learning how to program is perhaps now easier than ever with AI, though
    the tools that suggest or generate source code for you have to be used wisely.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 学习如何编程现在可能比以往任何时候都更容易了，尽管建议或生成源代码的工具必须明智地使用。
- en: Programming requires patience and persistence, especially at the start of the
    learning process when nothing makes much sense. The rules for writing code seem
    confusing. There are all sorts of punctuation marks and symbols that have to be
    used carefully. Missing a colon or a comma, or messing up the indentation can
    lead to errors, depending on the language used. Over time, with enough practice,
    it does click into place.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 编程需要耐心和坚持，特别是在学习过程的开始阶段，当一切都不太明晰时。编写代码的规则似乎令人困惑。各种标点符号和符号都必须小心使用。遗漏冒号或逗号，或者弄乱缩进可能会导致错误，这取决于所使用的语言。随着足够的练习，它最终会成为一种习惯。
- en: Like most beginners learning how to code online, I started by watching tutorials
    and solving problems in sets of programming exercises. When I got stuck on a problem,
    it was very tempting to turn to ChatGPT, which would easily help me jump to the
    right solution. These types of assistants are good at generating simple code,
    and some of them can even give you a complete answer just as you're describing
    it.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 像大多数在线学习编程的初学者一样，我开始通过观看教程并解决一系列编程练习来学习。当我遇到问题时，很容易就去求助于 ChatGPT，它会轻松地帮我跳到正确的解决方案。这些类型的助手擅长生成简单的代码，有些甚至可以在你描述的时候给出完整的答案。
- en: I realized this when wrestling with the implementation of a particular function,
    and turned off GitHub Copilot's autocomplete feature in Visual Studio Code to
    stop myself from cheating.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当我与特定函数的实现苦苦搏斗时，我意识到这一点，并关闭了 GitHub Copilot 在 Visual Studio Code 中的自动完成功能，以阻止自己作弊。
- en: Don't just copy and paste
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 不要只是复制粘贴
- en: David Malan, a computer science professor at Harvard University teaching CS50,
    a popular introductory computer science course (that can be taken for free [online](https://pll.harvard.edu/course/cs50-introduction-computer-science)),
    agreed that AI can be a little too helpful sometimes.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 大卫·马兰（David Malan）是哈佛大学的计算机科学教授，教授着CS50，这是一门受欢迎的计算机科学入门课程（可以免费在线学习[online](https://pll.harvard.edu/course/cs50-introduction-computer-science)）。
- en: 'To dissuade students from using tools like OpenAI''s ChatGPT or Google''s Bard
    to complete their assignments, teachers offered them an alternative: a virtual
    rubber duck. The CS50 duck is a coding chat-bot powered by GPT-4 but has guardrails
    in place to prevent students from [cheating](https://www.theregister.com/2022/08/19/copilot_github_students/).'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 为了阻止学生使用像 OpenAI 的 ChatGPT 或 Google 的 Bard 来完成作业，老师们为他们提供了一种选择：虚拟橡皮鸭。CS50 鸭是一个由
    GPT-4 驱动的编程聊天机器人，但它有一些防止学生 [作弊](https://www.theregister.com/2022/08/19/copilot_github_students/)
    的保护措施。
- en: 'Rubber duck debugging, as you may be aware, [is a thing](https://medium.com/@arnoldcsubastil/the-psychology-behind-rubber-duck-debugging-f19141c70060)
    in software development: if you''re stuck on some code, talking though the problem
    with some toy or other inanimate object can help you figure out the solution all
    by yourself. It''s quite effective.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你可能知道的，橡皮鸭调试 [是软件开发中的一种方法](https://medium.com/@arnoldcsubastil/the-psychology-behind-rubber-duck-debugging-f19141c70060)：如果你在某段代码上卡住了，与某个玩具或其他静物讨论问题可能会帮助你自己找到解决方案。这是相当有效的。
- en: 'The CS50 duck debugger is an homage to that: the bot has been primed to be
    friendly and supportive, it only responds to queries that are related to the course,
    and doesn''t provide the answers to homework problems, Malan told *The Register*.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: CS50 鸭调试器是对此的致敬：该机器人被调整为友好和支持性，它只会回答与课程相关的查询，并且不会提供作业问题的答案，马兰告诉 *The Register*。
- en: '"Our policy at the course''s start is that students may not use third-party
    software like ChatGPT and Copilot; they simply tend to be too helpful, all too
    willing to provide students with solutions outright rather than guide them toward
    them, as a good teacher might. But students are allowed and encouraged to use
    CS50''s own AI-based software, which has those pedagogical guardrails in place,"
    he said.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: “我们在课程开始时的政策是禁止学生使用ChatGPT和Copilot等第三方软件；它们通常过于乐意直接为学生提供解决方案，而不是像一位好老师那样引导他们。但学生可以并且被鼓励使用CS50自己基于AI的软件，该软件已经设置了教学保护措施，”他说道。
- en: The CS50 duck was introduced last year, and the feedback has been mostly positive.
    Having a virtual tutor on hand means students can ask for help at any time they
    want. But like all AI models, it can make mistakes and isn't always accurate.
    Initial tests showed it was able to answer about 88 percent of questions related
    to the curriculum correctly.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: CS50小鸭于去年引入，反馈大多是积极的。随时有一个虚拟导师在手边意味着学生可以随时寻求帮助。但像所有的人工智能模型一样，它会犯错，而且并非总是准确的。初步测试显示，它能正确回答相关课程问题的约88%。
- en: The coding bot is useful for instructors, too; it gives them more time to help
    students in other areas beyond homework. In a research paper [[PDF](https://cs.harvard.edu/malan/publications/V1fp0567-liu.pdf)]
    analyzing the duck debugger's impact, teachers at Harvard said their experiment
    building a virtual AI coding assistant has paid off. They believe "generative
    AI [can] bolster student learning, not merely disrupt it," and are looking at
    ways the technology can be applied in other subjects.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 编码机器人对教师也是有用的；它可以为他们节省更多时间，帮助学生解决除作业之外的其他问题。在一篇分析小鸭调试器影响的研究报告[[PDF](https://cs.harvard.edu/malan/publications/V1fp0567-liu.pdf)]中，哈佛大学的老师说他们在建立虚拟AI编码助手方面的实验已经收到回报。他们相信“生成式人工智能[能够]提升学生的学习，而不仅仅是对其造成干扰”，并正在寻找该技术能在其他科目中应用的途径。
- en: Saving time with less Googling
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 节省时间少用谷歌搜索
- en: For what it's worth, my academic background is in physics and science journalism,
    and not computer science. I started learning how to code just before the latest
    generation of chat bots took off. Previously I would try to understand software
    concepts or fix bugs by, like many people, reading blog posts or searching for
    examples of similar code on sites like Stack Overflow. AI allows me to shortcut
    this process.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 就个人而言，我的学术背景是物理学和科学新闻学，而不是计算机科学。在最新一代聊天机器人开始火起来之前，我开始学习如何编写代码。以前，我会尝试通过阅读博客文章或在类似Stack
    Overflow这样的网站上搜索类似代码的示例来理解软件概念或修复错误，和许多人一样。人工智能让我能够捷径这个过程。
- en: Instead of sifting through lots of information to find solutions that best match
    my problem, I can now turn to a large language model for direct help. I'm learning
    so that I can better understand the technologies that others are using; these
    digital assistants get me up to speed faster than poring over multiple articles
    about, say, slices versus arrays, or leafing through other people's software projects.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我不再需要在大量信息中寻找最适合解决我的问题的解决方案，而是可以直接寻求大型语言模型的帮助。我在学习以便能更好地理解他人正在使用的技术；这些数字助手可以让我比阅读包括切片与数组之间差异的多篇文章，或者翻阅别人的软件项目更快地了解相关知识。
- en: Machine-written code, however, isn't always useful, and can [lower the quality](https://devclass.com/2024/01/24/ai-assistance-is-leading-to-lower-code-quality-claim-researchers/)
    of a code base. If I copied and pasted an AI assistant's output into my source,
    it would often introduce new errors because it didn't fit with the rest of my
    program. Trying to fix these mistakes can be tricky, especially if you don't understand
    what has been generated. As a novice, it wasn't always clear whether the errors
    were because the code was just plain wrong or whether it was being used in the
    wrong context.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，由机器人写的代码并不总是有用的，会降低代码库的质量。如果我把AI助手的输出复制粘贴到我的源代码中，通常会因为与我的程序其余部分不匹配而引入新错误。尝试修复这些错误可能会很棘手，尤其是如果你不理解所生成的内容。作为一个新手，有时不清楚错误是否是因为代码本身错误，还是因为它被错误地应用在了错误的上下文中。
- en: '"I think if someone wanted to learn to code [using the current] crop of AI
    tools, they should approach it with two goals: Take the time to learn to code
    enough to know what the tool is generating. [And] adopt the role of ''code reviewer''
    and study how to identify and improve bad code," Zed Shaw, a software developer
    and the author of [Learn Python the Hard Way](https://learnpythonthehardway.org/),
    told *The Register*.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 软件开发人员兼《学习Python的艰难之路》（https://learnpythonthehardway.org/）作者Zed Shaw告诉《The Register》：“我认为如果有人想要学习使用当前的AI工具进行编码，他们应该有两个目标：花时间学习足够的编码知识，以了解该工具生成了什么。[并]担任‘代码审阅员’的角色，研究如何识别和改进糟糕的代码。”
- en: Programmers should be able to spot errors in machine-made code and shouldn't
    trust the bots completely. They should certainly be on the look out for obvious
    copyrighted code slipping into the models' output.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 程序员应该能够发现机器生成的代码中的错误，并不应完全信任机器人。他们应该警惕明显侵犯版权的代码潜入模型的输出。
- en: '"The fact that ChatGPT gives solutions quicker wrapped in reassuring phrases
    like ''I think this should solve your problem..." make it so we turn off our critical
    thinking, and we don''t question its solutions as carefully as we should," said
    Charles Severance, a computer science professor at the University of Michigan''s
    School of Information, who has [released](https://online.dr-chuck.com/) free coding
    courses online.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 密歇根大学信息学院计算机科学教授查尔斯·塞弗兰斯说：“ChatGPT给出的解决方案更快，而且包装在像‘我认为这应该解决你的问题…’这样的安慰语中，使我们关闭了我们的批判性思维，我们没有像我们应该那样仔细地质疑它的解决方案。”他在网上发布了免费编程课程。
- en: '"Always assume that ChatGPT is a less-skilled programmer than you are. The
    only safe way to use AI tools is when you are confident the solution that it produces
    is correct," he added.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 他补充说：“永远假设ChatGPT是比你技术水平低的程序员。使用AI工具的唯一安全方法是当你确信它生成的解决方案是正确的时候。”
- en: You need to know what you're doing
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你需要知道你在做什么
- en: To use these tools effectively, you must understand your problem and explain
    it clearly in your prompt. The quality of the code returned in the output depends
    on the way you frame your questions in the input, Inbal Shani, chief product officer
    at GitHub, told *The Register*.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 要有效地使用这些工具，你必须了解你的问题并清楚地在提示中解释。GitHub首席产品官Inbal Shani告诉《The Register》说，输出中返回的代码质量取决于你在输入中如何提出问题。
- en: Users should interact with [GitHub Copilot](https://www.theregister.com/2023/03/22/github_copilot_learns_new_tricks/)
    as if they were talking to a colleague, she suggested. "The more detail you give
    that assistant that sits next to you about what your intention is, where you're
    going for the problem you're trying to solve, the better response you'll get because
    the AI gets more context. It knows how to do a more detailed search to find that
    right piece of code or recommend the right testing infrastructure for you," she
    said.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 用户应该像与同事交流一样与[GitHub Copilot](https://www.theregister.com/2023/03/22/github_copilot_learns_new_tricks/)交互，她建议说。她说：“你给那个坐在你旁边的助手提供的越多关于你意图、你为解决的问题而去哪里的详细信息，你得到的响应就会越好，因为AI会得到更多的上下文。它知道如何进行更详细的搜索，以找到正确的代码片段或为你推荐正确的测试基础设施。”
- en: The programming languages we use have become more aligned with human language;
    chat tools are just the next step in this evolution
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们使用的编程语言已经更加与人类语言一致；聊天工具只是这一进化的下一步
- en: Phillip Compeau, an associate teaching professor at Carnegie Mellon University,
    who created the [Rosalind](https://rosalind.info/problems/locations/) platform
    and [Programming for Lovers](https://programmingforlovers.com/) tutorial, for
    people interested in computational biology, agreed.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 卡内基梅隆大学副教授菲利普·康皮奥创建了[Rosalind](https://rosalind.info/problems/locations/)平台和[Programming
    for Lovers](https://programmingforlovers.com/)教程，专为对计算生物学感兴趣的人而设。
- en: When he's teaching students who are beginning to code, he encourages them to
    stay away from AI. But for more advanced students who know the basics, he teaches
    them how to use the technology to be more productive and efficient in their work.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当他教导初学编程的学生时，他鼓励他们远离人工智能。但对于更进阶的了解基础的学生，他教导他们如何利用这项技术在工作中更加高效和有效。
- en: '"One of the things that I show students is that the best way to get a clean,
    correct answer from an AI tool generating code is if you are able to clearly and
    correctly specify exactly what the computer needs to do. That is the very definition
    of programming a computer, and over time, the programming languages we use have
    become more aligned with human language; chat tools are just the next step in
    this evolution," he told *The Register*.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: “我向学生展示的一件事是，从AI工具生成代码中获得干净、正确的答案的最佳方法是，您能够清晰、正确地指定计算机需要做什么。这正是编程计算机的定义，随着时间的推移，我们使用的编程语言与人类语言更加契合；聊天工具只是这种演变的下一步。”他告诉《The
    Register》。
- en: Figuring out what you want your program to do, how it should work, and where
    it's gone wrong, is crucial in coding. Learners can only build these core skills
    over time with consistent practice. You can't skip this process by relying on
    AI if you want to be a competent software developer. But if you use it wisely,
    you can improve quickly and become a good programmer - and maybe it'll even be
    fun. ®
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 确定您希望程序做什么、它应该如何工作以及它出了什么问题，在编码中至关重要。学习者只能通过持续练习逐渐建立这些核心技能。如果您想成为一名胜任的软件开发者，就不能依赖人工智能跳过这个过程。但是，如果您明智地使用它，您可以快速提高并成为一名优秀的程序员
    - 也许甚至会很有趣。®
