- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-29 13:29:13'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-29 13:29:13'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Interaction as Content · GitHub
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 交互作为内容 · GitHub
- en: 来源：[https://gist.github.com/loreanvictor/bddd8824c744024d338e935bd7e96707](https://gist.github.com/loreanvictor/bddd8824c744024d338e935bd7e96707)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://gist.github.com/loreanvictor/bddd8824c744024d338e935bd7e96707](https://gist.github.com/loreanvictor/bddd8824c744024d338e935bd7e96707)
- en: Can We Get More Decentralised Than The Fediverse?
  id: totrans-split-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Can We Get More Decentralised Than The Fediverse?
- en: '[](#can-we-get-more-decentralised-than-the-fediverse)'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](#can-we-get-more-decentralised-than-the-fediverse)'
- en: 'I guess that the [fediverse](https://en.wikipedia.org/wiki/Fediverse) will
    be as decentralised as email: a bit, but not that much. Most people will be dependent
    on a few major hubs, some groups might have their own hubs (e.g. company email
    servers), personal instances will be pretty rare. This is in contrast to personal
    blogging, where every Bob can easily host their own (and they often do). I mean
    that''s already implied by the name: fediverse is [a federated universe, not a
    distributed one](https://en.wikipedia.org/wiki/Distributed_social_network#:~:text=Differences%20between%20distributed%20and%20federated%20networks,-See%20also%3A%20peer&text=Both%20kind%20of%20networks%20are,has%20no%20center%20at%20all).'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我猜想[fediverse](https://en.wikipedia.org/wiki/Fediverse)将像电子邮件一样分散化：有点，但并不是那么多。大多数人将依赖于几个主要枢纽，一些群体可能有自己的枢纽（例如公司电子邮件服务器），个人实例将非常少见。这与个人博客形成对比，那里每个Bob都可以轻松地托管自己的博客（他们经常这样做）。我的意思是这已经被名称所暗示：fediverse是[联邦化的宇宙，而不是分布式的](https://en.wikipedia.org/wiki/Distributed_social_network#:~:text=Differences%20between%20distributed%20and%20federated%20networks,-See%20also%3A%20peer&text=Both%20kind%20of%20networks%20are,has%20no%20center%20at%20all)。
- en: Why does this matter? Well I like not being dependent on one entity, but I would
    like it much more if I was dependent on no entities at all. In other words, I
    like to publish my own personal blog and get all the goodies of a social network,
    without being dependent on other micro-blogging / social content platforms.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这为什么重要？我喜欢不依赖一个实体，但我更喜欢如果根本不依赖任何实体。换句话说，我喜欢发布我自己的个人博客，并享受社交网络的所有好处，而不依赖其他微博客/社交内容平台。
- en: 'So in this writing, I''m going to:'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 所以在这篇文章中，我要：
- en: '❓ Contemplate on why the fediverse gets federated not distributed *(spoilers:
    its push vs pull)*'
  id: totrans-split-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ❓ 思考为什么fediverse是联邦化而不是分布式（剧透：是推送与拉取的区别）
- en: '🧠 Ideate on how could we get a distributed social system *(spoilers: by extending
    RSS)*'
  id: totrans-split-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 🧠 构思如何建立一个分布式社交系统（剧透：通过扩展RSS）
- en: '🛠️ Reflect on how would that look in practice *(spoilers: kinda weird, but
    I think doable?)*'
  id: totrans-split-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 🛠️ 反思这在实践中会是什么样子（剧透：有点奇怪，但我认为可行？）
- en: 'Ok first, what do I mean by saying "the fediverse is federated not distributed"
    or "its not decentralised enough"? Well I see three levels of decentralisation
    (relevant here):'
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我说“fediverse是联邦化而不是分布式”或者“它的分散程度还不够”是什么意思？嗯，我认为这里有三个分散化级别（这里很相关）：
- en: 🏦 Fully central, i.e. one center (e.g. twitter servers)
  id: totrans-split-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 🏦 完全中心化，即一个中心（例如twitter服务器）
- en: 🇪🇺 Federated, i.e. multiple centers (e.g. the fediverse, email servers)
  id: totrans-split-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 🇪🇺 联邦化，即多个中心（例如fediverse、电子邮件服务器）
- en: 🏴‍☠️ Distributed, i.e. no centers (e.g. personal blogging)
  id: totrans-split-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 🏴‍☠️ 分布式，即没有中心（例如个人博客）
- en: 'Why does fediverse leans towards the second? Because it is a *push-based* model:
    You need to push your content to whomever is interested, instead of just making
    it available for interested people to *pull it on their own*. It is the same as
    email, where you (or your email server) need to deliver each email to all recipients
    (by talking to each of their email servers). Those email servers also need to
    recognise and trust you too, which makes the whole network even more *federated*.'
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么fediverse倾向于第二种？因为它是一个*推送模型*：你需要将你的内容推送给感兴趣的人，而不是让感兴趣的人*自行拉取*。这与电子邮件相同，您（或您的电子邮件服务器）需要将每封电子邮件传递给所有收件人（通过与他们每个人的电子邮件服务器通信）。这些电子邮件服务器还需要认可和信任您，这使得整个网络甚至更加*联邦化*。
- en: '**💡 Example**'
  id: totrans-split-19
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**💡 例子**'
- en: 'Assume **Bob** wants to post something, **Alice**, **Carol** and **Malorey**
    would like to read it. In the fediverse (or a push-based system), the following
    happens:'
  id: totrans-split-20
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 假设**Bob**想发布一些内容，**Alice**、**Carol**和**Malorey**想阅读它。在fediverse（或推送型系统）中，会发生以下情况：
- en: '[PRE0]'
  id: totrans-split-21
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In a pull-based system, like personal blogging with [RSS](https://en.wikipedia.org/wiki/RSS)
    feeds, this happens instead:'
  id: totrans-split-22
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在像带[RSS](https://en.wikipedia.org/wiki/RSS) feeds的个人博客这样的拉取系统中，情况是这样的：
- en: '[PRE1]'
  id: totrans-split-23
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 👆 In the pull-based system, more work in the end is required (when should **Alice**
    query **Bob**? Also **Bob** needs to respond to the query, though thats super
    easy as it is static responses), but the work is better distributed, lowering
    the maximum amount of work someone has to do (in this case, **Bob**). Which means
    they need fewer resources to participate, which means more decentralised participation.
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 🕹️ 在基于拉取的系统中，最终需要更多的工作（例如，当**爱丽丝**应该查询**鲍勃**时？同时，**鲍勃**也需要响应查询，尽管这是非常容易的，因为是静态响应），但是工作分配得更好，降低了某人必须执行的最大工作量（在这种情况下，**鲍勃**）。这意味着他们需要较少的资源进行参与，这意味着更分散的参与。
- en: 'Also trust plays a role here: in a push-based system, **Bob** needs to be allowed
    to notify **Alice**, **Carol** and **Malorey**, which further restricts free-form
    participation. In a pull-based system though, **Bob** doesn''t even know about
    **Alice**, **Carol** and **Malorey**, meaning anyone can participate more freely.'
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，信任在此处发挥作用：在基于推送的系统中，**鲍勃**需要被允许通知**爱丽丝**、**卡罗尔**和**马洛斯**，这进一步限制了自由形式的参与。然而在基于拉取的系统中，**鲍勃**甚至不知道**爱丽丝**、**卡罗尔**和**马洛斯**，意味着任何人都可以更自由地参与。
- en: Ok before getting to a solution for a *pull-based* (and subsequently, more decentralised)
    social networking solution, I'd like to take a moment to consider all the pros
    and cons of the two approaches. We can do that without considering particulars
    of solutions and protocols, since the essential differences are all about the
    *push vs pull* content distribution model.
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 开始解决一种基于**拉取**（以及随之而来的更分散化）的社交网络解决方案之前，我想要花时间权衡两种方法的所有利弊。我们可以在不考虑解决方案和协议的具体情况的前提下进行讨论，因为根本的区别全在于**推送
    vs 拉取**的内内容分发模式。
- en: '🏴‍☠️ Pull: More Decentralised'
  id: totrans-split-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 🏴‍☠️ **拉取：更分散化**
- en: '[](#%EF%B8%8F-pull-more-decentralised)'
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[### 🚀 拉取：更分散化]()'
- en: As mentioned above, making content available for interested parties to pull
    needs waay less resources than pushing your content onto them (either they do
    the work, or you do it for them). It also requires less trust and gatekeeping,
    so anyone can easily participate with their own nodes, servers, CDNs, whatever.
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所述，提供内容让感兴趣的实体拉取所需资源远少于推送您的内容来（要么他们自己完成工作，要么由您代劳）。这还需要较少的信任和控制，因此任何人可以轻松地使用自己的节点、服务器、CDN等参与。
- en: '⚙️ Pull: Granular Access Control'
  id: totrans-split-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 🚀 **拉取：粒度访问控制**
- en: '[](#%EF%B8%8F-pull-granular-access-control)'
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[### 🚀 拉取：粒度访问控制]()'
- en: In a push-based protocol, the protocol needs to somewhat have a concept of who
    can push what to whom, meaning anything built on top of it needs to conform to
    that design (e.g. [ActivityPub](https://en.wikipedia.org/wiki/ActivityPub) defines
    concepts of blocking, accepting follow requests, etc.).
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于推送的协议中，协议需要具备谁可以向谁推送的某种概念，意味著任何构建在此基础上的系统都需遵循此设计（例如，[ActivityPub](https://en.wikipedia.org/wiki/ActivityPub)定义了阻止、接受关注请求等概念）。
- en: A pull-based system doesn't need to think about access control at all. Anyone
    can do whatever weird form of access control they want on the content they've
    made available. You can publish some of your activity to some public feed while
    publishing some others to some more private feed with friends or co-workers access.
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: 基于拉取的系统无需考虑访问控制。任何人在他们提供的内容上都能进行他们想要的任何复杂的访问控制。你可以将一些活动发布到一些公共流中，同时将其他活动发布到一些更私人的流中，与朋友或同事等人共享访问权限。
- en: Its kind of obvious, if content isn't pushed, it is not circulated as fast (e.g.
    realtime). This might be ok for some stuff, and not for others (direct messaging
    kind of loses its meaning in a pull-based system, for example).
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果内容不是推送的，传播速度可能会较慢（例如，实时）。这种可能对某些东西来说是可接受的，但对其他东西则不是（直接消息在这种基于拉取的系统中可能失去意义为例）。
- en: '<g-emoji class="g-emoji" alias="arrow_up_down">↕️</g-emoji> Push: Native Model
    of Two-way Interactions'
  id: totrans-split-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <g-emoji class="g-emoji" alias="arrow_up_down">上下箭头按钮</g-emoji> **推送：两种交互的基本模型**
- en: '[](#%EF%B8%8F-push-native-model-of-two-way-interactions)'
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[### 🃏 推送：基本的两种方交互模型]()'
- en: 'A push-based system is all about two-way interactions: X pushes something onto
    Y. A pull-based system breaks that down to individual interactions: X posts something,
    Y pulls something.'
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
  zh: 基于推送的系统全关于双向交互：X将某物推送至Y。基于拉取的系统将其分解为个别交互：X发布某物，Y拉取某物。
- en: Because push models two-way interactions, it acts much better on content circulation
    which can be modelled as two-way interaction. For example, if **Alice** comments
    on **Bob**'s post, in a push-based system that is the same as **Bob** posting
    something and notifying **Alice**. In a pull-based system though, **Bob** needs
    to query everyone who he knows and might've said something, to check whether what
    they've said is a comment on his post or not. Which is orders of magnitude more
    difficult.
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
  zh: 因为推送模型是双向交互，它在内容循环方面表现得更好，可以建模为双向交互。例如，如果**Alice**评论了**Bob**的帖子，在推送式系统中，这与**Bob**发布内容并通知**Alice**是一样的。然而，在拉取式系统中，**Bob**需要查询所有他认识的人，可能会说些什么，以检查他们说的是否是对他帖子的评论。这是难以计量的更加困难。
- en: Beyond content delivery that can be modelled as two-way interactions (e.g. comments,
    quotes, etc), both designs are lacking in the content discovery area in a broader
    sense, and in both cases you'd need to have third-party aggregators / crawlers
    / search services for that, similar to what search engines do for the distributed
    world of web pages.
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在可以被建模为双向交互的内容传递之外（例如评论，引用等），两种设计在更广义的内容发现领域都缺乏，无论在哪种情况下，您都需要具有第三方聚合器 / 爬虫 /
    搜索服务，类似于搜索引擎为分布式网络中的网页所做的事情。
- en: While kind of independent, such discovery is an essential part of any such social
    network (a social network without explore, recommendation, tags, communities,
    etc. is just a messaging service). Any solution for this discovery issue will
    naturally fill-in the discovery gaps of pull vs push based systems.
  id: totrans-split-40
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然有点独立，但这样的发现是任何这样的社交网络的一个重要部分（一个没有探索，推荐，标签，社区等的社交网络只是一个消息服务）。任何解决这一发现问题的方案都将自然填补基于拉取与推送系统之间发现差距的空白。
- en: In other words, if we were to practically build a pull-based system, we'd need
    some aggregators / search providers, which would also tell **Bob** who have reacted
    to their post, though in a push-based system **Bob** wouldn't be dependent on
    these fellas to get the answer to that question.
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，如果我们要实际构建一个基于拉取的系统，我们需要一些聚合器 / 搜索提供者，这些提供者还会告诉**Bob**谁对他们的帖子做出了反应，尽管在推送式系统中，**Bob**不需要依赖这些人来获得问题的答案。
- en: 'Assuming all those trade-offs are worth the benefits of a pull-based system,
    what would it look like? Well the best place to start is [RSS](https://en.wikipedia.org/wiki/RSS),
    since it is the defacto standard of syndicating and circulating content in a pull-based
    design:'
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
  zh: 假设所有这些权衡都值得基于拉取的系统的好处，那么它会是什么样子呢？嗯，最好的起点是从[RSS](https://en.wikipedia.org/wiki/RSS)开始，因为它是拉取式设计中内容合成和传播的事实标准：
- en: Its been iterated upon and polished for that specific puporse,
  id: totrans-split-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它已经被迭代和精炼，以达到特定目的，
- en: It has tons of tools and clients already (RSS readers, etc),
  id: totrans-split-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它已经拥有大量的工具和客户端（RSS阅读器等），
- en: A ton of content already in circulation supports RSS (Youtube, Reddit, Medium,
    most podcasts, most personal blogs and news outlets, etc).
  id: totrans-split-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大量的内容已经在使用RSS进行循环（YouTube，Reddit，Medium，大多数播客，大多数个人博客和新闻来源等）。
- en: What is missing here? Well social media are generally successful mostly by lowering
    the barriers of content creation, an important part of which is making it super
    easy to create content through interacting with some other existing content.
  id: totrans-split-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这里缺少什么？社交媒体通常成功的主要原因是通过降低内容创作的障碍，其中一个重要部分是通过与现有内容互动来轻松创建内容。
- en: 'We can bring that into RSS by treating ***any interaction as content***. If
    you post something, thats an entry in your feed (as before). If you comment on
    something, thats also an entry in your feed. If you like something, thats another
    entry in your feed. If you follow someone (which would mean subscribing to some
    RSS feed), thats also another entry in your feed. To mark that interactive nature
    of some feed entry, we can simple extend RSS a bit:'
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过将***任何互动作为内容***引入RSS来处理。如果您发布了某些内容，那么这是您的Feed中的条目（如前所述）。如果您评论了某些内容，那么这也是您Feed中的条目。如果您喜欢某些内容，那么这也是您Feed中的另一个条目。如果您关注某人（这意味着订阅某些RSS源），那么这也是您Feed中的另一个条目。为了标记Feed条目的互动性质，我们可以简单地稍微扩展RSS：
- en: '[PRE2]'
  id: totrans-split-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For easier discussion, I'll refer to this schematic extension as **RISS** (think
    of it as Really Intuitive Social Syndication, or any other acronym of your liking).
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更轻松地讨论，我将把这个方案扩展称为**RISS**（将其视为真正直观的社交合成，或者您喜欢的任何其他首字母缩略词）。
- en: Ok that's cool and all, but would it really make sense to build products and
    platforms around such a protocol, if it existed? Would such products and platforms
    provide tangible user benefits? I think so, though I'm not sure to what extent.
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，这很酷，但如果真的围绕这样的协议构建产品和平台，这真的有意义吗？这样的产品和平台是否能为用户提供实际的好处？我认为是的，尽管我不确定到何种程度。
- en: ✨ Anything, Anywhere, All at Once
  id: totrans-split-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ✨ 任何事物，任何地方，一次到位
- en: '[](#-anything-anywhere-all-at-once)'
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[](#-anything-anywhere-all-at-once)'
- en: The most immediate benefit will be that users can get access to a lot of social
    content all in one place. At a basic level, this is like a nice RSS reader where
    you get all your news, with added engagement of being able to interact with the
    content.
  id: totrans-split-53
  prefs: []
  type: TYPE_NORMAL
  zh: 最直接的好处将是用户可以在一个地方获取大量社交内容。在基本层面上，这就像一个不错的RSS阅读器，您可以在其中获取所有新闻，并与内容互动。
- en: At a deeper level though, this means you can ***find*** almost everything in
    one place. Most of content streams on the internet support RSS (YouTube, Medium,
    Reddit, podcasts, etc.). Producing RSS feeds is also relatively cheap, so content
    not supporting it can also [be cheaply bridged](https://gist.github.com/thefranke/63853a6f8c499dc97bc17838f6cedcc2).
    Top that with a nice search / aggregator, and you've effectively made the borders
    between various communities disappear for your users (I don't need to follow someone
    on YouTube to miss their content on Twitch. I can follow them anywhere in one
    place).
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
  zh: 然而在更深层次上，这意味着你几乎可以在一个地方***找到***几乎所有的东西。互联网上大部分内容流支持RSS（YouTube、Medium、Reddit、播客等）。制作RSS订阅也相对便宜，所以不支持它的内容也可以通过[廉价的桥接](https://gist.github.com/thefranke/63853a6f8c499dc97bc17838f6cedcc2)。再加上一个好用的搜索/聚合器，你就有效地使用户之间的各种社区边界消失了（我不需要在YouTube关注某人来错过他们在Twitch上的内容，我可以在一个地方关注他们）。
- en: 👁️‍🗨️ Separation of Speech and Reach
  id: totrans-split-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 👁️‍🗨️ 话语与触达的分离
- en: '[](#%EF%B8%8F%EF%B8%8F-separation-of-speech-and-reach)'
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
  zh: '[](#%EF%B8%8F%EF%B8%8F-separation-of-speech-and-reach)'
- en: This benefit hinges on adoption so is not immediate, and might not be that great
    as well. But, with such a model, publishing is completely separated from distribution,
    meaning no one can bar anyone from publishing and their direct subscribers receiving
    their content (except the ISPs?). However, anyone can refuse to help distribute
    anything they don't like, as this is not in anyway hindering publishing of said
    content, and there is no exclusivity on distribution as well.
  id: totrans-split-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这种好处取决于采纳，因此并不是即时的，也可能并不那么伟大。但是，采用这样的模式，发布完全与分发分开，这意味着没有人可以阻止任何人发布内容及其直接订阅者接收其内容（除非是ISP？）。然而，任何人都可以拒绝帮助分发他们不喜欢的任何内容，因为这并不以任何方式阻碍所述内容的发布，分发也不存在排他性。
- en: In contrast, in a centralised system, publishing and distribution are entangled,
    and distribution is done exlusively by the central platform operator as well,
    meaning them choosing "not to promote" is the borderline the same as "not allowing
    to be published". Even in a federated system, a server might decide they don't
    want to allow me to push content to my followers on that server anymore, effectively
    cutting off access.
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
  zh: 相比之下，在集中式系统中，发布和分发是纠缠在一起的，并且分发完全由中央平台运营商独家进行，这意味着他们选择“不推广”与“不允许发布”几乎是一样的边界。即使在联邦化系统中，服务器也可能决定不再允许我向该服务器上的我的关注者推送内容，实质上切断了访问。
- en: Now I know people are going to complain regardless, but I do feel this separation
    is important for regulating such online spaces. Furthermore, I think such neat
    separation plays a great role in the financials of content generation as well,
    the same way that the distribution that lead to anyone with their own website
    accessible through search engines also lead to new, more open monetisation models
    (that are of course not without their flaws).
  id: totrans-split-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我知道无论如何人们都会抱怨，但我确实认为这种分离对于调节这样的在线空间至关重要。此外，我认为这种清晰的分离在内容生成的财务方面也起着重要作用，就像分发使得任何人都可以通过搜索引擎访问自己的网站一样，也导致了新的、更开放的盈利模式（当然这些模式也不是没有缺陷）。
- en: It actually might be possible to get more decentralised than the fediverse,
    via a simple extension on RSS. It might not be worth it since there will be sacrifices,
    but there will also be gains, so it might. And the end result might be a faster
    growing decentralised network as it can already incorporate much more popular
    content and creators, with also much lower barrier to entry and cleaner seperation
    of concerns and responsibilities.
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，通过对RSS的简单扩展，可能会实现比联合宇宙更去中心化的可能性。也许这并不值得，因为会有所牺牲，但也会有所收获，所以可能性还是存在的。最终的结果可能是一个增长更快的去中心化网络，因为它已经可以整合更多流行的内容和创作者，同时降低了进入门槛，并且更清晰地分离了关注点和责任。
- en: I' personally pretty busy right now, but when I get time, I think I will start
    exploring the potential of RISS a bit more.
  id: totrans-split-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我目前个人非常忙，但是等我有时间时，我想我会开始更深入地探索RISS的潜力。
