- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 13:12:53'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 13:12:53'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: My list of challenging software projects some programmers should try | andreinc
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我推荐一些程序员应该尝试的具有挑战性的软件项目列表 | andreinc
- en: 来源：[https://www.andreinc.net/2024/03/28/programming-projects-ideas](https://www.andreinc.net/2024/03/28/programming-projects-ideas)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.andreinc.net/2024/03/28/programming-projects-ideas](https://www.andreinc.net/2024/03/28/programming-projects-ideas)
- en: Before we begin, I’d like to clarify that the project ideas I am about to suggest
    are mainly intended for those who are interested in exploring new areas of knowledge.
    However, it’s important to note that most of these ideas may not be relevant to
    today’s job market. If you’re looking to add something impressive to your portfolio
    for recruitment purposes, it might be worth considering other options. For example,
    instead of building yet another TODO app in React (75k repos on GitHub), you might
    want to focus on back-end or front-end development by cloning a well-known site.
    Such projects are likely to be more beneficial in terms of knowledge gained and
    job perspectives.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，我想澄清一下，我即将建议的项目想法主要是为那些有兴趣探索新知识领域的人准备的。然而，重要的是要注意，这些想法大多数可能与今天的职场不相关。如果你想为招聘目的添加一些令人印象深刻的内容，也许考虑其他选择会更值得。例如，不要再建立另一个React中的TODO应用（GitHub上有75k个仓库），你可能想专注于通过克隆一个知名网站来进行后端或前端开发。这些项目可能在知识获取和职业前景方面更有益。
- en: That said, some developers are more interested in exploring creative fields
    beyond the traditional job market. For these individuals, programming is more
    of a hobby than a means of earning a living. If you fall into this category, you
    may find the following project suggestions more appealing.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，一些开发人员对探索传统职场之外的创意领域更感兴趣。对于这些个人来说，编程更像是一种爱好而不是谋生手段。如果你属于这一类别，你可能会对以下项目建议更感兴趣。
- en: 'You can also check other articles on this topic:'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以检查关于这个主题的其他文章：
- en: '* * *'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: My list
  id: totrans-split-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我的列表
- en: '* * *'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Lesser Known Data Structures
  id: totrans-split-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 较少人知的数据结构
- en: For example, [Austin Z. Henley](https://austinhenley.com/) recommends writing
    your own [Topological Sort](https://en.wikipedia.org/wiki/Topological_sorting),
    [Recursive Descent Tree Parsing](https://en.wikipedia.org/wiki/Recursive_descent_parser),
    [Bloom Filter](https://en.wikipedia.org/wiki/Bloom_filter), [Piece Table](https://en.wikipedia.org/wiki/Piece_table),
    [Splay Tree](https://en.wikipedia.org/wiki/Splay_tree) implementations.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，[Austin Z. Henley](https://austinhenley.com/)建议你自己编写[拓扑排序](https://en.wikipedia.org/wiki/Topological_sorting)、[递归下降树解析](https://en.wikipedia.org/wiki/Recursive_descent_parser)、[Bloom
    Filter](https://en.wikipedia.org/wiki/Bloom_filter)、[Piece Table](https://en.wikipedia.org/wiki/Piece_table)和[Splay
    Tree](https://en.wikipedia.org/wiki/Splay_tree)的实现。
- en: The truth is that many Computer Science curricula have been diluted. In fact,
    some schools only teach the basics, such as Dynamic Arrays, Linked Lists, Queues,
    Stacks, and Hash Tables. However, there are many other Data Structures and Algorithms
    that are worth exploring beyond these fundamental concepts.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，许多计算机科学课程已经变得淡化。事实上，一些学校只教授基础知识，比如动态数组、链表、队列、栈和哈希表等。然而，除了这些基础概念之外，还有许多其他值得探索的数据结构和算法。
- en: 'Personally, I would also go for:'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 就我个人而言，我也会选择：
- en: '[B-Tree](https://en.wikipedia.org/wiki/B-tree) - I would defintely implement
    this one. It’s an interesting data structure that is used in database systems
    or filesystems. It also opens you to new ways of thinking about improving your
    memory and data layout in your applications;'
  id: totrans-split-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[B-Tree](https://en.wikipedia.org/wiki/B-tree) - 我肯定会实现这个。这是一个有趣的数据结构，用于数据库系统或文件系统。它还可以让你以新的方式思考如何改进应用程序中的内存和数据布局；'
- en: '[Circular Buffer](https://en.wikipedia.org/wiki/Circular_buffer) - This is
    a data structure that solves the Consumer-Producer problem elegantly, especially
    when the Consumer cannot (momentarily) keep up with the Producer.'
  id: totrans-split-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[循环缓冲区](https://en.wikipedia.org/wiki/Circular_buffer) - 这是一个优雅地解决生产者-消费者问题的数据结构，特别是当消费者（暂时）跟不上生产者时。'
- en: '[Cuckoo Filter](https://en.wikipedia.org/wiki/Cuckoo_filter) and [Cuckoo Hash
    Table](https://en.wikipedia.org/wiki/Cuckoo_hashing) - The practicality of the
    *Cuckoo* approach is yet to be proven, but this is definitely something that’s
    worth your time for fun purposes. Simply put, the idea behind those data structures
    is fun and creative.'
  id: totrans-split-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Cuckoo Filter](https://en.wikipedia.org/wiki/Cuckoo_filter)和[Cuckoo Hash Table](https://en.wikipedia.org/wiki/Cuckoo_hashing)
    - *Cuckoo*方法的实用性尚待证明，但这绝对值得你花时间去做一些有趣的事情。简而言之，这些数据结构的背后的理念是有趣和创造性的。'
- en: '[Open-Addressing Hash Tables](https://en.wikipedia.org/wiki/Open_addressing)
    - Most schools and courses focus on the Separate Chaining technique and blatantly
    ignore the elegant ways of *open addressing*. So why don’t you want write a few
    open-addressing implementations and benchmark them against existing library implementations?
    Try to make your implementation faster, brag, and learn.'
  id: totrans-split-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[开放寻址哈希表](https://en.wikipedia.org/wiki/Open_addressing) - 大多数学校和课程都专注于分离链接技术，漠视了*开放寻址*的优雅方式。那么为什么不写几个开放寻址的实现并与现有的库实现进行比较呢？试着让你的实现更快，炫耀一下，同时学到东西。'
- en: Write a distributed Hash Table
  id: totrans-split-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写一个分布式哈希表
- en: If you already know how to write your own *Hash Table*, building a [*Distributed
    Hash Table*](https://en.wikipedia.org/wiki/Distributed_hash_table) won’t be an
    impossible task. Although it might seem like a complicated project, it doesn’t
    necessarily have to be *production-ready* or become the next Redis.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经知道如何编写自己的*哈希表*，那么构建[*分布式哈希表*](https://en.wikipedia.org/wiki/Distributed_hash_table)并不是一项不可能的任务。虽然这似乎是一个复杂的项目，但并不一定要*生产就绪*或成为下一个
    Redis。
- en: By the end of the project, you will likely become more comfortable with network
    programming and managing concurrency issues.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 项目结束时，你可能会更加熟悉网络编程和管理并发问题。
- en: 'Bonus: Thoroughly testing your DHT will be a journey in itself.'
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 奖励：彻底测试你的 DHT 将是一段旅程。
- en: ^(Don’t get demotivated if you get stuck or the result is terrible!)
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: ^(如果你被卡住或者结果很糟糕，不要灰心！)
- en: '* * *'
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Write a *scientific* calculator
  id: totrans-split-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写一个*科学*计算器
- en: This is a relatively easy project, but it’s worth witnessing the power of the
    *Stack* data structure. You can do this by learning how to evaluate [RPN expressions](https://en.wikipedia.org/wiki/Reverse_Polish_notation)
    and implementing the [Shunting Yard algorithm](https://en.wikipedia.org/wiki/Shunting_yard_algorithm).
    As you work on this project, challenge yourself to learn a new GUI library, one
    that you haven’t touched before.
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个相对容易的项目，但值得一试*栈*数据结构的力量。你可以通过学习如何评估[RPN 表达式](https://en.wikipedia.org/wiki/Reverse_Polish_notation)并实现[Shunting
    Yard 算法](https://en.wikipedia.org/wiki/Shunting_yard_algorithm)来实现这一点。在此项目中，挑战自己学习一个以前未接触过的新
    GUI 库。
- en: 'Once you have a working calculator, start exploring crazy ideas:'
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你有了一个可用的计算器，就开始探索一些疯狂的想法：
- en: Implement your own [sine function](https://androidcalculator.com/how-do-calculators-compute-sine/)
    just for the thrills.
  id: totrans-split-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实现你自己的[sin 函数](https://androidcalculator.com/how-do-calculators-compute-sine/)只是为了刺激一下。
- en: Implement your own big numbers library to operate on huge numbers.
  id: totrans-split-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个自己的大数库，以便处理大数运算。
- en: Can your calculator handle raising `3` to the power of `2.27`?
  id: totrans-split-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的计算器能处理将`3`的`2.27`次方吗？
- en: Write a module that enables users to operate on matrices, including adding,
    multiplying, calculating the inverse, computing the determinant, and solving systems
    of linear equations, among other things.
  id: totrans-split-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个模块，使用户能够操作矩阵，包括加法、乘法、计算逆矩阵、计算行列式和解线性方程组等。
- en: Can your calculator check if a number is prime?
  id: totrans-split-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的计算器能检查一个数是不是质数吗？
- en: Can you write a module that gives the user random insights about numbers?
  id: totrans-split-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你能写一个模块，给用户关于数字的随机见解吗？
- en: It can also work in the [browser](http://numcalc.com/).
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
  zh: 它还可以在[浏览器](http://numcalc.com/)中工作。
- en: '* * *'
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Write your own HTTP Server in C + POSIX
  id: totrans-split-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用 C + POSIX 编写你自己的 HTTP 服务器
- en: ^(*First, start learning C if you haven’t already. Contrary to popular belief,
    learning C early in your career will make you a better programmer in the long-run.
    I am more convinced of this now than I ever was before. However, this is not the
    time or the article to support my claim.*)
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
  zh: ^(*首先，如果你还没有学习 C 的话，开始学习 C。与流行观点相反，早期学习 C 将使你在长远来看成为更好的程序员。我现在比以往任何时候都更加确信这一点。然而，现在不是支持我观点的时候或文章。*)
- en: 'When implementing the HTTP protocol, keep in mind that you don’t have to cover
    everything. The purpose of this exercise is not to write the fastest HTTP server
    out there. Instead, you do it to:'
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在实现 HTTP 协议时，请记住你不必涵盖所有内容。这个练习的目的不是为了写出最快的 HTTP 服务器。相反，你做这个是为了：
- en: Accumulate frustrations that come with dealing with `char*` frequently. Of course,
    you can create an abstraction over `char*` to solve this problem, and while it
    may be buggy, it will be uniquely yours!
  id: totrans-split-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 积累频繁处理`char*`所带来的挫折感。当然，你可以创建一个`char*`的抽象来解决这个问题，虽然可能会有 bug，但它将是你独特的作品！
- en: Learn about `fork()`, `pthreads`, and all the other low-level knowledge you
    don’t usually have to deal with, except in your Operating Systems course.
  id: totrans-split-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习`fork()`、`pthreads`以及你通常不必处理的其他低级知识，除非在操作系统课程中。
- en: Gain an understanding of how TCP and Networking Programming work.
  id: totrans-split-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解TCP和网络编程的工作原理。
- en: If mentioning C has offended you, you can always rewrite the project in Rust.
    That would be *new*.
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果提到C让你不悦，你可以用Rust重写这个项目。那将是*新的*。
- en: '* * *'
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Write an esoteric programming language
  id: totrans-split-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写一种奇怪的编程语言
- en: ^(*An esoteric programming language (sometimes shortened to esolang) is a programming
    language designed to test the boundaries of computer programming language design,
    as a proof of concept, as software art, as a hacking interface to another language
    (particularly functional programming or procedural programming languages), or
    as a joke. ([source](https://en.wikipedia.org/wiki/Esoteric_programming_language))*)
  id: totrans-split-46
  prefs: []
  type: TYPE_NORMAL
  zh: ^(*奇怪编程语言（有时缩写为esolang）是一种旨在测试计算机编程语言设计边界的编程语言，作为概念的证明、软件艺术、作为另一种语言（特别是函数式编程或过程式编程语言）的黑客界面，或作为一个笑话。
    ([来源](https://en.wikipedia.org/wiki/Esoteric_programming_language))*)
- en: 'This is a side project that lets you unleash your creativity. Here are some
    tips to help you get started:'
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个让你释放创造力的副业项目。以下是一些帮助你入门的建议：
- en: Your language can have a simple grammar, so you don’t need to use [a parser
    generator](https://en.wikipedia.org/wiki/Comparison_of_parser_generators). Write
    the parser yourself. An [APL](https://en.wikipedia.org/wiki/APL_(programming_language))-like
    language with a limited set of *special graphic symbols* is not impossible to
    implement or parse.
  id: totrans-split-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的语言可以有一个简单的语法，所以你不需要使用[解析生成器](https://en.wikipedia.org/wiki/Comparison_of_parser_generators)。自己写解析器。一个类似APL的语言，具有有限的*特殊图形符号*集，不是不可能实现或解析。
- en: Have you heard of [UIUA](https://www.uiua.org/) ?
  id: totrans-split-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你听说过[UIUA](https://www.uiua.org/)吗？
- en: Altough it may seem like a long shot, take a look at [Tsevhu](https://www.reddit.com/r/tsevhu/comments/iserji/tsevhu_key_activity/)
    and [Koilang](https://gammagames.itch.io/koilang). Tsevhu is not a programming
    language but a language in itself. Can you create similar with code?
  id: totrans-split-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尽管这看起来可能很难实现，但看看[Tsevhu](https://www.reddit.com/r/tsevhu/comments/iserji/tsevhu_key_activity/)和[Koilang](https://gammagames.itch.io/koilang)。Tsevhu不是一种编程语言，而是一种语言。你能用代码创造类似的东西吗？
- en: Speaking of Koilang, have you checked out [piet](https://www.dangermouse.net/esoteric/piet.html)?
  id: totrans-split-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提到Koilang，你有没有看过[piet](https://www.dangermouse.net/esoteric/piet.html)？
- en: It can also be a better joke than the [Albanian Laundry Machine](https://esolangs.org/wiki/Albanian_Laundry_Machine).
  id: totrans-split-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它也可以比[阿尔巴尼亚洗衣机](https://esolangs.org/wiki/Albanian_Laundry_Machine)更好笑。
- en: For more inspiration, check the esolangs [wiki](https://esolangs.org/wiki/Language_list).
  id: totrans-split-53
  prefs: []
  type: TYPE_NORMAL
  zh: 欲获取更多灵感，请查看奇怪语言的[wiki](https://esolangs.org/wiki/Language_list)。
- en: '* * *'
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Write your own Virtual Machine
  id: totrans-split-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 写你自己的虚拟机
- en: I’ve personally tackled this challenge (check this [article](/2021/12/01/writing-a-simple-vm-in-less-than-125-lines-of-c)).
    However, I regret not designing an original set of instructions and instead implementing
    the [LC-3](https://en.wikipedia.org/wiki/Little_Computer_3) instruction set.
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我个人曾经应对过这个挑战（查看这篇[文章](/2021/12/01/writing-a-simple-vm-in-less-than-125-lines-of-c)）。然而，我后悔没有设计一套原创指令集，而是实现了[LC-3](https://en.wikipedia.org/wiki/Little_Computer_3)指令集。
- en: Your project can be register-based, stack-based, or a hybrid. It can even have
    a JIT compiler if you are feeling brave.
  id: totrans-split-57
  prefs: []
  type: TYPE_NORMAL
  zh: 你的项目可以是基于寄存器、基于堆栈，或者是混合的。如果你感觉勇敢，它甚至可以有一个JIT编译器。
- en: Whatever you choose to do, the key is to be creative.
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
  zh: 不管你选择做什么，关键是要有创意。
- en: For instance, please look at [uxn](https://100r.co/site/uxn.html), which can
    run on multiple operating Systems or devices, and has a small community of dans
    writing [software for it](https://github.com/hundredrabbits/awesome-uxn#applications).
    Even [tsoding](https://www.twitch.tv/tsoding), one of my favourite Tech Youtubers,
    recently [implemented Conway’s Game Of Life as an uxn program](https://www.youtube.com/watch?v=rTb6NFKUmQU).
  id: totrans-split-59
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，请看[uxn](https://100r.co/site/uxn.html)，它可以在多个操作系统或设备上运行，并且有一个小的[dans社区为其编写软件](https://github.com/hundredrabbits/awesome-uxn#applications)。甚至[tsoding](https://www.twitch.tv/tsoding)，我最喜欢的技术YouTuber之一，最近也[将康威生命游戏实现为uxn程序](https://www.youtube.com/watch?v=rTb6NFKUmQU)。
- en: '* * *'
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Write a game for UXN
  id: totrans-split-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为UXN编写游戏
- en: Firstly, understand how [uxn](https://100r.co/site/uxn.html) works by reading
    the official documentation or by following [this excellent tutorial](https://compudanzas.net/uxn_tutorial.html).
  id: totrans-split-62
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，了解[uxn](https://100r.co/site/uxn.html)的工作原理，可以通过阅读官方文档或者按照[这个优秀的教程](https://compudanzas.net/uxn_tutorial.html)来学习。
- en: 'Look at existing examples:'
  id: totrans-split-63
  prefs: []
  type: TYPE_NORMAL
  zh: 查看现有示例：
- en: Come up with an original game idea.
  id: totrans-split-64
  prefs: []
  type: TYPE_NORMAL
  zh: 想出一个原创游戏点子。
- en: Everyone seems to prefer Snake, Tetris, Pong, and Space Invaders. But there
    are other (now forgotten) games that deserve your attention.
  id: totrans-split-65
  prefs: []
  type: TYPE_NORMAL
  zh: 似乎每个人都更喜欢贪吃蛇、俄罗斯方块、乒乓球和太空侵略者。但还有其他（现在被遗忘的）游戏值得你关注。
- en: 'Why don’t you try implementing something different:'
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么不试着实现一些不同的东西：
- en: '* * *'
  id: totrans-split-67
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Write a game for TIC-80
  id: totrans-split-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为TIC-80编写一个游戏
- en: '[TIC-80](https://tic80.com/) is a fantasy computer for making, playing, and
    sharing tiny games.'
  id: totrans-split-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[TIC-80](https://tic80.com/)是一个用于制作、玩耍和分享微型游戏的幻想计算机。'
- en: If you don’t know what game to write, take inspiration from [here](https://tic80.com/play).
  id: totrans-split-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不知道写什么游戏，可以从[这里](https://tic80.com/play)获得灵感。
- en: This is more of an artistic project than a programming one, but still.
  id: totrans-split-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这更多是一个艺术项目而不是编程项目，但仍然如此。
- en: '* * *'
  id: totrans-split-72
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Write your original markdown language
  id: totrans-split-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写你自己的原创markdown语言
- en: Write a markdown language that is not precisely markdown but something alien.
  id: totrans-split-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个不完全是markdown但有点异域风情的markdown语言。
- en: Extend an existing markdown implementation. You can get inspiration from [LiaScript](https://liascript.github.io/)
    or [R Markdown](https://rmarkdown.rstudio.com/).
  id: totrans-split-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扩展现有的markdown实现。你可以从[LiaScript](https://liascript.github.io/)或[R Markdown](https://rmarkdown.rstudio.com/)中获得灵感。
- en: '* * *'
  id: totrans-split-76
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Write a static site-generator
  id: totrans-split-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写一个静态站点生成器
- en: Yes, it’s boring, but something needs to use the newly invented markdown language.
  id: totrans-split-78
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，这很无聊，但有些东西需要使用新发明的markdown语言。
- en: '* * *'
  id: totrans-split-79
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Mandelbrot Set Navigator
  id: totrans-split-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 曼德勃罗集导航器
- en: You don’t have to be [Arthur C. Clarke](https://www.youtube.com/watch?v=5qXSeNKXNPQ)
    or a mathematican to appreciate the useless beauty of the [Mandelbrot Set](https://en.wikipedia.org/wiki/Mandelbrot_set).
  id: totrans-split-81
  prefs: []
  type: TYPE_NORMAL
  zh: 你不必是[亚瑟·C·克拉克](https://www.youtube.com/watch?v=5qXSeNKXNPQ)或者数学家才能欣赏[曼德勃罗集](https://en.wikipedia.org/wiki/Mandelbrot_set)的无用之美。
- en: 'Have you ever considered building your own Mandelbrot Set Explorer using HTML
    Canvas? There are plenty of examples on the internet:'
  id: totrans-split-82
  prefs: []
  type: TYPE_NORMAL
  zh: 你有考虑过用HTML Canvas构建你自己的曼德勃罗集探索器吗？互联网上有大量的例子：
- en: 'Add a creative touch! For example:'
  id: totrans-split-83
  prefs: []
  type: TYPE_NORMAL
  zh: 添加一些创意的元素！例如：
- en: To make your Mandelbrot Set Navigator unique, you can incorporate an intelligent
    coordinate system to help you navigate through infinity.
  id: totrans-split-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要使你的曼德勃罗集导航器独特，你可以整合一个智能坐标系统，帮助你在无限中航行。
- en: Additionally, you can add a bookmark feature so you can save and revisit interesting
    patterns that you discover during your exploration. For instance, if you stumble
    upon the [Elephant Valley](https://math.stackexchange.com/questions/2979906/are-there-any-unique-places-in-the-mandelbrot-set-that-have-not-yet-been-seen-gr),
    you can bookmark the location for future reference and easily share it with others.
  id: totrans-split-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此外，你可以添加一个书签功能，这样你就可以保存并重新访问你在探索过程中发现的有趣模式。例如，如果你偶然发现了[象谷](https://math.stackexchange.com/questions/2979906/are-there-any-unique-places-in-the-mandelbrot-set-that-have-not-yet-been-seen-gr)，你可以为将来参考而添加书签，并轻松与他人分享。
- en: '* * *'
  id: totrans-split-86
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Simulate various phenomena from physics
  id: totrans-split-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模拟物理中的各种现象
- en: 'Start with optics; it might be easier, and there are tons of examples on the
    internet:'
  id: totrans-split-88
  prefs: []
  type: TYPE_NORMAL
  zh: 从光学开始；这可能更容易，而且互联网上有大量的例子：
- en: 'If you understand what you are doing, jump to other areas:'
  id: totrans-split-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你明白你在做什么，跳到其他区域：
- en: Start small and slowly become [Bartosz Ciechanowski](https://ciechanow.ski/).
  id: totrans-split-90
  prefs: []
  type: TYPE_NORMAL
  zh: 从小事做起，逐渐成为[Bartosz Ciechanowski](https://ciechanow.ski/)。
- en: '* * *'
  id: totrans-split-91
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Experiment with Conway’s Game Of Life
  id: totrans-split-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 尝试康威生命游戏
- en: I suppose you are already familiar with [Conway’s Game Of Life](https://en.wikipedia.org/wiki/Conway's_Game_of_Life).
  id: totrans-split-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我想你已经熟悉[康威生命游戏](https://en.wikipedia.org/wiki/Conway's_Game_of_Life)了。
- en: 'Make something creative out of it:'
  id: totrans-split-94
  prefs: []
  type: TYPE_NORMAL
  zh: 创造一些有创意的东西：
- en: Change the rules, add more states, add colors, emoticons and animations;
  id: totrans-split-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改变规则，添加更多状态，加入颜色、表情符号和动画；
- en: Put the cells in a labyrinth, add portals, let the cells teleport;
  id: totrans-split-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将单元格放入迷宫中，添加传送门，让单元格传送；
- en: Write a slot machine that’s powered this cellular automaton;
  id: totrans-split-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写一个由这个细胞自动机驱动的老虎机；
- en: Interfere with the cells in real-time, see how they react, throw them some meat;
  id: totrans-split-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实时干预单元格，看它们如何反应，扔点肉给它们；
- en: There’s so much you can do.
  id: totrans-split-99
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以做很多事情。
- en: '* * *'
  id: totrans-split-100
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Approximate reality with polynomials
  id: totrans-split-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用多项式近似现实
- en: If you’ve studied computer graphics, you might’ve encountered the concept of
    [Bezier Curves](https://en.wikipedia.org/wiki/B%C3%A9zier_curve). Why don’t you
    start approximating *reality* with them?
  id: totrans-split-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你学过计算机图形学，你可能已经遇到了[贝塞尔曲线](https://en.wikipedia.org/wiki/B%C3%A9zier_curve)的概念。为什么不开始用它们来逼近*现实*？
- en: 'Some fans of [Pierre Bezier](https://en.wikipedia.org/wiki/Pierre_B%C3%A9zier)
    and [Jamiroquai](https://en.wikipedia.org/wiki/Jamiroquai) have already played
    this game:'
  id: totrans-split-103
  prefs: []
  type: TYPE_NORMAL
  zh: 一些[Pierre Bezier](https://en.wikipedia.org/wiki/Pierre_B%C3%A9zier)和[Jamiroquai](https://en.wikipedia.org/wiki/Jamiroquai)的粉丝已经玩过这个游戏：
- en: Maybe now it’s your time to write a different renderer.
  id: totrans-split-104
  prefs: []
  type: TYPE_NORMAL
  zh: 也许现在是你写一个不同渲染器的时候了。
- en: Why don’t you pick sines and cosines instead of polynomials? I hope you see
    where [I am going](https://www.youtube.com/watch?v=-qgreAUpPwM).
  id: totrans-split-105
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么不选择正弦和余弦而不是多项式？希望你明白[我在说什么](https://www.youtube.com/watch?v=-qgreAUpPwM)。
- en: '* * *'
  id: totrans-split-106
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: A calculator for symbolic differentiation
  id: totrans-split-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个符号微分计算器
- en: ^(To understand what I am referring to, check this question on [StackOverflow](https://stackoverflow.com/questions/43455320/difference-between-symbolic-differentiation-and-automatic-differentiation).)
  id: totrans-split-108
  prefs: []
  type: TYPE_NORMAL
  zh: ^(要理解我在说什么，请查看[StackOverflow上的这个问题](https://stackoverflow.com/questions/43455320/difference-between-symbolic-differentiation-and-automatic-differentiation)。)
- en: This is going to be a challenging project, but not as hard as you would imagine.
    Basically, you need to come up with something WolframAlpha is [already capable
    of](https://www.wolframalpha.com/input?i=derivative++x%5E2*cos%28x-7%29%2F%28sin%28x%29%29).
  id: totrans-split-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这将是一个具有挑战性的项目，但并不像你想象的那么难。基本上，你需要想出一些WolframAlpha已经[能够做到的事情](https://www.wolframalpha.com/input?i=derivative++x%5E2*cos%28x-7%29%2F%28sin%28x%29%29)。
- en: You will have to be able to parse mathematical expressions. Then, you will have
    to (recursively) apply specific rules for differentiation (e.g. the [chain](https://en.wikipedia.org/wiki/Chain_rule)
    and [product](https://en.wikipedia.org/wiki/Product_rule)). In the end, you will
    have to *simplify* the resulting expression.
  id: totrans-split-110
  prefs: []
  type: TYPE_NORMAL
  zh: 你将需要能够解析数学表达式。然后，你将不得不（递归地）应用特定的微分规则（例如[链式法则](https://en.wikipedia.org/wiki/Chain_rule)和[乘积法则](https://en.wikipedia.org/wiki/Product_rule)）。最后，你将需要*简化*所得到的表达式。
- en: You don’t have to implement everything.
  id: totrans-split-111
  prefs: []
  type: TYPE_NORMAL
  zh: 你不必实现所有的东西。
- en: You will have to remember the fundamentals of calculus.
  id: totrans-split-112
  prefs: []
  type: TYPE_NORMAL
  zh: 你将需要记住微积分的基础知识。
- en: It’s going to be fun.
  id: totrans-split-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这将是有趣的。
- en: '* * *'
  id: totrans-split-114
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: A slot machine
  id: totrans-split-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个老虎机
- en: … In the name of science.
  id: totrans-split-116
  prefs: []
  type: TYPE_NORMAL
  zh: … 以科学之名。
- en: 'I wouldn’t put to much effort into the graphics. It’s not like you want to
    contribute to people’s misfortune and addiction. But the [mathematics behind a
    slot machine](https://www.youtube.com/watch?v=BFlRH99TQOw) can be interesting,
    plus you can be *creative*:'
  id: totrans-split-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我不会花太多精力在图形上。这并不是说你想要贡献于人们的不幸和成瘾。但是[老虎机背后的数学](https://www.youtube.com/watch?v=BFlRH99TQOw)可能会很有趣，而且你可以*发挥创意*：
- en: Why don’t you write a \(\pi\) slot machine that uses the decimals of \(\pi\)
    to give prizes.
  id: totrans-split-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么不写一个使用π的小数点来给奖品的π老虎机呢。
- en: Why don’t you use a Game Of Life Slot Machine, where you stop on specific cell
    configurations and give prizes;
  id: totrans-split-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么不使用生命游戏槽机，你停在特定的细胞配置上并且给予奖品；
- en: Why don’t you build a Sinusoidal Slot Machine (you can get inspiration from
    a previous project of mine called [The Sinusoidal Tetris](/2024/02/06/the-sinusoidal-tetris)).
  id: totrans-split-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么不制作一个正弦槽机（你可以从我之前的一个项目[正弦俄罗斯方块](/2024/02/06/the-sinusoidal-tetris)中获取灵感）。
- en: Write a game engine for text-based games
  id: totrans-split-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为文本游戏编写一个游戏引擎
- en: ^(This idea was suggested by @snej on the [lobste.rs](https://lobste.rs/s/5fsjpu/my_list_challenging_software_projects))
  id: totrans-split-122
  prefs: []
  type: TYPE_NORMAL
  zh: ^(这个想法是由@Snej在[lobste.rs](https://lobste.rs/s/5fsjpu/my_list_challenging_software_projects)上建议的)
- en: Few of our generation have played *text-based* games, and it’s fine - we need
    to put our hardware to better use than rendering fonts in a terminal.
  id: totrans-split-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们这一代人中很少有人玩过*基于文本的*游戏，这很正常 - 我们需要更好地利用我们的硬件，而不是在终端中渲染字体。
- en: But there was a time when games like [Zork](https://playclassic.games/games/adventure-dos-games-online/the-hitchhikers-guide-to-the-galaxy/play/)
    or [Colossal Cave](https://rickadams.org/adventure/advent/) were extremely popular.
  id: totrans-split-124
  prefs: []
  type: TYPE_NORMAL
  zh: 但曾经有一段时间，像[Zork](https://playclassic.games/games/adventure-dos-games-online/the-hitchhikers-guide-to-the-galaxy/play/)或者[Colossal
    Cave](https://rickadams.org/adventure/advent/)这样的游戏非常流行。
- en: So why don’t you build a game engine for text-based adventures?
  id: totrans-split-125
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，为什么不为基于文本的冒险游戏构建一个游戏引擎呢？
- en: Make the engine *cross-platform* - allow the game to work in the terminal, browser,
    or an [SDL](https://en.wikipedia.org/wiki/Simple_DirectMedia_Layer) window.
  id: totrans-split-126
  prefs: []
  type: TYPE_NORMAL
  zh: 使引擎*跨平台* - 允许游戏在终端、浏览器或者[SDL](https://en.wikipedia.org/wiki/Simple_DirectMedia_Layer)窗口中运行。
- en: 'Or leave it terminal only. There are beautiful TUI libraries nowadays, so you
    don’t have to stay cursed because you are stuck with [ncurses](https://en.wikipedia.org/wiki/Ncurses):'
  id: totrans-split-127
  prefs: []
  type: TYPE_NORMAL
  zh: 或者仅仅保留终端。现在有许多优秀的TUI库，因此你不必因为被困在[curses](https://en.wikipedia.org/wiki/Ncurses)上而感到沮丧。
- en: Write a Tiling Window Manager
  id: totrans-split-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写一个平铺窗口管理器
- en: Now that [Wayland](https://en.wikipedia.org/wiki/Wayland_(protocol)) is almost
    here, I am sure there’s a lot of *new* room for creativity. Look at [sway](https://swaywm.org/).
  id: totrans-split-129
  prefs: []
  type: TYPE_NORMAL
  zh: 现在[Wayland](https://en.wikipedia.org/wiki/Wayland_(protocol))即将到来，我确信有很多*新*的创意空间。看看[sway](https://swaywm.org/)。
- en: Ok, writing a [Tiling Window Manager](https://en.wikipedia.org/wiki/Tiling_window_manager)
    is not the most approachable project you can think of. But at the same time, you
    can keep things simple. For example, XMonad, when launched, had roughly 1000 lines
    of code.
  id: totrans-split-130
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，编写一个[平铺窗口管理器](https://en.wikipedia.org/wiki/Tiling_window_manager)可能不是你能想到的最容易的项目。但同时，你可以保持简单。例如，XMonad在启动时大约有1000行代码。
