- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 15:13:05'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 15:13:05'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Are we at peak vector database?
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们已经达到了向量数据库的顶峰吗？
- en: 来源：[https://softwaredoug.com/blog/2024/01/24/are-we-at-peak-vector-db](https://softwaredoug.com/blog/2024/01/24/are-we-at-peak-vector-db)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://softwaredoug.com/blog/2024/01/24/are-we-at-peak-vector-db](https://softwaredoug.com/blog/2024/01/24/are-we-at-peak-vector-db)
- en: As both a search person and something of a veteran of the NoSQL days, I wonder
    to myself, often, “how can so many vector databases need to exist?”.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个搜索专家，也是 NoSQL 时代的老手，我经常在心中想，“为什么会需要这么多向量数据库？”。
- en: Even in our current AI age, where everyone and their mom is trying to build
    the next chat / AI powered whatever. Even today when it seems everyone is putting
    vectors somewhere to retrieve them…
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 即使在我们当前的人工智能时代，每个人和他们的妈妈都在尝试构建下一个聊天/人工智能驱动的东西。即使在今天，当似乎每个人都在某处放置向量以便检索它们时…
- en: I have to ask the tough question - when have we reached peak vector DB? Do we
    have enough choices for the specific task of storing and retrieving vectors?
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我必须问一个艰难的问题 - 我们何时达到了向量数据库的顶峰？对于存储和检索向量的特定任务，我们有足够的选择吗？
- en: 'Just on cursory listing, I can think of the following vector databases, libraries,
    whatever:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 仅仅初步列举，我可以想到以下向量数据库、库，等等：
- en: '**Pure Vector DBs**'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**纯向量数据库**'
- en: Pinecone
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pinecone
- en: QDrant
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: QDrant
- en: Milvus / Zilliz
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Milvus / Zilliz
- en: Weaviate
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Weaviate
- en: Turbopuffer
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Turbopuffer
- en: MyScale
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MyScale
- en: '**Open Source search engines**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**开源搜索引擎**'
- en: Solr
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Solr
- en: Elasticsearch
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Elasticsearch
- en: OpenSearch
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenSearch
- en: Vespa
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vespa
- en: '**Libraries**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**库**'
- en: Annoy,
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Annoy,
- en: FAISS,
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FAISS,
- en: NMSLib
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NMSLib
- en: HNSWLib
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HNSWLib
- en: Lucene
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lucene
- en: Chroma
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chroma
- en: (a million others)
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: (其他无数个)
- en: '**Open Source DBs**'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**开源数据库**'
- en: Redis
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Redis
- en: PGVector
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PGVector
- en: 'Cassandra, Mongo, etc etc (every DB seems to be getting its vector index :wink:
    )'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cassandra、Mongo 等等（似乎每个数据库都在获取其向量索引：wink:）
- en: '**Cloud solutions**'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**云解决方案**'
- en: Google Vertex
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Vertex
- en: Azure AI Search
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure AI Search
- en: (more at [awesome vector search](https://github.com/currentslab/awesome-vector-search))
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: （更多内容请参阅[awesome vector search](https://github.com/currentslab/awesome-vector-search)）
- en: If we take vector search as one type of data store in the NoSQL paradigm, we
    might put it in its own category. We would say Mongo is a document database alongside
    CouchDB and pals. We would say Cassandra is a columnar data store, alongside the
    Scylla or HBase.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们把向量搜索看作 NoSQL 范式中的一种数据存储类型，我们可能会把它放在自己的类别中。我们会说 Mongo 是一个文档数据库，与 CouchDB
    和伙伴们一样。我们会说 Cassandra 是一个列式数据存储，与 Scylla 或 HBase 一样。
- en: So in each category, we have a handful (2-3). Yet in vector search, we have
    dozens upon dozens of options. As a “customer” of such options, the field becomes
    overwhelming.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在每个类别中，我们有几个（2-3）选择。然而，在向量搜索中，我们有数十种选择。作为这些选择的“客户”，这个领域变得令人难以应付。
- en: And vector retrieval increasingly isn’t the problem. The hard problems of solving
    real-world retrieval are not related to just getting vectors, it’s everything
    around it
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 而且向量检索越来越不是问题。解决现实世界检索的难题不仅仅是获取向量，而是与之相关的一切。
- en: Intent classification - given a “query” how do I know whether I can solve the
    problem or not (RAG) or how to route the query to the correct place Inference
    and reranking - given a “query”, and some candidate retrieved vectors / items,
    how do I perform inference on say, an arbitrary tensorflow model, to give the
    most relevant items? Diversity - given a “query” how do I broaden the candidate
    pool to more than just “similar to vectors” - to get at not just one intent, but
    all possible intents Lexical retrieval / hybrid search - given natural language,
    how do I use direct lexical signals (boring old BM25, just filtering, whatever)
    to give relevant results
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 意图分类 - 给定一个“查询”，我如何知道我是否能解决这个问题（RAG）或如何将查询路由到正确的位置 推理和重新排名 - 给定一个“查询”，以及一些候选的检索到的向量/项，我如何在任意
    tensorflow 模型上执行推理，以给出最相关的项？ 多样性 - 给定一个“查询”，我如何扩大候选池，不仅仅是“与向量相似”的 - 不仅仅是一个意图，而是所有可能的意图
    词汇检索/混合搜索 - 给定自然语言，我如何使用直接的词汇信号（老套的 BM25，仅仅是过滤，等等）来给出相关结果
- en: OK and that’s just the lexical side. We’re inventing new ways of interacting
    with data. Nobody I talk to has really created a robust way to evaluate quality
    of context for RAG. There’s new UX paradigms out there - chat and chat-adjacent
    - that we’re experimenting with.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，这只是词汇方面。我们正在发明与数据交互的新方法。我与之交谈的人中没有人真正创建了一个评估 RAG 上下文质量的强大方法。有新的 UX 范式 - 聊天和与聊天相关的
    - 我们正在尝试。
- en: The challenge being, the world is wide open for experimentation, yet on first
    blush, all the money is being concentrated in one part of the stack. We’re not
    looking at the problem holistically.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 挑战在于，世界是一个广阔的实验场，但乍一看，所有的钱都集中在技术栈的一个部分。我们没有全面地看待这个问题。
- en: Why we’re not at peak vector DB
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么我们还没有达到峰值向量数据库
- en: OK, that’s one argument, sure.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，这是一个观点，当然。
- en: Here’s the other point of view.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这是另一个观点。
- en: There needs to be a place to focus on, and rethink, retrieval problems. In the
    same way NoSQL forced us to rethink databases. Capital and brainpower need a place
    to zero in on how to solve this next generation of retrieval + relevance problems.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 需要一个地方来集中注意力，重新思考检索问题。就像 NoSQL 强迫我们重新思考数据库一样。资金和智慧需要一个地方来集中，以解决下一代检索 + 相关性问题。
- en: So the old, curmudgeonly search person in me would say “well whatever, people
    realize they need search engines and use Solr / Elasticsearch anyway”.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我内心中那个老式的、脾气暴躁的搜索人会说“好吧，不管怎样，人们意识到他们需要搜索引擎，然后使用 Solr / Elasticsearch。”
- en: But that’s not good enough. These search tools feel esoteric, in the average
    “AI Engineers” mind, they will think first of vector retrieval, then stumble into
    all the problems I list above. They’ll learn they need to care about all the things
    beyond ANN, but only after their app is stood up. In the same way the search engineers
    of yore backed into all kinds of problems only after comitting to a big Solr or
    Elasticsearch installation.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 但这还不够。这些搜索工具感觉很深奥，在一般的“人工智能工程师”脑海中，他们会首先考虑向量检索，然后碰到我列出的所有问题。他们会学到，他们需要关心 ANN
    之外的所有事情，但是只有在他们的应用程序启动之后才会这样。就像往昔的搜索工程师在承诺安装大型 Solr 或 Elasticsearch 后才会倒退到各种问题中一样。
- en: Additionally, I suspect, more and more surfaces will be driven by some retrieval-ish
    thing. Search-but-not-search. Real-time recommendations, but driven by vector
    (and other kinds of) retrieval that looks more like a search engine - not batch
    computed, nightly jobs common these days. I wrote about the coming revolution
    of “Relevance Driven Applications” in 2016, and now, its happening - not with
    boring old search engines as I once thought - but by reinventing our whole notion
    of the retrieval layer that drives user experiences.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我怀疑，越来越多的界面将由某种检索式的东西驱动。搜索但不是搜索。实时推荐，但由向量（和其他类型的）检索驱动，看起来更像搜索引擎——不是像今天普遍的批量计算、夜间作业那样。2016年，我写过关于“相关性驱动应用程序”即将发生的革命，现在，它正在发生——不是通过我曾经认为的乏味的老式搜索引擎——而是通过重新发明驱动用户体验的检索层的整个概念。
- en: So, I suspect the smart people at these companies will branch out beyond “making
    ANN better / more scalable” to building complete retrieval and ranking systems
    solving a tremendous array of problems. The money and effort will flow to where
    the customers see the problem.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我怀疑这些公司的聪明人会超越“使 ANN 更好/更可扩展”的范畴，构建完整的检索和排序系统，解决大量的问题。资金和精力将流向客户认为有问题的地方。
- en: In the end, like in NoSQL, we may end up with SQL again (but with all the NoSQL
    innovations). Or, in other words, we may end up with these vendors building a
    full blown “search engine”. Yet these new search engines will have many more batteries
    included the AI/Chat/RAG/whatever experiences people increasingly reach for.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，就像在 NoSQL 中一样，我们最终可能会回到 SQL（但具有所有 NoSQL 的创新）。换句话说，我们可能最终会看到这些供应商构建一个完整的“搜索引擎”。然而，这些新的搜索引擎将包含更多的电池，用于
    AI/聊天/RAG/人们越来越多地寻求的其他体验。
