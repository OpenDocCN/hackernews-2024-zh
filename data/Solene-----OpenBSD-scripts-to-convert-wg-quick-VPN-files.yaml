- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 13:41:54'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 13:41:54
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Solene''% : OpenBSD scripts to convert wg-quick VPN files'
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Solene的OpenBSD脚本，用于转换wg-quick VPN文件
- en: 来源：[https://dataswamp.org/~solene/2024-04-27-openbsd-wg-quick-converter.html](https://dataswamp.org/~solene/2024-04-27-openbsd-wg-quick-converter.html)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://dataswamp.org/~solene/2024-04-27-openbsd-wg-quick-converter.html](https://dataswamp.org/~solene/2024-04-27-openbsd-wg-quick-converter.html)
- en: 1\. Introduction [§](#_Introduction)
  id: totrans-split-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 引言 [§](#_Introduction)
- en: If you use commercial VPN, you may have noticed they all provide WireGuard configurations
    in the wg-quick format, this is not suitable for an easy use in OpenBSD.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用商业VPN，您可能已经注意到它们都提供wg-quick格式的WireGuard配置，这对于在OpenBSD中方便使用并不合适。
- en: As I currently work a lot for a VPN provider, I often have to play with configurations
    and I really needed a script to ease my work.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我目前在VPN提供商工作很多，我经常需要处理配置，我真的需要一个脚本来简化我的工作。
- en: I made a shell script that turns a wg-quick configuration into a hostname.if
    compatible file, for a full integration into OpenBSD. This is practical if you
    always want to connect to a given VPN server, not for temporary connections.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我做了一个Shell脚本，将wg-quick配置转换为hostname.if兼容文件，以便完全集成到OpenBSD中。如果您希望始终连接到给定的VPN服务器，而不是临时连接，这非常实用。
- en: '[OpenBSD manual pages: hostname.if](https://man.openbsd.org/hostname.if)'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[OpenBSD手册页面：hostname.if](https://man.openbsd.org/hostname.if)'
- en: '[Sourcehut project: wg-quick-to-hostname-if](https://git.sr.ht/~solene/wg-quick-to-hostname-if)'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[Sourcehut 项目：wg-quick-to-hostname-if](https://git.sr.ht/~solene/wg-quick-to-hostname-if)'
- en: 2\. Usage [§](#_Usage)
  id: totrans-split-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 用法 [§](#_Usage)
- en: It is really easy to use, download the script and mark it executable, then run
    it with your wg-quick configuration as a parameter, it will output the hostname.if
    file to the standard output.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这非常容易使用，下载脚本并标记为可执行，然后使用您的wg-quick配置作为参数运行它，它将在标准输出中输出hostname.if文件。
- en: '[PRE0]'
  id: totrans-split-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In the generated file, it uses a trick to dynamically figure the current default
    route which is required to keep a non-vpn route to the VPN gateway.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在生成的文件中，它使用了一个技巧来动态确定当前默认路由，这对保持与VPN网关的非VPN路由是必需的。
- en: 3\. Short VPN sessions [§](#_Short_VPN_sessions)
  id: totrans-split-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 短暂的VPN会话 [§](#_Short_VPN_sessions)
- en: When I shared my script on mastodon, Carlos Johnson shared their own script
    which is pretty cool and complementary to mine.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当我在mastodon上分享我的脚本时，Carlos Johnson 分享了他们自己的脚本，非常酷，与我的脚本互补。
- en: If you prefer to establish a VPN for a limited session, you may want to take
    a look at his script.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您更喜欢为有限的会话建立VPN，您可能需要查看他的脚本。
- en: '[Carlos Johnson GitHub: file-wg-sh gist](https://gist.github.com/callemo/aea83a8d0e1e09bb0d94ab85dc809675#file-wg-sh)'
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[Carlos Johnson GitHub：file-wg-sh gist](https://gist.github.com/callemo/aea83a8d0e1e09bb0d94ab85dc809675#file-wg-sh)'
- en: 4\. Prevent leaks [§](#_Prevent_leaks)
  id: totrans-split-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 防止泄漏 [§](#_Prevent_leaks)
- en: 'If you need your WireGuard VPN to be leakproof (= no network traffic should
    leave the network interface outside the VPN if it''s not toward the VPN gateway),
    you should absolutely do the following:'
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望您的WireGuard VPN是防泄漏的（即如果不是流向VPN网关的网络流量不应离开网络接口），您绝对应该执行以下操作：
- en: your WireGuard VPN should be on rdomain 0
  id: totrans-split-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的WireGuard VPN应该在rdomain 0上
- en: WireGuard VPN should be established on another rdomain
  id: totrans-split-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WireGuard VPN应该在另一个rdomain上建立
- en: use PF to block traffic on the other rdomain that is not toward the VPN gateway
  id: totrans-split-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用PF阻止流向VPN网关之外的其他rdomain上的流量
- en: use the VPN provider DNS or a no-log public DNS provider
  id: totrans-split-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用VPN提供商的DNS或无记录公共DNS提供商
- en: '[Older blog post: WireGuard and rdomains](https://dataswamp.org/~solene/2021-10-09-openbsd-wireguard-exit.html)'
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[更早的博客文章：WireGuard和rdomain](https://dataswamp.org/~solene/2021-10-09-openbsd-wireguard-exit.html)'
- en: 5\. Conclusion [§](#_Conclusion)
  id: totrans-split-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5\. 结论 [§](#_Conclusion)
- en: OpenBSD's ability to configure WireGuard VPNs with ifconfig has always been
    an incredible feature, but it was not always fun to convert from wg-quick files.
    But now, using a commercial VPN got a lot easier thanks to a few piece of shell.
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: OpenBSD 使用 ifconfig 配置 WireGuard VPN 的能力一直是一个令人难以置信的功能，但从 wg-quick 文件转换并不总是有趣。但现在，使用商业VPN要容易得多，多亏了一些Shell脚本。
