- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '类别: 未分类'
- en: 'date: 2024-05-27 14:26:10'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '日期: 2024-05-27 14:26:10'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Distributed Inference and Fine-tuning of Large Language Models Over The Internet
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在互联网上分布式推理和大型语言模型的微调
- en: 来源：[https://browse.arxiv.org/html/2312.08361v1](https://browse.arxiv.org/html/2312.08361v1)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://browse.arxiv.org/html/2312.08361v1](https://browse.arxiv.org/html/2312.08361v1)
- en: 0:  prefix_tokens, embeddings, known_servers
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 0:  prefix_tokens, embeddings, known_servers
- en: 1:  generated_sequence = list()
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 1:  generated_sequence = list()
- en: 2:  cache = dictionary()
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 2:  cache = dictionary()
- en: 3:  streams = dictionary()
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 3:  streams = dictionary()
- en: 4:  chain = find_best_chain(known_servers)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 4:  chain = find_best_chain(known_servers)
- en: 5:  for <math alttext="\text{server}\in\text{chain}" class="ltx_Math" display="inline"
    id="alg1.l5.m1.1"><semantics id="alg1.l5.m1.1a"><mrow id="alg1.l5.m1.1.1" xref="alg1.l5.m1.1.1.cmml"><mtext
    id="alg1.l5.m1.1.1.2" xref="alg1.l5.m1.1.1.2a.cmml">server</mtext><mo id="alg1.l5.m1.1.1.1"
    xref="alg1.l5.m1.1.1.1.cmml">∈</mo><mtext id="alg1.l5.m1.1.1.3" xref="alg1.l5.m1.1.1.3a.cmml">chain</mtext></mrow><annotation-xml
    encoding="MathML-Content" id="alg1.l5.m1.1b"><apply id="alg1.l5.m1.1.1.cmml" xref="alg1.l5.m1.1.1"><ci
    id="alg1.l5.m1.1.1.2a.cmml" xref="alg1.l5.m1.1.1.2"><mtext id="alg1.l5.m1.1.1.2.cmml"
    xref="alg1.l5.m1.1.1.2">server</mtext></ci><ci id="alg1.l5.m1.1.1.3a.cmml" xref="alg1.l5.m1.1.1.3"><mtext
    id="alg1.l5.m1.1.1.3.cmml" xref="alg1.l5.m1.1.1.3">chain</mtext></ci></apply></annotation-xml><annotation
    encoding="application/x-tex" id="alg1.l5.m1.1c">\text{server}\in\text{chain}</annotation><annotation
    encoding="application/x-llamapun" id="alg1.l5.m1.1d">server ∈ chain</annotation></semantics></math> do
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 5:  for <math alttext="\text{server}\in\text{chain}" class="ltx_Math" display="inline"
    id="alg1.l5.m1.1"><semantics id="alg1.l5.m1.1a"><mrow id="alg1.l5.m1.1.1" xref="alg1.l5.m1.1.1.cmml"><mtext
    id="alg1.l5.m1.1.1.2" xref="alg1.l5.m1.1.1.2a.cmml">server</mtext><mo id="alg1.l5.m1.1.1.1"
    xref="alg1.l5.m1.1.1.1.cmml">∈</mo><mtext id="alg1.l5.m1.1.1.3" xref="alg1.l5.m1.1.1.3a.cmml">chain</mtext></mrow><annotation-xml
    encoding="MathML-Content" id="alg1.l5.m1.1b"><apply id="alg1.l5.m1.1.1.cmml" xref="alg1.l5.m1.1.1"><ci
    id="alg1.l5.m1.1.1.2a.cmml" xref="alg1.l5.m1.1.1.2"><mtext id="alg1.l5.m1.1.1.2.cmml"
    xref="alg1.l5.m1.1.1.2">server</mtext></ci><ci id="alg1.l5.m1.1.1.3a.cmml" xref="alg1.l5.m1.1.1.3"><mtext
    id="alg1.l5.m1.1.1.3.cmml" xref="alg1.l5.m1.1.1.3">chain</mtext></ci></apply></annotation-xml><annotation
    encoding="application/x-tex" id="alg1.l5.m1.1c">\text{server}\in\text{chain}</annotation><annotation
    encoding="application/x-llamapun" id="alg1.l5.m1.1d">server ∈ chain</annotation></semantics></math> do
- en: 6:     streams[server] = rpc_inference(server)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 6:     streams[server] = rpc_inference(server)
- en: 7:     cache[server] = list()
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 7:     cache[server] = list()
- en: 8:  end for
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 8:  end for
- en: '9:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '9:'
- en: 10:  inputs = embeddings(prefix_tokens)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 10:  inputs = embeddings(prefix_tokens)
- en: 11:  while should_continue(generated_sequence) do
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 11:  while should_continue(generated_sequence) do
- en: 12:     tail_servers = copy(chain)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 12:     tail_servers = copy(chain)
- en: 13:     while not empty(tail_servers) do
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 13:     while not empty(tail_servers) do
- en: 14:        server = tail_servers.pop_left()
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 14:        server = tail_servers.pop_left()
- en: '15:        try:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '15:        try:'
- en: 16:              <math alttext="\triangleright" class="ltx_Math" display="inline"
    id="alg1.l16.m1.1"><semantics id="alg1.l16.m1.1a"><mo id="alg1.l16.m1.1.1" xref="alg1.l16.m1.1.1.cmml">▷</mo><annotation-xml
    encoding="MathML-Content" id="alg1.l16.m1.1b"><ci id="alg1.l16.m1.1.1.cmml" xref="alg1.l16.m1.1.1">▷</ci></annotation-xml><annotation
    encoding="application/x-tex" id="alg1.l16.m1.1c">\triangleright</annotation><annotation
    encoding="application/x-llamapun" id="alg1.l16.m1.1d">▷</annotation></semantics></math>
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 16:              <math alttext="\triangleright" class="ltx_Math" display="inline"
    id="alg1.l16.m1.1"><semantics id="alg1.l16.m1.1a"><mo id="alg1.l16.m1.1.1" xref="alg1.l16.m1.1.1.cmml">▷</mo><annotation-xml
    encoding="MathML-Content" id="alg1.l16.m1.1b"><ci id="alg1.l16.m1.1.1.cmml" xref="alg1.l16.m1.1.1">▷</ci></annotation-xml><annotation
    encoding="application/x-tex" id="alg1.l16.m1.1c">\triangleright</annotation><annotation
    encoding="application/x-llamapun" id="alg1.l16.m1.1d">▷</annotation></semantics></math>
- en: Attempt normal inference
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试正常推理
- en: 17:              outputs = streams[server].send(inputs)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 17:              outputs = streams[server].send(inputs)
- en: 18:              cache[server].append(inputs)
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 18:              cache[server].append(inputs)
- en: 19:              inputs = outputs
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 19:              inputs = outputs
- en: '20:        catch ServerFailed:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '20:        catch ServerFailed:'
- en: 21:              <math alttext="\triangleright" class="ltx_Math" display="inline"
    id="alg1.l21.m1.1"><semantics id="alg1.l21.m1.1a"><mo id="alg1.l21.m1.1.1" xref="alg1.l21.m1.1.1.cmml">▷</mo><annotation-xml
    encoding="MathML-Content" id="alg1.l21.m1.1b"><ci id="alg1.l21.m1.1.1.cmml" xref="alg1.l21.m1.1.1">▷</ci></annotation-xml><annotation
    encoding="application/x-tex" id="alg1.l21.m1.1c">\triangleright</annotation><annotation
    encoding="application/x-llamapun" id="alg1.l21.m1.1d">▷</annotation></semantics></math>
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 21:              <math alttext="\triangleright" class="ltx_Math" display="inline"
    id="alg1.l21.m1.1"><semantics id="alg1.l21.m1.1a"><mo id="alg1.l21.m1.1.1" xref="alg1.l21.m1.1.1.cmml">▷</mo><annotation-xml
    encoding="MathML-Content" id="alg1.l21.m1.1b"><ci id="alg1.l21.m1.1.1.cmml" xref="alg1.l21.m1.1.1">▷</ci></annotation-xml><annotation
    encoding="application/x-tex" id="alg1.l21.m1.1c">\triangleright</annotation><annotation
    encoding="application/x-llamapun" id="alg1.l21.m1.1d">▷</annotation></semantics></math>
- en: Replace the failed server
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 替换失败的服务器
- en: 22:              streams.pop(server).close()
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 22:              streams.pop(server).关闭()
- en: 23:              past_inputs = cache.pop(server)
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 23:              past_inputs = cache.pop(server)
- en: 24:              new_servers = replace_failed_server(
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 24:              new_servers = 替换失败服务器(
- en: 25:                    server, past_inputs, cache,
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 25:                    server, past_inputs, cache,
- en: 26:                    streams, known_servers)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 26:                    streams, known_servers)
- en: 27:              chain.replace(server, new_servers)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 27:              chain.replace(server, new_servers)
- en: 28:              tail_servers.push_left(new_servers)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 28:              tail_servers.push_left(new_servers)
- en: 29:     end while
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 29:     结束 while
- en: '30:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '30:'
- en: 31:     logits = compute_logits(outputs, embeddings)
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 31:     logits = 计算_logits(outputs, embeddings)
- en: 32:     next_token = choose_next(logits) {e.g. greedy}
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 32:     next_token = 选择下一个(logits) {例如 贪婪}
- en: 33:     generated_sequence.append(next_token)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 33:     generated_sequence.append(下一个令牌)
- en: 34:     inputs = embeddings(next_token)
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 34:     inputs = embeddings(下一个令牌)
- en: 35:  end while
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 35:  结束 while
- en: '36:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '36:'
- en: 37:  for <math alttext="\text{server}\in\text{chain}" class="ltx_Math" display="inline"
    id="alg1.l37.m1.1"><semantics id="alg1.l37.m1.1a"><mrow id="alg1.l37.m1.1.1" xref="alg1.l37.m1.1.1.cmml"><mtext
    id="alg1.l37.m1.1.1.2" xref="alg1.l37.m1.1.1.2a.cmml">server</mtext><mo id="alg1.l37.m1.1.1.1"
    xref="alg1.l37.m1.1.1.1.cmml">∈</mo><mtext id="alg1.l37.m1.1.1.3" xref="alg1.l37.m1.1.1.3a.cmml">chain</mtext></mrow><annotation-xml
    encoding="MathML-Content" id="alg1.l37.m1.1b"><apply id="alg1.l37.m1.1.1.cmml"
    xref="alg1.l37.m1.1.1"><ci id="alg1.l37.m1.1.1.2a.cmml" xref="alg1.l37.m1.1.1.2"><mtext
    id="alg1.l37.m1.1.1.2.cmml" xref="alg1.l37.m1.1.1.2">server</mtext></ci><ci id="alg1.l37.m1.1.1.3a.cmml"
    xref="alg1.l37.m1.1.1.3"><mtext id="alg1.l37.m1.1.1.3.cmml" xref="alg1.l37.m1.1.1.3">chain</mtext></ci></apply></annotation-xml><annotation
    encoding="application/x-tex" id="alg1.l37.m1.1c">\text{server}\in\text{chain}</annotation><annotation
    encoding="application/x-llamapun" id="alg1.l37.m1.1d">server ∈ chain</annotation></semantics></math> do
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 37:  对于 <math alttext="\text{server}\in\text{chain}" class="ltx_Math" display="inline"
    id="alg1.l37.m1.1"><semantics id="alg1.l37.m1.1a"><mrow id="alg1.l37.m1.1.1" xref="alg1.l37.m1.1.1.cmml"><mtext
    id="alg1.l37.m1.1.1.2" xref="alg1.l37.m1.1.1.2a.cmml">server</mtext><mo id="alg1.l37.m1.1.1.1"
    xref="alg1.l37.m1.1.1.1.cmml">∈</mo><mtext id="alg1.l37.m1.1.1.3" xref="alg1.l37.m1.1.1.3a.cmml">chain</mtext></mrow><annotation-xml
    encoding="MathML-Content" id="alg1.l37.m1.1b"><apply id="alg1.l37.m1.1.1.cmml"
    xref="alg1.l37.m1.1.1"><ci id="alg1.l37.m1.1.1.2a.cmml" xref="alg1.l37.m1.1.1.2"><mtext
    id="alg1.l37.m1.1.1.2.cmml" xref="alg1.l37.m1.1.1.2">server</mtext></ci><ci id="alg1.l37.m1.1.1.3a.cmml"
    xref="alg1.l37.m1.1.1.3"><mtext id="alg1.l37.m1.1.1.3.cmml" xref="alg1.l37.m1.1.1.3">chain</mtext></ci></apply></annotation-xml><annotation
    encoding="application/x-tex" id="alg1.l37.m1.1c">\text{server}\in\text{chain}</annotation><annotation
    encoding="application/x-llamapun" id="alg1.l37.m1.1d">server ∈ chain</annotation></semantics></math> 执行
- en: 38:     streams[server].close()
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 38:     streams[server].关闭()
- en: 39:  end for
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 39:  结束 for
- en: 40:  return generated_sequence
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 40:  返回 生成的序列
