["```\nconst fn = function() {\n  const arguments = 'arg';\n  return arguments;\n}\nassert.equal(fn('the argument'), 'arg'); \n```", "```\n'use strict'\nconst fn = function() {\n  const arguments = 'arg';\n} \n```", "```\nconst fn = function() {\n  'use strict'     // \"use strict\" inside the function, test still fails.\n  const arguments = 'arg';\n} \n```", "```\nconst fn = function() {\n  const arguments = 'arg';\n}\n'use strict'     // \"use strict\" NOT at the beginning of a function it gets ignored, test passes! \n```", "```\nconst fn = function() {\n  if (true) {\n    'use strict'     // \"use strict\" at the start of a scope, but NOT at the beginning of a function it gets ignored, test passes!\n    const arguments = 'arg';\n  }\n} \n```"]