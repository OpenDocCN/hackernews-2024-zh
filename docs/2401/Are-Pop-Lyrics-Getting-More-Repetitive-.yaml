- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-27 14:56:12'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:56:12
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Are Pop Lyrics Getting More Repetitive?
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 流行歌词变得更加重复了吗？
- en: 来源：[https://pudding.cool/2017/05/song-repetition/](https://pudding.cool/2017/05/song-repetition/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://pudding.cool/2017/05/song-repetition/](https://pudding.cool/2017/05/song-repetition/)
- en: 'In 1977, the great computer scientist Donald Knuth published a paper called
    [The Complexity of Songs](https://en.wikipedia.org/wiki/The_Complexity_of_Songs),
    which is basically one long joke about the repetitive lyrics of newfangled music
    (example quote: "the advent of modern drugs has led to demands for still less
    memory, and the ultimate improvement of Theorem 1 has consequently just been announced").'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 1977年，伟大的计算机科学家唐纳德·克努斯发表了一篇名为[歌曲的复杂性](https://en.wikipedia.org/wiki/The_Complexity_of_Songs)的论文，这基本上是关于新潮音乐重复歌词的一个长笑话（例如引用：“现代药物的出现导致对内存要求更低，因此定理1的最终改进刚刚宣布”）。
- en: I'm going to try to test this hypothesis with data. I'll be analyzing the repetitiveness
    of a dataset of 15,000 songs that charted on the Billboard Hot 100 between 1958
    and 2017.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我将尝试用数据来测试这个假设。我将分析在1958年至2017年间登上Billboard Hot 100榜单的15000首歌曲的重复性。
- en: Measuring repetitiveness?
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何衡量重复性？
- en: 'I know a repetitive song when I hear one, but translating that intuition into
    a number isn''t easy. One thing we might try is looking at the number of unique
    words in a song, as a fraction of the total number of words. But this metric would
    call the following lyric excerpts equally repetitive:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当我听到一首重复的歌曲时，我知道，但将这种直觉转化为数字并不容易。我们可以尝试的一件事是看歌曲中独特词汇的数量，作为总词数的一部分。但这个度量标准会将以下歌词摘录视为同样重复：
- en: baby I don't need dollar bills to have fun tonight
  id: totrans-10
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 宝贝，我今晚不需要美元来享受乐趣
- en: I love cheap thrills
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我爱廉价的刺激
- en: baby I don't need dollar bills to have fun tonight
  id: totrans-12
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 宝贝，我今晚不需要美元来享受乐趣
- en: I love cheap thrills
  id: totrans-13
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我爱廉价的刺激
- en: I don't need no money
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我不需要钱
- en: as long as I can feel the beat
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 只要我能感受到节奏
- en: I don't need no money
  id: totrans-16
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我不需要钱
- en: as long as I keep dancing
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 只要我能保持舞蹈
- en: ''
  id: totrans-18
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ~ Sia, Cheap Thrills
  id: totrans-19
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: ~ 希雅，Cheap Thrills
- en: tonight I need dollar bills
  id: totrans-20
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 今晚我需要美元
- en: I don't keep fun
  id: totrans-21
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我不保留乐趣
- en: cheap thrills long to feel money
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 廉价刺激渴望感受金钱
- en: the bills don't need the dancing baby
  id: totrans-23
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 账单不需要跳舞的宝贝
- en: fun dollar dancing thrills the baby I need
  id: totrans-24
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 好玩的美元舞蹈刺激宝贝我需要
- en: don't have fun
  id: totrans-25
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 不玩好玩
- en: no no don't have dancing fun tonight
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 不不不今晚不玩舞蹈
- en: beat the can as I don't feel thrills
  id: totrans-27
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 打败的罐头，我不感觉刺激
- en: love the dancing money
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 爱上舞蹈的金钱
- en: ''
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ~ Colin Morris, Original composition
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: ~ 科林·莫里斯，原创作品
- en: These are both 52 words long and use the same 23 word vocabulary, but the first
    one is clearly more repetitive, because it arranges words in a predictable, repetitive
    order.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个句子都是52个词长，使用相同的23个词汇，但第一个句子明显更加重复，因为它以可预测、重复的顺序排列单词。
- en: Repetitiveness ≈ compressibility?
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重复性≈可压缩性？
- en: You may not have heard of the [Lempel-Ziv algorithm](https://en.wikipedia.org/wiki/LZ77_and_LZ78),
    but you probably use it every day. It's a lossless compression algorithm that
    powers gifs, pngs, and most archive formats (zip, gzip, rar...).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能没听过[Lempel-Ziv算法](https://en.wikipedia.org/wiki/LZ77_and_LZ78)，但你可能每天都在使用它。它是一种无损压缩算法，支持gif、png以及大多数压缩格式（zip、gzip、rar等）。
- en: What does this have to do with pop music? The Lempel-Ziv algorithm works by
    exploiting repeated sequences. How efficiently LZ can compress a text is directly
    related to the number and length of the repeated sections in that text.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这与流行音乐有什么关系？Lempel-Ziv算法通过利用重复的序列来工作。LZ能够对文本进行多有效地压缩，直接与文本中重复部分的数量和长度有关。
- en: Here's how it works.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这是它的工作原理。
- en: You can explore some examples of the algorithm applied to full songs [here](http://colinmorris.github.io/pop-compression/).
    It turns out, for example, that the entire lyrics of *Cheap Thrills* reduce in
    size 76% when compressed.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[这里](http://colinmorris.github.io/pop-compression/)探索一些将算法应用于完整歌曲的例子。结果表明，例如，*Cheap
    Thrills*的整个歌词在压缩时缩小了76%。
- en: 'Is 76% a lot? Here''s the distribution of size reduction percentages across
    (almost) all 15,000 songs in my dataset:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 76%算是很多吗？这是我数据集中（几乎）所有15000首歌曲的大小减少百分比的分布：
- en: The Repetition of Pop Music
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 流行音乐的重复
- en: Distribution of compressibility of 15,000 songs from 1958 to 2017, excluding
    20 outliers.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 从1958年到2017年的15000首歌曲的可压缩性分布，排除20个异常值。
- en: You may have noticed the percentages on the x-axis are not evenly spaced. I'm
    using a logarithmic scale with the property that, for any given song, a song that
    compresses half as small is a fixed distance away. For example, the distance between
    20% and 60% is the same as between 98% and 99%. I'll be using this kind of scale
    throughout.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能已经注意到 x 轴上的百分比不是均匀分布的。我使用的是一个对数刻度，具有这样的特性，对于任何给定的歌曲，将其压缩一半大小的歌曲与固定距离相隔。例如，20%
    和 60% 之间的距离与 98% 和 99% 之间的距离相同。我会在整个过程中使用这种刻度。
- en: 'I excluded the 20 most repetitive songs in the dataset from the above chart.
    When you see what it looks like with them, you''ll understand why:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我从上面的图表中排除了数据集中最重复的 20 首歌曲。当你看到它们时，你会明白为什么：
- en: What are these uber-repetitive outliers? *Around The World* by Daft Punk gets
    reduced a whopping **98%**. It goes from 2,610 characters to 61\. Small enough
    to fit in a tweet - twice! ([Here are the lyrics](http://www.azlyrics.com/lyrics/daftpunk/aroundtheworld.html),
    if you're not familiar with the song.) Check out some of the others below.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这些极端重复的异常是什么？Daft Punk的 *Around The World* 减少了惊人的 **98%** 。它从 2,610 个字符减少到 61
    个。足够小到可以放在一条推特里 - 两次！（[这里是歌词](http://www.azlyrics.com/lyrics/daftpunk/aroundtheworld.html)，如果你对这首歌不熟悉的话。）下面是一些其他例子。
- en: The Most Repetitive Songs
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最重复的歌曲
- en: Of 15,000 songs from the Billboard Hot 100
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 从美国公告牌百强榜中挑选了 15,000 首歌曲
- en: Intuitively, *Around The World* definitely *feels* like a very repetitive song.
    Several of the familiar entries on this list are essentially novelty songs (Macarena,
    Barbara Streisand, The Thong Song, Cotton Eye Joe...) famed for their silly refrains.
    This inspires some confidence in the metric I'm using.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 直觉上，《Around The World》绝对*感觉*像一首非常重复的歌曲。这个列表上的一些熟悉的歌曲实际上是一些滑稽歌曲（麦克雷纳，芭芭拉·斯特赖森德，丁字裤之歌，棉眼乔...）以其傻瓜般的副歌而闻名。这增
- en: So, is music getting more repetitive? The current decade is pretty well-represented
    in the top 10 above, but it's also a bit overrepresented in my dataset (it's easier
    to find lyrics for recent songs). We'll need to look at a lot more data to be
    sure...
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，音乐是否变得更加重复了吗？当前十年在上述前十名中得到了很好的代表，但它在我的数据集中也稍微过于重视（找到最近歌曲的歌词更容易）。我们需要查看更多的数据才能确定……
- en: Who's responsible for this madness?
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 谁应该为这种疯狂负责？
- en: Let's look at the average repetitiveness of some prolific artists in the dataset
    (those that have at least 15 charting songs as solo artists).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看数据集中一些多产艺术家的平均重复率（那些作为独唱艺术家至少有 15 首排行榜歌曲的艺术家）。
- en: Repetitiveness Per Artist
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 每位艺术家的重复性
- en: Genre does seem like a differentiating factor here. In the 00's, our artists
    actually separate pretty cleanly into two clusters, with country music and hip-hop
    (and whatever John Mayer does) on the left, and pop and rock on the right.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，音乐类型似乎是一个不同iating因素。在00年代，我们的艺术家实际上分成了两个相当清晰的群体，乡村音乐和嘻哈音乐（还有约翰·梅耶尔的音乐）在左边，流行音乐和摇滚音乐在右边。
- en: The variation between artists is considerable. The Backstreet Boys have an average
    compression ratio of 60%, to Brad Paisley's 38%. In other words, if we asked the
    Backstreet Boys and Brad Paisley to each write a 400 word song, and compressed
    them both, we'd expect Brad's compressed song to be 50% bigger than BSB's.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 艺术家之间的差异是相当大的。男孩帮的平均压缩比率为 60%，布拉德·佩斯利为 38%。换句话说，如果我们让男孩帮和布拉德·佩斯利分别写一首 400 词的歌，并对它们进行压缩，我们预计布拉德的压缩歌曲将比男孩帮的大
    50%。
- en: Let's zoom in on a specific artist, say Gwen Stefani. Each circle below represents
    a song in her discography. The background blob is the histogram of *all songs*
    in the dataset (the same one as before, but mirrored).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们聚焦于特定的艺术家，比如格温·斯蒂法尼。下面的每个圆圈代表她的唱片中的一首歌曲。背景斑点是数据集中*所有歌曲*的直方图（与之前相同，但是镜像的）。
- en: On average, Gwen's music is extremely repetitive, but there's a wide spread
    between the incessantly repetitive "Hollaback Girl", and the laid-back ballad
    "Cool", which is far less repetitive than the median song in the dataset.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 平均而言，格温的音乐极其重复，但是"叫停女孩"这首歌和放松的民谣"酷"之间有很大的差异，后者比数据集中的中位数歌曲要少得多。
- en: 'You can search for your favorite artist in the dropdown above. A few interesting
    examples (click an artist''s name to jump to their chart):'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在上面的下拉菜单中搜索你最喜欢的艺术家。一些有趣的例子（点击艺术家的名字跳转到他们的排行榜）：
- en: People have described *1989* as the album where  fully transitioned from country
    singer/songwriter to popstar. This data adds some flavour to that claim. 4 of
    her 5 most repetitive songs are from *1989*.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 人们将 *1989* 描述为她从乡村歌手/词曲作者完全转型为流行歌星的专辑。这些数据为这种说法增添了一些色彩。她的五首最重复的歌曲中有 4 首来自 *1989*。
- en: 'has a long, consistent legacy of highly repetitive music. Interestingly, her
    two least repetitive songs are arguably the only two that don''t belong to the
    pop genre: they''re both from the musical *Evita*, and written by Tim Rice and
    Andrew Lloyd Weber.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**XX** 有着长期而一贯的高度重复的音乐传统。有趣的是，她最不重复的两首歌曲可以说是唯一两首不属于流行音乐流派的歌曲：它们都来自音乐剧《艾维塔》，由蒂姆·赖斯和安德鲁·劳埃德·韦伯创作。'
- en: Rappers like  and  tend to be consistently non-repetitive.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 像 **XX** 和 **XX** 这样的说唱歌手往往是始终不重复的。
- en: Is it any wonder  won the title of most repetitive artist in the dataset? Over
    half a dozen of her songs sit on the *far* right of the distribution (including,
    appropriately, *Pon de Replay*).
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 难怪 **XX** 赢得了数据集中最重复艺术家的称号？她的超过半打的歌曲都位于分布的*极*右侧（包括，恰当地，*Pon de Replay*）。
- en: <main></main>
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`<main></main>`'
