- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 15:14:57'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 15:14:57
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: How to Build a Password Cracker
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何构建密码破解器
- en: 来源：[https://www.sevnx.com/blog/post/building-a-password-cracker](https://www.sevnx.com/blog/post/building-a-password-cracker)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.sevnx.com/blog/post/building-a-password-cracker](https://www.sevnx.com/blog/post/building-a-password-cracker)
- en: So, the major takeaway here is that increasing the MHz value of the core GPU
    clock gives you a noticeable performance boost, but it needs to be supported by
    increasing power/voltage values to maintain stability. **Please be careful when
    overlocking since actual hardware damage may occur if values are pushed too far
    in the wrong configuration. Also, if you’re running your rig at home, be careful
    with the amount of power you’re drawing as you may start tripping circuit breakers
    depending on your outlet capability (Please check out the Power Supplies section
    above).**
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这里的主要要点是，增加核心 GPU 时钟的 MHz 值会带来明显的性能提升，但需要通过增加功率/电压值来保持稳定性。**在超频时请务必小心，因为如果值在错误的配置下被推得太远，实际硬件损坏可能会发生。此外，如果你在家里运行你的设备，请注意你所消耗的电量，因为根据你的插座能力，你可能会开始触发断路器（请查看上面的电源供应部分）。**
- en: Software
  id: totrans-7
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 软件
- en: '**OS** – When it comes to operating system of choice a Linux Server OS such
    as Debian or Ubuntu is the go-to choose because it is free and can run in headless
    mode. Headless mode means that the GPU don’t have to spend any resources on rendering
    the GUI for you, leaving those resources for hashcat to chomp away at resulting
    in peak performance. But if you’re comfortable with Windows OS, whether it’s Windows
    10/11 or Server 2019/2022, meaning some extra money needs to be spent on licensing
    (a decent chunk if it’s Server OS), you can still 100% run hashcat. You may experience
    some drops in performance, but you can balance it out with some overclocking and
    optimizing Windows to run barebones but with a GUI. There appears to be better
    driver and overclocking support on Windows as a bonus but it’s a point that can
    be contested because of GreenWithEnvy overclocking tool for *nix and driver support
    has been pretty good lately.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**操作系统（OS）** – 当涉及到首选操作系统时，像 Debian 或 Ubuntu 这样的 Linux 服务器操作系统是首选，因为它是免费的，而且可以在无头模式下运行。无头模式意味着
    GPU 不必花费任何资源来渲染 GUI，而是留下这些资源让 hashcat 去充分利用，从而实现最佳性能。但如果你对 Windows 操作系统感到满意，无论是
    Windows 10/11 还是 Server 2019/2022，这意味着需要额外花费一些钱购买许可证（如果是服务器操作系统，需要花费相当可观的一笔钱），你仍然可以完全运行
    hashcat。你可能会遇到一些性能下降，但你可以通过一些超频和优化 Windows 来使其以最小的 GUI 运行。最近 Windows 上的驱动程序和超频支持似乎更好，但这是一个有争议的观点，因为
    *nix 上的 GreenWithEnvy 超频工具和驱动程序支持最近一直很好。'
- en: '**Drivers/CUDA**: Make sure to install latest drivers but you may find that
    sometimes older drivers may be performing better on certain algorithms, so test
    different ones out if time permits but usually latest is greatest rule applies.
    This blog does not cover installation process steps on *nix as this process varies
    based on the OS flavor. For all the Windows users out there, it’s simple to grab
    latest Nvidia or AMD drivers for your cards and run through the installation process.
    For Nvidia CUDA, grab the latest CUDA SDK (11.8.* at the time of writing this
    blog) and run through barebones install. Make sure the CUDA DLL file nvrtc64_*_*.dll
    makes its way to C:\windows\system32\ folder from the Program Files folder where
    CUDA was installed to avoid the “CUDA SDK Toolkit installation NOT detected” error
    in hashcat. The one at the time of writing this blog is called nvrtc64_112_0.dll'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**驱动程序/CUDA**：确保安装最新的驱动程序，但有时您可能会发现某些算法在旧驱动程序上性能更好，所以如果时间允许，可以尝试不同的驱动程序，但通常最新的是最好的原则适用。本博客不涵盖
    *nix 上安装过程的步骤，因为这个过程根据操作系统的不同而变化。对于所有 Windows 用户来说，简单地获取最新的 Nvidia 或 AMD 驱动程序，并完成安装过程即可。对于
    Nvidia CUDA，获取最新的 CUDA SDK（在撰写本博客时为 11.8.*）并完成基本安装。确保 CUDA DLL 文件 nvrtc64_*_*.dll
    从 CUDA 安装的 Program Files 文件夹中传输到 C:\windows\system32\ 文件夹中，以避免在 hashcat 中出现“未检测到
    CUDA SDK 工具包安装”错误。在撰写本博客时，该文件名为 nvrtc64_112_0.dll。'
- en: '**Overclocking**: If you’re on Windows OS, there are free overclocking software
    suites, EVGA Precision X1 and MSI Afterburner which are fantastic for overclocking
    for novice and professional users. Overclocking on Linux can be accomplished with
    GreenWithEnvy tool, but it does require a GUI. Using command line tools does come
    with an increased risk of making a mistake in a configuration file but it is an
    option for advanced users out there.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**超频（Overclocking）**：如果你使用的是Windows操作系统，有免费的超频软件套件，EVGA Precision X1和MSI Afterburner非常适合新手和专业用户进行超频。Linux上的超频可以通过GreenWithEnvy工具实现，但需要图形用户界面。使用命令行工具确实增加了在配置文件中出错的风险，但对于高级用户来说是一种选择。'
- en: '[https://www.evga.com/precisionx1/](https://www.evga.com/precisionx1/)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.evga.com/precisionx1/](https://www.evga.com/precisionx1/)'
- en: '[https://www.msi.com/Landing/afterburner/graphics-cards](https://www.msi.com/Landing/afterburner/graphics-cards)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.msi.com/Landing/afterburner/graphics-cards](https://www.msi.com/Landing/afterburner/graphics-cards)'
- en: '[https://github.com/dankamongmen/GreenWithEnvy](https://github.com/dankamongmen/GreenWithEnvy)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/dankamongmen/GreenWithEnvy](https://github.com/dankamongmen/GreenWithEnvy)'
- en: '**hashcat** – At the time of writing, hashcat is currently at version 6.2.6\.
    Although there are other free and commercial tools available for password recovery/password
    cracking, hashcat is still the top dog when it comes to a lot of algorithms out
    there, especially the ones we usually focus on during security engagements. You
    can grab the binaries from the [https://hashcat.net/hashcat/](https://hashcat.net/hashcat/)
    site or build the latest version using their GitHub [https://github.com/hashcat/hashcat](https://github.com/hashcat/hashcat).
    Leveraging the pre-built binaries is the easiest option to start but you can benefit
    from building from source if a new algorithm is being added in development.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**hashcat** – 在撰写本文时，hashcat当前版本为6.2.6。尽管还有其他免费和商业工具可用于密码恢复/密码破解，但在许多算法中，尤其是在安全性对抗中我们通常关注的算法中，hashcat仍然是翘楚。你可以从[https://hashcat.net/hashcat/](https://hashcat.net/hashcat/)站点获取二进制文件，或者使用他们的GitHub[https://github.com/hashcat/hashcat](https://github.com/hashcat/hashcat)构建最新版本。利用预构建的二进制文件是开始的最简单选择，但如果正在开发中添加了新的算法，从源代码构建也是一个好处。'
- en: '**hashcat-utils** (including maskprocessor/statsprocessor/princeprocessor)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**hashcat-utils**（包括maskprocessor/statsprocessor/princeprocessor）'
- en: This an awesome collection of tools that can come in handy depending on various
    scenarios or password patterns you might be up against. For example, here at SEVN-X
    we leverage cutb tool to create something called password salad (we’ll cover this
    technique further in the blog). We also leverage combinator tool to generate phrases
    and longer password candidates. Maskprocessor comes in handy generating custom
    wordlists. You may find a solution to a problem you encounter using one of the
    available utilities, so check them out for sure.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常棒的工具集合，可以根据不同的情况或密码模式来帮助你。例如，在SEVN-X这里，我们利用cutb工具创建了所谓的密码沙拉（我们将在博客中进一步介绍这种技术）。我们还利用组合工具生成短语和更长的密码候选项。Maskprocessor在生成自定义字典时非常方便。你可能会发现使用其中一个可用的实用程序解决你遇到的问题，所以一定要检查一下。
- en: '[https://hashcat.net/wiki/doku.php?id=hashcat_utils](https://hashcat.net/wiki/doku.php?id=hashcat_utils)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://hashcat.net/wiki/doku.php?id=hashcat_utils](https://hashcat.net/wiki/doku.php?id=hashcat_utils)'
- en: '**pack/pack2**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**pack/pack2**'
- en: The amazing Password Analysis Cracking Kit (PACK) is super useful for password
    analysis and building out custom rules among other things. Pack2 is a Rust-based
    PACK replacement candidate but as the author says, it’s a work in progress.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 令人惊叹的密码分析破解工具包（PACK）非常适用于密码分析和构建自定义规则等。Pack2是PACK的Rust版替代方案，但正如作者所说，它还在不断改进中。
- en: A Couple Notes on Benchmarks
  id: totrans-20
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 关于基准测试的几点说明
- en: 'Benchmarking PC builds is popular nowadays for enthusiasts and benchmarking
    GPUs beyond gaming for hashcat is great for those who are looking to buy GPUs
    specifically for this. There are several resources for this and here at SEVN-X
    we found that searching GitHub/Twitter usually does the trick. There’s also this
    site containing a pretty good list of GPU benchmarks:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在流行对PC构建进行基准测试，特别是对于那些寻求购买专门用于此目的的GPU的人来说，对hashcat进行超越游戏的基准测试非常有用。有几个资源可以做到这一点，我们在SEVN-X发现，通常在GitHub/Twitter上搜索就可以搞定。还有这个网站包含了一个相当不错的GPU基准测试列表：
- en: '[https://www.onlinehashcrack.com/tools-benchmark-hashcat-gtx-1080-ti-1070-ti-rtx-2080-ti-rtx-3090-3080-4090.php](https://www.onlinehashcrack.com/tools-benchmark-hashcat-gtx-1080-ti-1070-ti-rtx-2080-ti-rtx-3090-3080-4090.php)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.onlinehashcrack.com/tools-benchmark-hashcat-gtx-1080-ti-1070-ti-rtx-2080-ti-rtx-3090-3080-4090.php](https://www.onlinehashcrack.com/tools-benchmark-hashcat-gtx-1080-ti-1070-ti-rtx-2080-ti-rtx-3090-3080-4090.php)'
- en: Also, for everyone out there thinking that the benchmark performance is what
    you’re going to get when you buy the GPU you saw benchmarks for, let me stop you
    right here. The benchmark in hashcat is simulated for one hash, meaning multiple
    hashes will increase your cracking time. The benchmark does not emulate wordlists
    or rules, simply put it does the equivalent of brute-forcing possible password
    combinations speed as a benchmark. So, when you start cracking that hash using
    wordlists or a combination of wordlist and rules, your speed will not be that
    of the benchmark, nor will it be the same if it’s multiple hashes even in the
    brute force mode. There are also overclocking, driver updates, hashcat algorithm
    optimizations, and potential hardware differences that might make your results
    different then the benchmark for someone else, so just be aware of that.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，对于所有认为基准性能就是你购买了看到基准性能的GPU时会得到的性能的人，请让我在这里告诉你，不是这样的。hashcat中的基准测试是针对一个哈希值进行模拟的，这意味着多个哈希值会增加你的破解时间。基准测试不会模拟词汇表或规则，简单来说，它只是以速度作为基准来模拟暴力破解可能的密码组合。因此，当你开始使用词汇表或词汇表与规则的组合破解该哈希值时，你的速度将不会达到基准的水平，即使在暴力破解模式下，如果是多个哈希值，速度也不会相同。还有超频、驱动程序更新、hashcat算法优化以及可能使你的结果与别人的基准不同的潜在硬件差异，所以请注意这一点。
- en: Dictionaries and wordlists
  id: totrans-24
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 字典和词汇表
- en: When it comes to cracking hashes, there are several good resources to start
    with wordlists, dictionaries, or password lists to use during the cracking process.
    The most infamous one out there is the rockyou.txt plaintext password collection
    that is widely available. It is important to note that generating custom wordlist
    can be helpful or building out your own all-encompassing collection to increase
    the chances of cracking that next hash. There are tools like cewl to help scrape
    client sites for keywords.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到破解哈希值时，有几个很好的资源可以用于开始使用词汇表、字典或密码列表。其中最臭名昭著的是广泛可用的rockyou.txt明文密码集合。值得注意的是，生成自定义词汇表可能会有所帮助，或者建立自己的全面收集以增加破解下一个哈希值的机会。有像cewl这样的工具可以帮助从客户网站上抓取关键字。
- en: 'If you’re up for building your own wordlist there’s a lot that can go into
    one. There’s also the ability to collect publicly available password dumps and
    build a list out of those. First, recommendation for building a wordlist (not
    a password list) is to start with the following:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要构建自己的词汇表，可以有很多内容可加入。还有能够收集公开可用的密码转储并从中构建列表的能力。首先，建议构建词汇表（而不是密码列表）的方式是从以下内容开始：
- en: '*This list is based on assumption you’re trying to crack passwords of English-speaking
    users. It serves as a good source baseline and should be checked for duplicates
    to ensure we’re not wasting cycles during cracking. Longest part of creating your
    own list is collecting the data sets and getting all sorted out.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '*这个列表是基于你试图破解英语用户的密码的假设。它作为一个良好的基线来源，并应检查重复项，以确保我们在破解过程中不浪费资源。创建自己的列表中最耗时的部分是收集数据集并整理好全部内容。'
- en: English words dictionary
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 英语单词词典
- en: First Names
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名字
- en: Last Names
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 姓氏
- en: Country names
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 国家名称
- en: County names
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 郡名
- en: City names
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 城市名称
- en: Street/road/lane/etc. names and valid addresses
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 街道/道路/巷道等名称和有效地址
- en: Wikipedia titles/words
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维基百科标题/词语
- en: Urban dictionary words/phrases
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Urban dictionary词语/短语
- en: Alexa Top 1 million (brand/org/biz/etc. names)
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alexa前100万名（品牌/组织/商业等名称）
- en: Media (video) – IMDB/TVDB movie titles/episode titles/character names/actor
    names/words
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 媒体（视频）- IMDB/TVDB电影标题/剧集标题/角色名称/演员名称/词语
- en: Media (music) – songs/albums/artists/lyrics/words
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 媒体（音乐）- 歌曲/专辑/艺术家/歌词/词语
- en: Media (games) – titles/characters/words
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 媒体（游戏）- 标题/角色/词语
- en: Media (books) – titles/characters/words
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 媒体（书籍）- 标题/角色/词语
- en: Media (quotes) – famous quotes from anything
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 媒体（引用）- 任何名言
- en: Pop culture – memes, quotes, hashtags, etc.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 流行文化- 梗、引用、话题标签等
- en: Another great source for creating a list is usernames. There are a couple of
    collections, but usernames or email prefixes (without the @something part) are
    pretty good candidates for rulesets.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 创建列表的另一个很好的来源是用户名。有几个收藏品，但用户名或电子邮件前缀（不包括@someting部分）是相当不错的规则集候选项。
- en: Now if you want to build out a collection of public password dumps, there are
    several sources that can be used to start building your own set. There are a ton
    of various collections out on GitHub, or torrent sites if you wish to be adventurous.
    A lot of these are just a google search away!
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您想建立一个公共密码泄漏集合，有几个来源可以用来开始构建您自己的集合。GitHub 上有大量不同的集合，或者如果您愿意冒险的话，也可以在 torrent
    网站上找到。这些大部分只是一个谷歌搜索的距离！
- en: Awesome resources
  id: totrans-46
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 很棒的资源
- en: When you start out in password cracking space or thinking of putting together
    your first dedicated cracking rig, these are high quality resources and places
    where here at SEVN-X learned a ton throughout our builds over the years and you
    can find additional information beyond what’s in this blog.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当您刚开始涉足密码破解领域或考虑组建您的第一台专用破解机时，这些都是高质量的资源和地方，在这里，SEVN-X 在多年的建设中学到了很多知识，而且您可以在这篇博客之外找到更多信息。
- en: 'Link: [https://hashcat.net/wiki/](https://hashcat.net/wiki/)'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 链接：[https://hashcat.net/wiki/](https://hashcat.net/wiki/)
- en: That hashcat wiki is an invaluable source for the tool. There’s plenty of documentation
    and links to other resources to help with all kinds of scenarios.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 那个 hashcat 维基是该工具的宝贵资源。这里有大量的文档和链接到其他资源，可以帮助应对各种情况。
- en: Defcon Password Village has some great guides and beginner friendly notes from
    hashcat to hardware.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Defcon Password Village 提供了一些很棒的指南和从 hashcat 到硬件的初学者友好的笔记。
- en: '[If you have any questions or feedback regarding the blog post, password cracking
    rig configurations or hashcat, send us a message to [hashburglar@sevnx.com](mailto:hashburglar@sevnx.com)]'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对博客文章、密码破解机配置或 hashcat 有任何问题或反馈，请发送邮件至[hashburglar@sevnx.com](mailto:hashburglar@sevnx.com)。
