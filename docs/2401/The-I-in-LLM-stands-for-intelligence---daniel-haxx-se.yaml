- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 14:25:48'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:25:48
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: The I in LLM stands for intelligence | daniel.haxx.se
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: LLM中的I代表智能|daniel.haxx.se
- en: 来源：[https://daniel.haxx.se/blog/2024/01/02/the-i-in-llm-stands-for-intelligence/](https://daniel.haxx.se/blog/2024/01/02/the-i-in-llm-stands-for-intelligence/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://daniel.haxx.se/blog/2024/01/02/the-i-in-llm-stands-for-intelligence/](https://daniel.haxx.se/blog/2024/01/02/the-i-in-llm-stands-for-intelligence/)
- en: I have held back on writing anything about AI or how we (not) use AI for development
    in the curl factory. Now I can’t hold back anymore. Let me show you the most significant
    effect of AI on curl as of today – with examples.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我一直没有写关于人工智能或者我们（不）如何在卷曲工厂使用人工智能进行开发的任何东西，现在我再也忍不住了。让我展示给你截止到今日人工智能对卷曲的最显著影响
    - 并举例说明。
- en: Bug Bounty
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 漏洞赏金
- en: Having a [bug bounty](https://curl.se/docs/bugbounty.html) means that we offer
    real money in rewards to hackers who report security problems. The chance of money
    attracts a certain amount of “luck seekers”. People who basically just grep for
    patterns in the source code or maybe at best run some basic security scanners,
    and then report their findings without any further analysis in the hope that they
    can get a few bucks in reward money.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有[漏洞赏金](https://curl.se/docs/bugbounty.html)意味着我们向报告安全问题的黑客提供真正的奖金。金钱的吸引力吸引了一定数量的“运气寻找者”。基本上只是在源代码中查找模式或者在最好的情况下运行一些基本安全扫描器，然后报告他们的发现，希望能赚到一些奖金。
- en: We have run the bounty for a few years by now, and the rate of rubbish reports
    has never been a big problem. Also, the rubbish reports have typically also been
    very easy and quick to detect and discard. They have rarely caused any real problems
    or wasted our time much. A little like the most stupid spam emails.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经运行了一些年头的赏金，垃圾报告的比率从来不是一个大问题。此外，垃圾报告通常也很容易和快速检测出来并丢弃掉。它们很少引起真正的问题或浪费我们太多时间。有点像最愚蠢的垃圾邮件。
- en: Our bug bounty has resulted in over 70,000 USD paid in rewards so far. We have
    received 415 vulnerability reports. Out of those, 64 were ultimately confirmed
    security problems. 77 of the report were *informative*, meaning they typically
    were bugs or similar. Making 66% of the reports neither a security issue nor a
    normal bug.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的漏洞赏金到目前为止已支付了超过70,000美元的奖励。我们收到了415份漏洞报告。其中，64份最终确认为安全问题。77份报告是 *informativ*，意味着它们通常是错误或类似的问题。其中66%的报告既不是安全问题也不是常规错误。
- en: Better crap is worse
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更好的垃圾更糟
- en: When reports are made to *look* better and to *appear* to have a point, it takes
    a longer time for us to research and eventually discard it. Every security report
    has to have a human spend time to look at it and assess what it means.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 当报告被*修饰*得更好，*看上去*具有一定意义时，我们需要更长时间来研究并最终丢弃它。每个安全报告都需要一个人花时间去查看并评估其含义。
- en: The better the crap, the longer time and the more energy we have to spend on
    the report until we close it. A crap report does not help the project at all.
    It instead takes away developer time and energy from something productive. Partly
    because security work is consider one of the most important areas so it tends
    to trump almost everything else.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 垃圾越好，我们花在报告上的时间越长，消耗的精力就越大，直至我们关闭它。垃圾报告对项目没有任何帮助，相反，它占用开发人员的时间和精力，而这些时间和精力原本可以用在一些有意义的事情上。部分因为安全工作被认为是最重要的领域，因此它往往能战胜几乎其他所有事情。
- en: A security report can take away a developer from fixing a really annoying bug.
    because a security issue is always more important than other bugs. If the report
    turned out to be crap, we did not improve security and we missed out time on fixing
    bugs or developing a new feature. Not to mention how it drains you on energy having
    to deal with rubbish.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 一个安全报告可能会使开发人员无法修复一个非常恼人的错误。因为安全问题总是比其他错误更重要。如果报告被证明是垃圾，我们没有提高安全性，我们浪费了时间去修复错误或开发新功能。更不用说处理垃圾会耗费你的精力。
- en: AI generated security reports
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 人工智能生成的安全报告
- en: I realize AI *can* do a lot of good things. As any general purpose tool it can
    also be used for the wrong things. I am also sure AIs *can* be trained and ultimately
    get used even for finding and reporting security problems in productive ways,
    but so far we have yet to find good examples of this.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我意识到人工智能 *可以* 做很多好事。就像任何通用工具一样，它也可以被用来做错事。我也相信人工智能 *可以* 被训练，最终甚至用于以更有效的方式找到和报告安全问题，但到目前为止我们还没有找到真正的例子。
- en: Right now, users seem keen at using the current set of LLMs, throwing some curl
    code at them and then passing on the output as a security vulnerability report.
    What makes it a little harder to detect is of course that users copy and paste
    and include their own language as well. The entire thing is not exactly what the
    AI said, but the report is nonetheless crap.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: Detecting AI crap
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Reporters are often not totally fluent in English and sometimes their exact
    intentions are hard to understand at once and it might take a few back and fourths
    until things reveal themselves correctly – and that is of course totally fine
    and acceptable. Language and cultural barriers are real things.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes reporters use AIs or other tools to help them phrase themselves or
    translate what they want to say. As an aid to communicate better in a foreign
    language. I can’t find anything wrong with that. Even reporters who don’t master
    English can find and report security problems.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: 'So: just the mere existence of a few give-away signs that parts of the text
    were generated by an AI or a similar tool is not an immediate red flag. It can
    still contain truths and be a valid issue. This is part of the reason why a well-formed
    crap report is harder and takes longer to discard.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: 'Exhibit A: code changes are disclosed'
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the fall of 2023, I alerted the community about a pending disclosure of [CVE-2023-38545](https://curl.se/docs/CVE-2023-38545.html).
    A vulnerability we graded severity high.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: 'The day before that issue was about to be published, a user submitted [this
    report on Hackerone](https://hackerone.com/reports/2199174): Curl CVE-2023-38545
    vulnerability code changes are disclosed on the internet'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: That sounds pretty bad and would have been a problem if it actually was true.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: 'The report however reeks of typical AI style hallucinations: it mixes and matches
    facts and details from old security issues, creating and making up something new
    that has no connection with reality. **The changes had not been disclosed on the
    Internet**. The changes that actually had been disclosed were for previous, older,
    issues. Like intended.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: In this particular report, the user helpfully told us that they used Bard to
    find this issue. Bard being a Google generative AI thing. It made it easier for
    us to realize the craziness, close the report and move on. As can be seen in the
    report log, we did have to not spend much time on researching this.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: 'Exhibit B: Buffer Overflow Vulnerability'
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A more complicated issue, less obvious, done better but still suffering from
    hallucinations. Showing how the problem grows worse when the tool is better used
    and better integrated into the communication.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: 'On the morning of December 28 2023, a user filed [this report on Hackerone](https://hackerone.com/reports/2298307):
    Buffer Overflow Vulnerability in WebSocket Handling. It was morning in my time
    zone anyway.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: Again this sounds pretty bad just based on the title. Since our WebSocket code
    is still experimental, and thus not covered by our bug bounty it helped me to
    still have a relaxed attitude when I started looking at this report. It was filed
    by a user I never saw before, but their “reputation” on Hackerone was decent –
    this was not their first security report.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: The report was pretty neatly filed. It included details and was written in proper
    English. It also contained a proposed fix. It did not stand out as wrong or bad
    to me. It appeared as if this user had detected something bad and as if the user
    understood the issue enough to also come up with a solution. As far as security
    reports go, this looked better than the average first post.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: In the report you can see my first template response informing the user their
    report had been received and that we will investigate the case. When that was
    posted, I did not yet know how complicated or easy the issue would be.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: Nineteen minutes later I had looked at the code, not found any issue, read the
    code again and then again a third time. *Where on earth is the buffer overflow
    the reporter says exists here?* Then I posted the first question asking for clarification
    on where and how exactly this overflow would happen.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: After repeated questions and numerous hallucinations I realized this was not
    a genuine problem and on the afternoon that same day I closed the issue as not
    applicable. **There was no buffer overflow.**
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: I don’t know for sure that this set of replies from the user was generated by
    an LLM but it has several signs of it.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: Ban these reporters
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: On Hackerone there is no explicit “ban the reporter from further communication
    with our project” functionality. I would have used it if it existed. Researchers
    get their “reputation” lowered then we close an issue as not applicable, but that
    is a very small nudge when only done once in a single project.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: I have requested better support for this from Hackerone. **Update:** this function
    *exists*, I just did not look at the right place for it…
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: Future
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As these kinds of reports will become more common over time, I suspect we might
    learn how to trigger on *generated-by-AI* signals better and dismiss reports based
    on those. That will of course be unfortunate when the AI is used for appropriate
    tasks, such as translation or just language formulation help.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: I am convinced there will pop up tools using AI for this purpose that actually
    work (better) in the future, at least part of the time, so I cannot and will not
    say that AI for finding security problems is necessarily always a bad idea.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: I do however suspect that if you just add an ever so tiny (intelligent) human
    check to the mix, the use and outcome of any such tools will become so much better.
    I suspect that will be true for a long time into the future as well.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: I have no doubts that people will keep trying to find shortcuts even in the
    future. I am sure they will keep trying to earn that quick reward money. Like
    for the email spammers, the cost of this ends up in the receiving end. The ease
    of use and wide access to powerful LLMs is just too tempting. I strongly suspect
    we will get more LLM generated rubbish in our Hackerone inboxes going forward.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我毫不怀疑，人们将来也会不断寻找捷径。我相信他们会一直试图赚取那些快速的奖励金钱。就像对于垃圾邮件发送者来说，这样做的成本最终是由接收方承担的。强大的语言模型的易用性和广泛访问性实在是太诱人了。我强烈怀疑我们的Hackerone邮箱里会越来越多地收到由语言模型生成的垃圾邮件。
- en: Discussion
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: '[Hacker news](https://news.ycombinator.com/item?id=38845878)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[Hacker news](https://news.ycombinator.com/item?id=38845878)'
- en: Credits
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 鸣谢
- en: Image by [Haider Mahmood](https://pixabay.com/users/haidermah-38208306/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=8331364)
    from [Pixabay](https://pixabay.com//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=8331364)
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自[Pixabay](https://pixabay.com//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=8331364)的[海德尔·马哈茂德](https://pixabay.com/users/haidermah-38208306/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=8331364)
