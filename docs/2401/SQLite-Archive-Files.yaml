- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '分类: 未分类'
- en: 'date: 2024-05-27 15:19:55'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '日期: 2024-05-27 15:19:55'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: SQLite Archive Files
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SQLite 存档文件
- en: 来源：[https://www.sqlite.org/sqlar.html](https://www.sqlite.org/sqlar.html)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.sqlite.org/sqlar.html](https://www.sqlite.org/sqlar.html)
- en: 1\. Introduction
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 简介
- en: An "SQLite Archive" is a file container similar to a [ZIP archive](https://en.wikipedia.org/wiki/Zip_(file_format))
    or [Tarball](https://en.wikipedia.org/wiki/Tar_(computing)) but based on an SQLite
    database.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 "SQLite 存档" 是一个类似于 [ZIP 存档](https://en.wikipedia.org/wiki/Zip_(file_format))
    或 [Tarball](https://en.wikipedia.org/wiki/Tar_(computing)) 的文件容器，但基于一个 SQLite
    数据库。
- en: 'An SQLite Archive is an ordinary SQLite database file that contains the following
    table as part of its schema:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 SQLite 存档是一个普通的 SQLite 数据库文件，其中包含以下表作为其模式的一部分：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Each row of the SQLAR table holds the content of a single file. The filename
    (the full pathname relative to the root of the archive) is in the "name" field.
    The "mode" field is an integer which is the unix-style access permissions for
    the file. "mtime" is the modification time of the file in seconds since 1970\.
    "sz" is the original uncompressed size of the file. The "data" field contains
    the file content. The content is usually compressed using [Deflate](http://zlib.net/),
    though not always. If the "sz" field is equal to the size of the "data" field,
    then the content is stored uncompressed.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: SQLAR 表的每一行保存单个文件的内容。文件名（相对于存档根目录的完整路径名）位于 "name" 字段中。"mode" 字段是一个整数，表示文件的 Unix
    风格的访问权限。"mtime" 是文件的修改时间，以自 1970 年以来的秒数表示。"sz" 是文件的原始未压缩大小。"data" 字段包含文件内容。内容通常使用
    [Deflate](http://zlib.net/) 进行压缩，尽管不一定总是这样。如果 "sz" 字段的大小等于 "data" 字段的大小，则内容以未压缩形式存储。
- en: 1.1\. Database As Container Object
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.1\. 数据库作为容器对象
- en: An SQLite Archive is one example of a more general idea that an SQLite database
    can behave as a container object holding lots of smaller data components.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 SQLite 存档是 SQLite 数据库可以作为包含许多较小数据组件的容器对象的更一般概念的一个例子。
- en: With client/server databases like PostgreSQL or Oracle, users and developers
    tend to think of the database as a service or a "node", not as an object. This
    is because the database content is spread out across multiple files on the server,
    or possibly across multiple servers in a service cluster. One cannot point to
    a single file or even a single directory and say "this is the database".
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 对于像 PostgreSQL 或 Oracle 这样的客户端/服务器数据库，用户和开发人员倾向于将数据库视为服务或 "节点"，而不是作为对象。这是因为数据库内容分布在服务器上的多个文件中，或者可能分布在服务集群中的多个服务器上。不能指向单个文件甚至单个目录并说
    "这就是数据库"。
- en: SQLite, in contrast, stores all content in a [single file on disk](fileformat2.html).
    That single file is something you can point to and say "this is the database".
    It behaves as an object. An SQLite database file can be copied, renamed, sent
    as an email attachment, passed as the argument a POST HTTP request, or otherwise
    treated as other data object such as an image, document, or media file.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 相比之下，SQLite 将所有内容存储在[单个磁盘文件](fileformat2.html)中。这个单个文件是你可以指向并说 "这就是数据库" 的东西。它的行为就像一个对象。SQLite
    数据库文件可以被复制、重命名、作为电子邮件附件发送、作为 POST HTTP 请求的参数传递，或者以其他数据对象的方式处理，如图像、文档或媒体文件。
- en: Studies show that many applications already use SQLite as a container object.
    For example, [Kennedy](https://odin.cse.buffalo.edu/papers/2015/TPCTC-sqlite-final.pdf)
    (no relation to the [SQLite developer](crew.html#dan)) reports that 14% of Android
    applications never write to their SQLite databases. It is believed that these
    applications are downloading entire databases from the cloud and then using the
    information locally as needed. In other words, the applications are using SQLite
    not so much as a database but as a queryable wire-transfer format.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 研究表明，许多应用程序已经将 SQLite 作为容器对象使用。例如，[肯尼迪](https://odin.cse.buffalo.edu/papers/2015/TPCTC-sqlite-final.pdf)（与[SQLite
    开发者](crew.html#dan)无关）报告称，14% 的安卓应用程序从未向其 SQLite 数据库写入。据信，这些应用程序是从云端下载整个数据库，然后根据需要在本地使用信息。换句话说，这些应用程序使用
    SQLite 的方式不是作为数据库，而是作为可查询的传输格式。
- en: 1.2\. Applications Using SQLite Archives
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.2\. 使用 SQLite 存档的应用程序
- en: The [Fossil Distributed Version Control](https://fossil-scm.org/) system provides
    users with the option to download check-ins as either Tarballs, ZIP Archives,
    or SQLite Archives.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[Fossil 分布式版本控制](https://fossil-scm.org/)系统为用户提供了将检入作为 Tarballs、ZIP 存档或 SQLite
    存档下载的选项。'
- en: 2\. Advantages Of SQLite Archives
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. SQLite 存档的优势
- en: An SQLite Archive is flexible. ZIP Archives and Tarballs are limited to storing
    only files. An SQLite Archive stores files plus whatever other tabular and/or
    relational data seems useful to the application.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SQLite Archive 是灵活的。ZIP Archive 和 Tarballs 仅限于存储文件。SQLite Archive 存储文件以及似乎对应用程序有用的其他表格和/或关系数据。
- en: An SQLite Archive is transactional. Updates are atomic and durable, even if
    there are crashes or power losses in the middle of the update. Readers see a consistent
    and unchanging version of the content even is some other process is simultaneously
    updating the archive.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SQLite Archive 是事务性的。即使在更新过程中发生崩溃或断电，更新也是原子且持久的。读者看到的内容版本是一致且不变的，即使其他过程正在同时更新存档。
- en: An SQLite Archive can be updated incrementally. Individual files can be added
    or removed or replaced without having to rewrite the entire archive.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SQLite Archive 可以增量更新。可以添加、删除或替换单个文件，而无需重写整个存档。
- en: 'An SQLite Archive can be queried using a high-level query language (SQL). Some
    examples:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用高级查询语言（SQL）可以查询SQLite Archive。一些示例：
- en: What is the total size of all files in the archive whose names end in ".h" or
    ".cpp"?
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存档中所有以“.h”或“.cpp”结尾的文件的总大小是多少？
- en: What percentage of the files are compressed by less than 25%?
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件中有多少百分比的文件压缩率低于 25%？
- en: How many executable files are in the archive?Questions like these (and countless
    others) can be answered without having to uncompress or extract any content.
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存档中有多少可执行文件？这些问题（以及无数其他问题）可以在不解压缩或提取任何内容的情况下得到回答。
- en: Applications that already use SQLite for other purposes can easily add support
    for SQLite Archives using a small extension ([https://sqlite.org/src/file/ext/misc/sqlar.c](https://sqlite.org/src/file/ext/misc/sqlar.c))
    to handle the compression and decompression of content. Even this tiny extension
    can be omitted if the files in the archive are uncompressed. In contrast, supporting
    ZIP Archives and/or Tarballs requires either separate libraries or lots of extra
    custom code, or sometimes both.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 已经为其他目的使用 SQLite 的应用程序可以轻松添加对 SQLite Archives 的支持，使用小扩展（[https://sqlite.org/src/file/ext/misc/sqlar.c](https://sqlite.org/src/file/ext/misc/sqlar.c)）来处理内容的压缩和解压缩。即使在存档中的文件是未压缩的，甚至可以省略这个微小的扩展。相比之下，支持
    ZIP Archives 和/或 Tarballs 需要单独的库或大量额外的自定义代码，有时两者兼而有之。
- en: 'An SQLite Archive can work around firewall-imposed censorship. For example,
    certain file types that are considered "dangerous" (examples: DLLs) will be [blocked
    by Gmail](https://support.google.com/mail/answer/6590) and probably many other
    email services and firewalls, even if the files are wrapped inside a ZIP Archive
    or Tarball. But these firewalls usually do not (yet) know about SQLite Archives
    and so content can be put inside an SQLite Archive to evade censorship.'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SQLite Archive 可以绕过防火墙强加的审查。例如，某些被视为“危险”的文件类型（例如：DLLs）会被 Gmail（例如：[Gmail](https://support.google.com/mail/answer/6590)）以及可能许多其他电子邮件服务和防火墙阻止，即使文件被包装在
    ZIP Archive 或 Tarball 中。但是这些防火墙通常（尚未）不了解 SQLite Archives，因此可以将内容放入 SQLite Archive
    以规避审查。
- en: 3\. Disadvantages Of SQLite Archives
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SQLite Archive 的缺点
- en: The SQLite Archive is a relatively new format. It was first described in in
    2014\. ZIP Archives and Tarballs, on the other hand, have been around for decades
    and are well-entrenched as standard formats. Most programmers know what a ZIP
    Archive or Tarball is, but if you say "SQLite Archive" you are more likely to
    get a reply of "What?" Tooling to process ZIP Archives and Tarballs is more likely
    to be installed on stock computers.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SQLite Archive 是相对较新的格式。它首次在 2014 年描述。 ZIP Archives 和 Tarballs 相反，已存在几十年并且已成为标准格式。大多数程序员知道
    ZIP Archive 或 Tarball 是什么，但是如果说“SQLite Archive”，您更有可能得到“什么？”的回复。用于处理 ZIP Archives
    和 Tarballs 的工具更可能安装在标准计算机上。
- en: Since an SQLite database is a more general format (it is designed to do much
    more than simply store a bunch of files) it is not as compact as either the ZIP
    Archive or Tarball formats. An SQLite Archive is usually about 1% larger than
    the equivalent ZIP Archive. Tarballs are compressed as a single unit rather than
    compressing each file separately as is done by both SQLite and ZIP Archives. For
    these reason, Tarballs tend to be smaller than either ZIP or SQLite Archives.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于 SQLite 数据库是一种更通用的格式（它设计用于执行更多操作而不仅仅是存储一堆文件），因此它不像 ZIP Archive 或 Tarball 格式那样紧凑。SQLite
    Archive 通常比等效的 ZIP Archive 大约大 1%。Tarballs 以单个单位压缩而不是像 SQLite 和 ZIP Archives 那样单独压缩每个文件。因此，Tarballs
    倾向于比 ZIP 或 SQLite Archives 小。
- en: 'As an example, the following table show the relative sizes for an SQLite Archive,
    a ZIP Archive, and a Tarball of the 1,743 files in the SQLite 3.22.0 source tree:'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，以下表格显示了 SQLite 3.22.0 源树中 1,743 个文件的 SQLite 存档、ZIP 存档和 Tarball 的相对大小：
- en: '| SQLite Archive | 10,754,048 |'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| SQLite 存档 | 10,754,048 |'
- en: '| ZIP Archive (using Info-ZIP 3.0) | 10,662,365 |'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| ZIP 存档（使用 Info-ZIP 3.0） | 10,662,365 |'
- en: '| ZIP Archive (using [zipfile](zipfile.html)) | 10,390,215 |'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| ZIP 存档（使用 [zipfile](zipfile.html)） | 10,390,215 |'
- en: '| Tarball |  9,781,109 |'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Tarball |  9,781,109 |'
- en: An SQLite Archive supports only the [Deflate](https://zlib.net/) compression
    method. Tarballs and ZIP Archive support a wider assortment of compression methods.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SQLite 存档仅支持 [Deflate](https://zlib.net/) 压缩方法。Tarballs 和 ZIP 存档支持更广泛的压缩方法。
- en: 4\. Managing An SQLite Archive From The Command-Line
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 从命令行管理 SQLite 存档
- en: The recommended way of creating, updating, listing, and extracting an SQLite
    Archive is to use the [sqlite3.exe command-line shell](cli.html) for SQLite [version
    3.23.0](releaselog/3_23_0.html) (2018-04-02) or later. This CLI supports the -A
    command-line option that allows easy management of SQLite Archives. The CLI for
    SQLite [version 3.22.0](releaselog/3_22_0.html) (2018-01-22) has the [.archive
    command](cli.html#sqlar) for managing SQLite Archives, but that requires interacting
    with the shell.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐的创建、更新、列出和提取 SQLite 存档的方式是使用 [sqlite3.exe 命令行 shell](cli.html) 适用于 SQLite
    [版本 3.23.0](releaselog/3_23_0.html)（2018-04-02）或更高版本。此 CLI 支持 -A 命令行选项，可轻松管理 SQLite
    存档。SQLite [版本 3.22.0](releaselog/3_22_0.html)（2018-01-22）的 CLI 具有用于管理 SQLite 存档的
    [.archive 命令](cli.html#sqlar)，但需要与 shell 交互。
- en: 'To list all of the files in an SQLite Archive named "example.sqlar" using one
    of these commands:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用以下命令之一列出名为 "example.sqlar" 的 SQLite 存档中的所有文件：
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To extract all files from an SQLite Archive named "example.sqlar":'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 要从名为 "example.sqlar" 的 SQLite 存档中提取所有文件：
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To create a new SQLite Archive named "alltxt.sqlar" containing all *.txt files
    in the current directory:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 要在当前目录中包含所有 *.txt 文件的新 SQLite 存档命名为 "alltxt.sqlar"：
- en: '[PRE3]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To add or update files in an existing SQLite Archive:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 要向现有的 SQLite 存档中添加或更新文件：
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'For usage hints and a summary of all options, simply give the [CLI](cli.html)
    the -A option with no additional arguments:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取使用提示和所有选项的摘要，只需向 [CLI](cli.html) 提供 -A 选项而无需其他参数：
- en: All of these commands work the same way if the filename argument is is a ZIP
    Archive instead of an SQLite database.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果文件名参数是 ZIP 存档而不是 SQLite 数据库，则所有这些命令都以相同的方式工作。
- en: Just as there is the "zip" program to manage ZIP Archives, and the "tar" program
    to manage Tarballs, the ["sqlar" program](https://sqlite.org/sqlar) exists to
    manage SQL Archives. The "sqlar" program is able to create a new SQLite Archive,
    list the content of an existing archive, add or remove files from the archive,
    and/or extract files from the archive. A separate "sqlarfs" program is able to
    mount the SQLite Archive as a [Fuse Filesystem](https://github.com/libfuse/libfuse).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 就像有“zip”程序管理 ZIP 存档，有“tar”程序管理 Tarballs 一样，存在 ["sqlar" 程序](https://sqlite.org/sqlar)
    来管理 SQL 存档。"sqlar" 程序能够创建一个新的 SQLite 存档，列出现有存档的内容，添加或删除存档中的文件，和/或提取存档中的文件。另外，一个单独的
    "sqlarfs" 程序能够将 SQLite 存档挂载为 [Fuse 文件系统](https://github.com/libfuse/libfuse)。
- en: 5\. Managing SQLite Archives From Application Code
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5\. 从应用程序代码管理 SQLite 存档
- en: Applications can easily read or write SQLite Archives by linking against SQLite
    and including the [ext/misc/sqlar.c](https://sqlite.org/src/file/ext/misc/sqlar.c)
    extension to handle the compression and decompression. The sqlar.c extension creates
    two new SQL functions.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序可以通过链接到 SQLite 并包含 [ext/misc/sqlar.c](https://sqlite.org/src/file/ext/misc/sqlar.c)
    扩展来轻松读取或写入 SQLite 存档，以处理压缩和解压缩。sqlar.c 扩展创建了两个新的 SQL 函数。
- en: '**sqlar_compress(X)**'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**sqlar_compress(X)**'
- en: The sqlar_compress(X) function attempts to compress a copy of the blob X using
    the [Default](https://zlib.net/) algorithm and returns the result as a blob. If
    the input X is not a compressible blob, then a copy of X is returned. This routine
    is used when inserting content into an SQLite Archive.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: sqlar_compress(X) 函数尝试使用 [默认](https://zlib.net/) 算法压缩 blob X 的副本，并将结果作为 blob
    返回。如果输入 X 不是可压缩的 blob，则返回 X 的副本。在将内容插入 SQLite 存档时使用此例程。
- en: '**sqlar_uncompress(Y,SZ)**'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**sqlar_uncompress(Y,SZ)**'
- en: The sqlar_uncompress(Y,SZ) function will undo the compression accomplished by
    sqlar_compress(X). The Y parameter is the compressed content (the output from
    a prior call to sqlar_compress()) and SZ is the original uncompressed size of
    the input X that generated Y. If SZ is less than or equal to the size of Y, that
    indicates that no compression occurred, and so sqlar_uncompress(Y,SZ) returns
    a copy of Y. Otherwise, sqlar_uncompress(Y,SZ) runs the Inflate algorithm on Y
    to uncompress it and restore it to its original form and returns the uncompressed
    content. This routine is used when extracting content from an SQLite Archive.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: sqlar_uncompress(Y,SZ) 函数将撤销由 sqlar_compress(X) 完成的压缩。Y 参数是压缩内容（从先前调用 sqlar_compress()
    的输出），而 SZ 是生成 Y 的输入 X 的原始未压缩大小。如果 SZ 小于或等于 Y 的大小，则表示未发生压缩，因此 sqlar_uncompress(Y,SZ)
    返回 Y 的副本。否则，sqlar_uncompress(Y,SZ) 对 Y 运行 Inflate 算法以解压缩它并将其恢复为其原始形式，并返回未压缩内容。在从
    SQLite 存档中提取内容时使用此例程。
- en: 'Using the two routines above, it is simple for applications to insert new records
    into or extract existing records from an SQLite Archive. Insert a new into an
    SQLite Archive using code like this:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 使用上述两个例程，应用程序可以简单地向 SQLite 存档中插入新记录或提取现有记录。使用以下代码向 SQLite 存档中插入新记录：
- en: '[PRE5]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Extract an entry from the SQLite Archive using code like this:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下代码从 SQLite 存档中提取条目：
- en: '[PRE6]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The code above is for the general case. For the special case of an SQLite Archive
    that only stores uncompressed or uncompressible content (this might come up, for
    example, in an SQLite Archive that stores only JPEG, GIF, and/or PNG images) then
    the content can be inserted into and extracted from the database without using
    the sqlar_compress() and sqlar_uncompress() functions, and the sqlar.c extension
    is not required.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码适用于一般情况。对于只存储未压缩或不可压缩内容的 SQLite 存档的特殊情况（例如，存储仅 JPEG、GIF 和/或 PNG 图像的 SQLite
    存档），则可以将内容插入和提取出数据库，而不使用 sqlar_compress() 和 sqlar_uncompress() 函数，并且不需要 sqlar.c
    扩展。
- en: '*This page last modified on [2023-01-12 11:08:35](https://sqlite.org/docsrc/honeypot)
    UTC*'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '*本页上次修改于 [2023-01-12 11:08:35](https://sqlite.org/docsrc/honeypot) UTC*'
