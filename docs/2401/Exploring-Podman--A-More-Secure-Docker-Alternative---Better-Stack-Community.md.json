["```\nReading package lists... Done\nBuilding dependency tree... Done\nReading state information... Done\nThe following additional packages will be installed:\n  aardvark-dns buildah catatonit conmon containernetworking-plugins crun fuse-overlayfs golang-github-containers-common golang-github-containers-image libslirp0 libsubid4 libyajl2 netavark slirp4netns uidmap\nSuggested packages:\n  containers-storage libwasmedge0 docker-compose\nThe following NEW packages will be installed:\n  aardvark-dns buildah catatonit conmon containernetworking-plugins crun fuse-overlayfs golang-github-containers-common golang-github-containers-image libslirp0 libsubid4 libyajl2 netavark podman slirp4netns uidmap\n0 upgraded, 16 newly installed, 0 to remove and 37 not upgraded.\nNeed to get 28.4 MB of archives.\nAfter this operation, 116 MB of additional disk space will be used.\nDo you want to continue? [Y/n] Y \n```", "```\npodman run --rm hello-world \n```", "```\nResolved \"hello-world\" as an alias (/etc/containers/registries.conf.d/shortnames.conf)\nTrying to pull docker.io/library/hello-world:latest...\nGetting image source signatures\nCopying blob 719385e32844 done\nCopying config 9c7a54a9a4 done\nWriting manifest to image destination\nStoring signatures\n\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\n\nTo generate this message, Docker took the following steps:\n 1\\. The Docker client contacted the Docker daemon.\n 2\\. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.\n    (amd64)\n 3\\. The Docker daemon created a new container from that image which runs the\n    executable that produces the output you are currently reading.\n 4\\. The Docker daemon streamed that output to the Docker client, which sent it\n    to your terminal.\n\nTo try something more ambitious, you can run an Ubuntu container with:\n $ docker run -it ubuntu bash\n\nShare images, automate workflows, and more with a free Docker ID:\n https://hub.docker.com/\n\nFor more examples and ideas, visit:\n https://docs.docker.com/get-started/ \n```", "```\nResolved \"hello-world\" as an alias (/etc/containers/registries.conf.d/shortnames.conf) \n```", "```\ngrep hello-world /etc/containers/registries.conf.d/shortnames.conf \n```", "```\n\"hello-world\" = \"docker.io/library/hello-world\" \n```", "```\nTrying to pull docker.io/library/hello-world:latest...\nGetting image source signatures\nCopying blob 719385e32844 done\nCopying config 9c7a54a9a4 done\nWriting manifest to image destination\nStoring signatures \n```", "```\nREPOSITORY                     TAG         IMAGE ID      CREATED       SIZE\ndocker.io/library/hello-world  latest      9c7a54a9a43c  6 months ago  19.9 kB \n```", "```\nUntagged: docker.io/library/hello-world:latest\nDeleted: 9c7a54a9a43cca047013b82af109fe963fde787f63f9e016fdc3384500c2823d \n```", "```\ndocker run --rm -p 8080:80 caddy \n```", "```\npodman run --rm -p 8080:80 caddy \n```", "```\nError: short-name \"caddy\" did not resolve to an alias and no unqualified-search registries are defined in \"/etc/containers/registries.conf\" \n```", "```\ngrep caddy /etc/containers/registries.conf.d/shortnames.conf \n```", "```\npodman run --rm -p 8080:80 docker.io/library/caddy \n```", "```\n[aliases]\n\"caddy\"=\"docker.io/caddy\" \n```", "```\nmkdir -p $HOME/.config/containers && touch $HOME/.config/containers/registries.conf \n```", "```\n[aliases]\n\"caddy\"=\"docker.io/caddy\" \n```", "```\npodman run --rm -p 8080:80 caddy \n```", "```\nResolved \"caddy\" as an alias (/home/<your_user_name>/.config/containers/registries.conf)\nTrying to pull docker.io/library/caddy:latest...\n... \n```", "```\necho > $HOME/.config/containers/registries.conf \n```", "```\nUntagged: docker.io/library/caddy:latest\nDeleted: 70c3913f54e294079c54cc8b651576b08dd4add42a0f4c0bc93d539913ae335d \n```", "```\nunqualified-search-registries=[\"docker.io\"] \n```", "```\npodman run --rm -p 8080:80 caddy \n```", "```\nResolving \"caddy\" using unqualified-search registries (/home/<your_user_name>/.config/containers/registries.conf)\nTrying to pull docker.io/library/caddy:latest\n... \n```", "```\nUntagged: docker.io/library/caddy:latest\nDeleted: 70c3913f54e294079c54cc8b651576b08dd4add42a0f4c0bc93d539913ae335d \n```", "```\nError: no registries found in registries.conf, a registry must be provided \n```", "```\nUsername: <your_user_name>\nPassword: <your_access_token>\nLogin Succeeded! \n```", "```\npodman pull docker.io/hello-world \n```", "```\nTrying to pull docker.io/library/hello-world:latest...\nGetting image source signatures\nCopying blob 719385e32844 done\nCopying config 9c7a54a9a4 done\nWriting manifest to image destination\nStoring signatures\n9c7a54a9a43cca047013b82af109fe963fde787f63f9e016fdc3384500c2823d \n```", "```\nREPOSITORY                     TAG         IMAGE ID      CREATED       SIZE\ndocker.io/library/hello-world  latest      9c7a54a9a43c  6 months ago  19.9 kB \n```", "```\npodman push docker.io/library/hello-world docker.io/<your_user_name>/hello-private \n```", "```\nGetting image source signatures\nCopying blob 01bb4fce3eb1 skipped: already exists\nCopying config 9c7a54a9a4 done\nWriting manifest to image destination\nStoring signatures \n```", "```\nUntagged: docker.io/library/hello-world:latest\nDeleted: 9c7a54a9a43cca047013b82af109fe963fde787f63f9e016fdc3384500c2823d \n```", "```\npodman run --rm docker.io/<your_user_name>/hello-private \n```", "```\nTrying to pull docker.io/<your_user_name>/hello-private:latest...\nGetting image source signatures\nCopying blob 719385e32844 done\nCopying config 9c7a54a9a4 done\nWriting manifest to image destination\nStoring signatures\n\nHello from Docker!\n... \n```", "```\nTrying to pull docker.io/<your_user_name>/hello-private:latest...\nError: initializing source docker://<your_user_name>/hello-private:latest: reading manifest latest in docker.io/<your_user_name>/hello-private: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required \n```", "```\nRemoved login credentials for docker.io \n```", "```\nUntagged: docker.io/<your_user_name>/hello-private:latest\nDeleted: 9c7a54a9a43cca047013b82af109fe963fde787f63f9e016fdc3384500c2823d \n```", "```\npipx install podman-compose \n```", "```\ninstalled package podman-compose 1.0.6, installed using Python 3.11.6\nThese apps are now globally available\n  - podman-compose\n‚ö†Ô∏è Note: '/home/<your_user_name>/.local/bin' is not on your PATH environment variable. These apps will not be globally accessible until your PATH is updated. Run `pipx ensurepath` to automatically add it, or manually modify your PATH in your shell's config file (i.e. ~/.bashrc).\ndone! ‚ú® üåü ‚ú® \n```", "```\nCommand 'podman-compose' not found, but can be installed with:\nsudo apt install podman-compose \n```", "```\n/home/<your_user_name>/.local/bin has been added to PATH, but you need to open a new terminal or re-login for this PATH change to take effect.\n\nYou will need to open a new terminal or re-login for the PATH changes to take effect.\n\nOtherwise pipx is ready to go! ‚ú® üåü ‚ú® \n```", "```\necho $PATH | tr ':' '\\n' | grep -F .local \n```", "```\n/home/<your_user_name>/.local/bin \n```", "```\nmkdir podman-tutorial && cd podman-tutorial \n```", "```\nDB_USER=<your_example_username>\nDB_PASS=<your_example_password>\nDB_NAME=<your_example_database> \n```", "```\nversion: '3'\n\nservices:\n\n  wordpress:\n    image: wordpress\n    container_name: wordpress\n    restart: always\n    ports:\n      - '8080:80'\n    environment:\n      WORDPRESS_DB_HOST: db\n      WORDPRESS_DB_USER: ${DB_USER}\n      WORDPRESS_DB_PASSWORD: ${DB_PASS}\n      WORDPRESS_DB_NAME: ${DB_NAME}\n    volumes:\n      - wordpress:/var/www/html\n\n  db:\n    image: mysql:5.7\n    container_name: db\n    restart: always\n    ports:\n      - '3306:3306'\n    environment:\n      MYSQL_DATABASE: ${DB_NAME}\n      MYSQL_USER: ${DB_USER}\n      MYSQL_PASSWORD: ${DB_PASS}\n      MYSQL_RANDOM_ROOT_PASSWORD: '1'\n    volumes:\n      - db:/var/lib/mysql\n\nvolumes:\n  wordpress:\n  db: \n```", "```\npodman-compose version: 1.0.6\n['podman', '--version', '']\nusing podman version: 4.3.1\n** excluding:  set()\n['podman', 'ps', '--filter', 'label=io.podman.compose.project=podman-tutorial', '-a', '--format', '{{ index .Labels \"io.podman.compose.config-hash\"}}'] \n```", "```\npodman volume inspect podman-tutorial_wordpress || podman volume create podman-tutorial_wordpress\n['podman', 'volume', 'inspect', 'podman-tutorial_wordpress']\nError: inspecting object: no such volume podman-tutorial_wordpress\n['podman', 'volume', 'create', '--label', 'io.podman.compose.project=podman-tutorial', '--label', 'com.docker.compose.project=podman-tutorial', 'podman-tutorial_wordpress']\n['podman', 'volume', 'inspect', 'podman-tutorial_wordpress'] \n```", "```\n['podman', 'network', 'exists', 'podman-tutorial_default']\n['podman', 'network', 'create', '--label', 'io.podman.compose.project=podman-tutorial', '--label', 'com.docker.compose.project=podman-tutorial', 'podman-tutorial_default']\n['podman', 'network', 'exists', 'podman-tutorial_default'] \n```", "```\npodman run --name=wordpress -d --label io.podman.compose.config-hash=c3e51c9a26e54848a06f92083413698bee90acd721b4aa3054280e110819a68c --label io.podman.compose.project=podman-tutorial --label io.podman.compose.version=1.0.6 --label PODMAN_SYSTEMD_UNIT=podman-compose@podman-tutorial.service --label com.docker.compose.project=podman-tutorial --label com.docker.compose.project.working_dir=/home/<your_user_name>/podman-tutorial --label com.docker.compose.project.config_files=docker-compose.yml --label com.docker.compose.container-number=1 --label com.docker.compose.service=wordpress -e WORDPRESS_DB_HOST=db -e WORDPRESS_DB_USER=testuser -e WORDPRESS_DB_PASSWORD=testpass -e WORDPRESS_DB_NAME=testdb -v podman-tutorial_wordpress:/var/www/html --net podman-tutorial_default --network-alias wordpress -p 8080:80 --restart always wordpress \n```", "```\nResolving \"wordpress\" using unqualified-search registries (/home/<your_user_name>/.config/containers/registries.conf)\nTrying to pull docker.io/library/wordpress:latest...\nGetting image source signatures\nCopying blob c5d33b602102 done\n...\nCopying config bc823df9ea done\nWriting manifest to image destination\nStoring signatures\n980f5792fb9c34ea9357ffa290d5d79ac0b48b70701cd4693f5d7e2b4f2312f1\nexit code: 0 \n```", "```\npodman volume inspect podman-tutorial_db || podman volume create podman-tutorial_db\n['podman', 'volume', 'inspect', 'podman-tutorial_db']\nError: inspecting object: no such volume podman-tutorial_db\n['podman', 'volume', 'create', '--label', 'io.podman.compose.project=podman-tutorial', '--label', 'com.docker.compose.project=podman-tutorial', 'podman-tutorial_db']\n['podman', 'volume', 'inspect', 'podman-tutorial_db'] \n```", "```\n['podman', 'network', 'exists', 'podman-tutorial_default'] \n```", "```\npodman run --name=db -d --label io.podman.compose.config-hash=c3e51c9a26e54848a06f92083413698bee90acd721b4aa3054280e110819a68c --label io.podman.compose.project=podman-tutorial --label io.podman.compose.version=1.0.6 --label PODMAN_SYSTEMD_UNIT=podman-compose@podman-tutorial.service --label com.docker.compose.project=podman-tutorial --label com.docker.compose.project.working_dir=/home/<your_user_name>/podman-tutorial --label com.docker.compose.project.config_files=docker-compose.yml --label com.docker.compose.container-number=1 --label com.docker.compose.service=db -e MYSQL_DATABASE=testdb -e MYSQL_USER=testuser -e MYSQL_PASSWORD=testpass -e MYSQL_RANDOM_ROOT_PASSWORD=1 -v podman-tutorial_db:/var/lib/mysql --net podman-tutorial_default --network-alias db --restart always mysql:5.7 \n```", "```\nResolving \"mysql\" using unqualified-search registries (/home/<your_user_name>/.config/containers/registries.conf)\nTrying to pull docker.io/library/mysql:5.7...\nGetting image source signatures\nCopying blob 62aca7179a54 done\n...\nCopying config bdba757bc9 done\nWriting manifest to image destination\nStoring signatures\n21615c3d36236f181b94831b5c1eb699153f7cf912fdefcb342732069f99c09d\nexit code: 0 \n```", "```\nCONTAINER ID  IMAGE                               COMMAND               CREATED        STATUS            PORTS                 NAMES\n980f5792fb9c  docker.io/library/wordpress:latest  apache2-foregroun...  3 minutes ago  Up 3 minutes ago  0.0.0.0:8080->80/tcp  wordpress\n21615c3d3623  docker.io/library/mysql:5.7         mysqld                2 minutes ago  Up 2 minutes ago                        db \n```", "```\nREPOSITORY                   TAG         IMAGE ID      CREATED       SIZE\ndocker.io/library/wordpress  latest      bc823df9ead2  28 hours ago  683 MB\ndocker.io/library/mysql      5.7         bdba757bc933  4 weeks ago   520 MB \n```", "```\nNETWORK ID    NAME                     DRIVER\n2f259bab93aa  podman                   bridge\n3f5fa386b31c  podman-tutorial_default  bridge \n```", "```\nDRIVER      VOLUME NAME\nlocal       podman-tutorial_db\nlocal       podman-tutorial_wordpress \n```", "```\npodman-compose version: 1.0.6\n['podman', '--version', '']\nusing podman version: 4.3.1\n** excluding:  set()\npodman stop -t 10 db\ndb\nexit code: 0\npodman stop -t 10 wordpress\nwordpress\nexit code: 0\npodman rm db\ndb\nexit code: 0\npodman rm wordpress\nwordpress\nexit code: 0 \n```", "```\nCONTAINER ID  IMAGE       COMMAND     CREATED     STATUS      PORTS       NAMES \n```", "```\npodman volume rm podman-tutorial_db podman-tutorial_wordpress \n```", "```\npodman network rm podman-tutorial_default \n```"]