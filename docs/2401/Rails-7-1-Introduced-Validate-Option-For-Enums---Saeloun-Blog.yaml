- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:28:58'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Rails 7.1 Introduced Validate Option For Enums | Saeloun Blog
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://blog.saeloun.com/2024/01/02/rails-enums-validate-option/](https://blog.saeloun.com/2024/01/02/rails-enums-validate-option/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: An Enum is a data type that allows us to define a set of named constants. Rails
    7.1 brings a notable enhancement to enum handling by introducing the `:validate`
    option.
  prefs: []
  type: TYPE_NORMAL
- en: It will allow more flexible and robust validation of enum values within the
    ActiveRecord models.
  prefs: []
  type: TYPE_NORMAL
- en: In this blog post, we’ll explore how this [change](https://github.com/rails/rails/pull/49100)
    affects our code and how the validations for enum values were handled in previous
    versions of Rails.
  prefs: []
  type: TYPE_NORMAL
- en: Before
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In previous versions of Rails, if we assign an incorrect value to the enum then
    it used to raise an `ArgumentError`.
  prefs: []
  type: TYPE_NORMAL
- en: We can illustrate this by the following example.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: In the above snippet, we have a `Holiday` model with an enum `type` column which
    can take `national` or `regional` as valid holiday types.
  prefs: []
  type: TYPE_NORMAL
- en: When we tried passing `optional` as a holiday type it raised an `ArgumentError`.
  prefs: []
  type: TYPE_NORMAL
- en: After
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Rails 7.1 introduced the `validate` option for enums. It will allow developers
    to enforce the validation checks before saving enum values.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s try passing the `validate: true` to the above snippet and see the change
    introduced from this version.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: We can also pass additional validation options
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: If we don’t pass the `validate` option it will raise the `ArgumentError` as
    in the earlier versions.
  prefs: []
  type: TYPE_NORMAL
- en: To know more about this feature, please refer to this [PR](https://github.com/rails/rails/pull/49100)
  prefs: []
  type: TYPE_NORMAL
