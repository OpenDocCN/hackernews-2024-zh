- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-27 14:34:21'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:34:21
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: A concrete example of why Apple's documentation is terrible | A concrete example
    of why Apple's documentation is terrible
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 苹果文档糟糕的一个具体例子 | 苹果文档糟糕的一个具体例子
- en: 来源：[https://www.amimetic.co.uk/blog/a-concrete-example-of-why-apples-docs-are-terrible/](https://www.amimetic.co.uk/blog/a-concrete-example-of-why-apples-docs-are-terrible/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.amimetic.co.uk/blog/a-concrete-example-of-why-apples-docs-are-terrible/](https://www.amimetic.co.uk/blog/a-concrete-example-of-why-apples-docs-are-terrible/)
- en: Apple's documentations is famously dreadful. In particular it is often missing
    or incomplete. [No overview available](https://nooverviewavailable.com/) gives
    you some numbers on this but I think that actually understates the problem. Even
    when it is available it is often terrible. Here is a small concrete example I
    recently encountered while doing some MacOS development (an area I'm less familiar
    with).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果的文档声名狼藉。特别是经常缺失或不完整。[没有概述可用](https://nooverviewavailable.com/) 给出了一些相关数据，但我认为那实际上低估了问题。即使有时可用，也经常很糟糕。这是我最近在做一些
    MacOS 开发时遇到的一个小的具体例子（这是我不太熟悉的领域）。
- en: I want to prompt the user to open a directory. How do I do that? Obviously I
    Google it (throwing in `Swift` to avoid ancient `Obj-C` answers).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我想提示用户打开一个目录。我该怎么做？显然我要谷歌一下（加入 `Swift`，避免古老的 `Obj-C` 答案）。
- en: Seems like I want something called `NSOpenPanel`.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 好像我想要的是叫做 `NSOpenPanel` 的东西。
- en: I find [Apple's docs](https://developer.apple.com/documentation/appkit/nsopenpanel)
    and it seems to be fairly clear. I configure with some straightforward options.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我找到了[苹果的文档](https://developer.apple.com/documentation/appkit/nsopenpanel)，看起来相当清晰。我用一些简单的选项进行配置。
- en: Okay how do I actually use it?
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，我到底该如何使用它？
- en: Hmmm. That is far from clear. There is literally nothing on the page that explains
    even the most basic use case. Sigh. Hit google again finding that I want to call
    `begin` and that that this accepts a callback which is given a result.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯。这远非清晰。页面上甚至没有解释最基本的用例。叹气。再次谷歌发现我想要调用 `begin`，而且这接受一个给出结果的回调。
- en: The example is out of date (a perpertual issue with Swift) but eventually sort
    that out in the editor (we now have a nice enum with the result).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这个示例已经过时了（Swift 的一个永恒问题），但最终在编辑器中解决了这个问题（现在我们有了一个带有结果的漂亮枚举）。
- en: Okay but how do I get the actual directory selected? The success value is `.OK`.
    Is there some kind of data with that? No. Just a result.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，我该如何获取实际选择的目录？成功的值是`.OK`。有什么数据吗？没有。只是一个结果。
- en: Hmmm...
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯……
- en: There is a [delegate](https://developer.apple.com/documentation/appkit/nsopensavepaneldelegate)
    that I can set. Maybe that gets the result.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个 [delegate](https://developer.apple.com/documentation/appkit/nsopensavepaneldelegate)
    我可以设置。也许那就是得到结果的方法。
- en: Waste a few minutes on that, basically appears to be for configuration.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 浪费了几分钟，基本上看起来是用于配置。
- en: Ah, it inherits from `NSSavePanel`! That was not at all obvious (and I'm sorry
    OOP devotees, that makes damn all sense in principle). Oh, look, loads of new
    functions and properties. Ah, so I'm meant to query the NSOpenPanel object for
    the directory.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 哦，它继承自 `NSSavePanel`！这一点完全不明显（我很抱歉，面向对象的爱好者，原则上这根本就没有任何意义）。哦，看，有大量新的函数和属性。啊，所以我应该查询
    NSOpenPanel 对象以获取目录。
- en: Not really clear how. Xcode offers a `url`, `urls`, `directoryUrl`, `representedUrl`
    among others (I'm not making any of those up and most didn't seem to be in documentation).
    Let's be optimistic and chose `url`. Success! It appears to work.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 不太清楚怎么做。Xcode 提供了 `url`、`urls`、`directoryUrl`、`representedUrl` 等等（我没有编造这些，大部分在文档中都找不到）。让我们乐观点，选择
    `url`。成功了！看起来能用了。
- en: 'Oh, also missing (before I continue): in recent versions of MacOS need to add
    a capability for reading (and writing) to user selected directories. Again completely
    missing from documentation and yet another frustration for someone not already
    very familiar with the ecosystem.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 哦，还缺失一个（在我继续之前）：在最近的 MacOS 版本中，需要添加一个能够读取（和写入）用户选择目录的功能。文档中完全没有提及，这对于对该生态系统不太熟悉的人来说又是一个挫折。
- en: This can be so much better. Apple developers sneer at Electron, but look at
    how [clear Electron's open dialog docs](https://electronjs.org/docs/api/dialog#dialogshowopendialogbrowserwindow-options)
    are.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以做得更好。苹果的开发者嘲笑 Electron，但看看 [Electron 的打开对话框文档多么清晰](https://electronjs.org/docs/api/dialog#dialogshowopendialogbrowserwindow-options)。
- en: What goes wrong with Apple's docs?
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 苹果的文档有什么问题？
- en: Missing and incomplete
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 缺失和不完整
- en: Outdated (Obj-C or older Swift versioned docs are common)
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 过时了（Obj-C 或较旧的 Swift 版本文档很常见）
- en: Badly written (assumes a level of familiarity that would make reading the docs
    unnecessary). Lack of explanation.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 写得很糟糕（假设了一种熟悉程度，使得阅读文档变得不必要）。缺乏解释。
- en: Lack of examples of even basic usage.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 缺乏甚至基本用法的示例。
- en: 'Badly designed, legacy OOP APIs: Swift can sometimes get away without much
    documentation through good use of types. Sadly a lot of MacOS API''s are a blend
    of old fashioned OOP with surprisingly low level details.'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设计不良的、遗留的面向对象编程API：通过良好的类型使用，Swift 有时可以在不需要太多文档的情况下运行。不幸的是，许多 MacOS 的API是一种老式面向对象编程与令人惊讶的低级细节的混合体。
- en: What if you are doing Apple development?
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如果你在进行苹果开发呢？
- en: Avoid Apple's docs (even where they are top Google results). They will likely
    be pretty bad. Stack Overflow is sometime good (but often an old Swift version).
    Some third party docs and good (Paul Hudson, Ray Wenderlich).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 避免使用苹果的文档（即使它们是谷歌搜索的前几个结果）。它们可能会很糟糕。有时候 Stack Overflow 还不错（但往往是旧版本的 Swift）。一些第三方文档比较好（Paul
    Hudson、Ray Wenderlich）。
