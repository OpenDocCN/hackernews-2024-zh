- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:29:41'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: example-webrtc-applications/sip-to-webrtc at master · pion/example-webrtc-applications
    · GitHub
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://github.com/pion/example-webrtc-applications/tree/master/sip-to-webrtc](https://github.com/pion/example-webrtc-applications/tree/master/sip-to-webrtc)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: SIP is an example of accepting inbounding SIP traffic (Invites) and bridging
    it with WebRTC. This is the most common way to connect phone calls with your WebRTC
    application. This is possible because of the excellent [emiago/sipgo](https://github.com/emiago/sipgo)
    library.
  prefs: []
  type: TYPE_NORMAL
- en: This example demonstrates accepting SIP audio and playing it in the browser.
    If you wish to implement multiple participants in a call you will need to have
    audio mixing. See [zaf/g711](https://github.com/zaf/g711) for decoding + encoding.
    After you have decoded sum all the samples and then encode it.
  prefs: []
  type: TYPE_NORMAL
- en: Open sip-to-webrtc example page
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[](#open-sip-to-webrtc-example-page)'
  prefs: []
  type: TYPE_NORMAL
- en: '[jsfiddle.net](https://jsfiddle.net/gds05mc3/) you should see a audio player,
    two text-areas and a ''Start Session'' button'
  prefs: []
  type: TYPE_NORMAL
- en: Run sip-to-webrtc with your browsers SessionDescription as stdin
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](#run-sip-to-webrtc-with-your-browsers-sessiondescription-as-stdin)'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the jsfiddle the top textarea is your browser, copy that and:'
  prefs: []
  type: TYPE_NORMAL
- en: Run `echo $BROWSER_SDP | sip-to-webrtc`
  prefs: []
  type: TYPE_NORMAL
- en: Paste the SessionDescription into a file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run `sip-to-webrtc < my_file`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Input sip-to-webrtc's SessionDescription into your browser
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[](#input-sip-to-webrtcs-sessiondescription-into-your-browser)'
  prefs: []
  type: TYPE_NORMAL
- en: Copy the text that `sip-to-webrtc` just emitted and copy into second text area
  prefs: []
  type: TYPE_NORMAL
- en: Hit 'Start Session' to connect
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[](#hit-start-session-to-connect)'
  prefs: []
  type: TYPE_NORMAL
- en: If a WebRTC session was successfully established you will get log messages about
    ICEConnectionState going to `connected`. In your browser and terminal.
  prefs: []
  type: TYPE_NORMAL
- en: '**Browser**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Terminal**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: If everything worked now it is time to make a SIP Invite.
  prefs: []
  type: TYPE_NORMAL
- en: '`sip-to-webrtc` is now listening on `:5060` and will accept all invites. When
    an Invite has been accepted you will see a log message like this.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: You should hear the audio of the phone call in your browser.
  prefs: []
  type: TYPE_NORMAL
- en: Congrats, you have used Pion WebRTC! Now start building something cool
  prefs: []
  type: TYPE_NORMAL
