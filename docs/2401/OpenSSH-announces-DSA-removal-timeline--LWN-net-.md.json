["```\n\nHi,\n\nOpenSSH plans to remove support for DSA keys in the near future. This\nmessage describes our rationale, process and proposed timeline.\n\nRationale\n---------\n\nDSA, as specified in the SSHv2 protocol, is inherently weak - being\nlimited to a 160 bit private key and use of the SHA1 digest. Its\nestimated security level is <=80 bits symmetric equivalent[1][2].\n\nOpenSSH has disabled DSA keys by default since 2015 but has retained\noptional support for them. DSA is the only mandatory-to-implement\nalgorithm in the SSHv2 RFCs[3], mostly because alternative algorithms\nwere encumbered by patents when the SSHv2 protocol was designed and\nspecified.\n\nSince then, the world has moved on. RSA is unencumbered and support\nfor it is ubiquitous. ECDSA offers significant performance and\nsecurity benefits over modp DSA, and EdDSA overs further performance\nand security improvements over both again.\n\nThe only remaining use of DSA at this point should be deeply legacy\ndevices. As such, we no longer consider the costs of maintaining DSA\nin OpenSSH to be justified. Moreover, we hope that OpenSSH's final\nremoval of this insecure algorithm accelerates its deprecation in\nother SSH implementations and allows maintainers of cryptography\nlibraries to remove it too.\n\nProcess and timeline\n--------------------\n\nThe next release of OpenSSH (due around 2024/03) will make DSA\noptional at compile time, but still enable it by default. Users and\ndownstream distributors of OpenSSH may use this option to explore the\nimpact of DSA removal in their environments, or to hard-deprecate it\nearly if they desire.\n\nAround 2024/06, a release of OpenSSH will change this compile-time\ndefault to disable DSA. It may still be enabled by users/distributors\nif needed.\n\nFinally, in the first OpenSSH release after 2025/01/01 the DSA code\nwill be removed entirely.\n\nIn summary:\n\n2024/01 - this announcement\n2024/03 (estimated) - DSA compile-time optional, enabled by default\n2024/06 (estimated) - DSA compile-time optional, *disabled* by default\n2025/01 (estimated) - DSA is removed from OpenSSH\n\nQuestions\n---------\n\n * What if I have devices that only support DSA?\n\nRemoving DSA from OpenSSH will not remove endpoints that require DSA\nfrom the world and users may still need to connect to them. Although\nnew releases of OpenSSH will no longer support DSA, past releases and\nalternate SSH implementations will continue to do so.\n\nWe recommend that users with an ongoing need to connect to DSA-only\nendpoints maintain a legacy release of an OpenSSH client for this\npurpose, similar to what was recommended when support for the SSHv1\nprotocol was removed.\n\nFor example, Debian maintains a \"openssh-client-ssh1\" package built\nfrom OpenSSH 7.5 for the purpose of connecting to SSHv1 endpoints.\nThis package or something similar is likely to be sufficient for\nDSA-only endpoints too.\n\n * Doesn't this make OpenSSH non-compliant with RFC4253?\n\nPractically, no more than we've been since 2015 when we stopped\noffering DSA by default.\n\n * Why make this change now? Why not earlier/later?\n\nWe feel like enough time has passed since DSA was disabled by default\nfor the overwhelming majority of users to have abandoned use of the\nalgorithm. We are also likely to start exploring a post-quantum\nsignature algorithm soon and are mindful of the overall size and\ncomplexity of the key/signature code.\n\n * I want to discuss this change further\n\nThe https://lists.mindrot.org/mailman/listinfo/openssh-unix-dev\nmailing list is the best place to discuss this. Alternately you can\nemail the OpenSSH developers at openssh@openssh.com.\n\nThanks,\nDamien Miller, on behalf of the OpenSSH project\n\n[1] https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIS...\n[2] https://www.rfc-editor.org/rfc/rfc9142.html#section-1.1\n[3] https://www.rfc-editor.org/rfc/rfc4253.html#section-6.6\n```"]