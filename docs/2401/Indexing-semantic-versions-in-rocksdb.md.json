["```\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n```", "```\nfun main() {\n val emptyByte = byteArrayOf()\n RocksDB.loadLibrary()\n val options = Options().setCreateIfMissing(true)\n val rdb = RocksDB.open(options, \"/tmp/rdb-semver\")\n rdb.put(\"1.2.4\".encodeToByteArray(), emptyByte)\n rdb.put(\"10.2.4\".encodeToByteArray(), emptyByte)\n rdb.put(\"2.2.5\".encodeToByteArray(), emptyByte)\n rdb.put(\"1.3.4\".encodeToByteArray(), emptyByte)\n rdb.put(\"1.2.4-rc.1\".encodeToByteArray(), emptyByte)\n rdb.put(\"2.2.4-beta-2\".encodeToByteArray(), emptyByte)\n rdb.put(\"2.2.4-alpha-2\".encodeToByteArray(), emptyByte)\n printDb(rdb)\n rdb.close()\n}\n === DB start ===\n1.2.4\n1.2.4-rc.1\n1.3.4\n10.2.4\n2.2.4-alpha-2\n2.2.4-beta-2\n2.2.5\n=== DB end === \n```", "```\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n```", "```\nclass SemVerCompare(co: ComparatorOptions): AbstractComparator(co) {\n override fun name(): String {\n return \"semver.comparator\"\n }\n override fun compare(x: ByteBuffer, y: ByteBuffer): Int {\n val xAsString = String(x.array(), 0, x.limit())\n val yAsString = String(y.array(), 0, y.limit())\n val xAsSemver = Semver(xAsString)\n val yASSemver = Semver(yAsString)\n return xAsSemver.compareTo(yASSemver)\n }\n} \n```", "```\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n```", "```\n fun main() {\n val emptyByte = byteArrayOf()\n RocksDB.loadLibrary()\n val options = Options().setCreateIfMissing(true)\n .setComparator(SemVerCompare(ComparatorOptions().setUseDirectBuffer(false)))\n val rdb = RocksDB.open(options, \"/tmp/rdb-semver\")\n rdb.put(\"1.2.4\".encodeToByteArray(), emptyByte)\n rdb.put(\"10.2.4\".encodeToByteArray(), emptyByte)\n rdb.put(\"2.2.5\".encodeToByteArray(), emptyByte)\n rdb.put(\"1.3.4\".encodeToByteArray(), emptyByte)\n rdb.put(\"1.2.4-rc.1\".encodeToByteArray(), emptyByte)\n rdb.put(\"2.2.4-beta-2\".encodeToByteArray(), emptyByte)\n rdb.put(\"2.2.4-alpha-2\".encodeToByteArray(), emptyByte)\n printDb(rdb)\n rdb.close()\n}\n === DB start ===\n1.2.4-rc.1\n1.2.4\n1.3.4\n2.2.4-alpha-2\n2.2.4-beta-2\n2.2.5\n10.2.4\n=== DB end === \n```"]