- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 15:19:22'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Higher Order Derivatives of Transforms - Nosferalatu
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://nosferalatu.com/HigherOrderDerivativesTransforms.html](https://nosferalatu.com/HigherOrderDerivativesTransforms.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In [a previous post](DerivativesLogarithmsTransforms.html) I discussed the relationship
    between derivatives, logarithms, and transforms. This blog post adds to that and
    explains how to find the second and higher order derivatives of a transform.
  prefs: []
  type: TYPE_NORMAL
- en: The Concept of Derivatives of Transforms
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Let’s quickly recap my earlier blog post. Suppose we have a transform \(T\)
    and a point at the initial position of \(x(0)\). The position of the point at
    time t and the first derivative of that point are
  prefs: []
  type: TYPE_NORMAL
- en: \(x(t) = T^t * x(0)\)
  prefs: []
  type: TYPE_NORMAL
- en: \(x'(t) = log(T) * x(t)\).
  prefs: []
  type: TYPE_NORMAL
- en: where \(log(T)\) is the logarithm of the transform. Both \(T\) and \(log(T)\)
    are constant with respect to t.
  prefs: []
  type: TYPE_NORMAL
- en: What’s the second derivative?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We know the first derivative (\(x'(t) = log(T) * x(t)\)), so to find the second
    derivative, we start with
  prefs: []
  type: TYPE_NORMAL
- en: \(\dfrac{d}{dt}x'(t) = \dfrac{d}{dt}log(T) * x(t)\)
  prefs: []
  type: TYPE_NORMAL
- en: Since \(log(T)\) is constant with respect to time, we then have
  prefs: []
  type: TYPE_NORMAL
- en: \(x''(t) = log(T) * \dfrac{d}{dt}x(t)\)
  prefs: []
  type: TYPE_NORMAL
- en: 'and earlier we stated that \(x''(t) = log(T) * x(t)\), so we just plug that
    in, giving us our answer:'
  prefs: []
  type: TYPE_NORMAL
- en: \(x''(t) = log(T) * log(T) * x(t)\).
  prefs: []
  type: TYPE_NORMAL
- en: Neat! In other words, if we have the first derivative, then the second derivative
    is just another multiplication by \(log(T)\).
  prefs: []
  type: TYPE_NORMAL
- en: In the earlier blog post, we found the tangent vector of a point by multiplying
    the point by \(log(T)\). Similarly, we can now find the acceleration vector of
    a point by multiplying it by \(log(T) * log(T)\).
  prefs: []
  type: TYPE_NORMAL
- en: What’s the nth derivative?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The beauty of this approach is how simple it is. For the nth derivative, we
    can follow the same pattern. More generally, the nth derivative is
  prefs: []
  type: TYPE_NORMAL
- en: \(x^{n}(t) = log(T)^n * x(t)\)
  prefs: []
  type: TYPE_NORMAL
- en: Interactive Example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Here’s an interactive example where you can see the tangent vector (green arrow)
    and acceleration vector (red arrow) of a point as it is interpolated from the
    origin to the gizmo’s transform. You can manipulate the gizmo to translate and
    rotate the transform. You can also enable a visualization of the velocity vector
    field or the acceleration vector field.
  prefs: []
  type: TYPE_NORMAL
- en: The source code for the applet can be found [here](../../js/HigherOrderDerivativesOfTransforms_example.js).
  prefs: []
  type: TYPE_NORMAL
- en: Comments
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Leave comments on this post with Github Issues [here](https://github.com/nosferalatu/nosferalatu.github.io/issues/2).
  prefs: []
  type: TYPE_NORMAL
