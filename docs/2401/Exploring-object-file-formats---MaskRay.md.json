["```\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n```", "```\n typedef struct {\n Elf32_Word\tst_name;\n Elf32_Addr\tst_value;\n Elf32_Word\tst_size;\n unsigned char\tst_info;\n unsigned char\tst_other;\n Elf32_Half\tst_shndx;\n} Elf32_Sym;\n typedef struct {\n Elf64_Word st_name; \n unsigned char st_info; \n unsigned char st_other; \n Elf64_Half st_shndx; \n Elf64_Addr st_value;\n Elf64_Xword st_size;\n} Elf64_Sym; \n```", "```\n1\n2\n3\n4\n5\n6\n7\n8\n\n```", "```\n struct Elf64_Sym_minimized {\n Elf64_Word st_name; \n unsigned char st_info; \n unsigned char st_other; \n Elf64_Half st_shndx; \n Elf64_Addr st_value;\n} Elf64_Sym; \n```", "```\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n```", "```\n struct nlist {\n char n_name[8];\n#if pdp11\n int n_type;\n#else\n char n_type;\n char n_other;\n short n_desc;\n#endif\n unsigned n_value;\n}; \n```", "```\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n```", "```\n struct syment {\n union {\n char _n_name[SYMNMLEN]; \n struct {\n long _n_zeroes; \n long _n_offset; \n } _n_n;\n } _n;\n unsigned long n_value; \n short n_scnum; \n unsigned short n_type; \n char n_sclass; \n char n_numaux; \n}; \n```", "```\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n```", "```\ntypedef struct {\n coff_long value;\n coff_int iss;\n coff_uint st : 6;\n coff_uint sc : 5;\n coff_uint reserved : 1;\n coff_uint index : 20;\n} SYMR, *pSYMR;\n typedef struct {\n SYMR asym;\n coff_uint jmptbl:1;\n coff_uint cobol_main:1;\n coff_uint weakext:1;\n coff_uint reserved:29;\n coff_int ifd;\n} EXTR, *pEXTR; \n```", "```\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n```", "```\n struct nlist {\n uint32_t n_strx;\n uint8_t n_type;\n uint8_t n_sect;\n int16_t n_desc;\n uint32_t n_value;\n};\n struct nlist_64 {\n uint32_t n_strx;\n uint8_t n_type;\n uint8_t n_sect;\n uint16_t n_desc;\n uint64_t n_value;\n}; \n```", "```\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n```", "```\n typedef struct {\n Elf32_Word\tsh_name;\n Elf32_Word\tsh_type;\n Elf32_Word\tsh_flags;\n Elf32_Addr\tsh_addr;\n Elf32_Off\tsh_offset;\n Elf32_Word\tsh_size;\n Elf32_Word\tsh_link;\n Elf32_Word\tsh_info;\n Elf32_Word\tsh_addralign;\n Elf32_Word\tsh_entsize;\n} Elf32_Shdr;\n typedef struct {\n Elf64_Word\tsh_name;\n Elf64_Word\tsh_type;\n Elf64_Xword\tsh_flags;\n Elf64_Addr\tsh_addr;\n Elf64_Off\tsh_offset;\n Elf64_Xword\tsh_size;\n Elf64_Word\tsh_link;\n Elf64_Word\tsh_info;\n Elf64_Xword\tsh_addralign;\n Elf64_Xword\tsh_entsize;\n} Elf64_Shdr; \n```", "```\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n```", "```\n// 32 bytes\nstruct Elf32_Shdr_minimized {\n Elf32_Word\tsh_name;\n Elf32_Word\tsh_type;    // Making this uint16_t and reordering it can decrease the size to 28 bytes\n Elf32_Word\tsh_flags;\n Elf32_Addr\tsh_addr;\n Elf32_Off\tsh_offset;\n Elf32_Word\tsh_size;\n uint8_t\tsh_addralign;\n uint8_t\tsh_entsize;\n Elf32_Half\tsh_link;\n Elf32_Half\tsh_info;\n};\n // 40 bytes\nstruct Elf64_Shdr_minimized {\n Elf64_Word sh_name;\n Elf64_Word sh_flags;\n Elf64_Addr sh_addr;\n Elf64_Off sh_offset;\n Elf64_Xword sh_size;\n Elf64_Half sh_type;\n uint8_t sh_addralign;\n uint8_t sh_entsize;\n Elf64_Half sh_link;\n Elf64_Half sh_info;\n}; \n```", "```\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n```", "```\n// COFF (System V Release 3), 40 bytes, when sizeof(long) == 4\nstruct scnhdr {\n char            s_name[8];      /* section name */\n long            s_paddr;        /* physical address */\n long            s_vaddr;        /* virtual address */\n long            s_size;         /* section size */\n long            s_scnptr;       /* file ptr to raw data for section */\n long            s_relptr;       /* file ptr to relocation */\n long            s_lnnoptr;      /* file ptr to line numbers */\n unsigned short  s_nreloc;       /* number of relocation entries */\n unsigned short  s_nlnno;        /* number of line number entries */\n long            s_flags;        /* flags */\n};\n // PE, 40 bytes\nstruct section {\n char Name[8];\n uint32_t VirtualSize;\n uint32_t VirtualAddress;\n uint32_t SizeOfRawData;\n uint32_t PointerToRawData;\n uint32_t PointerToRelocations;\n uint32_t PointerToLineNumbers;\n uint16_t NumberOfRelocations;\n uint16_t NumberOfLineNumbers;\n uint32_t Characteristics;\n}; \n```", "```\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n```", "```\n struct lineno {\n union {\n long l_symndx; \n long l_paddr; \n } l_addr;\n unsigned short l_lnno ; \n}; \n```", "```\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n```", "```\n struct section_64 {\n char sectname[16];\n char segname[16];\n uint64_t addr;\n uint64_t size;\n uint32_t offset;\n uint32_t align;\n uint32_t reloff;\n uint32_t nreloc;\n uint32_t flags;\n uint32_t reserved1; \n uint32_t reserved2; \n uint32_t reserved3;\n}; \n```", "```\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n```", "```\n typedef struct {\n Elf32_Addr r_offset;\n Elf32_Word r_info;\n} Elf32_Rel;\n typedef struct {\n Elf32_Addr r_offset;\n Elf32_Word r_info;\n Elf32_Sword r_addend;\n} Elf32_Rela;\n typedef struct {\n Elf64_Addr r_offset;\n Elf64_Xword r_info;\n} Elf64_Rel;\n typedef struct {\n Elf64_Addr r_offset;\n Elf64_Xword r_info;\n Elf64_Sxword r_addend;\n} Elf64_Rela; \n```", "```\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n```", "```\n struct relocation_info {\n int\t   r_address;\n unsigned r_symbolnum : 24,\n r_pcrel : 1,\n r_length : 2,\n r_extern : 1,\n r_pad : 4;\n}; \n```", "```\n1\n2\n3\n4\n5\n6\n\n```", "```\n struct reloc {\n long r_vaddr;\n long r_symndx;\n unsigned short r_type;\n}; \n```", "```\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n```", "```\n struct relocation_info {\n int32_t\tr_address; \n uint32_t     r_symbolnum:24, \n r_pcrel:1, \n r_length:2, \n r_extern:1, \n r_type:4; \n};\n struct scattered_relocation_info {\n#ifdef __BIG_ENDIAN__\n uint32_t r_scattered : 1, r_pcrel : 1, r_length : 2, r_type : 4,\n r_address : 24;\n#else\n uint32_t r_address : 24, r_type : 4, r_length : 2, r_pcrel : 1,\n r_scattered : 1;\n#endif\n int32_t r_value;\n}; \n```", "```\n1\n2\n3\n\n```", "```\n.stabs \"string\",type,other,desc,value\n.stabn type,other,desc,value\n.stabd type,other,desc\n\n```"]