["```\nshalt not         kill. | commit | steal. | bear | covet | covet\nThou shalt        not | not | not | not | not\nnor his           manservant, | maidservant, | ox, | ass,\nnot covet         thy | thy\ncovet thy         neighbours | neighbours\nthy neighbours    house, | wife,\nnot kill.         Thou\nkill. Thou        shalt\nnot commit        adultery.\n... \n```", "```\nimport collections, random, sys, textwrap\n\n# Build possibles table indexed by pair of prefix words (w1, w2) w1 = w2 = ''\npossibles = collections.defaultdict(list)\nfor line in sys.stdin:\n    for word in line.split():\n        possibles[w1, w2].append(word)\n        w1, w2 = w2, word\n\n# Avoid empty possibles lists at end of input possibles[w1, w2].append('')\npossibles[w2, ''].append('')\n\n# Generate randomized output (start with a random capitalized prefix) w1, w2 = random.choice([k for k in possibles if k[0][:1].isupper()])\noutput = [w1, w2]\nfor _ in range(int(sys.argv[1])):\n    word = random.choice(possibles[w1, w2])\n    output.append(word)\n    w1, w2 = w2, word\n\n# Print output wrapped to 70 columns print(textwrap.fill(' '.join(output))) \n```", "```\n$ python3 markov.py 100 <AliceInWonderland.txt \nA large rose-tree stood near the entrance of the cakes, and was\n... \n```"]