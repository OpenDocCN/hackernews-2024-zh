- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 15:23:01'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 15:23:01'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: IPv4 surcharge - Your AWS bill is going up this February | Border0
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IPv4 surcharge - Your AWS bill is going up this February | Border0
- en: 来源：[https://www.border0.com/blogs/ipv4-surcharge---your-aws-bill-is-going-up-this-february](https://www.border0.com/blogs/ipv4-surcharge---your-aws-bill-is-going-up-this-february)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.border0.com/blogs/ipv4-surcharge---your-aws-bill-is-going-up-this-february](https://www.border0.com/blogs/ipv4-surcharge---your-aws-bill-is-going-up-this-february)
- en: 'As of tomorrow, your AWS bill will go up! Effective February 1, 2024, there
    will be a charge of $0.005 per IP per hour for all public IPv4 addresses, whether
    attached to a service or not. That''s a total of $43.80 per year, a pretty hefty
    number! The reason for this is outlined in the [AWS announcement](https://aws.amazon.com/blogs/aws/new-aws-public-ipv4-address-charge-public-ip-insights/):'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 从明天开始，您的 AWS 账单将会上涨！自 2024 年 2 月 1 日起，每个公共 IPv4 地址每小时将收取 0.005 美元的费用，无论是否连接到服务。这总共是每年
    43.80 美元，一个相当可观的数字！其原因在 [AWS 公告](https://aws.amazon.com/blogs/aws/new-aws-public-ipv4-address-charge-public-ip-insights/)
    中已经概述：
- en: ‍
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: As you may know, IPv4 addresses are an increasingly scarce resource and the
    cost to acquire a single public IPv4 address has risen more than 300% over the
    past 5 years. This change reflects our own costs and is also intended to encourage
    you to be a bit more frugal with your use of public IPv4 addresses.
  id: totrans-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如您所知，IPv4 地址是一种日益稀缺的资源，过去 5 年里，获得单个公共 IPv4 地址的成本已经上涨了 300% 以上。这种变化反映了我们自身的成本，也旨在鼓励您更节俭地使用公共
    IPv4 地址。
- en: ‍
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: In this blog, I'll cover how you can save money on your AWS bill by eliminating
    unnecessary public IPv4 addresses using Border0\. But before we go there, let's
    look at how many IPv4 addresses Amazon has, how much that's worth, and how much
    AWS will make with this new charge to your monthly bill.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本博客中，我将介绍如何通过使用 Border0 来消除不必要的公共 IPv4 地址来节省 AWS 账单。但在我们继续之前，让我们看看亚马逊有多少个 IPv4
    地址，价值多少，以及 AWS 将通过对您的月度账单收取新费用赚取多少钱。
- en: ‍
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: How many IPv4 Addresses does AWS have?
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AWS 有多少个 IPv4 地址？
- en: ‍
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: Operating the Amazon infrastructure and keeping up with the incredible growth
    of AWS requires a massive amount of IP addresses. And so it comes as no surprise
    that over the years, Amazon has spent a lot of money acquiring an enormous number
    of IPv4  addresses. All so we can continue to spin up our ec2 instances, load
    balancers, and NAT gateways without worrying about IPv4 addresses.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 经营亚马逊基础设施并跟上 AWS 的惊人增长需要大量的 IP 地址。因此，不足为奇的是，多年来，亚马逊已经花费了大量资金来收购大量的 IPv4 地址。所有这些都是为了我们能够继续启动
    ec2 实例、负载均衡器和 NAT 网关而不用担心 IPv4 地址。
- en: ‍
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: To determine exactly how many IPv4 addresses Amazon has, we can look at various
    publicly available data sets. The data I used is the [AWS IP json](https://docs.aws.amazon.com/vpc/latest/userguide/aws-ip-ranges.html)
    and the various whois (ARIN, RIPE, etc) data entries.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要准确确定亚马逊有多少个 IPv4 地址，我们可以查看各种公开可用的数据集。我使用的数据是 [AWS IP json](https://docs.aws.amazon.com/vpc/latest/userguide/aws-ip-ranges.html)
    以及各种 whois（ARIN、RIPE 等）数据条目。
- en: ‍
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: '*Crunching all that data, we can determine that Amazon has at least 131,932,752
    IPv4 addresses.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*对所有这些数据进行处理，我们可以确定亚马逊至少拥有 1,319,327,520 个 IPv4 地址。'
- en: Let’s round that up, and say* ***132 Million IPv4 addresses****! That's the
    equivalent of almost eight /8's 😮* Curious about the data, and what IPv4 addresses
    were included? See [this link for the raw data.](https://gist.github.com/atoonk/0ee3f5bebcea874f6032215f16c3c30a)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将其四舍五入，说是* ***1.32 亿个 IPv4 地址****！这相当于近八个 /8 网段 😮* 想知道数据和包含的 IPv4 地址吗？请参阅[此链接获取原始数据。](https://gist.github.com/atoonk/0ee3f5bebcea874f6032215f16c3c30a)
- en: ‍
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: How much is the Amazon IPv4 estate worth?
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 亚马逊 IPv4 地产价值多少？
- en: ‍
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: IPv4 addresses are like digital real estate. These 32-bit integers have real
    monetary value and can be bought and sold. In fact, the price of IPv4 addresses
    has increased significantly over the last decade, and would have made an excellent
    investment if you got in early!
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: IPv4 地址就像数字房地产一样。这些 32 位整数具有实际货币价值，可以买卖。事实上，IPv4 地址的价格在过去十年里显著上涨，如果您早早介入，它们将是一项很好的投资！
- en: '[https://auctions.ipv4.global/prior-sales](https://auctions.ipv4.global/prior-sales)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://auctions.ipv4.global/prior-sales](https://auctions.ipv4.global/prior-sales)'
- en: ‍
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: 'So the next logical question is, how much is the Amazon IPv4 estate worth?
    Based on data from ipv4.global, the average price for an IPv4 address is currently
    ~35 dollars. With that data in hand, we can do our back-of-the-napkin math:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，下一个合乎逻辑的问题是，亚马逊的 IPv4 地产价值是多少？根据 ipv4.global 的数据，目前一个 IPv4 地址的平均价格约为 35 美元。有了这些数据，我们可以做一些简单的估算：
- en: ‍
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: ‍
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: '*So the approximate value of Amazon''s IPv4 estate today is about:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '*因此，亚马逊的 IPv4 地产今天的大约估值是：'
- en: ‍****$4.6 Billion dollars!*** Not too shabby!
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: ‍****46 亿美元！*** 也不算太糟糕！
- en: ‍
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: How much money will AWS make with the new IPv4 charge?
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AWS 将通过新的 IPv4 收费赚取多少钱？
- en: ‍
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: Speaking of dollars, let’s take a look if we can make an educated guess about
    how much AWS will make from the new IPv4 charge. For that, we need the price per
    IP and the number of IPv4 addresses in use by AWS customers.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 谈到美元，让我们看看我们是否可以对 AWS 从新的 IPv4 费用中赚取多少有一个合理的猜测。为此，我们需要每个 IP 的价格以及 AWS 客户使用的
    IPv4 地址数量。
- en: ‍
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: We know the first variable, $0.005 per IP per hour, or $43.80 per year per IPv4
    address. The second variable, the number of IPv4 addresses in use by AWS customers,
    is harder to determine. However, we can make some educated guesses for fun!
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道第一个变量，每个 IP 每小时 0.005 美元，或每年每个 IPv4 地址 43.80 美元。第二个变量，AWS 客户使用的 IPv4 地址数量，很难确定。但是，为了好玩，我们可以做一些有根据的猜测！
- en: ‍
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: As mentioned, the significant variable here is how many IP addresses are used
    at any given time by AWS customers. Let's explore a few scenarios, starting with
    a very conservative estimate, say 10% of the IPv4 addresses published in the [AWS
    JSON](https://docs.aws.amazon.com/vpc/latest/userguide/aws-ip-ranges.html) (79M
    IPv4 addresses) are used for a year. That's 7.9 Million IPv4 addresses x $43.80,
    almost $346 Million a year. At 25% usage, that's nearly $865 Million a year. And
    at 30% usage, that's a billion dollars!
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面所述，这里的一个重要变量是 AWS 客户在任何给定时间使用多少个 IP 地址。让我们探讨几种情况，从一个非常保守的估计开始，比如说，假设在一年内使用了
    [AWS JSON](https://docs.aws.amazon.com/vpc/latest/userguide/aws-ip-ranges.html)
    中发布的 IPv4 地址的 10%（7900 万个 IPv4 地址）。那就是 790 万个 IPv4 地址 x 43.80 美元，几乎是 3.46 亿美元每年。在
    25% 使用率下，几乎是每年 8.65 亿美元。而在 30% 使用率下，那就是十亿美元了！
- en: ‍
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: That gives us a pretty good indicator of the scale we’re talking about. Another
    approach is to try and measure it. How many IP addresses are alive within the
    AWS network right now? AWS conveniently publishes all addresses, so we could send
    an ICMP echo request (a ping) to all of them and measure how many send back an
    echo reply.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这给了我们一个相当好的规模指标。另一个方法是尝试进行测量。AWS 方便地发布了所有地址，所以我们可以向它们发送 ICMP 回显请求（ping），并测量多少个地址发送了回显响应。
- en: ‍
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: That sounded like a fun project! So I wrote a quick [program](https://github.com/atoonk/ping-aws-ips)
    that downloads the JSON with all the AWS IP addresses and filters out the categories
    "AMAZON," "EC2," and "GLOBAL ACCELERATOR." We're going to assume these are all
    the customer-used (charged) IP addresses. I.e., we're not going to ping services
    like Route53 Health Checks or Cloudfront as those won’t show up on your bill as
    an IPv4 charge.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 听起来像一个有趣的项目！所以我写了一个快速的 [程序](https://github.com/atoonk/ping-aws-ips)，它下载了所有 AWS
    IP 地址的 JSON，并过滤出了类别 "AMAZON"、"EC2" 和 "GLOBAL ACCELERATOR"。我们将假设这些都是所有客户使用（收费）的
    IP 地址。也就是说，我们不会 ping 诸如 Route53 健康检查或 Cloudfront 之类的服务，因为这些不会在您的账单上显示为 IPv4 费用。
- en: ‍
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: The program sends a single ICMP packet to all IP addresses and collects all
    the replies. With this, we have some actual measurement data, and we observe that
    we received a reply from roughly 6 Million IPv4 addresses.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 该程序向所有 IP 地址发送单个 ICMP 包，并收集所有回复。通过这个，我们有了一些实际的测量数据，并观察到我们从大约 600 万个 IPv4 地址收到了回复。
- en: 6 Million addresses x $43.80 is $ 263 Million annually!
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 六百万个地址 x 43.80 美元是 2.63 亿美元的年收入！
- en: ‍
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: That’s another good data point. However, remember that many ec2 instances and
    other services will have strict security groups and, by default, won't respond
    to a ping packet. So, it's fair to say that six million active IPs is the absolute
    minimum. The actual number of active IPv4 addresses could easily be double that
    given the various default security groups blocking ICMP.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这是另一个很好的数据点。但是，请记住，许多 ec2 实例和其他服务将具有严格的安全组，并且默认情况下不会响应 ping 包。因此，可以说六百万个活动 IP
    是绝对的最低限度。由于各种默认安全组阻止 ICMP，实际的活动 IPv4 地址数量可能很容易是这个数字的两倍。
- en: ‍
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: Given this data, I believe it's fair to say that ***AWS will likely make anywhere
    between $400 Million and $1 Billion dollars a year with this new IPv4 charge!***
    That's a nice bump for AWS, especially given that this was provided for free until
    today.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 根据这些数据，我认为可以说 ***AWS 有可能每年通过这项新的 IPv4 费用赚取 4 亿到 10 亿美元！*** 这对 AWS 来说是一个不错的增长，尤其是考虑到直到今天这项服务都是免费提供的。
- en: ‍
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: Lowering your AWS bill with Border0
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Border0 降低您的 AWS 账单
- en: Your AWS services, such as ec2 instances, may have public IPv4 addresses for
    a variety of reasons. One common reason is to have management access to your servers.
    For example, using SSH or RDP. Or to access the app running on your machine, like
    a database or HTTP application.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 您的 AWS 服务，比如 ec2 实例，可能有多个公共 IPv4 地址，原因有很多。一个常见的原因是为了管理服务器。例如，使用 SSH 或 RDP。或者访问在您的机器上运行的应用程序，比如数据库或
    HTTP 应用程序。
- en: ‍
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: Some of your applications should likely only be accessible to authorized users
    and, ideally, not connected directly to the Internet. For example, [recent Border0
    research](https://www.border0.com/blogs/help-my-postgres-database-was-compromised)
    showed that botnets are actively compromising publicly accessible Mysql and Postgres
    servers! You don't want these unprotected on the Internet for everyone to poke
    at.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你的一些应用可能只应该让授权用户访问，并且最好不直接连接到互联网。例如，[最近的 Border0 研究](https://www.border0.com/blogs/help-my-postgres-database-was-compromised)
    表明僵尸网络正在积极攻击公开可访问的 Mysql 和 Postgres 服务器！你不希望这些服务器在互联网上没有受保护，让所有人都能随意访问。
- en: ‍
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: 'Where possible, we recommend running your AWS infrastructure in a private subnet
    with only a NAT gateway for outbound Internet connectivity. This way, they''re
    shielded from the Internet, significantly reducing the risk of getting compromised.
    As a bonus, you save yourself the AWS IPv4 charge! (note: the charge is only for
    public IP addresses).'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在可能的情况下，我们建议在私有子网中运行您的 AWS 基础设施，只使用 NAT 网关进行出站互联网连接。这样，它们就不会暴露在互联网上，极大地降低了被攻击的风险。作为额外的好处，你还能省下
    AWS 的 IPv4 费用！（注意：这个费用仅适用于公共 IP 地址）。
- en: '[https://www.youtube.com/embed/NHR3Do4WhVU](https://www.youtube.com/embed/NHR3Do4WhVU)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.youtube.com/embed/NHR3Do4WhVU](https://www.youtube.com/embed/NHR3Do4WhVU)'
- en: VIDEO
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 视频
- en: With the deployment of a Border0 connector in your private network, you and
    the rest of your team can still access all services using just your existing Single
    Sign-on credentials without needing a VPN.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的私有网络中部署一个 Border0 连接器，你和你的团队就可以只使用现有的单点登录凭证来访问所有服务，而不需要 VPN。
- en: Deploying Border0 is [easier than you may think](https://youtu.be/e0KeS5x-GZ0)!
    Curious to give it a try? Check out our [terraform example](https://www.border0.com/blogs/border0-terraform-provider)
    or this [blog on Border0 for AWS](https://www.border0.com/blogs/elevating-security-and-simplifying-aws-access-with-border0).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 部署 Border0 比你想的要 [简单得多](https://youtu.be/e0KeS5x-GZ0)！想试试吗？看看我们的 [terraform
    示例](https://www.border0.com/blogs/border0-terraform-provider) 或者这篇关于 Border0 for
    AWS 的 [博客](https://www.border0.com/blogs/elevating-security-and-simplifying-aws-access-with-border0)
    吧。
- en: ‍
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
- en: Border0 offers [a generous free tier](https://portal.border0.com/register),
    and getting started is easy!
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Border0 提供 [慷慨的免费套餐](https://portal.border0.com/register)，入门简单！
- en: With Border0, access is easier and more secure; your engineers and security
    team will love it. And, since you're saving on public IPs, your FinOps folks will
    be happy, too!
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Border0，访问更容易、更安全；你的工程师团队和安全团队会喜欢它。而且，由于节省了公共 IP 地址，你的 FinOps 人员也会很高兴！
- en: ‍
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: ‍
