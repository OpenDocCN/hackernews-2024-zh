- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: Êú™ÂàÜÁ±ª'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:42:04'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: You can‚Äôt follow me
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Êù•Ê∫êÔºö[https://so.nwalsh.com/2024/01/06-mastodon](https://so.nwalsh.com/2024/01/06-mastodon)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A few days ago, I stumbled over a couple of weblog posts that talked about adding
    [Mastodon](https://en.wikipedia.org/wiki/Mastodon_(social_network)) to (mostly)
    static sites. I thought that sounded kind of‚ÄúKind of cool.‚Äù Always a bad sign!
    cool.
  prefs: []
  type: TYPE_NORMAL
- en: So, I poked at things a bit. If I was serious about implementing a full-fleged
    [ActivityPub](https://en.wikipedia.org/wiki/ActivityPub) client or server, I‚Äôd
    dig in and work out what other implementors use for testing environments, I‚Äôd
    read the specifications, etc.
  prefs: []
  type: TYPE_NORMAL
- en: 'But this looked like low(er) hanging fruit, and I thought I might get it working
    with just a bit of fun hacking. I think the problem can be broken down into just
    a few steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Publish a ‚Äú[WebFinger](https://en.wikipedia.org/wiki/WebFinger)‚Äù endpoint (easy).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Support a user, with an inbox and an outbox.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Handle ‚Äúfollow‚Äù and ‚Äúunfollow‚Äù messages on the inbox.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Publish posts to followers in the outbox.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: I assume that replies get sent back to the inbox as posts, though I can‚Äôt actually
    prove that to myself with a few minutes of casual web searching.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The first hurdle is that all of the communcations have to be HTTPS, which [is
    inconvenient](/2023/12/31-https) for testing purposes. Then there was a fair bit
    of effort necessary to get [better isolation](/2024/01/06-isolation) for the test
    rig.
  prefs: []
  type: TYPE_NORMAL
- en: Once I had that up and running, I could fire up [a Mastodon server](https://github.com/martinheinz/mastodon-local)
    on my laptop. But could it follow my test weblog?
  prefs: []
  type: TYPE_NORMAL
- en: Pointing my Mastodon instance at `@so@sotest.nwalsh.com` was fine. It hit the
    webfinger endpoint, hit the user endpoint, and posted something to the inbox.
    Fantastic! Next, I edited a few things to get some more debugging details about
    the messages being sent to my endpoints, deployed those changes, went back to
    the Mastodon instance and tried again.
  prefs: []
  type: TYPE_NORMAL
- en: Nothing happened. I mean, the Mastodon instance was happy to show me the user
    to follow, but it didn‚Äôt actually hit the endpoints again.
  prefs: []
  type: TYPE_NORMAL
- en: I spent *a long time* poking about at the various places in the Mastodon server
    were caching could be performed. I ran the ‚Äúcache clear‚Äù tasks, I fussed with
    the `nginx` configuration to turn off proxy caching, I did everything I could
    think of. To no avail.
  prefs: []
  type: TYPE_NORMAL
- en: I was frustrated, but I discovered that I could make something happen by clicking
    ‚ÄúFollow‚Äù so I dug in there a bit.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next up: we‚Äôve got all these digital signatures to deal with. There are examples
    on the web of the sorts of things that need to be done, but all the ones I could
    find were in [TypeScript](https://en.wikipedia.org/wiki/TypeScript). That‚Äôs a
    hurdle I didn‚Äôt feel like trying to overcome today.'
  prefs: []
  type: TYPE_NORMAL
- en: And then I realized that to validate the signature, I‚Äôd have to hit the endpoint
    of the user attempting to follow me, e.g., `https://localhost/user/admin`, to
    get the user‚Äôs public key.
  prefs: []
  type: TYPE_NORMAL
- en: Well ü§¨! ü§¨! ü§¨! ü§¨!
  prefs: []
  type: TYPE_NORMAL
- en: There‚Äôs no way that‚Äôs going to work from my `sotest` server on a different host.
    So to test this, I‚Äôd need *both* ends of the communcation to be on the public
    internet with proper certificates. And I‚Äôd have to work out how to disable caching.
    And I‚Äôd have to reverse-engineer some TypeScript (or work out how to use TypeScript).
  prefs: []
  type: TYPE_NORMAL
- en: I gave myself a day to see if I could make progress. I did not. (At least, not
    the kind of progress I was hoping to make.)
  prefs: []
  type: TYPE_NORMAL
- en: I officially give up. (At least for now.)
  prefs: []
  type: TYPE_NORMAL
