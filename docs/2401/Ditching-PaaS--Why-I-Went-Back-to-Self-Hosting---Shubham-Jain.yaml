- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:53:26'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:53:26'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Ditching PaaS: Why I Went Back to Self-Hosting | Shubham Jain'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 放弃PaaS：为什么我转回自托管 | Shubham Jain
- en: 来源：[https://shubhamjain.co/2023/01/18/ditching-paas-why-i-went-back-to-self-hosting/](https://shubhamjain.co/2023/01/18/ditching-paas-why-i-went-back-to-self-hosting/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://shubhamjain.co/2023/01/18/ditching-paas-why-i-went-back-to-self-hosting/](https://shubhamjain.co/2023/01/18/ditching-paas-why-i-went-back-to-self-hosting/)
- en: I had never been a fan of devops/server-admin work. The sheer number of headaches
    involved in setting up the services, configuring them, automating them, and ensuring
    their reliability were just annoying and time-consuming.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我从来不是devops/服务器管理员工作的粉丝。设置服务、配置服务、自动化服务以及确保其可靠性所涉及的头痛数量实在令人讨厌且耗时。
- en: PaaS offerings like Heroku, AWS—and later—Railway, and Render, were appealing
    options out of this mess. I could do everything from the web interface and didn’t
    have to run a bunch of commands now and then. I switched to PaaS when they started
    to look affordable and didn’t look back for many years.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: PaaS提供商像Heroku、AWS——以及后来的Railway和Render，都是这个混乱局面中的吸引人的选择。我可以通过Web界面做任何事情，不必一次又一次地运行一堆命令。当它们开始看起来价格合适时，我就转向了PaaS，并且多年来都没有回头。
- en: In recent times, my opinion about self-hosting has changed. Instead of paying
    for multiple services, I am now renting a decently sized VPS on Scaleway, and
    hosting all my projects on them. It’s been three months, and it has been working
    out great for me.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，我对自托管的看法发生了变化。现在，我不再支付多个服务的费用，而是在Scaleway租用了一个体积不小的VPS，并将所有项目托管在上面。已经过去了三个月，对我来说一切都很顺利。
- en: 'Why did I make the switch? Two things happened: I started seeing the disadvantages
    of using PaaS. I also started seeing self-hosting in a more positive light.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我为什么要做出这个改变？发生了两件事情：我开始看到使用PaaS的缺点。我也开始更积极地看待自托管。
- en: 'Here’s why PaaS soured on me:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么我对PaaS产生了厌恶的原因：
- en: '**PaaS can become very costly:** The big advantage of PaaS is that you can
    start any service (website, database, cache) with a click of a button. But this
    can also come to bite you when it comes to the cost. No matter how small is the
    service, no matter how rarely you need it, you’d need to pay the full price. Say,
    for a service you need a cache, a web app, and a database. The cost can quickly
    mount to $20-40 a month.'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**PaaS可能变得非常昂贵：** PaaS的最大优势是你可以通过点击按钮启动任何服务（网站、数据库、缓存）。但是当涉及到成本时，这也可能成为一个问题。无论服务有多小，无论你多么少需要它，你都需要支付全部费用。比如，对于一个需要缓存、Web应用和数据库的服务，成本很快就可以达到每月20-40美元。'
- en: My biggest beef with this model was the need to pay for a separate service even
    when I just needed to host a simple API or a cron job.
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我对这种模式最大的抱怨是，即使我只需要托管一个简单的API或cron作业，我也需要为一个单独的服务付费。
- en: This might not matter if you’re already making money, but right now, a single
    server fits better for my needs.
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你已经开始赚钱，这可能并不重要，但现在，一个单独的服务器更适合我的需求。
- en: '**PaaS takes away your flexibility:** PaaS looks like a good option if you’re
    just concerned with a particular task/service, but sometimes, you also want to
    use the compute to run cron jobs, run background jobs, or host a small service.
    With PaaS, you don’t have the flexibility to do so. I hack a lot of projects,
    and being limited by the options PaaS offered felt annoying.'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**PaaS带走了你的灵活性：** 如果你只关心特定的任务/服务，PaaS看起来是一个不错的选择，但有时候，你也想利用计算资源来运行cron作业、后台作业，或者托管一个小型服务。使用PaaS时，你就没有这样的灵活性。我做了很多项目，受限于PaaS提供的选项感觉很烦人。'
- en: '**PaaS offers low compute for the price:** This is a no-brainer. PaaS is always
    going to offer less for the same price, but what surprised me was how start the
    difference can be. On Render.com, a 4GB RAM and 2vCPU service costs $85/mo. The
    same spec costs $14/mo on Scaleway (ARM). Granted, I don’t need to start with
    a high-spec machine, but having so less compute for the same price started to
    feel like an unattractive option.'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**PaaS提供的计算性价比低：** 这是显而易见的。相同价格的情况下，PaaS总是提供更少的资源，但让我惊讶的是差距会有多大。在Render.com上，一个4GB
    RAM和2vCPU的服务价格是每月85美元。在Scaleway（ARM）上，相同规格的服务价格是每月14美元。当然，我不需要从一个高规格的机器开始，但是以相同价格获得如此少的计算资源开始变得不那么吸引人了。'
- en: At the same time, I started seeing self-hosting more favorably.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 与此同时，我开始更看好自托管。
- en: '**Self-hosting has Become Easier:** My dislike for self-hosting stemmed from
    the pain of setting up different services (nginx, postgres, redis). Each involved
    a separate set of commands. Not only I had to ensure that each service was configured
    correctly, I had to make sure they started up automatically during the server
    restarts. Bash scripts were the only tool I used. And boy, they were a mess.'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**自托管变得更容易：** 我对自托管的厌恶源自于设置不同服务（nginx、postgres、redis）的痛苦。每个服务都涉及一组单独的命令。我不仅要确保每个服务都配置正确，还要确保它们在服务器重新启动时自动启动。我唯一使用的工具是
    Bash 脚本。而且，它们一团糟。'
- en: With docker, this has become way, way easier. I only need to setup `docker-compose.yml`
    and use containers that devs have already built for almost all services. The containers
    handle most of the heavy work, so I don’t have to mess with configurations.
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有了 Docker，这变得简单得多了。我只需要设置 `docker-compose.yml` 并使用开发人员已经为几乎所有服务构建的容器。容器处理大部分繁重的工作，所以我不必去搞配置。
- en: Caddy was another tool that surprised me positively. It has a leaner config
    syntax than nginx and comes with automatic HTTPS.
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Caddy 是另一个让我惊喜的工具。它具有比 nginx 更精简的配置语法，并带有自动 HTTPS。
- en: Github Actions is another addition that made the automation part simple. Earlier
    automating things from your repo involved setting up webhooks and creating listeners
    on your server. Now, it can be done with ‘.yml’ file
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Github Actions 是另一个使自动化部分变得简单的新增功能。以前，从您的存储库自动化事务涉及设置 Webhooks 并在您的服务器上创建监听器。现在，它可以通过
    '.yml' 文件完成。
- en: The new tooling has made self-hosting way easier than it was before.
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 新的工具使自托管比以前更容易。
- en: '**Self-hosting has become more reliable:** Because of docker, self-hosting
    has also become way more reliable than it was before. You don’t have to worry
    about a service eating up all your RAM. You can configure it. Ensuring everything
    starts up automatically during restarts is as easy as, `sudo systemctl enable
    docker`.'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**自托管变得更可靠：** 由于 Docker，自托管也变得比以前可靠得多。您不必担心某个服务占用所有内存。您可以对其进行配置。确保在重新启动期间一切都自动启动的方法就像这样简单，`sudo
    systemctl enable docker`。'
- en: '`docker logs` is a single command to access a service’s logs. Way better alternative
    than fiddling with log.d directories.'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`docker logs` 是访问服务日志的单个命令。比与 log.d 目录摆弄要好得多的替代方案。'
- en: Bot attacks were another headache. One can now use Cloudflare to deter most
    of these attacks (even on the free plan).
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 机器人攻击是另一个头疼的问题。现在可以使用 Cloudflare 来阻止大部分这些攻击（甚至在免费计划中）。
- en: Keeping services running reliably seems way easier now.
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在保持服务可靠运行似乎要容易得多。
- en: '**Flexibility is awesome:** Being able to host any service, or run any job,
    just by updating a few files, feels way easier than creating a new service on
    PaaS platforms.'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**灵活性很棒：** 通过更新几个文件即可托管任何服务或运行任何作业，感觉比在 PaaS 平台上创建新服务要容易得多。'
- en: On the negative side, having a single machine creates a single point of failure.
    Creating failover instances, or things like automated backups and recovery, is
    still something I need to figure out. Probably, it’s not that simple with self-hosting.
    However, depending on what you’re building you can be a little flexible with the
    requirement.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在负面方面，拥有单一机器会造成单一故障点。创建故障转移实例或诸如自动备份和恢复之类的事情，仍然是我需要解决的问题。可能，对于自托管来说并不那么简单。但是，根据您要构建的内容，您可以在要求上有些灵活性。
- en: Conclusion
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: I think self-hosting is a better option when you’re in the hacker stage and
    haven’t yet started making money. The big advantage is the ability to explore
    multiple different ideas on the same machine. Of course, this also depends on
    your level of comfort with Linux and the command line. Docker makes things easier
    but it still requires working knowledge of server administration.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为，在您处于黑客阶段并且尚未开始赚钱时，自托管是更好的选择。最大的优势是能够在同一台机器上探索多种不同的想法。当然，这也取决于您对 Linux 和命令行的舒适程度。Docker
    使事情变得更简单，但仍需要对服务器管理有工作知识。
- en: I found a good fit with self-hosting, and if you are like me, who wrote it off
    years ago, maybe it’s time to give it another try.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我发现自托管与我非常匹配，如果你像我一样，多年前已经放弃了它，也许是时候重新尝试一下了。
- en: '* * *'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
