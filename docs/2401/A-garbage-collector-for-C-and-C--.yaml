- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-27 14:59:37'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024年05月27日14:59:37
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: A garbage collector for C and C++
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个用于C和C++的垃圾收集器。
- en: 来源：[https://hboehm.info/gc/](https://hboehm.info/gc/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://hboehm.info/gc/](https://hboehm.info/gc/)
- en: A garbage collector for C and C++
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个用于C和C++的垃圾收集器。
- en: '[ This is an updated version of the page formerly at `http://www.hpl.hp.com/personal/Hans_Boehm/gc`,
    and before that at `http://reality.sgi.com/boehm/gc.html` and before that at `ftp://parcftp.xerox.com/pub/gc/gc.html`.
    ]'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[ 这是该页面更新后的版本，前身分别是位于`http://www.hpl.hp.com/personal/Hans_Boehm/gc`、`http://reality.sgi.com/boehm/gc.html`以及`ftp://parcftp.xerox.com/pub/gc/gc.html`。]'
- en: The [Boehm](http://www.hboehm.info)-[Demers](http://www.cs.cornell.edu/annual_report/00-01/bios.htm#demers)-[Weiser](http://www-sul.stanford.edu/weiser/)
    conservative garbage collector can be used as a garbage collecting replacement
    for C `malloc` or C++ `new`. It allows you to allocate memory basically as you
    normally would, without explicitly deallocating memory that is no longer useful.
    The collector automatically recycles memory when it determines that it can no
    longer be otherwise accessed. A simple example of such a use is given [here](simple_example.html).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[Boehm](http://www.hboehm.info)-[Demers](http://www.cs.cornell.edu/annual_report/00-01/bios.htm#demers)-[Weiser](http://www-sul.stanford.edu/weiser/)
    保守垃圾收集器可以用作C的`malloc`或C++的`new`的垃圾收集替代。它允许您基本上像通常一样分配内存，而无需显式释放不再有用的内存。当收集器确定无法再访问内存时，它会自动回收内存。有一个这样的用法的简单示例在[这里](simple_example.html)。'
- en: The collector is also used by a number of programming language implementations
    that either use C as intermediate code, want to facilitate easier interoperation
    with C libraries, or just prefer the simple collector interface. For a more detailed
    description of the interface, see [here](gcinterface.html).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 该收集器还被许多编程语言实现所使用，这些语言要么使用C作为中间代码，要么希望更轻松地与C库进行交互，要么只是更喜欢简单的收集器界面。有关接口的更详细描述，请参见[这里](gcinterface.html)。
- en: Alternatively, the garbage collector may be used as a [leak detector](leak.html)
    for C or C++ programs, though that is not its primary goal.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，垃圾收集器可以用作C或C++程序的[泄漏检测器](leak.html)，尽管这不是其主要目标。
- en: The arguments for and against conservative garbage collection in C and C++ are
    briefly discussed in [issues.html](issues.html). The beginnings of a frequently-asked-questions
    list are [here](faq.html).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 简要讨论了在C和C++中支持保守垃圾收集的利弊，见[issues.html](issues.html)。[这里](faq.html)有一个常见问题列表的开头。
- en: Empirically, this collector works with most unmodified C programs, simply by
    replacing `malloc` with `GC_malloc` calls, replacing `realloc` with `GC_realloc`
    calls, and removing free calls. Exceptions are discussed in [issues.html](issues.html).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 根据经验，通过仅将`malloc`替换为`GC_malloc`调用，将`realloc`替换为`GC_realloc`调用，并删除free调用，该收集器可以与大多数未经修改的C程序一起使用。有关例外情况，请参阅[issues.html](issues.html)。
- en: Many versions are available in the [`gc_source`](gc_source) subdirectory. Currently
    a recent stable version is [`gc-8.2.4.tar.gz`](gc_source/gc-8.2.4.tar.gz). Note
    that this uses the new version numbering scheme and may occasionally require a
    separate `libatomic_ops` download (see below).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 许多版本可在[`gc_source`](gc_source)子目录中找到。当前一个最新的稳定版本是[`gc-8.2.4.tar.gz`](gc_source/gc-8.2.4.tar.gz)。请注意，这使用了新的版本编号方案，可能偶尔需要单独下载`libatomic_ops`（请参见下文）。
- en: If that fails, try the latest explicitly numbered version in [`gc_source`](gc_source).
    Later versions may contain additional features, platform support, or bug fixes,
    but are likely to be less well tested.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果失败，请尝试[`gc_source`](gc_source)中的最新明确编号版本。后续版本可能包含其他功能、平台支持或错误修复，但可能测试不够充分。
- en: Version 7.3 and later require that you download a corresponding version of libatomic_ops,
    which should be available in [`https://github.com/ivmai/libatomic_ops/wiki/Download`](https://github.com/ivmai/libatomic_ops/wiki/Download).
    The current (stable) version is also available as [`gc_source/libatomic_ops-7.8.0.tar.gz`](gc_source/libatomic_ops-7.8.0.tar.gz).
    You will need to place that in a `libatomic_ops` subdirectory.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 版本7.3及更高版本要求您下载相应版本的libatomic_ops，可在[`https://github.com/ivmai/libatomic_ops/wiki/Download`](https://github.com/ivmai/libatomic_ops/wiki/Download)找到。当前（稳定）版本也可作为[`gc_source/libatomic_ops-7.8.0.tar.gz`](gc_source/libatomic_ops-7.8.0.tar.gz)获得。您需要将其放置在`libatomic_ops`子目录中。
- en: Previously it was best to use corresponding versions of gc and libatomic_ops,
    but for recent versions, it should be OK to mix and match them.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 以前最好使用相应版本的gc和libatomic_ops，但对于最近的版本，混合使用它们应该没问题。
- en: Starting with 8.0, libatomic_ops is only required if the compiler does not understand
    gcc's C atomic intrinsics.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 从 8.0 版本开始，只有当编译器不理解 gcc 的 C 原子内在函数时才需要 libatomic_ops。
- en: The development version of the GC source code now resides on github, along with
    the downloadable packages. The GC tree itself is at [`https://github.com/ivmai/bdwgc/`](https://github.com/ivmai/bdwgc/).
    The `libatomic_ops` tree required by the GC is at [`https://github.com/ivmai/libatomic_ops/`](https://github.com/ivmai/libatomic_ops/).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: GC 源代码的开发版本现在存放在 github 上，以及可下载的软件包。GC 树本身位于 [`https://github.com/ivmai/bdwgc/`](https://github.com/ivmai/bdwgc/)。GC
    所需的 `libatomic_ops` 树位于 [`https://github.com/ivmai/libatomic_ops/`](https://github.com/ivmai/libatomic_ops/)。
- en: 'To build a working version of the collector, you will need to do something
    like the following, where `D` is the absolute path to an installation directory:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建垃圾回收器的工作版本，您需要执行类似以下的操作，其中 `D` 是安装目录的绝对路径：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This will require that you have C and C++ toolchains, `git`, `automake`, `autoconf`,
    and `libtool` already installed.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这将需要你已经安装了 C 和 C++ 的工具链，`git`，`automake`，`autoconf` 和 `libtool`。
- en: Historical versions of the source can still be found on the SourceForge site
    (project "bdwgc") [here](http://bdwgc.cvs.sourceforge.net/bdwgc/).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 历史版本的源代码仍然可以在 SourceForge 网站上找到（项目“bdwgc”）[这里](http://bdwgc.cvs.sourceforge.net/bdwgc/)。
- en: The garbage collector code is copyrighted by [Hans-J. Boehm](http://hboehm.info),
    Alan J. Demers, [Xerox Corporation](http://www.xerox.com), [Silicon Graphics](http://www.sgi.com),
    and [Hewlett-Packard Company](http://www.hp.com). It may be used and copied without
    payment of a fee under minimal restrictions. See the README file in the distribution
    or the [license](license.txt) for more details. **IT IS PROVIDED AS IS, WITH ABSOLUTELY
    NO WARRANTY EXPRESSED OR IMPLIED. ANY USE IS AT YOUR OWN RISK**.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 垃圾回收器代码版权归[Hans-J. Boehm](http://hboehm.info)，Alan J. Demers，[Xerox Corporation](http://www.xerox.com)，[Silicon
    Graphics](http://www.sgi.com)和[Hewlett-Packard Company](http://www.hp.com)所有。它可以在最小限制下免费使用和复制，无需支付费用。请参阅分发中的
    README 文件或[许可证](license.txt)以获取更多详细信息。**它按原样提供，绝对没有明示或暗示的任何保证。任何使用都是自担风险**。
- en: The collector is not completely portable, but the distribution includes ports
    to most standard PC and UNIX/Linux platforms. The collector should work on Linux,
    *BSD, recent Windows versions, MacOS X, HP/UX, Solaris, Tru64, Irix and a few
    other operating systems. Some ports are more polished than others. There are [instructions](porting.html)
    for porting the collector to a new platform.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 回收器并不是完全可移植的，但分发版包括对大多数标准 PC 和 UNIX/Linux 平台的端口。回收器应该可以在 Linux，*BSD，最新版本的 Windows，MacOS
    X，HP/UX，Solaris，Tru64，Irix 和其他一些操作系统上工作。某些端口比其他端口更加完善。有[说明](porting.html)可以将回收器移植到新平台上。
- en: Irix pthreads, Linux threads, Win32 threads, Solaris threads (old style and
    pthreads), HP/UX 11 pthreads, Tru64 pthreads, and MacOS X threads are supported
    in recent versions.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Irix pthreads，Linux threads，Win32 threads，Solaris threads（旧版和pthreads），HP/UX
    11 pthreads，Tru64 pthreads 和 MacOS X threads 在最新版本中受支持。
- en: Separately distributed ports
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 单独分发的端口
- en: For MacOS 9/Classic use, Patrick Beard's latest port were once available from
    `http://homepage.mac.com/pcbeard/gc/`.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 MacOS 9/Classic 版本的使用，Patrick Beard 的最新版本曾经可以从`http://homepage.mac.com/pcbeard/gc/`获取。
- en: Several Linux and BSD versions provide prepacked versions of the collector.
    The Debian port can be found at [https://packages.debian.org/sid/libgc-dev](https://packages.debian.org/sid/libgc-dev).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 几个 Linux 和 BSD 版本提供了垃圾回收器的预打包版本。Debian 版本可在[https://packages.debian.org/sid/libgc-dev](https://packages.debian.org/sid/libgc-dev)找到。
- en: Kenjiro Taura, Toshio Endo, and Akinori Yonezawa developed a parallel collector
    based on this one. It was once available from `http://www.yl.is.s.u-tokyo.ac.jp/gc/`
    Their collector takes advantage of multiple processors during a collection. Starting
    with collector version 6.0alpha1 we also do this, though with more modest processor
    scalability goals. Our approach is discussed briefly in [`scale.html`](scale.html).
    The collector uses a [mark-sweep](complexity.html) algorithm. It provides incremental
    and generational collection under operating systems which provide the right kind
    of virtual memory support. (Currently this includes SunOS[45], IRIX, OSF/1, Linux,
    and Windows, with varying restrictions.) It allows [*finalization*](finalization.html)
    code to be invoked when an object is collected. It can take advantage of type
    information to locate pointers if such information is provided, but it is usually
    used without such information. ee the README and `gc.h` files in the distribution
    for more details.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 田浦健次郎、遠藤利郎和米澤彰則基于此开发了一个并行收集器。曾经可以从`http://www.yl.is.s.u-tokyo.ac.jp/gc/`获取。他们的收集器在收集过程中利用多个处理器。从收集器版本6.0alpha1开始，我们也采取了这种方法，尽管目标是更为温和的处理器可伸缩性。我们的方法在[`scale.html`](scale.html)中简要讨论。该收集器使用[标记-清除](complexity.html)算法。在提供正确类型的虚拟内存支持的操作系统下，它提供增量和分代收集。
    （目前包括SunOS[45]，IRIX，OSF/1，Linux和Windows，具体取决于不同的限制。）它允许在对象被收集时调用[*finalization*](finalization.html)代码。如果提供了此类信息，它可以利用类型信息来定位指针，但通常在没有此类信息的情况下使用。有关更多详细信息，请参阅分发中的README和`gc.h`文件。
- en: For an overview of the implementation, see [here](gcdescr.html).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解实现概述，请参见[这里](gcdescr.html)。
- en: The garbage collector distribution includes a C string ([*cord*](gc_source/cordh.txt))
    package that provides for fast concatenation and substring operations on long
    strings. A simple curses- and win32-based editor that represents the entire file
    as a cord is included as a sample application.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 垃圾收集器分发包含一个C字符串（[*cord*](gc_source/cordh.txt)）包，该包提供了对长字符串的快速连接和子字符串操作。包含一个简单的基于curses和win32的编辑器，该编辑器将整个文件表示为一个cord，并作为示例应用程序包含在内。
- en: Performance of the nonincremental collector is typically competitive with malloc/free
    implementations. Both space and time overhead are likely to be only slightly higher
    for programs written for malloc/free (see Detlefs, Dosser and Zorn's [Memory Allocation
    Costs in Large C and C++ Programs](ftp://ftp.cs.colorado.edu/pub/techreports/zorn/CU-CS-665-93.ps.Z).)
    For programs allocating primarily very small objects, the collector may be faster;
    for programs allocating primarily large objects it will be slower. If the collector
    is used in a multithreaded environment and configured for thread-local allocation,
    it may in some cases significantly outperform malloc/free allocation in time.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 非增量收集器的性能通常与malloc/free实现竞争力相当。对于为malloc/free编写的程序，空间和时间开销可能略高。 （请参阅Detlefs，Dosser和Zorn的[大型C和C++程序的内存分配成本](ftp://ftp.cs.colorado.edu/pub/techreports/zorn/CU-CS-665-93.ps.Z)。）对于主要分配非常小对象的程序，收集器可能更快；对于主要分配大对象的程序，它将更慢。如果在多线程环境中使用收集器，并配置为线程本地分配，则在某些情况下，它的性能可能显著优于malloc/free分配。
- en: We also expect that in many cases any additional overhead will be more than
    compensated for by decreased copying etc. if programs are written and tuned for
    garbage collection.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还期望在许多情况下，通过为垃圾收集编写和调整程序，任何额外的开销都将被减少的复制等所补偿。
- en: '**The beginnings of a frequently asked questions list for this collector are
    [here](faq.html)**.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**针对此收集器的常见问题列表的开端在[此处](faq.html)**。'
- en: '**The following provide information on garbage collection in general**:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**以下提供了垃圾收集的一般信息**：'
- en: Paul Wilson's [garbage collection ftp archive](ftp://ftp.cs.utexas.edu/pub/garbage)
    and [GC survey](ftp://ftp.cs.utexas.edu/pub/garbage/gcsurvey.ps).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Paul Wilson的[垃圾回收ftp存档](ftp://ftp.cs.utexas.edu/pub/garbage)和[GC调查](ftp://ftp.cs.utexas.edu/pub/garbage/gcsurvey.ps)。
- en: The Ravenbrook [Memory Management Reference](http://www.memorymanagement.org/).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Ravenbrook的[内存管理参考](http://www.memorymanagement.org/)。
- en: David Chase's [GC FAQ](http://www.iecc.com/gclist/GC-faq.html).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: David Chase的[GC常见问题解答](http://www.iecc.com/gclist/GC-faq.html)。
- en: Richard Jones' [GC page](http://www.ukc.ac.uk/computer_science/Html/Jones/gc.html)
    and [his book](//www.cs.kent.ac.uk/people/staff/rej/gcbook/gcbook.html).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Richard Jones的[GC页面](http://www.ukc.ac.uk/computer_science/Html/Jones/gc.html)和[他的书](//www.cs.kent.ac.uk/people/staff/rej/gcbook/gcbook.html)。
- en: '**The following papers describe the collector algorithms we use and the underlying
    design decisions at a higher level.**'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**以下论文描述了我们使用的收集器算法和更高层次的基本设计决策。**'
- en: (Some of the lower level details can be found [here](gcdescr.html).)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: (一些较低级别的细节可以在[gcdescr.html](gcdescr.html)中找到。)
- en: The first one is not available electronically due to copyright considerations.
    Most of the others are subject to ACM copyright.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个由于版权问题无法电子获取。其他大部分都受到ACM版权保护。
- en: Boehm, H., "Dynamic Memory Allocation and Garbage Collection", *Computers in
    Physics 9*, 3, May/June 1995, pp. 297-303\. This is directed at an otherwise sophisticated
    audience unfamiliar with memory allocation issues. The algorithmic details differ
    from those in the implementation. There is a related letter to the editor and
    a minor correction in the next issue.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Boehm, H., "动态内存分配和垃圾回收", *《物理学中的计算机》9期*, 1995年5月/6月, 第297-303页。这是针对一个对内存分配问题不熟悉的复杂受众的。算法细节与实现中的不同。下一期有相关的编辑信和一个小的修正。
- en: Boehm, H., and [M. Weiser](http://www.ubiq.com/hypertext/weiser/weiser.html),
    ["Garbage Collection in an Uncooperative Environment"](../spe_gc_paper), *Software
    Practice & Experience*, September 1988, pp. 807-820.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Boehm, H., 和 [M. Weiser](http://www.ubiq.com/hypertext/weiser/weiser.html),
    ["不合作环境中的垃圾回收"](../spe_gc_paper), *《软件实践与经验》*, 1988年9月, 第807-820页。
- en: Boehm, H., A. Demers, and S. Shenker, ["Mostly Parallel Garbage Collection"](papers/pldi91.ps.Z),
    Proceedings of the ACM SIGPLAN '91 Conference on Programming Language Design and
    Implementation, *SIGPLAN Notices 26*, 6 (June 1991), pp. 157-164.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Boehm, H., A. Demers, 和 S. Shenker, ["大部分并行垃圾收集"](papers/pldi91.ps.Z), 《ACM
    SIGPLAN '91程序设计语言设计与实现会议论文集》，*SIGPLAN通知 26期*, 6 (1991年6月), 第157-164页。
- en: Boehm, H., ["Space Efficient Conservative Garbage Collection"](papers/pldi93.ps.Z),
    Proceedings of the ACM SIGPLAN '93 Conference on Programming Language Design and
    Implementation, *SIGPLAN Notices 28*, 6 (June 1993), pp. 197-206.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Boehm, H., ["空间高效的保守式垃圾收集"](papers/pldi93.ps.Z), 《ACM SIGPLAN '93程序设计语言设计与实现会议论文集》，*SIGPLAN通知
    28期*, 6 (1993年6月), 第197-206页。
- en: Boehm, H., "Reducing Garbage Collector Cache Misses", *Proceedings of the 2000
    International Symposium on Memory Management* . [Official version.](http://portal.acm.org/citation.cfm?doid=362422.362438)
    [Technical report version.](http://www.hpl.hp.com/techreports/2000/HPL-2000-99.html)
    Describes the prefetch strategy incorporated into the collector for some platforms.
    Explains why the sweep phase of a "mark-sweep" collector should not really be
    a distinct phase.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: Boehm, H., "减少垃圾收集器缓存未命中", *2000年国际内存管理研讨会论文集*。[官方版本。](http://portal.acm.org/citation.cfm?doid=362422.362438)
    [技术报告版本。](http://www.hpl.hp.com/techreports/2000/HPL-2000-99.html) 描述了一些平台上收集器中所包含的预取策略。解释了为什么“标记-清除”收集器的清扫阶段实际上不应该是一个单独的阶段。
- en: M. Serrano, H. Boehm, "Understanding Memory Allocation of Scheme Programs",
    *Proceedings of the Fifth ACM SIGPLAN International Conference on Functional Programming*,
    2000, Montreal, Canada, pp. 245-256. [Official version.](http://www.acm.org/pubs/citations/proceedings/fp/351240/p245-serrano/)
    [Earlier Technical Report version.](http://www.hpl.hp.com/techreports/2000/HPL-2000-62.html)
    Includes some discussion of the collector debugging facilities for identifying
    causes of memory retention.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: M. Serrano, H. Boehm, "理解Scheme程序的内存分配", *第五届ACM SIGPLAN国际函数式编程会议论文集*, 2000年,
    加拿大蒙特利尔, 第245-256页。[官方版本。](http://www.acm.org/pubs/citations/proceedings/fp/351240/p245-serrano/)
    [较早的技术报告版本。](http://www.hpl.hp.com/techreports/2000/HPL-2000-62.html) 包括一些关于识别内存保留原因的收集器调试设施的讨论。
- en: Boehm, H., "Fast Multiprocessor Memory Allocation and Garbage Collection", [HP
    Labs Technical Report HPL 2000-165](http://www.hpl.hp.com/techreports/2000/HPL-2000-165.html).
    Discusses the parallel collection algorithms, and presents some performance results.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Boehm, H., "快速多处理器内存分配和垃圾收集", [惠普实验室技术报告 HPL 2000-165](http://www.hpl.hp.com/techreports/2000/HPL-2000-165.html)。讨论了并行收集算法，并呈现了一些性能结果。
- en: Boehm, H., "Bounding Space Usage of Conservative Garbage Collectors", *Proceeedings
    of the 2002 ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages*,
    Jan. 2002, pp. 93-100. [Official version.](http://portal.acm.org/citation.cfm?doid=503272.503282)
    [Technical report version.](http://www.hpl.hp.com/techreports/2001/HPL-2001-251.html)
    Includes a discussion of a collector facility to much more reliably test for the
    potential of unbounded heap growth.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Boehm, H., "保守式垃圾收集器空间使用的限制", *2002年ACM SIGPLAN-SIGACT编程语言原理研讨会论文集*, 2002年1月,
    第93-100页。[官方版本。](http://portal.acm.org/citation.cfm?doid=503272.503282) [技术报告版本。](http://www.hpl.hp.com/techreports/2001/HPL-2001-251.html)
    包括一个关于更可靠地测试潜在的无限堆增长可能性的收集器设施的讨论。
- en: '**The following papers discuss language and compiler restrictions necessary
    to guaranteed safety of conservative garbage collection.**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**以下论文讨论了确保保守垃圾收集器安全所需的语言和编译器限制。**'
- en: We thank John Levine and JCLT for allowing us to make the second paper available
    electronically, and providing PostScript for the final version.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感谢John Levine和JCLT允许我们提供第二篇论文的电子版，并为最终版本提供PostScript。
- en: Boehm, H., [``Simple Garbage-Collector-Safety''](papers/pldi96.ps.gz), Proceedings
    of the ACM SIGPLAN '96 Conference on Programming Language Design and Implementation.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Boehm, H., [``简单的垃圾收集器安全性''](papers/pldi96.ps.gz)，ACM SIGPLAN '96会议论文集上的文章，讨论了编程语言设计和实现。
- en: Boehm, H., and D. Chase, [``A Proposal for Garbage-Collector-Safe C Compilation''](papers/boecha.ps.gz),
    *Journal of C Language Translation 4*, 2 (Decemeber 1992), pp. 126-141.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Boehm, H., 和D. Chase, [``用于垃圾收集器安全的C编译提案''](papers/boecha.ps.gz)，*C语言翻译杂志4*，2（1992年12月），第126-141页。
- en: '**Other related information:**'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**其他相关信息：**'
- en: The Detlefs, Dosser and Zorn's [Memory Allocation Costs in Large C and C++ Programs](ftp://ftp.cs.colorado.edu/pub/techreports/zorn/CU-CS-665-93.ps.Z).
    This is a performance comparison of the Boehm-Demers-Weiser collector to malloc/free,
    using programs written for malloc/free.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Detlefs、Dosser和Zorn的[大型C和C++程序中的内存分配成本](ftp://ftp.cs.colorado.edu/pub/techreports/zorn/CU-CS-665-93.ps.Z)。这是对Boehm-Demers-Weiser收集器与malloc/free的性能比较，使用了为malloc/free编写的程序。
- en: Joel Bartlett's [mostly copying conservative garbage collector for C++](ftp://ftp.digital.com/pub/DEC/CCgc).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Joel Bartlett的[主要是用于C++的复制保守型垃圾收集器](ftp://ftp.digital.com/pub/DEC/CCgc)。
- en: John Ellis and David Detlef's [Safe Efficient Garbage Collection for C++](ftp://parcftp.xerox.com/pub/ellis/gc/gc.ps)
    proposal.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: John Ellis和David Detlef的[用于C++的安全高效垃圾收集](ftp://parcftp.xerox.com/pub/ellis/gc/gc.ps)提案。
- en: Henry Baker's [paper collection](http://home.pipeline.com/~hbaker1/).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Henry Baker的[论文集](http://home.pipeline.com/~hbaker1/)。
- en: Slides for Hans Boehm's [Allocation and GC Myths](myths.ps) talk.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: Hans Boehm的[Allocation and GC Myths](myths.ps)演讲幻灯片。
- en: '**This section has not been updated recently.**'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**这一部分最近没有更新。**'
- en: 'Known current users of some variant of this collector include:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 目前已知使用某个变体的收集器的用户包括：
- en: The runtime system for [GCJ](http://gcc.gnu.org/java), the static GNU java compiler.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '[GCJ](http://gcc.gnu.org/java)的运行时系统，即静态GNU Java编译器。'
- en: '[W3m](http://w3m.sourceforge.net/), a text-based web browser.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[W3m](http://w3m.sourceforge.net/)，一个基于文本的网页浏览器。'
- en: Some versions of the Xerox DocuPrint printer software.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 一些版本的施乐DocuPrint打印机软件。
- en: The [Mozilla](http://www.mozilla.org) project, as leak detector.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[Mozilla](http://www.mozilla.org)项目，作为泄漏检测器。'
- en: The [Mono](http://www.go-mono.com) project, an open source implementation of
    the .NET development framework.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '[Mono](http://www.go-mono.com)项目，一个.NET开发框架的开源实现。'
- en: The [DotGNU Portable.NET project](http://www.gnu.org/projects/dotgnu/), another
    open source .NET implementation.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '[DotGNU Portable.NET项目](http://www.gnu.org/projects/dotgnu/)，另一个开源的.NET实现。'
- en: The [Irssi IRC client](http://irssi.org/).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[Irssi IRC客户端](http://irssi.org/)。'
- en: '[The Berkeley Titanium project](http://titanium.cs.berkeley.edu/).'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '[伯克利钛项目](http://titanium.cs.berkeley.edu/)。'
- en: '[The NAGWare f90 Fortran 90 compiler](http://www.nag.co.uk/nagware_fortran_compilers.asp).'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[NAGWare f90 Fortran 90编译器](http://www.nag.co.uk/nagware_fortran_compilers.asp)。'
- en: Elwood Corporation's [Eclipse](http://www.elwood.com/eclipse-info/index.htm)
    Common Lisp system, C library, and translator.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Elwood Corporation的[Eclipse](http://www.elwood.com/eclipse-info/index.htm) Common
    Lisp系统、C库和翻译器。
- en: The [Bigloo Scheme](http://www-sop.inria.fr/mimosa/fp/Bigloo/) and [Camloo ML
    compilers](http://kaolin.unice.fr/~serrano/camloo.html) written by Manuel Serrano
    and others.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 由Manuel Serrano和其他人编写的[Bigloo Scheme](http://www-sop.inria.fr/mimosa/fp/Bigloo/)和[Camloo
    ML编译器](http://kaolin.unice.fr/~serrano/camloo.html)。
- en: Brent Benson's [libscheme](http://ftp.cs.indiana.edu/pub/scheme-repository/imp/).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Brent Benson的[libscheme](http://ftp.cs.indiana.edu/pub/scheme-repository/imp/)。
- en: The [MzScheme](http://www.cs.rice.edu/CS/PLT/packages/mzscheme/index.html) scheme
    implementation.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[MzScheme](http://www.cs.rice.edu/CS/PLT/packages/mzscheme/index.html)方案实现。'
- en: The [University of Washington Cecil Implementation](http://www.cs.washington.edu/research/projects/cecil/www/cecil-home.html).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[华盛顿大学Cecil实现](http://www.cs.washington.edu/research/projects/cecil/www/cecil-home.html)。'
- en: '[The Berkeley Sather implementation](http://www.icsi.berkeley.edu:80/Sather/).'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[伯克利Sather实现](http://www.icsi.berkeley.edu:80/Sather/)。'
- en: '[The Berkeley Harmonia Project](http://www.cs.berkeley.edu/~harmonia/).'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[伯克利Harmonia项目](http://www.cs.berkeley.edu/~harmonia/)。'
- en: The [Toba](http://www.cs.arizona.edu/sumatra/toba/) Java Virtual Machine to
    C translator.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '[Toba](http://www.cs.arizona.edu/sumatra/toba/) Java虚拟机到C语言的翻译器。'
- en: The [Gwydion Dylan compiler](http://www.gwydiondylan.org/).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[Gwydion Dylan 编译器](http://www.gwydiondylan.org/)。'
- en: The [GNU Objective C runtime](http://gcc.gnu.org/onlinedocs/gcc/Objective-C.html).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[GNU Objective C 运行时](http://gcc.gnu.org/onlinedocs/gcc/Objective-C.html)。'
- en: '[Macaulay 2](http://www.math.uiuc.edu/Macaulay2), a system to support research
    in algebraic geometry and commutative algebra.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[Macaulay 2](http://www.math.uiuc.edu/Macaulay2)，一个支持代数几何和交换代数研究的系统。'
- en: The [Vesta](http://www.vestasys.org/) configuration management system.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[Vesta](http://www.vestasys.org/)配置管理系统。'
- en: '[Visual Prolog 6](http://www.visual-prolog.com/vip6).'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[Visual Prolog 6](http://www.visual-prolog.com/vip6)。'
- en: '[Asymptote LaTeX-compatible vector graphics language.](http://asymptote.sf.net)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[Asymptote LaTeX 兼容的矢量图形语言](http://asymptote.sf.net)。'
- en: '[A simple illustration of how to build and use the collector.](simple_example.html).'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '[构建和使用收集器的简单示例](simple_example.html)。'
- en: '[Description of alternate interfaces to the garbage collector.](gcinterface.html)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 对[垃圾收集器的替代接口](gcinterface.html)的描述。
- en: '[Slides from an ISMM 2004 tutorial about the GC.](04tutorial.pdf)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[ISMM 2004教程关于GC的幻灯片](04tutorial.pdf)。'
- en: '[A FAQ (frequently asked questions) list.](faq.html)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '[FAQ（常见问题）列表](faq.html)。'
- en: '[How to use the garbage collector as a leak detector.](leak.html)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 如何将[垃圾收集器用作泄漏检测器](leak.html)。
- en: '[Some hints on debugging garbage collected applications.](debugging.html)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 关于调试垃圾收集应用程序的[一些提示](debugging.html)。
- en: '[An overview of the implementation of the garbage collector.](gcdescr.html)'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '[垃圾收集器实现概述](gcdescr.html)。'
- en: '[Instructions for porting the collector to new platforms.](porting.html)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 将收集器[移植到新平台的说明](porting.html)。
- en: '[The data structure used for fast pointer lookups.](tree.html)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 用于快速指针查找的[数据结构](tree.html)。
- en: '[Scalability of the collector to multiprocessors.](scale.html)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 收集器[扩展到多处理器的可扩展性](scale.html)。
- en: '[Directory containing garbage collector source.](gc_source)'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 包含[垃圾收集器源代码](gc_source)的目录。
- en: '[An attempt to establish a bound on space usage of conservative garbage collectors.](bounds.html)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试建立保守垃圾收集器空间使用量上限的[一项尝试](bounds.html)。
- en: '[Mark-sweep versus copying garbage collectors and their complexity.](complexity.html)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '[标记-清除与复制式垃圾收集器及其复杂性](complexity.html)的对比。'
- en: '[Pros and cons of conservative garbage collectors, in comparison to other collectors.](conservative.html)'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[与其他收集器相比，保守型垃圾收集器的优缺点](conservative.html)。'
- en: '[Issues related to garbage collection vs. manual memory management in C/C++.](issues.html)'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 关于C/C++中[垃圾收集与手动内存管理的问题](issues.html)。
- en: '[An example of a case in which garbage collection results in a much faster
    implementation as a result of reduced synchronization.](example.html)'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，由于减少同步，[垃圾收集导致实现速度大大提升的案例](example.html)。
- en: '[Slide set discussing performance of nonmoving garbage collectors.](nonmoving)'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 讨论[非移动式垃圾收集器性能](nonmoving)的幻灯片集。
- en: '[Slide set discussing *Destructors, Finalizers, and Synchronization* (POPL
    2003).](http://hboehm.info/popl03/web)'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 讨论*Destructors, Finalizers, and Synchronization*（POPL 2003）的[幻灯片集](http://hboehm.info/popl03/web)。
- en: '[Paper corresponding to above slide set.](http://portal.acm.org/citation.cfm?doid=604131.604153)
    ( [Technical Report version](http://www.hpl.hp.com/techreports/2002/HPL-2002-335.html).)'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 对应上述幻灯片集的[论文](http://portal.acm.org/citation.cfm?doid=604131.604153)（ [技术报告版本](http://www.hpl.hp.com/techreports/2002/HPL-2002-335.html)）。
- en: '[A Java/Scheme/C/C++ garbage collection benchmark.](gc_bench.html)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 一个Java/Scheme/C/C++垃圾收集基准测试[（benchmark）](gc_bench.html)。
- en: '[Slides for talk on memory allocation myths.](myths.ps)'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '[关于内存分配神话的演讲幻灯片](myths.ps)。'
- en: '[Slides for OOPSLA 98 garbage collection talk.](gctalk.ps)'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '[OOPSLA 98 垃圾收集演讲的幻灯片集](gctalk.ps)。'
- en: '[Related papers.](papers)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '[相关论文](papers)。'
- en: For current updates on the collector and information on reporting issues, please
    see the [bdwgc github page](https://github.com/ivmai/bdwgc#feedback-contribution-questions-and-notifications).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 有关收集器的最新更新和问题报告信息，请参阅[bdwgc github 页面](https://github.com/ivmai/bdwgc#feedback-contribution-questions-and-notifications)。
- en: There used to be a pair of mailing lists for GC discussions. Those are no longer
    active. Please see the above page for pointers to the archives.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 曾经有一对用于GC讨论的邮件列表。这些现已不再活跃。请参阅上述页面获取存档的指针。
- en: Some now ancient discussion of the collector took place on the gcc java mailing
    list, whose archives appear [here](http://gcc.gnu.org/ml/java/), and also on [gclist@iecc.com](http://lists.tunes.org/mailman/listinfo/gclist).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 一些关于收集器的讨论曾在gcc java邮件列表上进行，其存档在[这里](http://gcc.gnu.org/ml/java/)，还在[gclist@iecc.com](http://lists.tunes.org/mailman/listinfo/gclist)。
- en: Comments and bug reports may also be sent to ([boehm@acm.org](mailto:boehm@acm.org)),
    but reporting issues on [github](https://github.com/ivmai/bdwgc/issues) is strongly
    preferred.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 评论和错误报告也可以发送至([boehm@acm.org](mailto:boehm@acm.org))，但强烈建议在[github](https://github.com/ivmai/bdwgc/issues)上报告问题。
