- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:48:28'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:48:28'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Etherify: Transmitting Morse Code via Raspberry Pi Ethernet RF Leakage'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**Etherify：通过 Raspberry Pi 以太网 RF 泄漏传输摩尔斯电码**'
- en: 来源：[https://www.rtl-sdr.com/etherify-transmitting-morse-code-via-raspberry-pi-ethernet-rf-leakage/](https://www.rtl-sdr.com/etherify-transmitting-morse-code-via-raspberry-pi-ethernet-rf-leakage/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.rtl-sdr.com/etherify-transmitting-morse-code-via-raspberry-pi-ethernet-rf-leakage/](https://www.rtl-sdr.com/etherify-transmitting-morse-code-via-raspberry-pi-ethernet-rf-leakage/)
- en: November 10, 2020
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 2020 年 11 月 10 日
- en: 'Etherify: Transmitting Morse Code via Raspberry Pi Ethernet RF Leakage'
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**Etherify：通过 Raspberry Pi 以太网 RF 泄漏传输摩尔斯电码**'
- en: Over on his blog SQ5BPF has been documenting a TEMPEST experiment where he's
    been able to [transmit data via RF being leaked from a Raspberry Pi's Ethernet
    connection](https://lipkowski.com/etherify/). The idea was born when he found
    that his Raspberry Pi 4 was leaking a strong RF signal at 125 MHz from the Ethernet
    cable. He went on to find that it was easy to turn a tone on and off simply changing
    the Ethernet link speed with the "ethtool" command line tool. Once this was known
    it is a simple matter of creating a bash script to generate some morse code.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在他的博客上，SQ5BPF 一直在记录一个 TEMPEST 实验，他已经能够[通过树莓派的以太网连接泄漏的 RF 传输数据](https://lipkowski.com/etherify/)。这个想法诞生于他发现他的树莓派
    4 从以太网电缆泄漏出强烈的 125 MHz 的 RF 信号。他继续发现，通过使用 "ethtool" 命令行工具简单地改变以太网链接速度，很容易将一个音调打开和关闭。一旦知道了这一点，创建一些摩尔斯电码的
    bash 脚本就是一件简单的事情了。
- en: Quite amazingly the Ethernet RF leakage is very strong. With the Raspberry Pi
    10 meters away, and a steel reinforced concrete wall in between, SQ5BPF was able
    to receive the generated morse code via an RTL-SDR connected to a PC. Further
    experiments show that with a Yagi antenna he was able to receive the signal from
    100 meters away.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 令人惊讶的是，以太网 RF 泄漏非常强。当树莓派距离 10 米远，中间隔着一堵钢筋混凝土墙时，SQ5BPF 能够通过连接到 PC 的 RTL-SDR 接收到生成的摩尔斯电码。进一步的实验表明，使用
    Yagi 天线，他能够在 100 米之外接收到信号。
- en: His [post](https://lipkowski.com/etherify/) explains some further experiments
    with data bursting, and provides links to the scripts he created, so you can try
    this at home.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 他的[文章](https://lipkowski.com/etherify/)解释了一些关于数据突发的进一步实验，并提供了他创建的脚本的链接，这样你就可以在家里尝试这个。
- en: 'Update - SQ5BPF also notes the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 更新 - SQ5BPF 还指出以下内容：
- en: The leakage differs a lot with the hardware used. The Raspberry Pi 4 is exceptional
    and also allows to switch the link speed quickly, so was a nice candidate for
    a demo, but other hardware works as well.
  id: totrans-12
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 使用的硬件不同，泄漏程度也不同。树莓派 4 是例外，也可以快速切换链接速度，因此是一个不错的演示候选者，但其他硬件也可以工作。
- en: ''
  id: totrans-13
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The first tests were done on some old laptops I had laying around, and they
    leak as well. Maybe someday I will publish this, but everyone of them behaves
    differently.
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 最初的测试是在我周围的一些旧笔记本电脑上进行的，它们也泄漏了。也许有一天我会公布这个，但是它们每个都有不同的行为。
