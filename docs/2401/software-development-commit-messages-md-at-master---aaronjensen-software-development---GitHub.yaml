- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:24:52'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: software-development/commit-messages.md at master · aaronjensen/software-development
    · GitHub
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://github.com/aaronjensen/software-development/blob/master/commit-messages.md](https://github.com/aaronjensen/software-development/blob/master/commit-messages.md)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[← Articles](/aaronjensen/software-development/blob/master/README.md#articles)'
  prefs: []
  type: TYPE_NORMAL
- en: Subject-First Commit Messages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[](#subject-first-commit-messages)'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: This article is a description of just a small part of our development process.
    Our goal with all of our practices is to enable developers to be just as productive
    on old projects as they are on new projects.
  prefs: []
  type: TYPE_NORMAL
- en: 'I''d recommend starting with this article that describes that goal:'
  prefs: []
  type: TYPE_NORMAL
- en: '[The Goal: Continuity](/aaronjensen/software-development/blob/master/continuity.md)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Take a moment and scan, not read, the following list as quickly as you can:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Did you spot the line about the `field_name` method?
  prefs: []
  type: TYPE_NORMAL
- en: 'Then, do the same thing here with these lines. Again, scan quickly, don''t
    read:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Did you spot a message about the Store?
  prefs: []
  type: TYPE_NORMAL
- en: The first list is a sample of commit message from [Rails](https://github.com/rails/rails).
    The second is from the [`entity-store` project in Eventide](https://github.com/eventide-project/entity-store).
    Chances are, unless you are already in the orbit of the Eventide community the
    first commit message style is what you are used to. It's likely what your team
    uses, as it is the commit message style that is typically recommended as a ["best
    practice"](/aaronjensen/software-development/blob/master/best-practices.md).
  prefs: []
  type: TYPE_NORMAL
- en: The second style likely feels foreign, and possibly uncomfortable. It's passive
    voice and indicative mood, rather than the more common active voice and imperative
    mood. So why do the Eventide project and many teams that use Eventide choose to
    use this subject-first style of commit messages? Because it is more scannable.
    It is optimized for human cognition. Humans don't tend to read when looking at
    lists unless they absolutely need to. We scan. And when we scan, we want to see
    the most important things come first. Furthermore, the subject-first commit message
    style makes the commit about the change, rather than it being about what the person
    did that made the change. It's not about the self. It's about the code.
  prefs: []
  type: TYPE_NORMAL
- en: Check Your Own Repository
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](#check-your-own-repository)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Try this in one of your repositories:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: What do you see? Imagine that's all you see when you scan. That's not a perfect
    simulation, as when we scan we may pattern match further into the string, we may
    read two words or so, we may teach ourselves that the first word is unimportant
    and try to skip it, but all of that requires additional effort. Our job is hard
    enough as it is, so we want to take every chance we can to make it easier on ourselves.
  prefs: []
  type: TYPE_NORMAL
- en: Like all of our process and design decisions, we decided to use this technique
    based on a-priori knowledge, research, first principles, and observation. Here
    are a few links to related research with regard to list processing (which is how
    commit message summaries are often consumed). Note that we did not refer to these
    specific articles when making our decision, these are just examples.
  prefs: []
  type: TYPE_NORMAL
- en: When I first encountered the subject-first naming style that the Eventide project
    uses, I didn't like it. I didn't like it because of my own bias and my preference
    to conform to what is "common". It didn't look like what I was used to and I argued
    against it initially. I eventually recognized the benefit of scannability and
    decided to try it on my current team. It took some time to get used to writing
    messages in that style, and every new team member requires some amount of training
    and reinforcement. We are now three years in to using this style and our team
    now has a strong preference for it.
  prefs: []
  type: TYPE_NORMAL
- en: I would recommend trying this style out in one of your projects. You might be
    surprised once you get over the initial reaction to it and you get accustomed
    to writing and reading messages in this style.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some guidelines that we follow:'
  prefs: []
  type: TYPE_NORMAL
- en: You don't always need a verb if you are introducing something new. For example,
    "Widget tests" is preferred over "Widget tests are added".
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We prefer to use "is corrected," rather than "is fixed". E.g., "Widget reconciliation
    is corrected"
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When something is refactored or improved in some way, we tend to use "is clarified".
    E.g., "Widget creation is clarified"
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When describing a rename, use "rather than". E.g., "Widget, rather than sprocket"
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When describing a version increase, be explicit about both the old and the new
    version. E.g., "Package version is increased from 1.1.1 to 1.2.0"
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Don't bother with the 50 character subject rule, make the first line as long
    as it needs to be. Brevity is useful, but 50 characters is too limiting in my
    experience.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '[Comments](https://github.com/aaronjensen/software-development/discussions/4)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Subscribe to be notified of new articles](https://github.com/aaronjensen/software-development/discussions/8)'
  prefs: []
  type: TYPE_NORMAL
- en: '[All Articles](https://github.com/aaronjensen/software-development/blob/master/README.md#articles)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Copyright Aaron Jensen 2023-present
  prefs: []
  type: TYPE_NORMAL
