- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 15:10:38'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 15:10:38'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: On “owning” software - avdi.codes
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于“拥有”软件 - avdi.codes
- en: 来源：[https://avdi.codes/on-owning-software/](https://avdi.codes/on-owning-software/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://avdi.codes/on-owning-software/](https://avdi.codes/on-owning-software/)
- en: Once upon a time, I owned a beautiful big house in the mountains of Eastern
    Tennessee. I don’t anymore. Now I rent a modest little rancher in a suburb of
    St. Louis. But every month, I *still* send out a payment on a home-repair loan.
    Because in order to sell that house in Tennessee, I had to spend $22k to replace
    an aging HVAC system.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 曾经，我拥有一个坐落在田纳西州东部山区的漂亮大房子。现在我不再拥有它了。如今我租住在圣路易斯郊区的一座简朴的牧场。但每个月，我仍然要还一笔房屋维修贷款。因为为了卖掉那间田纳西的房子，我不得不花费$22,000来更换老化的暖通空调系统。
- en: So much for homeownership. Let’s talk about owning software.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 家庭所有权到此为止。让我们谈谈拥有软件。
- en: Services require support
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务需要支持
- en: 'Around 25 years ago, I became the local maintainer for my team’s CVS repositories.
    This was our way of breaking free from Microsoft SourceSafe. Ever since then I’ve
    been involved in decisions about, and support for, software services that support
    team work. Services for teams have evolved a lot since then, as have the business
    models around them. One thing that has not changed, however, is that all services
    require maintenance and support. What do we mean by support? Well, a few examples
    might be:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 大约25年前，我成为了团队的CVS代码库的本地维护者。这是我们摆脱微软SourceSafe的方式。从那时起，我一直参与决策和支持支持团队工作的软件服务。自那时以来，团队服务发生了很大变化，商业模式也在变化。然而，有一件事没有变，那就是所有服务都需要维护和支持。支持是什么意思？嗯，一些例子可能是：
- en: Team members may need to be taught how to use the service well.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 团队成员可能需要学习如何充分利用这项服务。
- en: The server OS has to be upgraded to the current LTS, which updates libraries,
    or changes the daemon management subsystem, and this has implications for the
    service.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器操作系统必须升级到当前的LTS版本，这会更新库或更改守护程序管理子系统，并对服务产生影响。
- en: Or, the underlying database is upgraded for similar reasons.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 或者，由于类似原因，底层数据库被升级。
- en: Links to another service, like Github or Front or Trello etc. stop working due
    to updates in those services, someone is responsible for dealing with it.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于这些服务的更新，像Github或Front或Trello等的链接停止工作，需要有人负责处理。
- en: The server runs out of space, and someone needs to manage the smooth migration
    to a larger server or storage volume.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器空间不足，需要有人管理平稳迁移到更大的服务器或存储容量。
- en: 'A CVE affecting the stack the service relies on. Someone must be responsible
    for:'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 影响服务所依赖的堆栈的 CVE。必须有责任的人负责：
- en: Noticing;
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意;
- en: Auditing the service for being affected; and
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对可能受影响的服务进行审计; 以及
- en: Addressing the issue – by changing the code if necessary.
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解决问题 - 如有必要，通过更改代码。
- en: Someone must maintain backups. And ideally, periodically test them.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须有人维护备份。最好定期测试它们。
- en: We need custom integrations with our other chosen services. We either need someone
    else to write them or we need examples and advice for best-practices when writing
    such extensions.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们需要与我们选择的其他服务进行定制集成。我们要么需要其他人编写它们，要么需要关于编写此类扩展的最佳实践的示例和建议。
- en: It may be expected that we customize the software for our own workflows. Again,
    this can mean anything from the vendor writing the customizations to our spec,
    to us writing them with help and advice from them and their documentation.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可能希望为我们自己的工作流程定制软件。再次强调，这可以意味着供应商按照我们的规范编写定制内容，或者我们在他们的帮助和文档指导下编写定制内容。
- en: The service unexpectedly goes down (all software goes down at some point, even
    if it isn’t a “bug” per se), someone needs to stop any other ops or dev work and
    figure out what’s up.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务意外宕机（所有软件总会在某个时候宕机，即使这并不是“bug”本身），需要有人停止其他的运维或开发工作，弄清楚出了什么问题。
- en: When certain operations stop being snappy five years later because no one had
    ever tested it with that volume of historical data, that has to be *somebody*‘s
    problem. Someone must research between archiving old data vs. fixing the queries,
    and then implement the solution.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当某些操作因为从未测试过具有那么多历史数据的情况而变得不够迅速时，这必须是*某人*的问题。必须有人研究是归档旧数据还是修复查询之间的差异，然后实施解决方案。
- en: A mandate comes down that all software must be audited. For new regulatory reasons,
    for IPO reasons, etc. Someone has to be responsible for doing the audit on the
    service.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下达命令，要求对所有软件进行审计。出于新的法规原因，上市原因等。必须有人负责对服务进行审计。
- en: We suddenly realize we needed to clean out customer PII pronto. Someone must
    audit and perform the removal, something the software may not have supports for
    out of box.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们突然意识到我们需要立即清理客户的PII信息。有人必须对其进行审核并执行清理，而软件可能没有默认支持此功能。
- en: We discover parts of the software weren’t ADA compliant, making it impossible
    to use for a disabled team member. This has to be somebody’s problem.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们发现软件的部分部分不符合ADA标准，这使得残疾团队成员无法使用。这必须成为某人的问题。
- en: We’ve been bought and now the service must either log in using the corporate
    SSO, or be dropped, no exceptions.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们已经被收购，现在服务必须要么使用企业SSO登录，要么被放弃，没有例外。
- en: The world changes, and most teams are moving from using Fleeble to SnipSnarb
    for their CI service. We need the service to interface with SnipSnarb now.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 世界在变化，大多数团队正在从使用Fleeble转向使用SnipSnarb作为其CI服务。我们现在需要服务与SnipSnarb进行接口。
- en: The UI feels increasingly dated and clunky by modern standards, and the team
    increasingly hates using it, especially the new hires. It needs a UI refresh.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据现代标准，UI界面感觉越来越过时和笨重，团队越来越不喜欢使用它，特别是新员工。它需要进行UI刷新。
- en: These are just a few scattered examples of reasons services may need maintenance
    and support. No service will need all of them; all services will require at least
    some. I didn’t even mention the most common reason for needing support, which
    is *the software has a bug that affects our team*.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这些只是一些零星例子，说明服务可能需要维护和支持的原因。没有服务会需要所有这些原因；所有服务都至少需要一些。我甚至没有提到需要支持的最常见原因，那就是*软件存在影响我们团队的错误*。
- en: Ownership once entrapped many organizations
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 所有权曾经困扰着许多组织。
- en: Services that support teams are living systems, and living systems always require
    ongoing maintenance and support. There is no exception to this rule. What has
    evolved and proliferated are the models of how teams pay for the support, and
    how that support is divided between internal staff, vendor staff, commodity hosting
    staff, and the wider community.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 支持团队的服务是活体系统，而活体系统总是需要持续的维护和支持。没有例外。已经发展和蔓延的是团队如何支付支持的模式，以及这种支持在内部员工、供应商员工、商品托管员工和更广泛社区之间如何划分。
- en: One upon a time, you might have purchased a license for some software (like
    SourceSafe) that you would then host on a computer in your team’s server room.
    This is what we’ve come to call “on-premises”, or “on-prem” software. Typically,
    on top of the license for the version of the software you bought, you’d also purchase
    an annual support license of some kind for your team. Depending on the level of
    the license, you might get priority phone support, you might get personnel physically
    visiting your site from time to time, and you might even get access to the software’s
    source code (protected by NDAs) so that you can better understand it, and better
    write local customizations or integrations with it.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 从前，您可能会购买某些软件的许可证（如SourceSafe），然后将其托管在团队服务器房间的计算机上。这就是我们所说的“本地”软件。通常情况下，除了购买的软件版本的许可证外，您还会为您的团队购买某种年度支持许可证。根据许可证的级别，您可能会获得优先电话支持，您可能会定期获得来自现场的人员访问，甚至您可能会获得访问软件源代码（受到保密协议的保护），以便您更好地理解它，并更好地编写本地定制或与之集成。
- en: “Ownership” of a service in this form tended to follow a fairly predictable
    arc. If it was a useful, popular service, the organization would gradually and
    organically customize it, extend it, build processes around it, and integrate
    with it over time. Gradually, more and more of the organization’s IT budget would
    be spent on supporting these customizations and integrations. After years of this,
    like barnacles on a ship’s hull, the ongoing support for the service would amount
    to significant drag on the org’s overall budget and development velocity; all
    for a service that wasn’t even part of the company’s actual product. In the worst
    cases, a whole department might evolve to service-the-service.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这种形式的服务“所有权”往往会按照一个相当可预测的轨迹发展。如果这是一个有用的、受欢迎的服务，组织会随着时间逐渐地自然地定制它，扩展它，围绕它构建流程，并与之集成。渐渐地，组织的IT预算会花费在支持这些定制和集成上。经过多年的发展，就像船体上的帆船一样，对服务的持续支持将对组织整体预算和开发速度产生重大影响；所有这些都是为了一个甚至不是公司实际产品的服务。在最糟糕的情况下，一个整个部门可能会发展成为服务的服务。
- en: Meanwhile, as often as not the vendor would move on to deprecate the product,
    or even go out of business. Organizations would be left with “zombie” services
    that they had tightly bound themselves to over time. Not only would they still
    be spend person-hours on supporting their customizations; they’d also have to
    make increasing investments in supporting obsolete software stacks and even hardware
    to keep the old service running. Like the mainframe-based time/budget-tracking
    system at my first software gig, which had to be accessed via a [VT100](https://en.wikipedia.org/wiki/VT100
    "VT100 ") emulator.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 与此同时，供应商通常会继续淘汰产品，甚至倒闭。组织将被留下他们长期紧密绑定的“僵尸”服务。他们不仅要花费人时支持他们的定制；他们还必须在支持过时的软件堆栈甚至硬件方面投入越来越多的投资，以使旧服务继续运行。就像我的第一份软件工作中基于主机的时间/预算跟踪系统，必须通过[VT100](https://en.wikipedia.org/wiki/VT100
    "VT100 ")模拟器访问。
- en: The Open-Source revolution happened
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开源革命已经发生了。
- en: Over the first decade or so of my software career, a sea-change occurred. More
    and more of these services were replaced with Open-Source software. Often first
    as quiet acts of internal rebellion, but increasingly supported by corporate buy-in.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在我软件职业生涯的头十年左右，发生了一场海洋变革。越来越多的这些服务被开源软件替代。通常起初是作为内部静默的反抗行为，但越来越多地得到公司的支持。
- en: 'Sometimes the Open-Source services were simply better. Sometimes they were
    notably more barebones, but they offered such compelling advantages in terms of
    total cost of ownership that they were worth the tradeoff:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，开源服务只是更好。有时它们显着更简洁，但它们提供的总拥有成本方面的诱人优势使得它们值得权衡：
- en: Most importantly, seeing the code wasn’t a maybe-available license addon for
    more $$$. It was a given. This was a huge boon to extension, customization, and
    to answering our own questions about “how is it supposed to work”.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最重要的是，查看代码不是一个可能可用的许可证附加功能需要更多的$。这是一个事实。这对扩展、定制和回答我们自己关于“它应该如何工作”的问题是一个巨大的恩惠。
- en: The code was often higher-quality and easier to follow, because of the differing
    incentives of open-source development. Not always, but often.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码通常质量更高，更容易遵循，这是由于开源开发的不同激励。并不总是，但通常是这样。
- en: We benefitted from wide-open community shared knowledge forums. There was no
    vendor with a vested interest in being the only subject expert.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们受益于广泛开放的社区共享知识论坛。没有一个供应商有兴趣成为唯一的专家。
- en: We had options for help. We could try to fix problems ourselves internally,
    contract a project maintainer to help, or contract an independent specialist.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们有助于的选项。我们可以试着自己内部解决问题，与项目维护者签订合同以寻求帮助，或者与独立专家签订合同。
- en: Migration to and from Open-Source systems was usually easier.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 迁移到和从开源系统迁移通常更容易。
- en: OSS projects might be abandoned, but never in a way where all we were left with
    was an opaque binary that only ran on a specific version of Solaris.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开源软件项目可能会被抛弃，但从来没有以只在特定版本的 Solaris 上运行的不透明二进制文件的方式。我们所剩的都是那种情况。
- en: 'And, of course: we got to benefit from the improvements made by every other
    shop with an investment in the service.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当然，我们得益于每家投资于该服务的其他公司所做的改进。
- en: The worst case scenario of gradual internal customization-creep might still
    lead to having an internal fork of the project for which we were responsible.
    But at least, in that eventuality, we could *fully* own it. For better and for
    worse.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 渐进式内部定制泛滥的最坏情况可能仍然会导致我们负责的项目的内部分支。但至少，在这种情况下，我们可以*完全*拥有它。无论是好是坏。
- en: 'One thing that stayed the same, or even increased: the cost of support and
    maintenance in terms of internal effort.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 有一件事保持不变，甚至增加了：支持和维护的成本，以内部工作量衡量。
- en: Quantifying in-house support
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 量化内部支持
- en: Let’s take a minute to quantify that cost more concretely.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们花一分钟更具体地量化这个成本。
- en: 'For an example we can start with a scenario loosely based on my old CVS repository
    admin duties. My role as the sole support/maintainer for that off-the-shelf, open-source
    service included stuff like:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以从一个基于我以前的 CVS 仓库管理职责的情景开始。作为这个现成的开源服务的唯一支持/维护者，我的角色包括诸如：
- en: Initial installation and figuring out user authentication
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始安装和弄清用户身份验证。
- en: Importing older repos from other systems like SourceSafe, RCS, and PVCS, as
    needed.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据需要从其他系统（如 SourceSafe、RCS 和 PVCS）导入较旧的仓库。
- en: Helping developers get started and sorting out their authentication issues.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 帮助开发人员入门并解决他们的身份验证问题。
- en: Maintaining a few small scripts that captured our workflows.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维护一些捕捉我们工作流程的小脚本。
- en: Occasionally untangling file permission wierdness.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 偶尔解开文件权限的怪异问题。
- en: The details will differ from service to service, but this is a fairly typical
    of a low-maintenance on-prem service that one developer or ops person might be
    responsible for.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 细节会因服务而异，但这对于一个开发者或运维人员可能负责的低维护本地服务来说是相当典型的。
- en: Let’s be conservative and say this takes up an average of an hour a week of
    this developer’s time. Some weeks none, some weeks more, but an average of an
    hour.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们保守一点，假设这需要这个开发者每周平均一小时的时间。有些周没有，有些周更多，但平均一小时。
- en: Let’s see, according to Glassdoor, average total compensation (including benefits)
    for a senior software engineer in the US as of January 2024 is $194k. That works
    out to an hourly of $97\. 97 times 50 weeks is $4,850/year.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看，根据Glassdoor，截至2024年1月，美国高级软件工程师的平均总薪酬（包括福利）为$194k。这相当于每小时$97。97乘以50周是$4,850/年。
- en: So, a total annual support and maintenance cost of about $5k/year. And a concomitant
    loss to… whatever other projects that developer might otherwise have put their
    time towards.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，每年的总支持和维护成本约为$5k/年。以及……那个开发者本来可能会把时间投入到其他项目上的损失。
- en: With that number in hand, let’s proceed with our story…
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个数字，让我们继续我们的故事……
- en: Software as a service changed the math
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 软件即服务改变了数学。
- en: 'Time went by, the world became more ubiquitously networked, and web browsers
    matured as thin-client frontends for hosted services. This produced the next major
    evolution in software for teams: Software-as-a-Service (SaaS).'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 时间流逝，世界变得更加普遍地联网，Web浏览器成熟了，成为托管服务的薄客户端前端。这产生了团队软件的下一个重大进化：软件即服务（SaaS）。
- en: Some SaaSes were open-source software hosted on other people’s machines, with
    hardware and software upgrades, backups, etc performed for you. Others were built
    on proprietary code.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 一些SaaS是在其他人的机器上托管的开源软件，进行了硬件和软件升级、备份等操作。其他则建立在专有代码之上。
- en: Some promised only to take infrastructure—hardware, operating system upgrades,
    networked storage, backups—off your hands. Others included substantial support
    with the service itself, including onboarding, migration, answering new-user questions,
    troubleshooting, and addressing bugs.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 有些承诺只负责基础设施——硬件、操作系统升级、网络存储、备份——脱离你的手中。其他则包括对服务本身的大量支持，包括入职、迁移、回答新用户的问题、故障排除和解决错误等。
- en: 'What they shared in common was a pricing model that took a portion of what
    would otherwise be in-house support and maintenance, and make it into a fixed
    “rent”. One that might turn out to be substantially lower than in-house resources,
    due to the economies of scale and the fact that their people could be experts
    in that service and *nothing else*, whose expertise was shared across many hosted
    accounts. Moreover, the costs were *predictable:* for a given year and # of users,
    you knew exactly what you’d be spending for that level of support. No surprises.
    No unexpected weeks of having a developer doing nothing but troubleshooting a
    failed migration on a team-essential service.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 它们共同拥有的特点是一个定价模型，将本应是内部支持和维护的部分转变为固定的“租金”。这可能会比内部资源低得多，这是由于规模经济和他们的人员可能只是专家，*仅仅*专注于那项服务，而他们的专业知识是在许多托管帐户之间共享的。此外，成本是*可预测的:*对于给定年份和用户数量，您确切地知道您将为该支持级别花费多少。没有惊喜。没有意外的几周，只是让一个开发者对团队必不可少的服务进行故障排除。
- en: Let’s make SaaS costs concrete. Earlier we said that a modern-day equivalent
    to the local version-control hosting hat I once wore, would cost around $5k a
    year in current developer compensation. By comparison, in 2024, for 12 developers
    on Github, you’d spend either $541/year (for the starter-level offering) or $2,880/year
    (for an enterprise-level hosting contract). With no matching loss in developer-hours
    to our mainline projects.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们把SaaS成本具体化。之前我们说过，一个现代化的相当于我曾经穿戴的本地版本控制托管服务，现在的年薪大约是$5k。相比之下，2024年，在Github上有12个开发者，你要么花费$541/年（对于入门级套餐），要么花费$2,880/年（对于企业级托管合同）。没有与我们的主流项目匹配的开发者工时损失。
- en: 'SaaS also has a mostly-salutary side-effect: unlike those barnacle-encrusted
    in-house services we talked about earlier, SaaS exerts pressure *against* the
    organizational urge to customize a service into a unique and special snowflake.
    Instead, SaaS tends to pull teams in the direction of modifying their usage of
    the product in a more conventional direction. Which leads to less need for specialized
    support.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: SaaS 还有一个主要有益的副作用：与我们之前谈到的那些布满 barnacle 的内部服务不同，SaaS 施加了一种压力，*反对*组织对服务进行定制，使其成为一个独特而特殊的个体。相反，SaaS
    倾向于引导团队将对产品的使用修改为更加常规的方向。这导致对专业支持的需求减少。
- en: We have a lot of options now
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 现在我们有很多选择了。
- en: 'In the present-day, for any given type of service a team might want, we have
    many different options for how the ongoing support and maintenance labor is broken-down
    between the local team, a vendor, or the wider community:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在当今，对于团队可能想要的任何类型的服务，我们有许多不同的选择，关于 ongoing support 和 maintenance labor 是如何在本地团队、供应商或更广泛的社区之间分配的：
- en: 'Artisanal Homegrown Service: We’re responsible for everything, but at least
    we know the codebase back-to-front.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手工自制服务：我们对一切负责，但至少我们了解代码库的每一个细节。
- en: Proprietary on-prem software, hosted on hardware our ops people maintain, with
    a support contract from a vendor.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 专有的本地软件，托管在我们运维人员维护的硬件上，并获得供应商的支持合同。
- en: Open-source code, locally hosted, entirely supported by our own people.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地托管的开源代码，完全由我们自己的人员支持。
- en: A degenerate case is a single developer who “owns” the service as their baby,
    possibly sinks a lot of “hidden” time into it, and when they leave we have a problem.
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个极端情况是一个单个开发人员将服务视为自己的宝贝，可能会投入大量的“隐藏”时间，当他们离开时，我们就会面临问题。
- en: Open-source code, locally hosted, but with a support contract from an org that
    maintains the code, or from a third-party expert consultant.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地托管的开源代码，但与维护代码的组织或第三方专家顾问签订了支持合同。
- en: Open-source software hosted by someone else that we pay annually. We might be
    on the hook for customizations and integrations, but we pay them for infrastructure
    management.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由其他人托管的开源软件，我们每年支付一笔费用。我们可能要为定制和集成负责，但我们付给他们来进行基础设施管理。
- en: Proprietary SaaS
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 专有 SaaS
- en: 'Some concrete examples:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 一些具体的例子：
- en: '**Chat/conferencing/chatops:** A team might host their own [Mattermost](https://mattermost.com/)
    server and do all of their own administration and support. Or, they might host
    it on-prem but with a support plan from the Mattermost company. Or, they might
    opt to go with cloud-hosted servers. Or, they might pay Slack instead.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**聊天/会议/聊天运维**：一个团队可能会托管他们自己的 [Mattermost](https://mattermost.com/) 服务器，并自行进行所有管理和支持。或者，他们可能会将其托管在本地，但与
    Mattermost 公司签订支持计划。或者，他们可能选择使用云托管服务器。或者，他们可能会付费使用 Slack。'
- en: '**Version control hosting**: a team might host their own [Gitlab](https://about.gitlab.com/
    "Gitlab") instance, or pay for Gitlab as a service, or run Github on-prem with
    support from Github, or pay for the Github cloud-hosted SaaS.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**版本控制托管**：一个团队可能托管他们自己的 [Gitlab](https://about.gitlab.com/ "Gitlab") 实例，或者付费使用
    Gitlab 作为服务，或者从 Github 购买 Github on-prem 并得到 Github 的支持，或者付费使用 Github 的云托管 SaaS。'
- en: For any given service, a lot of factors might go into choosing which of these
    approaches make sense for the team. For instance, special privacy or regulatory
    concerns might mandate software be hosted on-site rather than in a public cloud.
    In every case, though, it’s not a choice of *whether* to pay for the ongoing costs
    of infrastructure, maintenance, support, and administration. It’s a choice of
    how to break those costs down between company personnel, vendor costs, and relying
    on open-source community interaction.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何给定的服务，可能有很多因素会影响选择哪种方法对团队是合理的。例如，特殊的隐私或监管问题可能要求软件在现场托管，而不是在公共云中。但无论在任何情况下，都不是选择是否要为基础设施、维护、支持和管理的持续成本付费的问题。而是如何在公司人员、供应商成本和依赖开源社区交互之间分配这些成本的选择。
- en: One-off licenses are a notable exception
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单次许可证是一个显著的例外。
- en: 'One model you generally *don’t* see is software services for teams offering
    purchase of one-off permanent licenses. The reason for this is straightforward:
    it’s a model that doesn’t work for either vendors or customers.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 你通常 *看不到* 的一个模型是为团队提供一次性永久许可证的软件服务。这个原因很简单：这是一个对供应商或客户都不起作用的模型。
- en: On the customer side, we know that the real costs of any service are in the
    support, not the initial investment. And for any type of service we can think
    of, there’s already a well-established Open Source offering for which the “purchase”
    price is… free. Paying someone for even a “shared-source” license has no advantages
    over self-hosting Open Source software, and plenty of disadvantages in terms of
    lack of community support and ongoing viability.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在客户端，我们知道任何服务的真实成本在于支持，而不是初始投资。对于我们能想到的任何类型的服务，都已经有一个成熟的开源提供方，其“购买”价格是……免费的。支付某人甚至是“共享源码”许可证也没有自托管开源软件的优势，在缺乏社区支持和持续可行性方面存在许多缺点。
- en: From the vendor side, if they make their money from one-off licenses, the economics
    just don’t pan out over the long term. The incentives become for them to spend
    all their energy on endlessly expanding market share so they can sell to new users,
    and/or churning out paid upgrades and add-ons to sell to their existing buyers.
    There is no financial incentive to work on code quality, bug fixes, or other sustainability
    considerations.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 从供应商方面来看，如果他们从一次性许可证中赚钱，长期来看经济学就不成立了。他们的激励是将所有精力花在无休止地扩大市场份额，以便向新用户销售，和/或制造有偿升级和附件，以便向现有买家销售。对于代码质量、漏洞修复或其他可持续性考虑，并没有财务激励。
- en: 'Side note: while most of the software I use for running my own content business
    falls roughly into the categories of hosting I listed above, in the past five
    years I did allow myself to be convinced to purchase one one-off license for a
    software service. And it remains one of the worst experiences I’ve ever had with
    software:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 旁注：虽然我用来运行自己内容业务的大多数软件大致属于我上面列出的托管类别，但在过去的五年里，我确实让自己相信购买了一次性许可证的软件服务。而且它仍然是我在软件方面经历过的最糟糕的经历之一：
- en: It’s simply a shoddy product all around, with lots of outages and known bugs.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这只是一个质量很差的产品，存在大量的中断和已知错误。
- en: It has some of the worst support in the sector, often with weeks-long waits
    for responses.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个行业支持能力最差，通常需要等待几周才能得到回复。
- en: Folks on their semi-public users forum know that if they say anything critical,
    their posts are likely to be deleted by the vendor, because the vendor has a vested
    interest in giving off the appearance of happy customers in order to make new
    one-off sales.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 他们半公开用户论坛上的人知道，如果他们说任何批评性的事情，他们的帖子很可能会被供应商删除，因为供应商有利于给出愉快的顾客外观，以便进行新的一次性销售。
- en: A lot of the vendor’s time and money goes into cultivating affiliate sales for
    the product, flooding the internet with kickback-funded third-party “reviews”.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 供应商的很多时间和金钱都花在为产品培养联盟销售上，通过资金回流的第三方“评论”在互联网上泛滥。
- en: Promised features languish undelivered for years, as they work on new add-on
    products they can sell to customers for more money.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 承诺的功能多年来一直未能实现，因为他们在为顾客开发新的附加产品，以便能够以更高的价格销售给顾客。
- en: These are all predictable outcomes of a one-off sale model. The incentives in
    such a model are inexorable and unavoidable.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这些都是一次性销售模式的可预见结果。这种模式中的激励是不可避免的，也是不可回避的。
- en: No reputable shop caring about long-term sustainability of their offering would
    pursue such a model. But if one *were* to choose to go down that road, they might
    market it by playing upon people’s nostalgia for shrink-wrap consumer software.
    They might emphasize how good it feels to “own” your software, while ignoring
    cost-of-ownership. They might rely on the inexperience of younger technical decision-makers,
    ones who have never had to confront the budget in real dollars that goes into
    long-term in-house support for services that aren’t the teams’ actual product.
    They might offer a “shared-source” style proprietary license, while being careful
    not to promise any updates or even bugfixes. They might leave the door wide open
    to abandon the whole initiative once they’ve made a quick buck. They might frame
    the whole shenanigan in terms of a brash and high-minded manifesto, to generate
    excitement and override the obvious objections.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 没有一家注重其产品长期可持续性的正规店铺会选择这种模式。但如果有人*决定*这样做，他们可能会通过利用人们对收缩包装消费软件的怀旧情感来推广它。他们可能会强调拥有“自己的”软件的好处，而忽略了总拥有成本。他们可能会依赖年轻的技术决策者的经验不足，这些人从未不得不面对实际投入长期内部支持服务的真实经济。他们可能会提供“共享源码”风格的专有许可证，但会小心不承诺任何更新甚至修复程序错误。他们可能会敞开大门，一旦赚了快钱就放弃整个计划。他们可能会将整个骗局以大胆而高尚的宣言方式框定，以激发兴奋并抵消明显的异议。
- en: Hypothetically speaking, of course.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这是一个假设。
- en: Ownership is expensive
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 拥有是昂贵的。
- en: 'Here’s the thing about ownership: it has a few meanings. I “owned” that house
    in the mountains, and it’s still costing me money to this day.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 关于所有权的事情有几个含义。我“拥有”那座山上的房子，直到今天它仍然在花费我钱。
- en: 'You can kick around purely metaphysical notions of “ownership” to your heart’s
    content. In that sense, maybe the NFT bros had a point: the only thing you can
    truly “own” is something wholly intangible. Although, they still manage to lose
    their monkeys more than I lose my TV remote.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以纯粹地探讨“所有权”的形而上的概念。在那个意义上，也许NFT兄弟们有一点道理：你唯一能真正“拥有”的是完全无形的东西。尽管，他们仍然比我弄丢电视遥控器的次数多。
- en: 'The only practical meaning of “ownership” when it comes to software services
    is: who’s on pager duty for it? Who has to drop what they are doing when it’s
    not working as-needed? Who manages upgrades? Who migrates data into it and out
    of it?'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到软件服务时，“所有权”的唯一实际含义是：谁负责它的值班？当它不按需工作时，谁必须放下手头的工作？谁负责升级？谁负责数据的迁入和迁出？
- en: 'Once you’ve been around the block a few times and seen things from your VP
    Eng’s point of view, the one thing you’ll know for sure about ownership is this:
    When it comes to owning services for developer teams, ownership is *expensive.*
    It feels a lot like renting, only less predictable.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你在行业里打拼过几次，从VP Eng的角度看待事物，你唯一会确信的关于所有权的事情是：当涉及到为开发团队拥有服务时，拥有是*昂贵的*。它感觉很像租用，只是不那么可预测。
