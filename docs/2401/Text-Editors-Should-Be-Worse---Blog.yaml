- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-27 14:26:19'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024年5月27日 14:26:19
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Text Editors Should Be Worse | Blog
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文本编辑器应该更糟糕 | 博客
- en: 来源：[https://www.da.vidbuchanan.co.uk/blog/annoying-text-editors.html](https://www.da.vidbuchanan.co.uk/blog/annoying-text-editors.html)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.da.vidbuchanan.co.uk/blog/annoying-text-editors.html](https://www.da.vidbuchanan.co.uk/blog/annoying-text-editors.html)
- en: Text Editors Should Be Worse
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文本编辑器应该更糟糕
- en: '*By David Buchanan, 2^(nd) January 2024*'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '*作者：戴维·布坎南，2024年1月2日*'
- en: This is a rant. You have been warned!
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一篇发泄。你已经被警告了！
- en: I'd like text editors to be worse. Specifically, I'd like their *default* behaviour
    to be as close as possible to the median text input box you'd find in any piece
    of software, like the humble HTML `<textarea>`. More realistically, I'd like a
    configuration preset that lets me opt in to the same, without having to hunt for
    a thousand individual setting tweaks. This opt-in should apply as globally as
    possible, perhaps as an environment variable.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望文本编辑器更糟糕。具体来说，我希望它们的*默认*行为尽可能接近于你在任何软件中找到的中位数文本输入框，比如普通的HTML `<textarea>`。更现实的是，我希望有一种配置预设，让我能够选择相同的行为，而不必寻找一千个个别的设置调整。这种选择应该尽可能地全局应用，也许可以作为一个环境变量。
- en: 'My rationale is simple: I hate context switching. I want my input sequences
    to always work, no matter what software I''m using. Trying to apply deeply ingrained
    muscle memory in the wrong context and having it not work can be extremely frustrating.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我的理由很简单：我讨厌上下文切换。我希望我的输入序列无论在使用什么软件时都能始终有效。试图在错误的上下文中应用根深蒂固的肌肉记忆，并且无法使其起作用，这可能会极其令人沮丧。
- en: As you can maybe guess from that, modal text editors like `vim` don't work for
    me. Consider them to be outside the scope of this rant—I only care about text
    editors (and more broadly, text inputs) that are superficially "normal."
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 也许你能够从中猜到，像`vim`这样的模态文本编辑器对我没用。请将它们视为本发泄的范围之外——我只关心表面上看起来“正常”的文本编辑器（更广泛地说，是文本输入）。
- en: 'Let''s take a concrete example: typing a quoted string. My go-to input sequence
    is to type `"` `"` `[left]`, i.e., typing two quotes at once and then moving the
    cursor back into the middle of the two, ready to type the string itself: `"|"`.
    That''s three keystrokes, but in my brain it''s a single action, and it works
    just about anywhere I might want to use it.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一个具体的例子：输入引号字符串。我通常的输入序列是输入`"` `"` `[左]`，也就是一次输入两个引号，然后将光标移回这两个引号的中间，准备输入字符串本身：`"|"`。这是三个按键，但在我的大脑中它是一个单一的动作，而且在我可能想要使用它的任何地方都有效。
- en: 'That is, everywhere *except* editors that try to be too smart. There are two
    common behaviours, both annoying in their own way:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，在编辑器方面，除了那些试图变得太聪明的编辑器之外，到处都是这种情况。有两种常见的行为，各有各的烦人之处：
- en: Pressing `"` once produces `"|"`, and finishing the input sequence results in
    `"|""`.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按下`"`一次会产生`"|"`，完成输入序列后会产生`"|""`。
- en: Pressing `"` once produces `"|"`, pressing it again produces `""|`, and pressing
    left results in `"|"`.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按下`"`一次会产生`"|"`，再按一次会产生`""|`，再按左键会产生`"|"`。
- en: The first behaviour is obviously undesirable because it produced an unexpected
    result.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个行为显然是不可取的，因为它产生了意外的结果。
- en: The second one produced the correct result, but I hate it even more! I hate
    it because it added a whole extra layer of "too smart" behaviour to try to counteract
    the first. That is, pressing `"` with the cursor already in front of a `"` character
    will not insert an additional `"`, but merely move the cursor to the other side
    of it. This works out alright in this *particular* scenario, but it's extremely
    confusing in any other situation where you happen to want to type a `"` in front
    of an existing one. This might sound far-fetched, but it's the default behaviour
    of Firefox's dev console, and it's something I stumble over regularly.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个产生了正确的结果，但我更加讨厌它！我讨厌它，因为它添加了一个完全多余的“太聪明”行为层，试图抵消第一个行为。也就是说，如果光标已经位于一个`"`字符前面，那么按下`"`键不会插入另一个`"`，而只会将光标移动到另一边。在这个*特定*的场景中，这样做还算合适，但在任何其他情况下，如果你碰巧想在现有的`"`前面输入一个`"`，那么这将会非常令人困惑。这听起来可能有些牵强，但这是Firefox的开发者控制台的默认行为，我经常被这种情况所困扰。
- en: I'm sure there's a setting I could tweak for this, but my problem is not Firefox;
    my problem is that these annoying behaviours are *everywhere*, and not just in
    relation to quoted strings.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信有一个设置可以解决这个问题，但我的问题不是Firefox；我的问题是这些烦人的行为*到处都是*，而不仅仅是与带引号的字符串有关。
- en: When there's a problem "everywhere," it might seem like the best approach is
    to suck it up and get used to it. But I can't, because the problem isn't a specific
    behaviour; the problem is the *divergence* of behaviours. I can't possibly get
    used to all of them!
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 当问题“随处可见”时，最佳方法似乎是忍受并习惯它。但我做不到，因为问题不是特定行为；问题是行为的*分歧*。我不可能适应它们的所有！
- en: Defining the Problem
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 确定问题
- en: I'm going to name this annoyance "**auto-input**". Anything that inputs characters
    I didn't type for myself (or otherwise opt in to) is on my naughty list. This
    does not include input *suggestions*. For example, when typing a symbol name,
    an editor might offer a drop-down list of suggested completions that I can opt
    *in* to using the tab key. That's great because if I ignore the suggestion and
    continue typing obliviously, everything still works.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我将这种烦恼称为“**自动输入**”。任何未经我输入的字符（或以其他方式选择的）都会被列入我那张调皮清单。这不包括输入*建议*。例如，当输入符号名称时，编辑器可能会提供一个下拉的建议完成列表，我可以使用tab键选择加入。这很好，因为如果我忽略建议并继续无意识地输入，一切仍然正常运作。
- en: Text editors are encouraged to be smart, but that smartness shouldn't degrade
    the basics.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 鼓励文本编辑器变得智能，但这种智能性不应损害基础功能。
- en: Exceptions
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 例外情况
- en: The one exception to my auto-input hatred is auto-indentation. When I press
    enter, I expect the new line to be pre-filled with the same leading whitespace
    as the line above. Anything that tries to be smarter than that, especially those
    that try to be language-aware, will likely get on my nerves too. And, if the indentation
    is spaces, pressing backspace should delete exactly one of them at a time. This
    is a matter of personal preference, but so is everything else in this article.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我对自动输入的唯一例外是自动缩进。当我按下回车键时，我希望新行自动填充与上一行相同的前导空格。任何试图比这更聪明的东西，特别是那些试图语言感知的东西，也可能让我恼火。而且，如果缩进是空格，按下退格键应该一次删除一个空格。这是个人偏好问题，但在这篇文章中的其他所有事情也是。
- en: Solutions
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决方案
- en: I'm too lazy to do any serious work towards a solution here, beyond writing
    this rant, but I would like to float the idea of a `NO_AUTOINPUT` environment
    variable. If the variable is present on first-run of an application, it should
    set the appropriate settings defaults to minimise auto-input behaviours. After
    that, the settings can be tweaked per user preference.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我懒得认真解决这个问题，除了写这篇发牢骚，但我想提出一个`NO_AUTOINPUT`环境变量的概念。如果在首次运行应用程序时存在该变量，应设置相应的默认设置以最小化自动输入行为。之后，可以根据用户偏好调整设置。
- en: For the sake of homogeneity, auto-indentation should be disabled with `NO_AUTOINPUT`
    too. I'll accept the collateral damage of having to re-enable one setting, in
    the cases where I need it.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 为了统一起见，自动缩进也应使用`NO_AUTOINPUT`禁用。在我需要时，我愿意接受在某些情况下需要重新启用一个设置的附带损害。
