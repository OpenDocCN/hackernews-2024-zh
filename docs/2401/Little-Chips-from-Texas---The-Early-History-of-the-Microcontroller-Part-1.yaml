- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:34:27'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:34:27'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Little Chips from Texas : The Early History of the Microcontroller Part 1'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 微控制器的早期历史：来自德克萨斯州的小芯片（第一部分）
- en: 来源：[https://thechipletter.substack.com/p/tiny-computers-from-texas](https://thechipletter.substack.com/p/tiny-computers-from-texas)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://thechipletter.substack.com/p/tiny-computers-from-texas](https://thechipletter.substack.com/p/tiny-computers-from-texas)
- en: TMS 1000C - By Pauli Rautakorpi - Own work, CC BY 3.0, https://commons.wikimedia.org/w/index.php?curid=52406652
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: TMS 1000C - 作者：Pauli Rautakorpi - 自己的作品，CC BY 3.0，https://commons.wikimedia.org/w/index.php?curid=52406652
- en: Our son got lots of new toys over the Christmas period. One of his favourites
    is a plastic guitar with buttons on the fingerboard, lots of lights, and even
    a whammy bar. It’s really fun. At one year old he’s much too young for a computer,
    but many of his toys, including the guitar, have computers inside them. But, of
    course, we usually don’t call them computers. Instead, they are ‘microcontrollers’.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在圣诞节期间，我们的儿子得到了很多新玩具。其中他最喜欢的是一把塑料吉他，吉他的指板上有按钮，还有许多灯光，甚至还有一个 whammy bar。非常有趣。他一岁多的时候还太小玩计算机，但他的许多玩具，包括吉他在内，都有内置的计算机。但是，当然，我们通常不称它们为计算机。相反，它们被称为“微控制器”。
- en: 'A moment''s thought tells us that microcontrollers are everywhere: in our homes,
    in washing machines, refrigerators and microwaves, in our automobiles, and many,
    many other places. And some of these microcontrollers are based on designs that
    have been around for decades. I don’t dare risk opening up the toy guitar - he
    would be *very* upset - but I wouldn’t be surprised if the microcontroller inside
    uses an 8-bit architecture that was first developed in the 1970s. Prompted by
    my son happily playing with his new toy guitar, it seems like a good moment to
    delve into the history of the ubiquitous, but often invisible microcontroller.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 一想就知道，微控制器无处不在：在我们的家中，洗衣机、冰箱和微波炉中，在我们的汽车中，以及许多其他地方。这些微控制器中的一些是基于几十年前的设计的。我不敢冒险打开玩具吉他
    - 他会非常不高兴 - 但如果吉他内部的微控制器使用的是20世纪70年代首次开发的8位架构，我也不会感到惊讶。在儿子愉快地玩着他的新玩具吉他的推动下，现在似乎是深入了解无处不在但通常看不见的微控制器历史的好时机。
- en: Before we delve into the history of the microcontroller, we need to define what
    it is. Wikipedia defines the microcontroller as a ‘small computer’ on a single
    integrated circuit. This distinguishes it from a microprocessor, which is just
    a Central Processing Unit on a chip and needs additional integrated circuits to
    create a functional computer, and a ‘System-on-Chip’ or ‘SoC’ which is the term
    used when the computer isn’t judged to be ‘small’.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入了解微控制器的历史之前，我们需要定义什么是微控制器。维基百科将微控制器定义为单个集成电路上的“小型计算机”。这将其与微处理器区分开来，后者仅是芯片上的中央处理单元，并需要额外的集成电路来创建功能性计算机，“SoC”或“系统芯片”是指当计算机不被认为是“小型”时所使用的术语。
- en: It’s perhaps surprising that the earliest microcontrollers emerged at about
    the same time as the first microprocessors. One might expect that it’s significantly
    harder to build a complete computer on a single integrated circuit when compared
    to just a CPU. However, the earliest microprocessors were often used in designs
    which needed very small amounts of ROM or RAM and which were highly price-sensitive.
    Engineers were soon able to overcome the technical challenges of adding a small
    amount of memory and input/output circuitry alongside a processor. And the potential
    commercial benefits for the system designer from the lower costs associated with
    using a microcontroller were considerable. As a result, there was a large market
    for microcontrollers and many of the leading semiconductor manufacturers in the
    1970s and 1980s had their own line of microcontrollers, sold alongside their microprocessor
    designs.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 或许让人惊讶的是，最早的微控制器出现的时间与第一批微处理器大致相同。人们可能会认为，在单一集成电路上构建完整计算机比仅仅构建一个 CPU 要困难得多。然而，最早的微处理器通常用于需要非常少量
    ROM 或 RAM，并且高度价格敏感的设计中。工程师们很快就能够克服在处理器旁边添加少量内存和输入/输出电路的技术挑战。而系统设计者由于使用微控制器而带来的成本降低的潜在商业利益是相当可观的。因此，在20世纪70年代和80年代，微控制器有着庞大的市场，许多领先的半导体制造商都有自己的微控制器产品线，与其微处理器设计一同销售。
- en: Microcontrollers have typically had a lower profile and attracted less attention
    than microprocessors, for two reasons. First, the need to keep integrated circuit
    die sizes small whilst also accommodating memory and input/output, has meant that
    their CPUs have been less sophisticated than contemporary microprocessors. Second,
    they have typically been used in systems where users cannot read or change their
    code. So whilst different generations have grown up with access to ‘home’ and
    then ‘personal’ computers or workstations, and have become familiar with the architectures
    of the microprocessors powering these machines, microcontrollers have been locked
    away, hidden inside calculators, toys, automobiles and domestic appliances.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 微控制器通常比微处理器低调，并吸引的注意力较少，原因有两个。首先，需要保持集成电路芯片尺寸小，同时也要容纳内存和输入/输出，这意味着它们的 CPU 比当代微处理器不太复杂。其次，它们通常用于用户无法阅读或更改其代码的系统中。因此，虽然不同的时代长大了有‘家庭’然后是‘个人’电脑或工作站，熟悉驱动这些机器的微处理器的体系结构，但是微控制器一直被锁在计算器、玩具、汽车和家用电器内部。
- en: As semiconductor node sizes shrank over the years, it became possible to use
    existing microprocessor designs as the CPU part of a microcontroller. These CPUs
    typically had higher performance, richer software ecosystems, and were easier
    to program than the earlier designs, which had been designed especially for early
    microcontrollers, that they replaced. Today, most microcontroller designs incorporate
    a processor either from the 8-bit era (e.g. Z80, 6502), or the 16-bit era (e.g.
    68000) or are modern 32-bit designs (such as ARM Cortex or RISC-V).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 随着半导体节点尺寸多年来的缩小，使用现有的微处理器设计作为微控制器的 CPU 部分成为可能。这些 CPU 通常具有更高的性能、更丰富的软件生态系统，并且比之前为早期微控制器专门设计的设计更容易编程，它们取代了早期设计。今天，大多数微控制器设计都包含来自
    8 位时代的处理器（例如 Z80、6502）、16 位时代的处理器（例如 68000）或现代 32 位设计（如 ARM Cortex 或 RISC-V）。
- en: This is the first post in a series on the earliest microcontrollers. We’ll look
    at some of the leading designs of the time, their history and where they were
    used. Although these designs have had a much lower profile than the early microprocessors,
    they played a key role in making computing ubiquitous.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这是关于最早期微控制器的系列帖子中的第一篇。我们将看看当时的一些主要设计，它们的历史以及它们的用途。尽管这些设计比早期的微处理器低调得多，但它们在使计算成为无处不在的过程中发挥了关键作用。
- en: Before we get to real microcontrollers, it’s worth discussing the “idea” of
    the microcontroller. In the 1960s, as more and more components were crammed onto
    integrated circuits, it became increasingly obvious that it would soon be possible
    to create a ‘computer on a chip’.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们讨论真正的微控制器之前，值得讨论一下微控制器的“概念”。在 1960 年代，随着越来越多的组件被塞入集成电路中，很明显很快就可以创建一个‘芯片上的计算机’。
- en: 'In 1970 Gilbert Hyatt filed a patent for a ‘microcomputer architecture … that
    facilitates a fully integrated circuit computer on a single integrated circuit
    chip.’ Or, in other words, a ‘microcontroller’. It took two decades for that patent
    to be granted. The Los Angeles Times reported in 1990 that:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 1970 年，吉尔伯特·海特（Gilbert Hyatt）申请了一项“微型计算机体系结构……促进了单一集成电路芯片上的完全集成电路计算机”的专利。换句话说，就是“微控制器”。这项专利花了二十年才被授予。1990
    年，《洛杉矶时报》报道道：
- en: In July, after a 20-year legal fight that generated an estimated 10,000 pages
    of paperwork, the U.S. Patent and Trademark Office gave Hyatt patent No. 4,942,516
    for a “Single Chip Integrated Circuit Computer Architecture.” The patent shocked
    the electronics world.
  id: totrans-16
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 7 月份，在一场持续 20 年的法律争斗中，美国专利商标局授予 Hyatt 第 4,942,516 号专利，内容是“单片集成电路计算机体系结构”。这项专利震惊了电子界。
- en: 'The LA Times reported its conversation with Hyatt::'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 洛杉矶时报报道了它与 Hyatt 的对话：
- en: “I didn’t invent the computer, but I came up with a very good improvement,”
    said Hyatt, a 52-year-old workaholic who prefers to work alone at a modest home
    in a cul-de-sac in La Palma. “My work in those days led to the PCs of today.”
  id: totrans-18
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “我没发明计算机，但我提出了一个非常好的改进，” 52 岁的工作狂 Hyatt 在拉帕尔玛（La Palma）一条死胡同的一栋简朴房子里独自工作时说道。“那个时代我的工作导致了今天的个人电脑。”
- en: 'Hyatt had technical expertise, having graduated from UC Berkeley and worked
    at electronics conglomerate Teledyne, and had attempted to develop his ideas,
    raising capital before falling out with his investors. However, according to one
    former colleague:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 海特具有技术专业知识，毕业于加州大学伯克利分校，并在电子公司 Teledyne 工作过，曾尝试开发自己的想法，筹集资金，但最终与投资者发生了矛盾。然而，根据一位前同事的说法：
- en: Hyatt was a stubborn, impractical researcher without a viable technology who
    was obsessed with “paper rights.”
  id: totrans-20
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 海特是一个固执、不切实际的研究者，没有一项可行的技术，却痴迷于“纸上权利”。
- en: After the 1990 patent approval, Hyatt was able to claim tens of millions of
    dollars in royalties, from Sony and other major companies. However, other firms
    continued to challenge the patent approval, until, in 1996, a central claim of
    Hyatt’s relating to the ‘invention’ of the microcontroller was overturned.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在1990年获得专利批准后，海特能够从索尼和其他主要公司那里获得数千万美元的版税。然而，其他公司继续对专利批准提出质疑，直到1996年，海特关于微控制器‘发明’的一个核心主张被推翻。
- en: “After a five-year review of tens of thousands of pages of documents, the patent
    office ruled that Hyatt did not describe a microcontroller until 1977, in one
    of many amendments known as a continuation.”
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “在对数万页文件进行了五年的审查后，专利局裁定海特在1977年之前并未描述微控制器，这是众多修订案之一。”
- en: Hyatt was later involved in another set of legal cases, this time relating to
    millions of dollars of potential tax liabilities and related damages, that made
    their way to the US Supreme Court and would finally be resolved only in 2019.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 海特后来又卷入了另一系列法律案件，这次涉及数百万美元的潜在税务责任和相关损害赔偿，这些案件曾经上诉至美国最高法院，并直到2019年才最终解决。
- en: 'In a 2014 interview Hyatt was quoted as saying:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在2014年的一次采访中，海特被引用说：
- en: “I felt that the industry had taken my technology and, not only hadn’t rewarded
    me, but hadn’t given me recognition until my patents started to issue,” Hyatt
    said.
  id: totrans-25
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “我觉得这个行业拿走了我的技术，不仅没有给予我回报，而且直到我的专利开始发放之前都没有给予我认可，”海特说。
- en: The reality, though, is that he didn't have access to the technology required
    to create a working microcontroller and probably wouldn’t have been successful
    in creating one if he did.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，事实是他没有获取创建可工作微控制器所需的技术，如果他有可能也不会成功创建。
- en: Leading the challenge to Hyatt’s patent was Texas Instruments (TI). TI started
    life in 1951 following the reorganisation of ‘Geophysical Service Incorporated’,
    a Dallas company that made seismic equipment for the oil industry and which had
    expanded into electronics. In 1952 TI purchased a licence to make Germanium transistors
    from Western Electric, the manufacturing arm of AT&T, whose Bell Labs research
    arm had invented the device. TI quickly became a pioneer in the development and
    commercialisation of semiconductors and related technology. The first transistor
    radio in 1954 was followed by the first integrated circuit in 1958 and the, hugely
    popular, 7400 series of ‘Bipolar’ Transistor-Transistor-Logic or TTL integrated
    circuits in the early 1960s. By the start of the 1970s TI was a semiconductor
    giant with revenues of around a billion dollars.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 领导挑战海特专利的是德州仪器（TI）。TI于1951年成立，之前是达拉斯一家为石油行业制造地震设备的公司‘地球物理服务公司’（Geophysical Service
    Incorporated）经过重组后成立，该公司扩展到了电子领域。1952年，TI从AT&T的制造部门Western Electric购买了生产锗晶体管的许可证，AT&T的贝尔实验室研究部门发明了该设备。TI迅速成为半导体和相关技术开发和商业化的先驱。1954年的第一台晶体管收音机后，1958年的第一台集成电路以及1960年代初期极受欢迎的‘双极型’晶体管—晶体管逻辑或TTL集成电路的7400系列接连推出。到70年代初期，TI已经成为一个年收入约十亿美元的半导体巨头。
- en: In the late 1960s, TI’s attention had turned to using integrated circuits to
    shrink ‘desktop’ calculators. Early electronic calculators used discrete transistors
    and so were heavy and needed AC power supplies. They were an obvious commercial
    application for increasingly powerful integrated circuits. In 1967, at the end
    of a two-year project, a TI team led by Jack Kilby developed and, was granted
    a patent on, the first first ‘pocket’ calculator, known as the ‘Cal Tech’ (perhaps
    surprisingly named after the California Institute of Technology). ‘Cal Tech’ reduced
    the hundreds of discrete transistors in earlier calculators down to just four
    integrated circuits. The National Museum of American History has the first Cal
    Tech calculator inscribed with the date (March 29, 1967) when it was presented
    to TI’s president, Pat Haggerty.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在20世纪60年代末，德州仪器的注意力转向使用集成电路来缩小‘台式’计算器。早期的电子计算器使用离散晶体管，因此重量沉重且需要交流电源。随着集成电路日益强大，它们成为了显而易见的商业应用。1967年，在为期两年的项目结束时，由杰克·基尔比领导的德州仪器团队开发了并获得了专利的第一台‘袖珍’计算器，被称为‘Cal
    Tech’（或许令人惊讶地以加利福尼亚理工学院命名）。‘Cal Tech’将早期计算器中的数百个离散晶体管缩减为仅仅四个集成电路。美国国家历史博物馆有第一台带有日期（1967年3月29日）的Cal
    Tech计算器，当时它被赠予德州仪器的总裁帕特·哈格蒂。
- en: TI would go in to work with Canon to turn the Cal Tech’s technology into a commercial
    design, known as the ‘Pocketronic’ which appeared in 1970 (which despite its name
    would have been hard to put into most pockets).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: TI将与佳能合作，将Cal Tech的技术转化为商业设计，即1970年出现的“Pocketronic”（尽管其名称很难放入大多数口袋）。
- en: Canon Pocketronic - **CC BY-SA 2.0 DEED - https://www.flickr.com/photos/44337451@N00/27065545266**
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 佳能Pocketronic - **CC BY-SA 2.0 DEED - https://www.flickr.com/photos/44337451@N00/27065545266**
- en: From the perspective of 2024, it’s quite hard to take in how big a deal the
    emergence of small electronic calculators were in the early 1970s. Arithmetic
    is fundamental to many jobs, from basic accounting for small businesses to complex
    engineering. Prior to the development of the affordable, portable electronic calculator,
    these needed to be performed by hand (with variable accuracy) or using an expensive
    and unwieldy, transistor based, electronic or electro-mechanical desktop calculator.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 从2024年的角度来看，很难想象20世纪70年代初期小型电子计算器的出现有多么重要。算术对于许多工作都是基本的，从小型企业的基本会计到复杂的工程。在价格实惠、便携式电子计算器问世之前，这些都需要手工完成（准确性不同）或使用昂贵且笨重的基于晶体管的电子或电机电子桌面计算器。
- en: There was a huge potential market for cheaper and more portable calculators.
    Their development calculators would soon become a race between major US and Japanese
    semiconductor and electronic companies. This, in turn, was a central part of the
    wider competitive struggle between US and Japanese firms. For much more on the
    calculator ‘race’ see the article ‘The Story of the Race to Develop the Pocket
    Electronic Calculator’ referenced in the further reading at the end of this post.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 便宜和更便携的计算器有着巨大的潜在市场。他们的开发很快成为美国和日本主要半导体和电子公司之间的竞争。这反过来又是美国和日本公司之间更广泛竞争斗争的核心部分。有关计算器“竞赛”的更多信息，请参阅本文末尾的进一步阅读中引用的文章《发展便携式电子计算器竞赛的故事》。
- en: 'Increasing integration meant that it would soon be possible to combine the
    four chips in the ‘Pocketronic’ into one. But TI was beaten in the race to create
    the first calculator on a single chip in November 1970 by Texas rival Mostek,
    with the MK6010\. “Electronics” magazine reported in Feb 1971:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 集成度的提高意味着很快就能将“Pocketronic”中的四个芯片合并成一个。但是在创造出第一个单芯片计算器的竞赛中，TI在1970年11月被德克萨斯的竞争对手Mostek打败了，后者生产了MK6010。《电子》杂志在1971年2月报道：
- en: The apparent winner in the race to produce a calculator on a chip has hit the
    wire.  Mostek Corp., of Carrolton, Texas, is now producing such a chip for Japan's
    Busicom Corp. ... The 180-mil-square [4.6 mm-square] chip contains the logic for
    a four function 12-digit calculator - more than 2,100 transistors in 360 gates
    plus 160 flip-flops.
  id: totrans-34
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在生产芯片计算器的竞赛中，明显的赢家已经出炉。德克萨斯州卡罗顿的Mostek公司现在为日本的Busicom公司生产这样的芯片... 这款面积为180毫米的芯片（4.6毫米）包含了一个四功能12位数计算器的逻辑电路——360个门加160个触发器中的2100多个晶体管。
- en: The MK 6010, like the first microprocessor, the Intel 4004, was made under a
    ‘... sales arrangement with the Nippon Calculating Machine Co. of Tokyo for use
    in Nippon's line of Busicom calculators.’
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: MK 6010，像第一颗微处理器Intel 4004一样，是在“...与东京的日本计算机公司签订的销售协议下生产的，用于日本Busicom计算器系列”。
- en: 'It took a year for TI to respond. In November 1971 they announced their own
    ‘calculator-on-a-chip’, the TMS 1802NC (not to be confused with the RCA 1802 microprocessor,
    which is a later, unrelated, design). What distinguished the TMS 1802NC was that
    it was programmable. According to TI’s marketing:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: TI花了一年的时间做出回应。1971年11月，他们宣布推出自己的“芯片计算器”，即TMS 1802NC（不要与RCA 1802微处理器混淆，后者是一个后来的、无关的设计）。
    TMS 1802NC的特色在于它是可编程的。根据TI的营销：
- en: The device is totally programmable, the "program" read-only memory, timing sections,
    control section and input/output decoders can be programmed to achieve different
    computing characteristics . This approach offers maximum design flexibility at
    very low cost.
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 该设备是完全可编程的，“程序”只读存储器、定时部分、控制部分和输入/输出译码器可以编程以实现不同的计算特性。这种方法在非常低的成本下提供了最大的设计灵活性。
- en: TI’s presentation of the rapid integration of calculator chips
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: TI的计算器芯片的快速集成展示
- en: 'When TI said ‘totally programmable’ they meant ‘programmable at the factory’,
    as the program was fixed during manufacturing in a ‘mask programmable’ Read-Only-Memory.
    According to the patent for the 1802:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 当TI说“完全可编程”时，他们指的是“在工厂可编程”，因为程序在制造过程中固定在“掩模可编程”只读存储器中。根据1802的专利：
- en: The programmable read only memory and the programmable logic arrays are easily
    modified by changing only the gate-insulator mask for the metal-insulator-semiconductor
    integrated system embodiment during the fabrication process.
  id: totrans-40
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 可编程只读存储器和可编程逻辑阵列仅通过在制造过程中更改金属-绝缘体-半导体集成系统实施中的栅极绝缘体掩模来修改。
- en: In other words, calculator designers could pay TI to alter this program for
    their own products, but the program was fixed for end users.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，计算器设计师可以支付TI来修改此程序以适应他们自己的产品，但对于最终用户来说，程序是固定的。
- en: The cost advantages of the microcontroller approach are soon apparent when we
    compare it with the Intel 4004 microprocessor, which was also launched in November
    1971\. The 4004 cost $60 and needed multiple support chips to create a calculator.
    By contrast, the 1802 sold for $20 in quantities of 10,000 or more (although it
    was as much as $150 for individual parts). The 4004 was considerably more sophisticated,
    but the price difference made the 1802 a compelling design.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们将其与同样在1971年11月推出的英特尔4004微处理器进行比较时，微控制器方法的成本优势很快就显现出来了。4004的价格为60美元，需要多个支持芯片才能创建计算器。相比之下，1802以10,000个以上的数量售价为20美元（尽管单个零件的价格高达150美元）。4004更为复杂，但价格差异使1802成为一个引人注目的设计。
- en: TI was aggressive in setting the $20 price point for the 1802\. As Ken Shirriff
    has noted, the die size of the 1802 was much bigger than the Intel 4004\. With
    a bigger die, the 1802 was able to use 7,000 transistors (although see this footnote
    on transistor numbers), when compared to only 2,300 for the 4004 and 2,100 for
    the MK6010.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: TI在1802的20美元价格点上采取了积极的态度。正如Ken Shirriff所指出的，1802的晶片尺寸比英特尔4004要大得多。由于晶片更大，1802能够使用7000个晶体管（尽管请参见有关晶体管数量的脚注），而4004仅使用2300个，MK6010仅使用2100个。
- en: 'According to TI engineer Gary Boone, who led the early development of the 1802,
    the genesis of the project came, not from a desire to cut costs or compete with
    Mostek, but rather to make the most of the engineering resources that TI had available
    and which had been focused on developing custom integrated circuits for multiple
    TI calculator customers:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 根据领导1802早期开发的TI工程师Gary Boone的说法，该项目的起源并不是为了降低成本或与Mostek竞争，而是为了充分利用TI可用的工程资源，并且已经专注于为多个TI计算器客户开发定制集成电路：
- en: The individual requirements differed in detail, but in principle and in overall
    function, they were almost identical. So, what goes through your mind is, "I'm
    tired of doing this. I'm working long hours. My family is not happy. I've got
    to find a better way to do this."
  id: totrans-45
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 具体要求在细节上有所不同，但原则上和整体功能上几乎是相同的。所以，你会想，“我厌倦了这样做。我工作时间很长。我的家人不开心。我必须找到更好的方法来做这件事。”
- en: '… that''s the genesis of particularly the TMS 100 microcontroller chip: it
    came out of boredom, high demand and a vision of commonalities that were being
    inefficiently served by deploying huge teams with many chips.'
  id: totrans-46
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: … 这就是特别是TMS 100微控制器芯片的起源：它出于厌倦、高需求和对由部署大量芯片的庞大团队不断增加的共性的愿景。
- en: 'One can get a sense of the problems that the TI teams had from the layout of
    the TMX1795 microprocessor that they built at around the same time. Quoting Ken
    Shiriff:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 从他们在大约同一时间建造的TMX1795微处理器的布局可以看出TI团队的问题。引用Ken Shiriff的话：
- en: … Texas Instruments didn't seem to put much effort into the layout, which [Intel
    engineer Stan] Mazor calls "pretty sloppy techniques" and "throwing some blocks
    together".While the 4004 and especially the 8008 are densely packed, the TMX 1795
    chip has copious unused and wasted space.
  id: totrans-48
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: … 德州仪器似乎并没有花太多精力在布局上，[英特尔工程师Stan] Mazor称之为“相当杂乱的技术”和“把一些模块放在一起”。虽然4004和尤其是8008被密集地布置，但TMX
    1795芯片却有大量未使用和浪费的空间。
- en: It seems likely that the TI teams simply didn’t have time to refine the design
    for any one customer. They needed to get it done and move on to the next.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 很可能TI团队根本没有时间为任何一个客户完善设计。他们需要做完这件事，然后继续下一个。
- en: Working with Daniel Baudouin, TI’s MOS Marketing manager, Boone compiled a matrix
    of customer requirements, and then set out to create a design that would meet
    as many of those requirements as possible. The 1802 was the result, designed by
    Boone and a small team of around six engineers. Boone also worked on the TI 1795X,
    the same design that would also provide the architecture for Intel’s first 8-bit
    microprocessor design, the Intel 8008\. Boone’s testimony on his work on the 1802
    would be central to TI’s efforts to overturn the Hyatt patent.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 与 TI 的 MOS 市场经理丹尼尔·博登（Daniel Baudouin）合作，布恩编制了一个客户需求矩阵，然后着手创建一个尽可能满足这些需求的设计。1802
    是结果，由布恩和约六名工程师小组设计。布恩还参与了 TI 1795X 的工作，该设计也为英特尔的第一款 8 位微处理器设计，即英特尔 8008 的架构提供了基础。布恩关于他在
    1802 上的工作的证词将成为 TI 推翻海雅特专利的努力的核心。
- en: There has been some debate around whether the 1802 design qualifies as a ‘microcontroller’,
    rather than a ‘fixed function’ calculator chip. As we’ve seen, the program ROM
    in the 1802 could be changed, and TI did offer variants by changing that program.
    The documentation that TI created for engineers using the 1802 (which by then
    had then been renamed to be the TMS 0102, part of the TMS 0100 series) shows that
    it was primarily designed to be used in calculators. Most significantly, the input
    / output pins of the 1802 were designed to drive a calculator display and to support
    reading from a simple calculator keyboard.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 1802 设计是否符合“微控制器”而不是“固定功能”计算器芯片的问题存在一些争论。正如我们所见，1802 中的程序 ROM 可以被更改，TI 也通过更改该程序提供了变种。TI
    为使用 1802 的工程师创建的文档（当时已经更名为 TMS 0102，属于 TMS 0100 系列）显示，它主要设计用于计算器。最重要的是，1802 的输入/输出引脚设计用于驱动计算器显示屏，并支持从简单计算器键盘读取。
- en: 'However, the key patent for the 1802, U.S Patent No. 4,074,351, focuses on
    its use in calculators, but briefly discusses its use in a much broader range
    of devices:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，1802 的关键专利，美国专利号 4,074,351，着重于其在计算器中的使用，但简要讨论了它在更广泛的设备范围内的使用：
- en: For example, the calculator system may be programmed to perform meter functions
    such as for a digital voltmeter ,event counting, meter smoothing, taxi-fare meter,
    an odometer, scale meter to measure weight, etc.
  id: totrans-53
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 例如，计算器系统可以编程执行诸如数字电压表、事件计数、仪表平滑、出租车费计费器、里程表、用于测量重量的称量表等仪表功能。
- en: Perhaps one way of settling the debate is to say that the 1802 was a microcontroller
    but not a ‘general purpose’ one. In other words, it was a programmable computer
    on a chip but one which had a fairly narrowly defined set of applications.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 或许解决争论的一种方法是说 1802 是一个微控制器，但不是一个“通用目的”的微控制器。换句话说，它是一个可编程的芯片上的计算机，但它具有相当狭窄定义的应用程序集。
- en: 'The 1802 was innovative in how it was designed. According to Boone:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 1802 的设计具有创新性。根据布恩的说法：
- en: We relied on our own simulations and our own software. Today it would be called
    register transfer model simulating. We modeled the [instruction] processing and
    program and data and input and output resources on this chip. That basically permitted
    us to test the design at a high level, before our silicon existed. That was a
    leap, an innovation in design methodology.
  id: totrans-56
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们依靠自己的模拟和自己的软件。今天它可能被称为寄存器传输模型模拟。我们模拟了这个芯片上的[指令]处理、程序和数据以及输入和输出资源。基本上允许我们在我们的硅存在之前以高层次测试设计。那是一个飞跃，设计方法上的创新。
- en: Architecture of the TMS 1802NC - from TI’s patent filings
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: TMS 1802NC 的架构 - 源自 TI 的专利申请
- en: 'Wireless World reported on the 1802’s architecture and capabilities:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 《无线世界》报道了 1802 的架构和功能：
- en: The i.c. contains an eight-digit b.c.d. arithmetic logic unit; a three-register
    182-bit random access store; a 3520-bit read-only memory for holding the programme;
    and timing, output, and control decoders. Floating-point or fixed-point operation
    calculations can be performed and there is automatic round-off of numbers and
    leading zero suppression. Arithmetic and control operations are based on a 4μs
    single-phase clock system.
  id: totrans-59
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 该 i.c. 包含一个八位 b.c.d. 算术逻辑单元；一个三寄存器 182 位随机存储器；一个 3520 位只读存储器，用于存储程序；以及定时、输出和控制译码器。可以执行浮点或定点运算，并且有数字的自动四舍五入和前导零抑制。算术和控制操作基于
    4μs 单相时钟系统。
- en: So that’s 182 bits of RAM (organised as 3 x 13 4-bit BCD (Binary-Coded-Decimal)
    registers plus 2 x 13 bit flags registers), and 3520 bits of ROM (arranged as
    320 instructions x an 11-bit instruction length). It’s interesting to compare
    this with the memory used in the Intel 4004-based Busicom 141-PF calculator, which
    had 640 bits of RAM and 8196 bits of ROM. The Busicom offered more functionality,
    but even so, squeezing a calculator into the small memory footprint of the 1802
    represents an impressive achievement. It was thought sufficiently noteworthy at
    the time for the whole program, in both binary and assembly language form, to
    be listed in the key patent for the 1802 (see the notes to this post for this
    patent).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这是 182 位的 RAM（以 3 x 13 4 位 BCD（二进制编码十进制）寄存器和 2 x 13 位标志寄存器组织），以及 3520 位的
    ROM（以 320 条指令 x 11 位指令长度排列）。将这与基于 Intel 4004 的 Busicom 141-PF 计算器中使用的内存进行比较是很有趣的，后者具有
    640 位的 RAM 和 8196 位的 ROM。Busicom 提供了更多功能，但即便如此，在 1802 的小内存占用中挤入计算器也是一项令人印象深刻的成就。当时，整个程序，无论是二进制还是汇编语言形式，都被认为足够引人注目，因此在
    1802 的关键专利中列出（请参阅本帖子的注释以获取此专利的注释）。
- en: TI’s first calculator TI 2500 Datamath - powered by the TMS 1802NC - By Mister
    rf - Own work, CC BY-SA 4.0, https://commons.wikimedia.org/w/index.php?curid=46565536
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: TI 的首款计算器 TI 2500 Datamath - 由 TMS 1802NC 驱动 - 作者 Mister rf - 自己的作品，CC BY-SA
    4.0，https://commons.wikimedia.org/w/index.php?curid=46565536
- en: If imitation is the greatest form of flattery then TI should have been flattered.
    Mostek, who had beaten TI to the first single chip calculator, followed that design
    up with the MK 5020, a clone of the 1802\.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果模仿是最高形式的恭维，那么 TI 应该感到受宠若惊。首个单片计算器的成就先于 TI 而得，而 Mostek 在此之后推出了 MK 5020，这是 1802
    的克隆。
- en: The 1802 was soon used in calculators from both the US and Japan. TI itself
    used it in its own first calculator design, the TI-2500 Datamath, in July 1972\.
    One of the most creative uses of the 1802, though, came from the UK. Squeezing
    extra capabilities out of low-cost hardware was Clive Sinclair’s speciality. Attracted
    by the low price of the 1802, he assigned the task of developing a new calculator
    to Chris Curry. Curry has told the story of flying across the Atlantic on New
    Year’s Day 1972, still hung over from Sinclair’s New Year’s Eve party, to collect
    three samples of the 1802 from a TI factory in Texas.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 1802 很快被用于来自美国和日本的计算器中。TI 自己在 1972 年 7 月使用它在其自己的第一款计算器设计中，即 TI-2500 Datamath。然而，1802
    最有创意的用途之一来自英国。从低成本硬件中挤出额外功能是 Clive Sinclair 的专长。受到 1802 低廉价格的吸引，他委托 Chris Curry
    开发一个新的计算器。Curry 讲述了在 1972 年元旦还未醒来的情况下，从德克萨斯州的 TI 工厂收集了三个 1802 样品的故事。
- en: Slim and low-cost - the TMS 1802NC powered Sinclair Executive - By MaltaGC,
    CC BY-SA 3.0, https://commons.wikimedia.org/w/index.php?curid=2747195
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 纤薄而低成本 - 由 TMS 1802NC 驱动的 Sinclair Executive - 作者 MaltaGC，CC BY-SA 3.0，https://commons.wikimedia.org/w/index.php?curid=2747195
- en: Returning to the UK, Curry built the ‘Sinclair Executive’ calculator around
    the 1802\. The 1802 was built using a PMOS fabrication process and so was much
    more power hungry than later CMOS based designs. The Sinclair team dramatically
    reduced the power consumption of the Executive by supplying power to the 1802
    in 1.7-microsecond pulses, with the capacitance of the chip retaining data during
    periods when there was no power. This extended battery life to around 20 hours
    whilst using small ‘hearing aid’ batteries, which in turn allowed the Executive
    to support a ‘slimline’ form factor with a thickness of just 9 millimetres.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: Curry 在英国返回后，围绕 1802 构建了“Sinclair Executive”计算器。1802 是使用 PMOS 制造工艺制造的，因此比后来基于
    CMOS 的设计更耗电。Sinclair 团队通过以 1.7 微秒的脉冲为 1802 提供电源，使其功耗大幅降低，芯片的电容在无电源时保持数据。这将电池寿命延长到约
    20 小时，同时使用小型“助听器”电池，这进一步使 Executive 支持了“纤薄”的外形，厚度仅为 9 毫米。
- en: The low price of the 1802 enabled the Sinclair Executive to be launched with
    a price of £79.95 (inexpensive for the time, but still equivalent to over £1,000
    or $1,600 in 2024). Its innovative design and lower cost made it a huge success
    and allowed Sinclair to build a calculator business that, at its peak, was making
    over 100,000 units a month.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 1802 的低廉价格使得 Sinclair Executive 的售价为 £79.95（当时便宜，但相当于 2024 年的超过 £1,000 或 $1,600）。其创新设计和更低的成本使其取得了巨大成功，并使
    Sinclair 得以建立一个计算器业务，在其鼎盛时期，每月生产超过 100,000 台计算器。
- en: This wasn't the end of Sinclair’s innovation using TI calculator chips. In 1974
    he launched the Sinclair Scientific, using one of the 1802’s successors, the TMS
    0805, which would show just what was possible with just 320 instructions by cramming
    scientific and trigonometric functions into that tiny space. Ken Shiriff has reverse-engineered
    the program to show how it was done, and built a simulator for the calculator,
    emulating what Ken calls TI’s ‘crazy’ 11-bit opcodes..
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 辛克莱尔（Sinclair）并没有停止使用 TI 计算器芯片进行创新。 1974 年，他推出了 Sinclair Scientific，使用了其中一个
    1802 的后继产品 TMS 0805，这个产品通过将科学和三角函数压缩到小小的空间中展示了什么是可能的，仅使用了 320 条指令。肯·希里夫（Ken Shiriff）已经对该程序进行了逆向工程，以展示如何完成，并构建了计算器的模拟器，模拟了肯称之为
    TI 的“疯狂”11位操作码。
- en: In a twist of history, Chris Curry would later go on to found Acorn Computers,
    the firm that developed the original ARM architecture. Later versions of the ARM
    architecture would become one of the most popular processor designs in the 32-bit
    microcontroller market. TI’s adoption of the ARM architecture and use of ARM-based
    TI System-on-Chip designs in early 3G mobile phones from Nokia and others would
    be a key step in Arm’s journey to market success. TI would also provide ARM with
    a future CEO, Warren East, when it closed its UK manufacturing plant in Bedford
    in 1994.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在历史的转折中，克里斯·库里（Chris Curry）后来成立了英国橡树电脑（Acorn Computers），这家公司开发了最初的 ARM 架构。后来的
    ARM 架构版本成为 32 位微控制器市场上最受欢迎的处理器设计之一。TI 采用 ARM 架构并在诺基亚等公司的早期 3G 手机中使用基于 ARM 的 TI
    SoC 设计，是 ARM 成功走向市场的关键一步。TI 在 1994 年关闭其位于贝德福德的英国制造工厂时，还向 ARM 提供了未来的 CEO，沃伦·伊斯特（Warren
    East）。
- en: TMS 1000 Microcontroller - By Antonio Martí Campoy - Own work, CC BY-SA 4.0,
    https://commons.wikimedia.org/w/index.php?curid=61345074
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[TMS 1000 微控制器](https://commons.wikimedia.org/w/index.php?curid=61345074) -
    由安东尼奥·马蒂·坎普伊（Antonio Martí Campoy）创作，CC BY-SA 4.0许可，https://commons.wikimedia.org/w/index.php?curid=61345074'
- en: The TMS 1802 and the other members of the TMS 0100 series were successful in
    the calculator market, but there were opportunities for TI to expand the use of
    the ‘computer-on-a-chip’ into other applications where its low cost would be a
    compelling proposition. So the TMS 0100 series was followed by the TMS 1000 series,
    which was designed to be used both in calculators and in a wider range of control
    applications. Launched in 1974, the TMS 1000 used a 4-bit processor architecture
    and would sell for as little as $2 in volume.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: TMS 1802 和 TMS 0100 系列的其他成员在计算器市场取得了成功，但 TI 有机会将“芯片上的计算机”扩展到其低成本将是一个引人注目的建议的其他应用程序中。因此，TMS
    0100 系列后面是 TMS 1000 系列，旨在用于计算器和更广泛的控制应用程序。 TMS 1000 于 1974 年推出，采用 4 位处理器架构，成本仅为
    2 美元。
- en: Let’s look at the architecture of the TMS 1000 series. It’s interesting to see
    what simplifications were necessary to enable it to fit into such a cheap device.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看 TMS 1000 系列的架构。看到为了使其适合于如此便宜的设备而必须进行的简化是很有趣的。
- en: The first thing to emphasise about both the TMS 0100 and TMS 1000 series, which
    distinguishes them from microprocessors, is that they cannot access external RAM
    or ROM. The basic TMS 1000 provided 1,024 x 8 bits of ROM and 64 x 4 bits of RAM
    (or up to double this amount of RAM and ROM for some members of the series) and
    that’s it. If your design needed more memory than this then you’d needed a microprocessor
    based system, with the extra costs and complexity involved. With no option to
    access external memory, most of the pins on the TMS 1000’s package are available
    to read and write signals from external hardware, such as a keyboard or display.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 需要强调的是，与微处理器不同，TMS 0100 和 TMS 1000 系列都无法访问外部 RAM 或 ROM。基本的 TMS 1000 提供了 1,024
    x 8 位的 ROM 和 64 x 4 位的 RAM（对于该系列的某些成员，RAM 和 ROM 的数量可加倍），这就是全部。如果您的设计需要比这更多的内存，那么您就需要一个基于微处理器的系统，这会增加额外的成本和复杂性。由于无法访问外部存储器，TMS
    1000 封装的大多数引脚可用于读取和写入来自外部硬件的信号，如键盘或显示器。
- en: 'With so little RAM it wouldn’t make sense to try to load programs into RAM
    so the TMS 1000 series, like the TMS 0100 series, are Harvard architecture designs
    : instruction and data memory are completely separate.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 由于内存非常少，将程序加载到 RAM 中是没有意义的，因此 TMS 1000 系列，就像 TMS 0100 系列一样，都是哈佛架构设计：指令和数据存储器完全分开。
- en: 'The instruction set of the TMS 1000 series introduces an interesting feature
    when compared to more familiar microprocessor designs. It’s ‘programmable’. It
    comes with a ‘standard’ instruction set which we will describe in a moment. However,
    instructions are, in part, implemented by what is known as a ‘Programmable Logic
    Array’, another form of ‘mask-programmable’ ROM, which can be changed for individual
    customers. From the TMS 1000 series Data Manual:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: TMS 1000 系列的指令集与更为常见的微处理器设计相比引入了一个有趣的特性。它是“可编程的”。它带有一个“标准”的指令集，我们马上会描述。然而，指令部分是由所谓的“可编程逻辑阵列”实现的，这是另一种形式的“可掩码可编程”ROM，可以为单个客户更改。来自
    TMS 1000 系列数据手册：
- en: The programmable instruction decode is defined by the instruction PLA. Thirty
    programmable-input NAND gates decode the eight bits of instruction word. Each
    NAND gate output selects a combination of 16 microinstructions. The 16 microinstructions
    control the arithmetic unit, status logic, status latch, and write inputs to the
    RAM.
  id: totrans-75
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 可编程指令解码由指令 PLA 定义。三十个可编程输入 NAND 门解码指令字的八位。每个 NAND 门输出选择 16 个微指令的组合。这 16 个微指令控制算术单元、状态逻辑、状态锁存器和对
    RAM 的写入输入。
- en: As an example, the "add eight to the accumulator, results to accumulator" instruction
    can be modified to perform a "add eight to the Y register, result to Y" instruction.
    Modifications that take away an instruction that is not used very often are desirable
    if the modified instructions save ROM words by increasing the efficiency of the
    instruction repertoire.
  id: totrans-76
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 例如，“将 8 加到累加器，结果为累加器”指令可以修改为执行“将 8 加到 Y 寄存器，结果为 Y”的指令。如果修改的指令通过增加指令的效率来节省 ROM
    字数，则带走不经常使用的指令是可取的。
- en: 'When we look at the architecture of the TMS 1000, we can see measures taken
    to reduce the number of transistors needed for the design, to keep manufacturing
    costs down. Just a few examples:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们看一下 TMS 1000 的架构时，我们可以看到采取了一些措施来减少设计所需的晶体管数量，以降低制造成本。只举几个例子：
- en: '**Paged RAM** : The TMS 1000 has a 4-bit accumulator (A), a 4-bit memory pointer
    register (Y) and a 2-bit register (X) that provides the upper two bits of any
    RAM address. As an example of how memory access works in practice, there is an
    instruction ‘TAM’ that transfers A to the memory address X * 16 + Y. So the TMS
    1000 implements segmented or paged memory addressing with only 64 ‘nibbles’ or
    RAM.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分页 RAM**：TMS 1000 有一个 4 位累加器（A）、一个 4 位内存指针寄存器（Y）和一个 2 位寄存器（X），提供任何 RAM 地址的上两位。作为实际内存访问工作的示例，有一条指令“TAM”，它将
    A 传输到内存地址 X * 16 + Y。因此，TMS 1000 仅使用 64 个“半字节”或 RAM 实现了分段或分页内存寻址。'
- en: '**Paged ROM** : Instruction addresses are also segmented with an address being
    derived from a 6-bit program counter plus, in its higher four bits, a 4-bit ‘page
    register’. Programs stay in a 64-byte ‘page’ unless they branch to another page.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分页 ROM**：指令地址也与地址段分割，地址由 6 位程序计数器加上其高 4 位的 4 位“页寄存器”派生。程序保留在一个 64 字节的“页”中，除非它们分支到另一个页面。'
- en: 'The last example may look particularly strange:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个例子可能看起来特别奇怪：
- en: The Program Counter is implemented as a feedback shift register rather than
    as a binary counter. This means that the logically consecutive program memory
    locations do not reside physically consecutive in the program memory.
  id: totrans-81
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 程序计数器是作为反馈移位寄存器实现的，而不是作为二进制计数器实现的。这意味着逻辑上连续的程序存储器位置在程序存储器中并不物理上连续。
- en: A feedback shift register would have needed fewer gates than a binary counter.
    The mapping of logical location to physical location is given in the table below
    (from Adam Osborne’s 4 & 8 bit Microprocessor Handbook).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 与二进制计数器相比，反馈移位寄存器所需的门数量较少。逻辑位置到物理位置的映射如下表所示（来自亚当·奥斯本的4位和8位微处理器手册）。
- en: 'So, for example, after executing an instruction at location #37 the next instruction
    to execute is at location #2F.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '因此，例如，在位置 #37 执行指令后，要执行的下一个指令在位置 #2F。'
- en: I’m sure for many readers the TMS 1000 instruction set looks infuriating! Ease
    of programming lost out to keeping the cost low! Still, I really admire the creativity
    of the TI team in finding ways to keep the TMS 1000 small.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信对许多读者来说，TMS 1000 的指令集看起来令人恼火！编程的便利性败给了保持成本低廉！尽管如此，我真的很钦佩 TI 团队在寻找保持 TMS 1000
    体积小的方法方面的创造力。
- en: The TMS 1000 series soon found its way into a wide range of devices, with TI
    often ‘eating its own dog food’ by using the chips in its own products. TI helpfully
    provided a schematic of how the TMS 1000 might be used in a simple ‘terminal’
    device with a keyboard and 11-digit display.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: TMS 1000系列很快就进入了各种设备中，TI经常在自己的产品中使用这些芯片。TI提供了一个关于如何在简单的“终端”设备中使用TMS 1000的原理图。
- en: Famously, TI used it in its own ‘Speak and Spell’ educational toy. The Speak
    and Spell would play a synthesised set of 200 words and invite the child to spell
    them on a keyboard. A TMS 1000 microcontroller controlled the operation of the
    toy, reading the keyboard and handling the display. The hard work of voice synthesis,
    though, was done by another TI chip, the TMS 5100, connected to two 128 kbit ROM
    chips.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 众所周知，TI在自己的“Speak and Spell”教育玩具中使用了它。Speak and Spell会播放一套合成的200个单词，并邀请孩子们在键盘上拼写它们。一个TMS
    1000微控制器控制了玩具的操作，读取键盘并处理显示。然而，语音合成的工作是由另一款TI芯片TMS 5100完成的，连接着两片128 kbit ROM芯片。
- en: Original ‘Speak and Spell’ - By FozzTexx at English Wikipedia, CC BY-SA 4.0,
    https://commons.wikimedia.org/w/index.php?curid=79574006
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 原作：Original ‘Speak and Spell’ - 由FozzTexx在英文维基百科上，CC BY-SA 4.0，https://commons.wikimedia.org/w/index.php?curid=79574006
- en: The popularity of TI’s microcontrollers soon attracted competition. As it became
    possible to implement more sophisticated designs on a single low-cost integrated
    circuit, the 4-bit architecture of the TMS 1000 became an unnecessary constraint.
    Some competitors would build 4-bit designs, whilst others would move to more powerful
    8-bit architectures. We’ll look at these competitors and what happened next in
    Part 2 of the ‘Early History of the Microcontroller’.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: TI微控制器的流行很快吸引了竞争对手。随着在单个低成本集成电路上实现更复杂设计的可能性的增加，TMS 1000的4位架构成为一个不必要的限制。一些竞争对手会构建4位设计，而其他人则会转向更强大的8位架构。我们将在“微控制器早期历史”的第2部分中看看这些竞争对手和接下来发生了什么。
- en: Before we leave the TMS 1000 completely though, although it is no longer manufactured,
    there is an open-source implementation of the design available from the OpenCores
    website. As is often the case, popular technology never completely disappears.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管TMS 1000已不再生产，但在我们完全离开它之前，有一个开放源代码的设计实现可在OpenCores网站上获取。正如经常发生的那样，流行的技术永远不会完全消失。
- en: '* * *'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: If you’re wondering what the toy guitar looks and sounds like, here is a short
    clip.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想知道这个玩具吉他看起来和听起来是什么样子，这里是一个短视频。
- en: All the buttons and the ‘whammy bar’ work, but it also plays a pre-programmed
    tune.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的按钮和“颤音杆”都能用，但它也会播放一个预先编程的曲调。
- en: If you listen carefully you can hear my one-year old in background getting very
    excited!
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 仔细听的话，你可以听到背景中我一岁的孩子非常兴奋！
- en: '* * *'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: After the break, the references, links to more ‘further reading’ on early TI
    microcontrollers, including original documentation and key patents.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 休息一下，参考文献，更多关于早期TI微控制器的“进一步阅读”的链接，包括原始文档和关键专利。
