- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:36:38'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: YUI Compressor
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://yui.github.io/yuicompressor/](https://yui.github.io/yuicompressor/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: According to [Yahoo!'s Exceptional Performance Team](http://developer.yahoo.com/performance/),
    40% to 60% of Yahoo!'s users have an empty cache experience and about 20% of all
    page views are done with an empty cache (see [this article by Tenni Theurer on
    the YUIBlog for more information on browser cache usage](http://yuiblog.com/blog/2007/01/04/performance-research-part-2/)).
    This fact outlines the importance of keeping web pages as lightweight as possible.
    Improving the engineering design of a page or a web application usually yields
    the biggest savings and that should always be a primary strategy. With the right
    design in place, there are many secondary strategies for improving performance
    such as minification of the code, [HTTP compression](http://en.wikipedia.org/wiki/Http_compression),
    using CSS sprites, etc.
  prefs: []
  type: TYPE_NORMAL
- en: In terms of code minification, the most widely used tools to minify JavaScript
    code are Douglas Crockford's [JSMIN](http://crockford.com/javascript/jsmin), [the
    Dojo compressor](http://dojotoolkit.org/docs/shrinksafe) and Dean Edwards' [Packer](http://dean.edwards.name/packer/).
    Each of these tools, however, has drawbacks. JSMIN, for example, does not yield
    optimal savings (due to its simple algorithm, it must leave many line feed characters
    in the code in order not to introduce any new bugs).
  prefs: []
  type: TYPE_NORMAL
- en: The goal of JavaScript and CSS minification is always to preserve the operational
    qualities of the code while reducing its overall byte footprint (both in raw terms
    and after gzipping, as most JavaScript and CSS served from production web servers
    is gzipped as part of the HTTP protocol). The YUI Compressor is JavaScript minifier
    designed to be 100% safe and yield a higher compression ratio than most other
    tools. Tests on the [YUI Library](http://yuilibrary.com/) have shown savings of
    over 20% compared to JSMin (becoming 10% after HTTP compression). The YUI Compressor
    is also able to compress CSS files by using a port of [Isaac Schlueter](http://foohack.com/)'s
    regular-expression-based CSS minifier.
  prefs: []
  type: TYPE_NORMAL
- en: Quick Links
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Documentation](https://github.com/yui/yuicompressor/blob/master/README.md):
    Detailed description of the YUI Compressor and how to use it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Release Notes](https://github.com/yui/yuicompressor/blob/master/doc/CHANGELOG):
    Detailed change log for the YUI Compressor.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[CSS minification](css.html): Description of the CSS minification performed
    by the compressor.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**License:** All code specific to YUI Compressor is issued under a [BSD license](http://opensource.org/licenses/bsd-license.php).
    YUI Compressor extends and implements code from [Mozilla''s Rhino project](http://www.mozilla.org/rhino/).
    Rhino is issued under the [Mozilla Public License (MPL)](http://www.mozilla.org/MPL/),
    and MPL applies to the Rhino source and binaries that are distributed with YUI
    Compressor, including Rhino modifications made by YUI Compressor. YUI Compressor
    also makes use of and distributes a binary of [JArgs](http://jargs.sourceforge.net/);
    the JArgs BSD license applies to this binary.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Download](https://github.com/yui/yuicompressor/releases): Download the YUI
    Compressor.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How does the YUI Compressor work?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The YUI Compressor is written in [Java](http://java.sun.com/) (requires Java
    >= 1.4) and relies on [Rhino](http://www.mozilla.org/rhino/) to tokenize the source
    JavaScript file. It starts by analyzing the source JavaScript file to understand
    how it is structured. It then prints out the token stream, omitting as many white
    space characters as possible, and replacing all local symbols by a 1 (or 2, or
    3) letter symbol wherever such a substitution is appropriate (in the face of [evil
    features](http://www.jslint.com/lint.html) such as `eval` or `with`, the YUI Compressor
    takes a defensive approach by not obfuscating any of the scopes containing the
    evil statement) The CSS compression algorithm uses a set of finely tuned regular
    expressions to compress the source CSS file. The YUI Compressor is open-source,
    so don't hesitate to look at the code to understand exactly how it works.
  prefs: []
  type: TYPE_NORMAL
- en: Using the YUI Compressor from the command line
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Note:** If no input file is specified, it defaults to stdin.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following command line (x.y.z represents the version number):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: will minify the file `myfile.js` and output the file `myfile-min.js`. For more
    information on how to use the YUI Compressor, please refer to the documentation
    included in the archive.
  prefs: []
  type: TYPE_NORMAL
- en: The charset parameter isn't always required, but the compressor may throw an
    error if the file's encoding is incompatible with the system's default encoding.
    In particular, if your file is encoded in utf-8, you should supply the parameter.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Additional notes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Don't hesitate to use the `-v` option. Although not a replacement for [JSLint](http://www.jslint.com/lint.html),
    it will output some helpful hints when it senses that something might be wrong
    with your code.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you wish to minify your files on the backend (also known as on-the-fly minification)
    instead of at build time, you will want to cache the minified files in memory
    for optimal performance (instead of minifying the same files over and over & minification
    is a time consuming process) Note that the YUI Compressor can easily be instantiated
    and used from a Java-based environment (Servlet).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Support & Community
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: YUICompressor is discussed on the on the [YUICompressor Google Group](https://groups.google.com/forum/#!forum/yuicompressor).
  prefs: []
  type: TYPE_NORMAL
- en: Also be sure to check out [YUIBlog](http://yuiblog.com) for updates and articles
    about the YUI Library written by the library's developers.
  prefs: []
  type: TYPE_NORMAL
- en: Filing Bugs & Feature Requests
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: YUICompressor uses [Github Issues](https://github.com/yui/yuicompressor) to
    track issues.
  prefs: []
  type: TYPE_NORMAL
- en: More Reading about JavaScript/CSS minification and the YUI Compressor
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
