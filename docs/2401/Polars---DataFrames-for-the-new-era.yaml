- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:35:37'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Polars — DataFrames for the new era
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://pola.rs/](https://pola.rs/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '01'
  prefs: []
  type: TYPE_NORMAL
- en: Easy
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: to use
  prefs: []
  type: TYPE_NORMAL
- en: Write your queries the way they were intended. Polars will determine the most
    efficient way to execute them using its query optimizer.
  prefs: []
  type: TYPE_NORMAL
- en: '02'
  prefs: []
  type: TYPE_NORMAL
- en: Embarrassingly
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: parallel
  prefs: []
  type: TYPE_NORMAL
- en: Complete your queries faster! Polars fully utilizes the power of your machine
    by dividing the workload among the available CPU cores without any additional
    configuration or serialization overhead.
  prefs: []
  type: TYPE_NORMAL
- en: '03'
  prefs: []
  type: TYPE_NORMAL
- en: Apache
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Arrow
  prefs: []
  type: TYPE_NORMAL
- en: Polars utilizes the Apache Arrow memory model allowing you to easily integrate
    with existing tools in the data landscape. It supports zero-copy data sharing
    for efficient collaboration.
  prefs: []
  type: TYPE_NORMAL
- en: '04'
  prefs: []
  type: TYPE_NORMAL
- en: Close to
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: the metal
  prefs: []
  type: TYPE_NORMAL
- en: Polars is written from the ground up, designed close to the machine and without
    external dependencies. This allows for full control of the ecosystem (API, memory
    & execution).
  prefs: []
  type: TYPE_NORMAL
- en: '05'
  prefs: []
  type: TYPE_NORMAL
- en: Written
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: in Rust
  prefs: []
  type: TYPE_NORMAL
- en: The core of Polars is written in Rust, one of the fastest growing programming
    languages in the world. Rust allows for high performance with fine-grained control
    over memory.
  prefs: []
  type: TYPE_NORMAL
- en: '06'
  prefs: []
  type: TYPE_NORMAL
- en: Out
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: of core
  prefs: []
  type: TYPE_NORMAL
- en: Want to process large data sets that are bigger than your memory? Our streaming
    API allows you to process your results efficiently, eliminating the need to keep
    all data in memory.
  prefs: []
  type: TYPE_NORMAL
