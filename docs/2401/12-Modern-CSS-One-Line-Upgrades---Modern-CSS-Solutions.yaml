- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 15:19:23'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 15:19:23
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 12 Modern CSS One-Line Upgrades | Modern CSS Solutions
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 12 现代 CSS 一行升级 | 现代 CSS 解决方案
- en: 来源：[https://moderncss.dev/12-modern-css-one-line-upgrades/](https://moderncss.dev/12-modern-css-one-line-upgrades/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://moderncss.dev/12-modern-css-one-line-upgrades/](https://moderncss.dev/12-modern-css-one-line-upgrades/)
- en: Sometimes, improving your application CSS just takes a one-line upgrade or enhancement!
    Learn about 12 properties to start incorporating into your projects, and enjoy
    reducing technical debt, removing JavaScript, and scoring easy wins for user experience.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，改进应用的 CSS 只需要一行升级或增强！了解 12 种属性，开始将它们融入到您的项目中，享受减少技术债务、删除 JavaScript 并为用户体验赢得轻松胜利。
- en: 'Properties are explored for the following categories:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 属性被探索以下类别：
- en: '**[Stable Upgrades](#stable-upgrades)**: fix a hack or issue by replacing older
    techniques'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[稳定的升级](#stable-upgrades)**：通过替换较旧的技术修复 hack 或问题'
- en: '**[Stable Enhancements](#stable-enhancements)**: provide an improved experience
    with well-supported modern properties'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[稳定的增强](#stable-enhancements)**：通过良好支持的现代属性提供改进的体验'
- en: '**[Progressive Enhancements](#progressive-enhancements)**: provide an upgraded
    experience when these properties are supported without causing harm in unsupporting
    browsers'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[渐进式增强](#progressive-enhancements)**：在支持这些属性时提供升级的体验，而不会在不支持的浏览器中造成损害'
- en: The following well-supported properties can help fix a hack or long-standing
    issue by replacing older techniques.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 以下受到良好支持的属性可以通过替换较旧的技术来修复 hack 或长期存在的问题。
- en: Have you ever used the “[padding hack](https://css-tricks.com/aspect-ratio-boxes/)”
    to force an aspect ratio such as 16:9 for video embeds? As of September 2021,
    the `aspect-ratio` property is stable in evergreen browsers and is the only property
    needed to define an aspect ratio.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你曾经使用过 “[padding hack](https://css-tricks.com/aspect-ratio-boxes/)” 来强制视频嵌入的宽高比，比如
    16:9 吗？截至 2021 年 9 月，`aspect-ratio` 属性在常青浏览器中是稳定的，是唯一需要定义宽高比的属性。
- en: 'For an HD video, you can just use `aspect-ratio: 16/9`. For a perfect square,
    only `aspect-ratio: 1` is required since the implied second value is also `1`
    .'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '对于高清视频，您只需使用 `aspect-ratio: 16/9`。对于完美的正方形，只需要 `aspect-ratio: 1`，因为隐含的第二个值也是
    `1`。'
- en: <details open=""><summary>CSS for "Basic use of aspect-ratio"</summary>
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: <details open=""><summary>用于“基本使用 aspect-ratio”的 CSS</summary>
- en: '[PRE0]</details>'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE0]</details>'
- en: Of note, an applied `aspect-ratio` is forgiving and will allow content to take
    precedence. This means that when content would cause the element to exceed the
    ratio in at least one dimension, the element will still grow or change shape to
    accommodate the content. To prevent or control this behavior, you can add additional
    dimension properties, like `max-width`, which may be necessary to avoid expanding
    out of a flex or grid container.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，应用了 `aspect-ratio` 是宽容的，并且将允许内容优先。这意味着当内容会导致元素在至少一个维度上超过比例时，元素仍然会增长或改变形状以容纳内容。为了防止或控制此行为，您可以添加额外的尺寸属性，例如
    `max-width`，这可能是必要的，以避免在 flex 或 grid 容器中扩展。
- en: <details open=""><summary>CSS for "Forgiving aspect-ratio"</summary>
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: <details open=""><summary>用于“宽容的 aspect-ratio”的 CSS</summary>
- en: '[PRE1]</details>'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE1]</details>'
- en: Lorem, ipsum dolor sit amet consectetur adipisicing elit. Iste molestias maiores
    velit quaerat debitis incidunt delectus nulla, quibusdam fugit eos? Fugiat asperiores
    assumenda nulla corrupti, sit repellendus ducimus necessitatibus voluptates.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Lorem ipsum dolor sit amet consectetur adipisicing elit. Iste molestias maiores
    velit quaerat debitis incidunt delectus nulla, quibusdam fugit eos? Fugiat asperiores
    assumenda nulla corrupti, sit repellendus ducimus necessitatibus voluptates.
- en: Lorem, ipsum dolor sit amet consectetur adipisicing elit.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Lorem ipsum dolor sit amet consectetur adipisicing elit.
- en: Iste molestias maiores velit quaerat debitis incidunt delectus nulla, quibusdam
    fugit eos?
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Iste molestias maiores velit quaerat debitis incidunt delectus nulla, quibusdam
    fugit eos?
- en: If you are hesitant to fully replace the padding hack and still want to provide
    some dimension guardrails, review the [Smol Aspect Ratio Gallery](https://smolcss.dev/#smol-aspect-ratio-gallery)
    for a progressively enhanced solution to `aspect-ratio`.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不愿完全替换填充 hack 并仍想提供一些尺寸限制，可以查看 [Smol Aspect Ratio Gallery](https://smolcss.dev/#smol-aspect-ratio-gallery)
    了解 `aspect-ratio` 的渐进增强解决方案。
- en: This is actually the oldest property in this list, but it solves an important
    issue and definitely fits the sentiment of a one-line upgrade.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这实际上是列表中最古老的属性，但它解决了一个重要问题，并且绝对符合一行升级的情感。
- en: The use of `object-fit` causes an `img` or other [replaced element](https://developer.mozilla.org/en-US/docs/Web/CSS/Replaced_element)
    to act as the container for its contents and have the those contents adopt resizing
    behavior similar to `background-size`.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: 'While there are a few values available for `object-fit`, the following are
    the ones you’re most likely to use:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '`cover` - the image resizes to *cover* the element, and maintains its aspect-ratio
    so that the content is not distorted'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`scale-down` - the image resizes (if needed) *within* the element so that it
    is fully visible without being clipped and maintains its aspect-ratio, which may
    lead to extra space (”letterboxing”) around the image if the element has a different
    rendered aspect-ratio'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In either case, `object-fit` is an excellent property pairing with `aspect-ratio`
    to ensure images are not distorted when you apply a custom aspect ratio.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: <details open=""><summary>CSS for "Use of object-fit with aspect-ratio"</summary>
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]</details>'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: Review my [explanation of object-fit](https://egghead.io/lessons/css-apply-aspect-ratio-sizing-to-images-with-css-object-fit?af=2s65ms)
    in this free egghead video lesson.
  id: totrans-31
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: One of many logical properties, `margin-inline` functions as a shorthand for
    setting the inline (left and right in horizontal writing modes) margin.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: 'The replacement here is simple:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Logical properties have been available for a couple of years and now have [support
    upwards of 98%](https://caniuse.com/css-logical-props) (with occasional prefixing).
    Review this article from Ahmad Shadeed to learn more about [using logical properties](https://ishadeed.com/article/css-logical-properties/)
    and their importance for sites with international audiences.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: These well-supported modern CSS properties can provide an improved experience,
    and may also allow replacing older methods or even JavaScript-aided solutions.
    Fallback solutions are not likely to be needed, although this is dependent on
    your specific application considerations, and testing is always encouraged.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: 'The use of `text-underline-offset` allows you to control the distance between
    the text baseline and the underline. This property has become a part of my standard
    reset, applied as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: You can use this offset to clear descenders as well as (subjectively) improve
    legibility, particularly when links are grouped in close proximity, such as a
    bulleted list of links.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: 'This upgrade may replace older hacks like a border or pseudo-element, or even
    a gradient background, especially when used with its friends:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: Have you been using `box-shadow` or perhaps a pseudo-element to supply a custom
    outline when you wanted distance between the element and outline on focus?
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: Good news! The long-available `outline-offset` property ([as early as 2006](https://caniuse.com/?search=outline-offset)!)
    may be one you missed, and it enables pushing the outline away from the element
    with a positive value or pulling it into the element with a negative value.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: In the demo, the gray solid line is the element border, and the blue dashed
    line is the outline being positioned via `outline-offset`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: <details open=""><summary>CSS for "Positive and negative outline-offset"</summary>
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]</details>'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: Positive offset Negative offset
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: '**Reminder**: outlines are *not* computed as part of the element’s box size,
    so increasing the distance will not increase the amount of space an element occupies.
    This is similar to how `box-shadow` is rendered without impacting the element
    size as well.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: Learn more about [using outline-offset as an accessibility improvement](https://moderncss.dev/modern-css-upgrades-to-improve-accessibility/#focus-visibility)
    for focus visibility.
  id: totrans-48
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The `scroll-margin` set of properties (and corresponding `scroll-padding`) allows
    adding an offset to an element in the context of the scroll position. In other
    words, adding `scroll-padding-top` can increase scroll offset above the element
    but doesn’t affect its layout position within the document.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: Why is this useful? Well, it can alleviate issues caused by a sticky nav element
    covering content when an anchor link is activated. Using `scroll-margin-top` we
    can increase the space above the element when it is scrolled to via navigation
    to account for the space occupied by the sticky nav.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: I like to include a generic starting rule in my reset for any element with an
    `[id]` attribute given it has the potential to become an anchor link.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: An alternative selector is explored in the Modern CSS article on [component-based
    architecture](https://moderncss.dev/modern-css-for-dynamic-component-based-architecture/#css-reset-additions)
    and is also in use on this site, as can be tested by using the links from the
    article table of contents sidebar.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: For a more robust solution when accounting for the overlap of sticky, fixed,
    or absolute positioned elements, you may want to use a custom property with a
    fallback value. Then, with the assistance of JavaScript, measure the real distance
    needed and [update the custom property value](https://12daysofweb.dev/2021/css-custom-properties/#accessing-and-setting-custom-properties-with-javascript).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'I encourage you to also update this solution further and use the logical property
    equivalents: `scroll-padding-block-start` and `-block-end`.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: You may be familiar with the `prefers-color-scheme` media query to customize
    dark and light themes. The CSS property `color-scheme` is an opt-in to adapting
    browser UI elements including form controls, scrollbars, and CSS system colors.
    The adaptation asks the browser to render those items with either a `light` or
    `dark` scheme, and the property allows defining a preference order.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: If you’re enabling adapting your entire application, set the following on the
    `:root`, which says to preference a `dark` theme (or flip the order to preference
    a `light` theme).
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: You can also define `color-scheme` on individual elements, such as adjusting
    form controls within an element with a dark background for improved contrast.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Learn from Sara Joy’s presentation about how to [use color-scheme for easy dark
    mode](https://www.youtube.com/watch?v=Lye56NHGtLA), and more about incorporating
    this feature.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 从萨拉·乔伊的演示中了解如何[使用 color-scheme 实现简单的深色模式](https://www.youtube.com/watch?v=Lye56NHGtLA)，以及更多关于集成此功能的信息。
- en: If you’ve ever wanted to change the color of checkboxes or radio buttons, you’ve
    been seeking `accent-color`. With this property, you can modify the `:checked`
    appearance of radio buttons and checkboxes and the filled-in state for both the
    progress element and range input. The browser’s default focus “halo” may also
    be adjusted if you do not have another override.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您曾经想要更改复选框或单选按钮的颜色，您一定在寻找 `accent-color`。使用此属性，您可以修改单选按钮和复选框的 `:checked` 外观，以及进度元素和范围输入的填充状态。如果您没有其他覆盖，则还可以调整浏览器的默认焦点“光环”。
- en: <details open=""><summary>CSS for "Effect of using accent-color"</summary>
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: <details open=""><summary>“使用 accent-color 的效果” CSS</summary>
- en: '[PRE10]</details>'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE10]</details>'
- en: Consider adding both `accent-color` and `color-scheme` to your baseline application
    styles for a quick win toward custom theme management.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑将 `accent-color` 和 `color-scheme` 都添加到您的基线应用程序样式中，以快速实现自定义主题管理的胜利。
- en: If you need more comprehensive custom styling for form controls, review the
    Modern CSS series beginning with [radio buttons](https://moderncss.dev/pure-css-custom-styled-radio-buttons/).
  id: totrans-67
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果您需要更全面的自定义样式来控制表单控件，请查看以[单选按钮](https://moderncss.dev/pure-css-custom-styled-radio-buttons/)开头的现代
    CSS 系列。
- en: One of my favorite CSS hidden gems is the use of `fit-content` to “shrink wrap”
    an element to its contents.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我最喜欢的 CSS 隐藏宝石之一是使用 `fit-content` 将元素“包裹”到其内容中。
- en: 'Whereas you may have used an inline display value such as `display: inline-block`
    to reduce an element’s width to the content size, an upgrade to `width: fit-content`
    will achieve the same effect. The advantage of `width: fit-content` is that it
    leaves the `display` value available, thereby not changing the position of the
    element in the layout unless you adjust that as well. The computed box size will
    adjust to the dimensions created by `fit-content`.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '尽管您可能已经使用了内联显示值，如 `display: inline-block` 来将元素的宽度减小到内容尺寸，但升级到 `width: fit-content`
    将实现相同的效果。`width: fit-content` 的优势在于它保留了 `display` 值，因此除非您也调整了位置，否则不会更改布局中元素的位置。计算的盒子尺寸将根据
    `fit-content` 创建的尺寸调整。'
- en: <details open=""><summary>CSS for "Basic usage of fit-content"</summary>
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: <details open=""><summary>“基本使用 fit-content”的 CSS</summary>
- en: '[PRE11]</details>'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE11]</details>'
- en: Using fit-content
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 fit-content
- en: Without the use of fit-content
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 没有使用 fit-content
- en: The `fit-content` value is one of several [keywords that enable intrinsic sizing](https://moderncss.dev/contextual-spacing-for-intrinsic-web-design/).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`fit-content` 值是[启用内在尺寸的关键字之一](https://moderncss.dev/contextual-spacing-for-intrinsic-web-design/)。'
- en: 'Consider the secondary upgrade for this technique to the logical property equivalent
    of `inline-size: fit-content`.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '考虑将此技术升级为逻辑属性等效的 `inline-size: fit-content`。'
- en: '**Progressive Enhancements**'
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**渐进增强**'
- en: '[#](#progressive-enhancements)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[#](#progressive-enhancements)'
- en: This last set of properties provides an upgraded experience when they are supported
    and can be used without fear of causing harm in unsupporting browsers. This means
    they do not need a fallback method even though they are more recent additions
    to modern CSS.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 当这些属性得到支持并且可以在不支持的浏览器中使用时，最后一组属性提供了升级的体验。这意味着即使它们是现代 CSS 的最新添加，也不需要回退方法。
- en: The default behavior of contained scroll regions - areas with limited dimensions
    where overflow is allowed to be scrolled - is that when the scroll runs out in
    the element, the scroll interaction passes to the background page. This can be
    jarring at best, and frustrating at worst for your users.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 包含滚动区域的默认行为——即具有有限尺寸的区域，允许溢出内容滚动——是，当滚动超出元素范围时，滚动交互会传递到背景页面。对于您的用户来说，这可能是最好的情况，最糟糕的情况则可能令人沮丧。
- en: 'Use of `overscroll-behavior: contain` will isolate the scrolling to the contained
    region, preventing continuing the scroll by moving it to the parent page once
    the scroll boundary is reached. This is useful in contexts such as a sidebar of
    navigation links, which may have an independent scroll from the main page content,
    which may be a long article or documentation page.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '使用 `overscroll-behavior: contain` 将滚动隔离到包含的区域，防止在滚动边界达到时将滚动移动到父页面。这在诸如导航链接的边栏之类的情况下非常有用，该边栏可能与主页面内容具有独立的滚动，该内容可能是一篇长文章或文档页面。'
- en: <details open=""><summary>CSS for "Basic usage of overscroll-behavior"</summary>
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: <details open=""><summary>CSS for "基本使用方式的 overscroll-behavior"</summary>
- en: '[PRE12]</details>'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE12]</details>'
- en: Lorem ipsum dolor sit amet consectetur adipisicing elit. Maxime nobis consectetur
    earum!
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Lorem ipsum dolor sit amet consectetur adipisicing elit. Maxime nobis consectetur
    earum!
- en: Aliquid a praesentium quis in consequuntur mollitia laboriosam illum nemo commodi
    aut?
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: Aliquid a praesentium quis in consequuntur mollitia laboriosam illum nemo commodi
    aut?
- en: Doloremque sapiente quos dignissimos sequi cupiditate commodi nemo non perspiciatis
    placeat totam.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Doloremque sapiente quos dignissimos sequi cupiditate commodi nemo non perspiciatis
    placeat totam.
- en: Reiciendis, at nulla! Hic nemo eius atque laborum consequuntur iusto exercitationem
    quasi.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: Reiciendis, at nulla! Hic nemo eius atque laborum consequuntur iusto exercitationem
    quasi.
- en: Est, assumenda amet culpa veritatis maxime debitis? Suscipit error amet quas
    sed?
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: Est, assumenda amet culpa veritatis maxime debitis? Suscipit error amet quas
    sed?
- en: Magnam exercitationem neque error deleniti consequuntur, dolor repellat quo
    perferendis dicta sunt.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: Magnam exercitationem neque error deleniti consequuntur, dolor repellat quo
    perferendis dicta sunt.
- en: Ipsum id repellat velit laudantium vel autem eos non aperiam qui nobis?
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: Ipsum id repellat velit laudantium vel autem eos non aperiam qui nobis?
- en: Ratione maxime neque numquam minima, omnis dolorem temporibus laboriosam dolor
    atque suscipit?
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: Ratione maxime neque numquam minima, omnis dolorem temporibus laboriosam dolor
    atque suscipit?
- en: Dolores assumenda dolore similique eaque, odio voluptatibus. Aliquid iusto nostrum
    iste? Exercitationem.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: Dolores assumenda dolore similique eaque, odio voluptatibus. Aliquid iusto nostrum
    iste? Exercitationem.
- en: Quos adipisci ea ullam amet blanditiis voluptatibus, fuga laborum sed facere
    quasi!
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: Quos adipisci ea ullam amet blanditiis voluptatibus, fuga laborum sed facere
    quasi!
- en: Odio rerum labore veritatis esse eaque quae debitis possimus ea omnis vitae.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: Odio rerum labore veritatis esse eaque quae debitis possimus ea omnis vitae.
- en: Quasi eum obcaecati laborum eaque nostrum numquam tempore reprehenderit qui
    beatae debitis?
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Quasi eum obcaecati laborum eaque nostrum numquam tempore reprehenderit qui
    beatae debitis?
- en: Optio atque fugit quia reprehenderit dolor rem et delectus praesentium ratione
    provident.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Optio atque fugit quia reprehenderit dolor rem et delectus praesentium ratione
    provident.
- en: Sed accusamus at architecto dolore minima error, assumenda amet nam perferendis
    odit?
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Sed accusamus at architecto dolore minima error, assumenda amet nam perferendis
    odit?
- en: Et eius enim est hic doloribus reiciendis qui cupiditate? Autem, iure cupiditate?
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: Et eius enim est hic doloribus reiciendis qui cupiditate? Autem, iure cupiditate?
- en: One of the newest properties (as of 2023) is `text-wrap`, which has two values
    that solve the type-setting problem of unbalanced lines. This includes preventing
    “orphans,” which describes a lonely word sitting by itself in the last text line.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 最新的属性之一（截至 2023 年）是 `text-wrap`，它有两个值可解决不平衡行的排版问题。这包括防止“孤立词”，这描述了最后一行中孤立的单词。
- en: The first available value is `balance`, which has a goal of evening out the
    number of characters per line of text.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个可用的值是 `balance`，其目标是平衡每行文字的字符数。
- en: There is a limitation of six lines of wrapped text, so the technique is best
    used on headlines or other shorter text passages. Limiting the scope of application
    also helps limit the impact on page rendering speed.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 文本包装最多只能有六行，因此该技术最适用于标题或其他较短的文本段落。限制应用范围还有助于限制对页面呈现速度的影响。
- en: '<details open=""><summary>CSS for "Applying text-wrap: balance"</summary>'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '<details open=""><summary>CSS for "应用 text-wrap: balance"</summary>'
- en: '[PRE13]</details>'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE13]</details>'
- en: This text has been balanced by text-wrap
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 此文本已通过 text-wrap 进行平衡
- en: This text has not been balanced by text-wrap
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 此文本未经 text-wrap 平衡处理
- en: The other value of `pretty` specifically addresses preventing orphans and can
    be more broadly applied. The algorithm behind `pretty` will evaluate the last
    four lines in a text block to work out adjustments as needed to ensure the last
    line has two or more words.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '`pretty` 的另一个值专门解决了孤立词汇的问题，并且可以更广泛地应用。`pretty` 背后的算法将评估文本块中的最后四行，以确保必要时进行调整，以确保最后一行有两个或更多单词。'
- en: '<details open=""><summary>CSS for "Applying text-wrap: balance"</summary>'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '<details open=""><summary>CSS for "应用 text-wrap: balance"</summary>'
- en: '[PRE14]</details>'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE14]</details>'
- en: '**With text-wrap: pretty**'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用 text-wrap: pretty**'
- en: Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolore cupiditate aliquid,
    facere explicabo voluptatibus iure! Saepe nostrum quasi corporis totam accusamus
    beatae obcaecati rerum fugiat minima perferendis voluptatibus.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolore cupiditate aliquid,
    facere explicabo voluptatibus iure! Saepe nostrum quasi corporis totam accusamus
    beatae obcaecati rerum fugiat minima perferendis voluptatibus.
- en: '**Without**'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '**Without**'
- en: Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolore cupiditate aliquid,
    facere explicabo voluptatibus iure! Saepe nostrum quasi corporis totam accusamus
    beatae obcaecati rerum fugiat minima perferendis voluptatibus.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolore cupiditate aliquid,
    facere explicabo voluptatibus iure! Saepe nostrum quasi corporis totam accusamus
    beatae obcaecati rerum fugiat minima perferendis voluptatibus.
- en: Use of `text-wrap` is a great progressive enhancement. However, any adjustments
    do not change an element's computed width, so a side-effect in some layouts may
    be an increase in unwanted space next to the text.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`text-wrap`是一个很好的渐进增强方法。但是，任何调整都不会改变元素的计算宽度，因此在某些布局中的副作用可能是在文本旁边增加不需要的空间。
- en: 'In some scenarios, the appearance or disappearance of scrollbars can cause
    an unwanted layout shift. For example, when a dialog overlay is displayed and
    the background page adds `overflow: hidden` to prevent scrolling, causing a shift
    from removing the no longer needed scrollbars.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '在某些情况下，滚动条的出现或消失可能导致不希望的布局移位。例如，当显示对话框叠加层时，背景页面添加`overflow: hidden`以防止滚动，导致移除不再需要的滚动条时发生移位。'
- en: The modern CSS property `scrollbar-gutter` enables a reservation of space for
    scrollbars in the layout, which prevents that undesirable shift. When there’s
    no need for a scrollbar, the browser will still paint a gutter as extra space
    created in addition to any padding on the scroll container.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 现代 CSS 属性`scrollbar-gutter`使布局中保留了滚动条的空间，从而防止了不希望的移位。当不需要滚动条时，浏览器仍会绘制一个额外空间作为滚动容器上的填充之外的额外空间。
- en: '**Important**: This property only has an effect when the user’s system settings
    are *not* for “overlay” scrollbars, as in the default for Mac OS, where the scrollbar
    only appears as an overlay on content that is actively being scrolled. Do not
    drop padding in favor of `scrollbar-gutter` since you will lose all intended space
    when overlay scrollbars are in use.'
  id: totrans-115
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**重要提示**：仅当用户系统设置为*不*使用“叠加”滚动条时，此属性才会生效，如默认情况下的 macOS，滚动条只会在正在主动滚动的内容上显示为叠加层。不要为了使用`scrollbar-gutter`而放弃填充，因为在使用叠加滚动条时，您将失去所有预期的空间。'
- en: 'Since this is visually apparent extra space, you may choose to assign this
    property using two keywords: `scrollbar-gutter: stable both-edges`. The use of
    `stable` by itself only adds a gutter where the scrollbar would otherwise be,
    while the addition of `both-edges` preferences adding the space to the opposite
    side of the scroll container, too. This ensures visual balance when the layout
    doesn’t yet need scrollbars to be visible. See [a visual of using scrollbar-gutter](https://defensivecss.dev/tip/scrollbar-gutter/)
    from Ahmad Shadeed.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '由于这是明显的额外空间，您可以选择使用两个关键字来分配此属性：`scrollbar-gutter: stable both-edges`。仅使用`stable`会在滚动条位置添加间隙，而添加`both-edges`则会将空间添加到滚动容器的另一侧。这样可以确保在布局尚未需要滚动条可见时保持视觉平衡。请参阅
    [使用 scrollbar-gutter 的可视化](https://defensivecss.dev/tip/scrollbar-gutter/)来自 Ahmad
    Shadeed。'
- en: '* * *'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Be sure to review more of the articles here to upgrade your CSS knowledge even
    more! A great place to start is [the topics list.](https://moderncss.dev/topics/)
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 一定要查看这里的更多文章，以进一步提升您的 CSS 知识！一个很好的起点是[主题列表。](https://moderncss.dev/topics/)
