- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:30:29'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:30:29
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: The One Billion Row Challenge - Gunnar Morling
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一亿行挑战 - Gunnar Morling
- en: 来源：[https://www.morling.dev/blog/one-billion-row-challenge/](https://www.morling.dev/blog/one-billion-row-challenge/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.morling.dev/blog/one-billion-row-challenge/](https://www.morling.dev/blog/one-billion-row-challenge/)
- en: '*Update Jan 4: Wow, this thing really took off!* *1BRC is discussed at a couple
    of places on the internet, including [Hacker News](https://news.ycombinator.com/item?id=38851337),
    [lobste.rs](https://lobste.rs/s/u2qcnf/one_billion_row_challenge), and [Reddit](https://old.reddit.com/r/programming/comments/18x0x0u/the_one_billion_row_challenge/).*'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*更新1月4日：哇，这事情真的火了！* *1BRC在互联网上的几个地方都有讨论，包括[Hacker News](https://news.ycombinator.com/item?id=38851337)、[lobste.rs](https://lobste.rs/s/u2qcnf/one_billion_row_challenge)和[Reddit](https://old.reddit.com/r/programming/comments/18x0x0u/the_one_billion_row_challenge/)。*'
- en: '*Thanks a lot for all the submissions, this is going way beyond what I’d have
    expected!* *I am behind a bit with evalutions due to the sheer amount of entries,
    I will work through them bit by bit.* *I have also made a few clarifications to
    [the rules](https://github.com/gunnarmorling/1brc#faq) of the challenge; please
    make sure to read them before submitting any entries.*'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '*非常感谢所有的投稿，这远远超出了我的预期！* *由于参赛作品数量庞大，我有点拖后腿，我会一点一点地逐个评估。* *我还对挑战的[规则](https://github.com/gunnarmorling/1brc#faq)做了一些澄清，请务必在提交任何作品之前阅读它们。*'
- en: Let’s kick off 2024 true coder style—​I’m excited to announce the [One Billion
    Row Challenge](https://github.com/gunnarmorling/onebrc) (1BRC), running from Jan
    1 until Jan 31.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们以真正的编程者风格开始2024年—我很兴奋地宣布[One Billion Row Challenge](https://github.com/gunnarmorling/onebrc)（1BRC），从1月1日持续到1月31日。
- en: 'Your mission, should you decide to accept it, is deceptively simple: write
    a Java program for retrieving temperature measurement values from a text file
    and calculating the min, mean, and max temperature per weather station. There’s
    just one caveat: the file has **1,000,000,000 rows**!'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你决定接受这个任务，你的任务看起来很简单：编写一个Java程序，从文本文件中检索温度测量值，并计算每个气象站的最小、平均和最大温度。只有一个小问题：这个文件有**10亿行**！
- en: 'The text file has a simple structure with one measurement value per row:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 文本文件具有简单的结构，每行一个测量值：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '1'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '1'
- en: '2'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '2'
- en: '3'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '3'
- en: '4'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '4'
- en: '5'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '5'
- en: '6'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '6'
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Hamburg;12.0
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 汉堡;12.0
- en: Bulawayo;8.9
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 布拉瓦约;8.9
- en: Palembang;38.8
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 巴邻港;38.8
- en: St. John's;15.2
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 圣约翰;15.2
- en: Cracow;12.6
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 克拉科夫;12.6
- en: '...'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The program should print out the min, mean, and max values per station, alphabetically
    ordered like so:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 该程序应该按照字母顺序打印出每个站点的最小、平均和最大值，如下所示：
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '1'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '1'
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '{Abha=5.0/18.0/27.4, Abidjan=15.7/26.0/34.1, Abéché=12.1/29.4/35.6, Accra=14.7/26.4/33.1,
    Addis Ababa=2.1/16.0/24.3, Adelaide=4.1/17.3/29.7, ...}'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '{阿巴=5.0/18.0/27.4, 阿比让=15.7/26.0/34.1, 阿贝谢=12.1/29.4/35.6, 阿克拉=14.7/26.4/33.1,
    亚的斯亚贝巴=2.1/16.0/24.3, 阿德莱德=4.1/17.3/29.7, ...}'
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The goal of the 1BRC challenge is to create the fastest implementation for this
    task, and while doing so, explore the benefits of modern Java and find out how
    far you can push this platform. So grab all your (virtual) threads, reach out
    to the Vector API and SIMD, optimize your GC, leverage AOT compilation, or pull
    any other trick you can think of.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 1BRC挑战的目标是为这个任务创建最快的实现，同时探索现代Java的优势，并找出你可以推动这个平台的程度。所以抓住你的（虚拟）线程，利用Vector API和SIMD，优化你的GC，利用AOT编译，或者使用任何其他你能想到的技巧。
- en: 'There’s a few simple rules of engagement for 1BRC (see [here](https://github.com/gunnarmorling/onebrc#running-the-challenge)
    for more details):'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 1BRC的参与规则很简单（更多详情见[这里](https://github.com/gunnarmorling/onebrc#running-the-challenge)）：
- en: Any submission must be written in Java
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何提交必须用Java编写
- en: Any Java distribution available through [SDKMan](https://sdkman.io/) as well
    as early access builds from [openjdk.net](https://openjdk.net) may be used, including
    EA builds for OpenJDK projects like Valhalla
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以使用通过[SDKMan](https://sdkman.io/)可用的任何Java分发，以及来自[openjdk.net](https://openjdk.net)的早期访问构建，包括Valhalla等OpenJDK项目的EA构建
- en: No external dependencies may be used
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不得使用外部依赖
- en: To enter the challenge, clone the [1brc repository](https://github.com/gunnarmorling/1brc)
    from GitHub and follow the instructions in the README file. There is a very [basic
    implementation](https://github.com/gunnarmorling/1brc/blob/main/src/main/java/dev/morling/onebrc/CalculateAverage_baseline.java)
    of the task which you can use as a baseline for comparisons and to make sure that
    your own implementation emits the correct result. Once you’re satisfied with your
    work, open a pull request against the upstream repo to submit your implementation
    to the challenge.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 要参加挑战，请从GitHub克隆[1brc存储库](https://github.com/gunnarmorling/1brc)，并按照README文件中的说明操作。有一个非常[基本的实现](https://github.com/gunnarmorling/1brc/blob/main/src/main/java/dev/morling/onebrc/CalculateAverage_baseline.java)任务，您可以将其用作比较的基准，并确保您自己的实现输出正确结果。一旦您对自己的工作满意，请对上游存储库打开拉取请求，以将您的实现提交给挑战。
- en: All submissions will be evaluated by running the program on a [Hetzner Cloud
    CCX33](https://www.hetzner.com/cloud) instance (8 dedicated vCPU, 32 GB RAM).
    The `time` program is used for measuring execution times, i.e. end-to-end times
    are measured. Each contender will be run five times in a row. The slowest and
    the fastest runs are discarded. The mean value of the remaining three runs is
    the result for that contender and will be added to the [leaderboard](https://github.com/gunnarmorling/onebrc#results).
    If you have any questions or would like to discuss any potential 1BRC optimization
    techniques, please join [the discussion](https://github.com/gunnarmorling/1brc/discussions)
    in the GitHub repo.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 所有提交将通过在[Hetzner Cloud CCX33](https://www.hetzner.com/cloud)实例上运行程序进行评估（8个专用vCPU，32
    GB RAM）。使用`time`程序来测量执行时间，即端到端时间。每个参与者将连续运行五次。最慢和最快的运行将被丢弃。剩下三次运行的平均值是该参与者的结果，并将被添加到[排行榜](https://github.com/gunnarmorling/onebrc#results)中。如果您有任何疑问或想讨论任何潜在的1BRC优化技术，请加入GitHub存储库中的[讨论](https://github.com/gunnarmorling/1brc/discussions)。
- en: As for a prize, by entering this challenge, you may learn something new, get
    to inspire others, and take pride in seeing your name listed in the scoreboard
    above. Rumor has it that the winner may receive a unique 1️⃣🐝🏎️ t-shirt, too.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 至于奖品，通过参加这个挑战，你可能会学到新东西，激励他人，并为看到自己的名字列在上面的排行榜上感到自豪。有传言说获胜者可能会得到一件独一无二的1️⃣🐝🏎️
    T恤。
- en: So don’t wait, join this challenge, and find out how fast Java can be—​I’m really
    curious what the community will come up with for this one. Happy 2024, coder style!
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 所以不要等了，加入这个挑战，看看Java有多快——我真的很好奇社区会为这个挑战想出什么。Happy 2024, coder style!
