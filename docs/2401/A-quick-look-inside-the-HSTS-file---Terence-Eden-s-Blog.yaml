- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:30:34'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: A quick look inside the HSTS file – Terence Eden’s Blog
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://shkspr.mobi/blog/2024/01/a-quick-look-inside-the-hsts-file/](https://shkspr.mobi/blog/2024/01/a-quick-look-inside-the-hsts-file/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: You type in to your browser's address bar `example.com` and it automatically
    redirects you to the https:// version. How does your browser know that it needed
    to request the more secure version of a website?
  prefs: []
  type: TYPE_NORMAL
- en: The answer is... A *big* list. The [HTTP Strict Transport Security](https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security)
    (HSTS) list is a list of domain names which have told Google that they *always*
    want their website served over https. If the user tries to manually request the
    insecure version, the browser won't let them. This means that a user's connection
    to, for example, their bank cannot be hijacked. A dodgy WiFi network cannot force
    the user to visit an insecure and fraudulent version of a site.
  prefs: []
  type: TYPE_NORMAL
- en: After about a decade of use, the list is now 14MB in size, with around 130,000
    entries in it. You can [view the list online](https://source.chromium.org/chromium/chromium/src/+/main:net/http/transport_security_state_static.json)
    or [download it](https://chromium.googlesource.com/chromium/src/net/+/refs/heads/main/http).
  prefs: []
  type: TYPE_NORMAL
- en: 'The format is relatively straightforward:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: When the list is updated, [Chrome creates a trie with Huffman coding compression](https://source.chromium.org/chromium/chromium/src/+/main:net/tools/transport_security_state_generator/README.md?q=transport_security_state_static.json&ss=chromium%2Fchromium%2Fsrc&start=11)
    - so it doesn't have to parse that monster file each time.
  prefs: []
  type: TYPE_NORMAL
- en: 'The most popular (over 1,000 entries) TLDs / Public Suffixes are:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Rank | TLD | Entries |'
  prefs: []
  type: TYPE_TB
- en: '| --: | :-: | --: |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | com | 43,236 |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | tk | 19,022 |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | de | 5,216 |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | org | 4,731 |'
  prefs: []
  type: TYPE_TB
- en: '| 5 | gov | 4,507 |'
  prefs: []
  type: TYPE_TB
- en: '| 6 | net | 4,410 |'
  prefs: []
  type: TYPE_TB
- en: '| 7 | ga | 4,326 |'
  prefs: []
  type: TYPE_TB
- en: '| 8 | nl | 2,671 |'
  prefs: []
  type: TYPE_TB
- en: '| 9 | cf | 2,458 |'
  prefs: []
  type: TYPE_TB
- en: '| 10 | ml | 2,271 |'
  prefs: []
  type: TYPE_TB
- en: '| 11 | co.uk | 2,139 |'
  prefs: []
  type: TYPE_TB
- en: '| 12 | fr | 1,714 |'
  prefs: []
  type: TYPE_TB
- en: '| 13 | ru | 1,516 |'
  prefs: []
  type: TYPE_TB
- en: '| 14 | eu | 1,283 |'
  prefs: []
  type: TYPE_TB
- en: '| 15 | com.br | 1,226 |'
  prefs: []
  type: TYPE_TB
- en: '| 16 | gq | 1,225 |'
  prefs: []
  type: TYPE_TB
- en: '| 17 | io | 1,215 |'
  prefs: []
  type: TYPE_TB
- en: '| 18 | com.au | 1,202 |'
  prefs: []
  type: TYPE_TB
- en: '| 19 | it | 1,103 |'
  prefs: []
  type: TYPE_TB
- en: '| 20 | cz | 1,004 |'
  prefs: []
  type: TYPE_TB
- en: After `.com`, the free `.tk` domain names absolutely dominate. I wonder how
    many of them are fraudulent?
  prefs: []
  type: TYPE_NORMAL
- en: There are 2,676 `.uk` domain names - only 537 of which aren't on `.co.uk`.
  prefs: []
  type: TYPE_NORMAL
- en: Going a bit further, there are 418 IDNs (which start with `xn--`).
  prefs: []
  type: TYPE_NORMAL
- en: And about 187 have "porn" in the domain.
  prefs: []
  type: TYPE_NORMAL
- en: You can't really extrapolate *much* from this as a data set. Lots of the domains
    seem to have expired or otherwise no longer work. Reading around [https://hstspreload.org](https://hstspreload.org)
    it notes that because this list is *hard-coded* into Chrome it can take months
    before a site is added. Similarly, removal can take a long time as well.
  prefs: []
  type: TYPE_NORMAL
- en: I can't help feeling that there should be a better way to manage all this though.
  prefs: []
  type: TYPE_NORMAL
