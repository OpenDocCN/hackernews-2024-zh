- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:31:08'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:31:08'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Hard disk LEDs and noisy machines - by Julio Merino
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 硬盘指示灯和嘈杂的机器 - 作者：[胡里奥·梅里诺](https://blogsystem5.substack.com/p/hard-disk-leds-and-noisy-machines)
- en: 来源：[https://blogsystem5.substack.com/p/hard-disk-leds-and-noisy-machines](https://blogsystem5.substack.com/p/hard-disk-leds-and-noisy-machines)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://blogsystem5.substack.com/p/hard-disk-leds-and-noisy-machines](https://blogsystem5.substack.com/p/hard-disk-leds-and-noisy-machines)
- en: The computers of yesteryear had this little feature known as blinking LED lights
    🔆. They also had this other feature called noisy disks 💾 and loud fans 🪭. Uh wait.
    Features? Why “features” and not “annoyances”?!
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 昔日的计算机有这么一个小功能，叫做闪烁的 LED 灯🔆。它们还有另一个功能，叫做嘈杂的磁盘💾和响亮的风扇🪭。等等。功能？为什么是“功能”而不是“烦恼”呢？！
- en: Front panel of a common PC case in the late 1990s. My Pentium MMX 166 was hosted
    in one of these.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 90年代末的常见 PC 机箱前面板。我的奔腾 MMX 166 就放在其中一个里面。
- en: You see, these bright lights and loud noises acted as canaries 🐦 in a performance
    mine. They gave developers a chance to notice when things were off performance-wise.
    If your code abused the CPU or the hard disk by mistake, you could tell right
    away.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 你看，这些明亮的灯光和响亮的声音就像性能矿井中的金丝雀🐦一样。它们给开发者一个机会，让他们立即注意到性能方面的问题。如果你的代码误用了 CPU 或硬盘，你可以立即知道。
- en: 'Nowadays, developer machines tend to be quiet under heavy load, and the vast
    majority of laptops don’t even have lights anymore. The obvious example are Macs:
    they haven’t had hard disk LEDs for a really long time, and since the M1, they
    are silent and cold too.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，开发者的机器在重载下往往保持安静，绝大多数笔记本甚至不再具有指示灯。最明显的例子就是苹果：他们很长一段时间没有了硬盘指示灯，自从 M1 以来，它们也变得安静而凉爽。
- en: These characteristics are nice from a usability perspective. Unfortunately,
    as a developer, you now need to first *imagine* that something is wrong before
    even deciding to look for a problem. If the thought never crosses your mind, then
    you may never look.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 从可用性的角度来看，这些特征很好。不幸的是，作为开发者，你现在需要*想象*出问题然后才能决定去寻找问题。如果这个想法从未跨越你的脑海，那么你可能永远也不会查找。
- en: Let me give you a few examples of the kinds of inefficiencies that I’m talking
    about. These would have been trivially noticed by the presence of indicators.
    These are all based on real-world situations I faced at some point in the (recent)
    past.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 让我举几个我所说的低效率的例子。这些都可以通过指示器的存在轻易地注意到。这些都是基于我在（最近的）过去某个时间点面对的真实情况。
- en: '* * *'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 🪵 In a project I worked on, our development builds started writing about 80
    MB of log messages *per second* to disk. No matter how you look at it, that’s
    *a lot* of disk traffic, and yet… the problematic code passed code review and
    was merged into the main branch.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 🪵 在我参与的一个项目中，我们的开发构建每秒开始写入约 80 MB 的日志消息到磁盘。无论如何看待它，这都是*相当多*的磁盘流量，然而……有问题的代码通过了代码审查，并合并到了主分支中。
- en: The only indication that something was wrong was when *other* developers came
    asking for help because their local disk space was running out faster than usual.
    There was no other symptom behind the problem.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一表明有问题的迹象是当*其他*开发者前来寻求帮助，因为他们的本地磁盘空间消耗比平常快。问题的背后没有其他症状。
- en: You’d hope that this inefficiency would be caught while qualifying the new release
    for production because, in theory, such logging waste would translate in an increase
    in CPU consumption or network bandwidth. But… I’m not so sure the issue would
    have been noticed.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你希望这种低效率在为生产资格认证新版本时被捕捉到，因为理论上，这样的日志浪费会导致 CPU 消耗或网络带宽的增加。但是……我不确定问题是否会被注意到。
- en: '* * *'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 🌐 In another project I worked on, I noticed that Bazel took an incredibly long
    time to complete some actions. It wasn’t until I looked in detail that I saw it
    stuck in a loop fetching the same remote artifact over and over again due to connection
    resets.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 🌐 在我参与的另一个项目中，我注意到巴塞尔花费了难以置信的长时间来完成某些操作。直到我仔细观察才发现它陷入了一个循环，一次又一次地获取相同的远程工件，原因是连接重置。
- en: The build completed successfully after many minutes once Bazel gave up on the
    downloads and fell back local execution. There was no reason to suspect that something
    was wrong other than “these actions are just huge”. In reality, though, there
    was a bug somewhere.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 构建完成后，巴塞尔放弃下载并回退到本地执行后经过多分钟才成功。除了“这些操作太庞大”之外，没有理由怀疑有什么问题。但事实上，某处确实存在错误。
- en: '* * *'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 🧱 Just today, I was in a video call and noticed that my laptop was reading 100MB/s
    from disk non-stop. I concluded the meeting but the disk reads didn’t stop. A
    quick peek at `top` showed something called `WallpaperVideoExtension` that seemed
    to have gone rogue.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 🧱 就在今天，在一个视频通话中，我注意到我的笔记本一直在从磁盘读取 100MB/s。我结束了会议，但磁盘读取并没有停止。快速查看 `top` 显示了一个名为
    `WallpaperVideoExtension` 的东西似乎已经失控了。
- en: This background process was consuming one full CPU, but such load wasn’t enough
    to make the system feel slower nor noisier. I suppose I would eventually have
    noticed that the battery was running out quicker than usual, but maybe not.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这个后台进程正在消耗一个完整的 CPU，但这样的负载不足以让系统感觉到更慢或更吵。我想我最终会注意到电池的耗尽速度比平常快，但也许不会。
- en: Killing the process made the problem go away and the constant disk reads stopped.
    Looking online, I find other instances of `WallpaperVideoExtension` consuming
    lots of CPU and memory, so this seems to be a bug. But if it’s common, why wasn’t
    it noticed in the first place?
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 结束进程后，问题消失了，持续的磁盘读取也停止了。上网搜索后，我发现其他实例中也有 `WallpaperVideoExtension` 消耗大量 CPU
    和内存，所以这似乎是一个 bug。但如果这很普遍，为什么一开始就没有注意到呢？
- en: '* * *'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'In any case, this last scenario gives you a hint 🔍 as to where I’m going: how
    did I even notice this last problem? After all, my M1 Mac was working just fine:
    it was just slightly warmer than usual but there was no loud fan noise nor lights
    to tell me about disk activity.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，这最后一个场景都给了你一个线索🔍，我接下来要说的是：我是怎么注意到这个问题的？毕竟，我的 M1 Mac 工作得很好：只是比平常稍微热了一点，但没有响亮的风扇噪音，也没有指示磁盘活动的灯。
- en: 'The answer is simple: I have an omnipresent performance monitor in my screen
    that shows CPU load, memory pressure, disk I/O throughput, and network traffic.
    This monitor is always visible, taking little space in the menu bar or the task
    bar.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 答案很简单：我的屏幕上有一个无处不在的性能监视器，显示 CPU 负载、内存压力、磁盘 I/O 吞吐量和网络流量。这个监视器总是可见的，在菜单栏或任务栏上占据很小的空间。
- en: iStat Menus on the macOS menu bar, with the panel for CPU usage tracking open.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: macOS 菜单栏上的 iStat Menus，打开了用于跟踪 CPU 使用率的面板。
- en: Every time I sense something is a tiny bit off, I glance 👀 at the monitor. You
    cannot imagine how many times I’ve gone “huh, that’s interesting” by seeing unexpected
    activity and then went on to discover big performance problems somewhere in the
    system.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 每当我感觉有一点不对劲，我就会瞥一眼👀监视器。你无法想象我有多少次因为看到意外的活动而发出“嗯，这很有意思”的声音，然后发现系统中某处存在严重的性能问题。
- en: My recommendation is that you stop what you are doing and go and install such
    a performance monitor *right now*. I’d even argue that having one always visible
    should be a hard requirement for any development machine and corp IT departments
    should preinstall one.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我的建议是，停下手头的工作，立刻去安装一个性能监视器。我甚至会认为，让它始终可见应该是任何开发机器的硬性要求，公司 IT 部门应该预装一个。
- en: Personally, I’m a huge fan of [iStat Menus](https://bjango.com/mac/istatmenus/)
    for macOS and have been using it for years. But if macOS is not your thing, you
    can find similar tools for other platforms like [system-monitor-next](https://extensions.gnome.org/extension/3010/system-monitor-next/)
    for Gnome.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 就个人而言，我非常喜欢 [iStat Menus](https://bjango.com/mac/istatmenus/) 这款 macOS 软件，已经使用了好几年了。但如果
    macOS 不是你的菜，你也可以在其他平台上找到类似的工具，比如为 Gnome 设计的 [system-monitor-next](https://extensions.gnome.org/extension/3010/system-monitor-next/)。
- en: Unfortunately, these monitors only help if you develop on your local machine—a
    workflow that’s becoming exceedingly rare. If, instead, you SSH into remote virtual
    machines to do your development or use VSCode’s remote features, you’ll need a
    different answer.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，这些监视器只对本地开发机有用——这种工作流程正变得越来越少见。如果你是通过 SSH 远程连接到虚拟机进行开发，或者使用 VSCode 的远程功能，你将需要一个不同的解决方案。
- en: This is a situation I face right now. The modern ThinkStation I have in the
    garage is well-equipped with useful lights… but I only access it over SSH for
    development so those lights and its disk noises are kinda useless from where I
    sit.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我现在面临的是这样的情况。我车库里的现代 ThinkStation 配备了有用的灯光……但我只通过 SSH 进行开发访问它，所以从我坐的地方看，那些灯和它的磁盘噪音有点没用。
- en: And I’m not sure what the right answer here is. If you have been around for
    a while, you may remember [GKrellM](http://gkrellm.srcbox.net), which I was an
    avid user of. This system monitor had the ability to display *remote* machine
    activity and I’d love to have that again.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我不确定这里的正确答案是什么。如果你已经在这个领域待了一段时间，你可能还记得 [GKrellM](http://gkrellm.srcbox.net)，我曾是它的忠实用户。这个系统监视器有显示
    *远程* 机器活动的功能，我很想再次拥有这个功能。
- en: ([You can read the original of this text in its Twitter thread form.](https://twitter.com/jmmv/status/1735712759604711494))
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: （[您可以阅读此文本的 Twitter 线程形式的原始版本。](https://twitter.com/jmmv/status/1735712759604711494)）
