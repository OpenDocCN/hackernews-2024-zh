- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:26:44'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:26:44'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Reductive Thinking and the Unfairness of Spotify Payments – Terence Eden’s Blog
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约化思维和 Spotify 支付的不公平性 - Terence Eden 的博客
- en: 来源：[https://shkspr.mobi/blog/2024/01/the-unfairness-of-spotify-payments-and-reductive-thinking/](https://shkspr.mobi/blog/2024/01/the-unfairness-of-spotify-payments-and-reductive-thinking/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://shkspr.mobi/blog/2024/01/the-unfairness-of-spotify-payments-and-reductive-thinking/](https://shkspr.mobi/blog/2024/01/the-unfairness-of-spotify-payments-and-reductive-thinking/)
- en: In "[Theory Of Games And Economic Behavior](https://en.wikipedia.org/wiki/Theory_of_Games_and_Economic_Behavior)"
    by John von Neumann and Oskar Morgenstern, the authors discuss the card game of
    poker. There are dozens of variations of poker, each with their own intricacies.
    But they all boil down to the same pattern - is my hand stronger than your hand?
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在约翰·冯·诺伊曼和奥斯卡·莫根斯特恩的《博弈论与经济行为》中，作者讨论了扑克牌游戏。有数十种扑克牌的变体，每种都有自己的复杂之处。但它们都归结为相同的模式
    - 我的手比你的手强吗？
- en: 'Here''s how the authors frame it:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是作者的表述方式：
- en: 'Since a “square deal” amounts to assuming that all possible hands are dealt
    with the same probability, we must interpret the drawing of the above number s
    as a chance move, each one of the possible values s = 1, • • • , S having the
    same probability 1/S. Thus the game begins with two chance moves: The drawing
    of the number s for player 1 and for player 2, which we denote by s[1] and s[2].'
  id: totrans-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 由于“平等交易”意味着假设所有可能的手都以相同的概率分发，因此我们必须将上述数字 s 的绘制解释为一个机会行动，每个可能的值 s = 1, • • •
    , S 具有相同的概率 1/S。因此，游戏以两个机会行动开始：为玩家 1 和玩家 2 分别绘制数字 s，我们分别称为 s[1] 和 s[2]。
- en: '[19.1.2](https://archive.org/details/in.ernet.dli.2015.215284/page/n211/mode/2up?q=poker)'
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[19.1.2](https://archive.org/details/in.ernet.dli.2015.215284/page/n211/mode/2up?q=poker)'
- en: Essentially, in two player poker, you could distribute cards labelled 1 - 100
    and have people bet / bluff on whether their number is higher or lower than their
    opponents. That might not be a *fun* game - but it is a useful toy example for
    thinking about formal rules for a game.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本质上，在两个玩家的扑克牌中，你可以分发标有 1 - 100 的卡片，并让人们打赌/虚张声势，看他们的数字是高还是低于对手的数字。这可能不是一个*有趣*的游戏
    - 但它是一个用于考虑游戏正式规则的有用的玩具示例。
- en: It is sometimes helpful for us to reduce the complexities of the real world
    into simple examples. It allows us to examine our base assumptions about reality
    without getting bogged down in messy practicalities.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，将现实世界的复杂性简化为简单的例子对我们是有帮助的。它使我们能够检验我们对现实的基本假设，而不会陷入混乱的实践细节。
- en: Let's take Spotify as an example. I often hear that artists complain that they
    get paid micro-cents per listen and that streaming is destroying their livelihood.
    I've no idea how much a recording artist gets every time their song is played
    on the radio, and I've no idea if Spotify is better or worse than the record deals
    generated by corrupt studio bosses.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们以 Spotify 为例。我经常听到艺术家抱怨说他们每次播放他们的歌时都会得到微不足道的报酬，而流媒体正在摧毁他们的生计。我不知道录音艺术家每次在广播中播放他们的歌曲时能得到多少报酬，也不知道
    Spotify 是否比腐败的制作室老板生成的唱片交易更好或更糟糕。
- en: So let's reduce Spotify to a toy example. Imagine a streaming service where
    people pay a fixed monthly subscription to get unlimited access to media.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 所以让我们把 Spotify 简化成一个玩具例子。想象一下一个流媒体服务，人们支付固定的月度订阅费，以获得对媒体的无限访问。
- en: This streaming service has only two users. They each pay £10 for the service.
    The service has no operating expenses and takes no profit. That money needs to
    be fairly split between the artists. We do not care about record companies, publishers,
    contracts, fees, taxes etc. We'll ignore copyright lengths as well. Some media
    is more expensive to produce than others, again ignored. We're assuming *all*
    things are equal.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这个流媒体服务只有两个用户。他们每人为服务支付 £10。该服务没有运营费用，也不盈利。这笔钱需要公平地分配给艺术家。我们不关心唱片公司、出版商、合同、费用、税收等。我们也会忽略版权长度。有些媒体的制作成本比其他的要高，同样被忽略。我们假设*一切*都是平等的。
- en: 'So, what should happen in this scenario:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，在这种情况下应该发生什么：
- en: User 1 listens once to a 3 minute song by Ariana Grande.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 用户 1 听了一首 Ariana Grande 的 3 分钟歌曲。
- en: User 2 listens once to a 3 minute song by Billie Eilish.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 用户 2 听了一首 Billie Eilish 的 3 分钟歌曲。
- en: That's all they do for that month.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是他们在那个月里做的全部。
- en: I think most reasonable people would say that artists A & B would split the
    money evenly. All things being equal, they each get £10.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为大多数理性的人会说艺术家 A 和 B 应该平均分钱。一切都是平等的，他们每人都得到 £10。
- en: Now let's take a different scenario.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看一个不同的情景。
- en: User 1 listens to 90 songs by Ariana Grande.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 用户1听了90首Ariana Grande的歌曲。
- en: User 2 listens to 10 songs by Billie Eilish.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 用户2听了10首Billie Eilish的歌曲。
- en: How should the money be fairly split? 50:50? 90:10? Something else?
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 钱应该如何公平分配？50:50？90:10？还是其他？
- en: '[I asked this question on Mastodon](https://mastodon.social/deck/@Edent/111602714475511040):'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[我在Mastodon上问了这个问题](https://mastodon.social/deck/@Edent/111602714475511040)：'
- en: What I find interesting is that there isn't an *obviously* fair split. Some
    people think the service should pay out proportional to total consumption across
    all users. But a significant minority think that the money should be split per
    individual customer. Both positions are reasonable and I can see the arguments
    for each.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我觉得有趣的是，没有一个*明显*公平的分配方式。一些人认为服务应该根据所有用户的总消费进行支付。但是有相当多的人认为资金应按每个个人客户进行分配。这两种观点都是合理的，我可以理解每一种观点的论点。
- en: Is it fair for some users to subsidise others? Is it fair if artist A gets paid
    less per stream than artist B? Should there be a maximum or minimum amount an
    artist can earn? Would people accept a logarithmic formula which decreases the
    profitability of an artist the more times they are streamed?
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 某些用户为其他用户提供补贴公平吗？如果艺术家A每次流媒体的报酬低于艺术家B，这算公平吗？艺术家可以赚取的最高或最低金额应该是多少？人们是否会接受一个对数公式，随着他们的歌曲被播放的次数增加，降低艺术家的盈利能力？
- en: '[Mammals like us have an innate need for fairness](https://phys.org/news/2017-02-animals-unfairly-dont.html).
    Our primitive monkey-brains can''t exactly quantify what makes something unfair
    - but we know it when we see it.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[像我们这样的哺乳动物对公平性有一种内在需求](https://phys.org/news/2017-02-animals-unfairly-dont.html)。我们原始的猴脑无法准确量化什么是不公平的，但我们一见之下就知道。'
- en: When artists complain about fairness in streaming, they're probably right; it
    *is* unfair.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当艺术家抱怨音乐流媒体的公平性时，他们可能是对的；这*确实*是不公平的。
- en: But when pundits start saying there is an obviously fairer solution, they're
    *probably wrong*.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 但是当评论员开始说有一个明显更公平的解决方案时，他们*很可能是错的*。
- en: And that's the purpose of this exercise. Even at the most reduced example, there
    isn't an obvious way to pay artists fairly.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是这个练习的目的。即使在最简化的示例中，也没有一个明显的方式可以公平地支付艺术家。
- en: Once you scale up to millions of users, in different countries, interacting
    with complex licencing regimes, exclusive deals, songs of varying lengths and
    of varying copyright, etc then it becomes unsolvable without radically reconfiguring
    how we approach consumerism.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦规模扩大到数百万个用户，位于不同国家，与复杂的许可制度互动，独家交易，歌曲的长度和著作权不同等等，就变得无法解决，除非我们从根本上重新构思我们对消费主义的方式。
- en: 'I''ve written before about [the Feynman Algorithm](https://shkspr.mobi/blog/2022/01/an-algorithm-to-write-an-assignment/)
    which is a universal method for solving any problem. It goes:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我之前写过[费曼算法](https://shkspr.mobi/blog/2022/01/an-algorithm-to-write-an-assignment/)，这是一种解决任何问题的通用方法。它包括：
- en: Write down the problem.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 写下问题。
- en: Think real hard.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 认真思考。
- en: Write down the solution.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 写下解决方案。
- en: 'I think step 0 needs to be a von Neumann reduction:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为第0步需要进行冯·诺伊曼缩减：
- en: Reduce the problem to its very simplest use case.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将问题简化到最简单的使用案例。
- en: Write down the problem.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 写下问题。
- en: Think real hard.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 认真思考。
- en: Write down the solution.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 写下解决方案。
- en: Return to step (0) and increase the complexity.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 回到第(0)步，增加复杂性。
- en: I suppose what I'm trying to say is ~~if you can't handle me at my worst, you
    don't deserve me at my best~~ if you can't solve a problem at its simplest level,
    you can't solve it at its most complex.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我想我想说的是~~如果你不能接受我最差的一面，你也配不上我的最好~~如果你不能解决一个问题的最简单层面，你就不能解决它的最复杂层面。
