- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:37:25'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: 'Aim, fire, scan: the 80/20 of executing on big projects - Indie Hackers'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://www.indiehackers.com/post/aim-fire-scan-the-80-20-of-executing-on-big-projects-571580cd0a](https://www.indiehackers.com/post/aim-fire-scan-the-80-20-of-executing-on-big-projects-571580cd0a)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The Contract
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'On March 13, 2023, I did something crazy:'
  prefs: []
  type: TYPE_NORMAL
- en: I opened [StickK.com](https://www.stickk.com), a site for making commitment
    contracts, and [placed a bet](https://www.stickk.com/commitment/details/1009092?pid=0)
    that I would write a novel in 9 months and submit it to my literary agent by the
    end of the year. I told all of my friends about this contract and [discussed it
    publicly](https://twitter.com/ChanningAllen/status/1643958786057461763) many times,
    including to 100,000+ podcast listeners.
  prefs: []
  type: TYPE_NORMAL
- en: The stakes of the bet? If I failed, I would send $9,999, the maximum amount
    allowed by StickK, to a so-called "anti-charity" whose cause I didn't support.
  prefs: []
  type: TYPE_NORMAL
- en: 'Spoiler: [I succeeded](https://www.loom.com/share/a6fe4ceb382f48c19e316cdbbb8dbcbc)
    with about an hour left in the year and zero gas left in the tank. I''d even found
    a free day to whip together [an AI-based book trailer](https://twitter.com/ChanningAllen/status/1727415542456193087)
    after finishing the first draft.'
  prefs: []
  type: TYPE_NORMAL
- en: 'But here''s what you need to know: even though I was confident I would pull
    through on the contract, there was simply *no clear path to victory* at the time
    that I signed it:'
  prefs: []
  type: TYPE_NORMAL
- en: I hadn't written a word of fiction in almost 10 years.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I'm a *good* writer, but I've historically been a *slow* writer.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I run a business which requires a *lot* of my time, energy, and attention.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How, then, was I so confident I would succeed?
  prefs: []
  type: TYPE_NORMAL
- en: Plan, Do, Learn
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '"I fear not the man who has practiced 10,000 kicks once, but I fear the man
    who has practiced one kick 10,000 times." —Bruce Lee'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: I was confident because I've spent years mastering a simple iteration process
    — the [plan, do, learn loop](https://www.indiehackers.com/post/plan-do-learn-my-somewhat-hardcore-work-routine-1fb500959f)
    — which helps me innovate and course-correct toward just about any goal, provided
    I'm given a reasonable time frame.
  prefs: []
  type: TYPE_NORMAL
- en: 'I encourage you to go read that old post if you haven''t, but tl;dr:'
  prefs: []
  type: TYPE_NORMAL
- en: I make a plan, then do the plan, then learn from my efforts by reviewing my
    progress. I do this every day of the year, going on half a decade now.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'These plan, do, learn loops ("PDL loops" for short) exist at six nested levels:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Quarters**'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Months**'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Weeks**'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Days**'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sessions:** multiple per day, lasting ~3 hours each and broken up by 60-minute
    breaks'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Actions:** multiple per session, lasting anywhere from 5–60 minutes each'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: If it sounds simple, it is. And it isn't. Throw a kick 10,000 times and you'll
    find lots of nuance.
  prefs: []
  type: TYPE_NORMAL
- en: My original post hinted at my iteration *speed* but said little about my iteration
    *strategy*. That is, I didn't explain *how* I plan, *how* I do, or *how* I learn.
  prefs: []
  type: TYPE_NORMAL
- en: 'Better late than never. In this post, I''ll talk about 20% of the factors that
    lead to 80% of my outcomes. They''re captured in the following acronyms:'
  prefs: []
  type: TYPE_NORMAL
- en: '**AIM**: Plan'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**FIRE**: Do'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SCAN**: Learn'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each of the concepts deserves its own standalone post, so I'm going to try to
    keep things short and sweet from here.
  prefs: []
  type: TYPE_NORMAL
- en: 'AIM: The 80/20 of Good Planning'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: AIM stands for ABZs, Interrogate, and Mandatory.
  prefs: []
  type: TYPE_NORMAL
- en: '1\. **ABZs**:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'This gem is from [Shaan Puri](https://twitter.com/ShaanVP):'
  prefs: []
  type: TYPE_NORMAL
- en: Too many people get caught up in the HOW. "How do I go from A to B to C to D
    to E etc."
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'All you need is the ABZ:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A = where are you now
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: B = next small step
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Z = end vision
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '2\. **Interrogate**:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Suppose you've already made an iteration through the loop and now you're reviewing
    your original plan. Rather than thoughtlessly continuing down that original path,
    interrogate the plan and confirm that it still makes sense.
  prefs: []
  type: TYPE_NORMAL
- en: At one point while writing my novel, I reflexively started working on a new
    chapter because I'd included it in the original outlining process. But interrogation
    helped me realize that it was no longer needed, which literally saved me weeks
    of wasted effort.
  prefs: []
  type: TYPE_NORMAL
- en: 'Heed Peter Drucker:'
  prefs: []
  type: TYPE_NORMAL
- en: After completing the original top-priority task, the executive resets priorities
    rather than moving on to number two from the original list. He asks, “What must
    be done now?” This generally results in new and different priorities.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '3\. **Mandatory**:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Identify a mandatory, must-ship objective for the work iteration, and commit
    to shipping it regardless of the obstacles you encounter. If you can't think of
    a concrete objective, make it a time commitment like "contribute 5 on-task hours
    to my novel this week."
  prefs: []
  type: TYPE_NORMAL
- en: I've personally found it really effective to give myself a "day must-ship objective"
    and a "week must-ship objective." A few months into my StickK contract I even
    started taking out $50 "mini-contracts" to hold myself accountable to my week
    must-ship objectives.
  prefs: []
  type: TYPE_NORMAL
- en: 'FIRE: The 80/20 of Good Doing'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: FIRE stands for Frontload, Improvise, Resourcefulness, and Exhaust.
  prefs: []
  type: TYPE_NORMAL
- en: '1\. **Frontload**:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Mark Twain said it best:'
  prefs: []
  type: TYPE_NORMAL
- en: If it's your job to eat a frog, it's best to do it first thing in the morning.
    And If it's your job to eat two frogs, it's best to eat the biggest one first.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: To repeat what I've [written elsewhere](https://twitter.com/ChanningAllen/status/1658145647223091205),
    long-term optimism for difficult projects is made out of short-term pessimism.
  prefs: []
  type: TYPE_NORMAL
- en: Wake up assuming everything will go wrong today. This week. This month. And
    execute accordingly.
  prefs: []
  type: TYPE_NORMAL
- en: If things do go wrong, you'll still be on track. If they don't, you'll be way
    ahead.
  prefs: []
  type: TYPE_NORMAL
- en: '2\. **Improvise**:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Speaking of things going wrong: they will. And when they do, you''ll be happy
    you followed the ABZ framework and didn''t overplan.'
  prefs: []
  type: TYPE_NORMAL
- en: 'I use all sorts of techniques for improvising and getting unstuck. Here are
    just a few of them:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: there''s a huge difference between improvising on the iteration path
    and improvising on the iteration itself. Using the ABZ framework, a legitimate
    improvisation might be rethinking *how* to achieve B, but it will almost never
    be rethinking B itself. As a rule with few exceptions, you want to move forward
    through iteration loops, not backward. (Too often, moving backward is a sign of
    problems with doing, not problems with planning.)'
  prefs: []
  type: TYPE_NORMAL
- en: '3\. **Resourcefulness**:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Human brains suck at most things. Instead of relying only on mental resources
    like willpower and memory, use *extra-mental* resources for added leverage.
  prefs: []
  type: TYPE_NORMAL
- en: 'This is a book-length topic and perhaps the main secret of my success, so forgive
    me the vagueness of simply bucketing extra-mental resources into two categories
    and leaving it at that for now: 1) The Three Me''s and 2) The Two We''s:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The Three Me''s:'
  prefs: []
  type: TYPE_NORMAL
- en: Techniques, e.g. [the BUS method](https://www.indiehackers.com/post/the-bus-method-for-getting-unstuck-9c9f614b3d)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tools, e.g. [standard operating procedures](https://www.indiehackers.com/post/procedures-in-the-world-95d9c93a6f),
    ChatGPT
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Territories, i.e. environmental constraints on your behavior, e.g. putting your
    phone on DND mode
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The Two We''s:'
  prefs: []
  type: TYPE_NORMAL
- en: Teachers, e.g. [books](https://www.indiehackers.com/post/i-read-60-books-every-year-ama-30d949cce4),
    mentors, content creators
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Teams, e.g. personal assistants
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '4\. **Exhaust**:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Don't take the "exhaust" term too literally here. Burnout is real, and I'm not
    suggesting you should do that. Instead I mean that if you decide to do an hour
    of work, try to work a *60-minute* hour rather than, say, a 30-minute hour filled
    with [continuous partial attention](https://en.wikipedia.org/wiki/Continuous_partial_attention).
  prefs: []
  type: TYPE_NORMAL
- en: Easy to do when [you're passionate](https://www.indiehackers.com/post/are-your-projects-110s-80-20s-or-50-50s-7093388c0a)
    or things are going well. Less easy when you're stuck or bored, and [discipline
    is required](https://www.indiehackers.com/post/the-power-technique-a-strategic-approach-to-self-discipline-11bc6724d6).
  prefs: []
  type: TYPE_NORMAL
- en: Enforced time constraints work wonders here. My own convention is to do intensive
    work sessions for set blocks of time then self-impose 30- to 60-minute cooldown
    periods where I relax and recharge. I use a website blocker called [Freedom](https://freedom.to)
    for this. I did a deep-dive on this process [here.](https://www.indiehackers.com/post/artificial-scarcity-artificial-fatigue-4e6bd31061)
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '*Performance Design* is where I share ~1 essay a month on building a flywheel
    of personal growth. Drop your email to subscribe:'
  prefs: []
  type: TYPE_NORMAL
- en: Or [go here](https://www.indiehackers.com/post/the-adjacent-possible-919cc7ea9b)
    for my other series, where I publish more frequently.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '**SCAN: The 80/20 of Good Learning**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SCAN stands for Score, Critique, Adjust, and Notes.
  prefs: []
  type: TYPE_NORMAL
- en: '1\. **Score**:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Scoring helps you measure your performance objectively. If you don't do it,
    you end up lying to yourself without knowing you're lying to yourself.
  prefs: []
  type: TYPE_NORMAL
- en: 'Again, heed Drucker:'
  prefs: []
  type: TYPE_NORMAL
- en: One company chairman was absolutely certain that he divided his time roughly
    into three parts. One third he thought he was spending with his senior men. One
    third he thought he spent with his important customers. And one third he thought
    was devoted to community activities.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The actual record of his activities over six weeks brought out clearly that
    he spent almost no time in any of these areas. These were the tasks on which he
    knew he should spend time — and therefore memory, obliging as usual, told him
    that these were the tasks on which he actually had spent his time.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'I like to score (or at least track) two things: inputs and outputs.'
  prefs: []
  type: TYPE_NORMAL
- en: 'By *inputs,* I really just mean time: "How many hours did I put in versus the
    amount of hours I was supposed to put in?" *Outputs* is more self-explanatory:
    "Did I ship my must-ship objective?"'
  prefs: []
  type: TYPE_NORMAL
- en: Both can be scored with a simple 0 or 1\. (My personal scoring systems have
    become a lot more sophisticated after years of iteration, but I started with something
    like this.)
  prefs: []
  type: TYPE_NORMAL
- en: '2\. **Critique**:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you take the time to look, you will always, always, always identify at least
    one flaw in your performance that can improve upon. But if you don't look, that
    flaw will often go unnoticed for many iterations, or even forever.
  prefs: []
  type: TYPE_NORMAL
- en: What I do is identify at least one of these flaws at the end of each iteration
    cycle.
  prefs: []
  type: TYPE_NORMAL
- en: '3\. **Adjust**:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It's not enough to notice a flaw. You also want to take action. And in my experience,
    simply saying, "Okay, next time I won't do [flaw]" is bullshit 90% of the time.
  prefs: []
  type: TYPE_NORMAL
- en: 'One of my bad habits early on in the process of working on the novel was putting
    other work in front of it: answering work emails, chatting with my team, doing
    morning routine tasks, etc. By the time I got around to writing — which requires
    an enormous amount of mental energy — I was often drained.'
  prefs: []
  type: TYPE_NORMAL
- en: 'So I made an adjustment: within 30 minutes of waking up, I needed to get started
    on the manuscript and knock out at least 2 hours of work before opening the pandora''s
    box of digital distractions.'
  prefs: []
  type: TYPE_NORMAL
- en: '4\. **Notes**:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Write down how things went during this iteration, and why. Benjamin Franklin
    began each day by asking himself in his journal: “What good shall I do this day?”
    Then, at the end of the day, he''d ask “What good have I done today?”'
  prefs: []
  type: TYPE_NORMAL
- en: If it's good enough for Big Ben, it's good enough for you. The first reason
    why documenting your progress is good is because it leaves a record for you to
    investigate later. You'll be less likely to make the same mistakes over again
    without being able to lie to yourself about it.
  prefs: []
  type: TYPE_NORMAL
- en: The second reason why this is good is because writing is thinking. Often, the
    act of writing your learnings from the iteration will lead to far greater clarity
    about your performance than you could gain otherwise. It's similar to the process
    of [rubberducking](https://en.wikipedia.org/wiki/Rubber_duck_debugging).
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: By the way, I'm thinking of sharing updates on the book publishing process.
    If that kind of thing interests you, follow along [here](https://www.indiehackers.com/post/the-river-six-a66e5707fa).
  prefs: []
  type: TYPE_NORMAL
