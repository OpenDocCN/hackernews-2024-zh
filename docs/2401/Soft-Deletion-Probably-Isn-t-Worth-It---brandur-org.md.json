["```\nUPDATE foo SET deleted_at = now() WHERE id = $1; \n```", "```\n-- and like magic, it's back!!\nUPDATE foo SET deleted_at = NULL WHERE id = $1; \n```", "```\nSELECT *\nFROM customer\nWHERE id = @id\n    AND deleted_at IS NULL; \n```", "```\nERROR:  update or delete on table \"customer\" violates\n    foreign key constraint \"invoice_customer_id_fkey\" on table \"invoice\"\n\nDETAIL:  Key (id)=(64977e2b-40cc-4261-8879-1c1e6243699b) is still\n    referenced from table \"invoice\". \n```", "```\nWITH team_deleted AS (\n    DELETE FROM team\n    WHERE (\n        team.archived_at IS NOT NULL\n        AND team.archived_at < @archived_at_horizon::timestamptz\n    )\n    RETURNING *\n),\n\n--\n-- team resources\n--\ncluster_deleted AS (\n    DELETE FROM cluster\n    WHERE team_id IN (\n        SELECT id FROM team_deleted\n    )\n    OR (\n        archived_at IS NOT NULL\n        AND archived_at < @archived_at_horizon::timestamptz\n    )\n    RETURNING *\n),\ninvoice_deleted AS (\n    DELETE FROM invoice\n    WHERE team_id IN (\n        SELECT id FROM team_deleted\n    )\n    OR (\n        archived_at IS NOT NULL\n        AND archived_at < @archived_at_horizon::timestamptz\n    )\n    RETURNING *\n),\n\n--\n-- cluster + team resources\n--\nsubscription_deleted AS (\n    DELETE FROM subscription\n    WHERE cluster_id IN (\n        SELECT id FROM cluster_deleted\n    ) OR team_id IN (\n        SELECT id FROM team_deleted\n    )\n    RETURNING *\n)\n\nSELECT 'cluster', array_agg(id) FROM cluster_deleted\nUNION ALL\nSELECT 'invoice', array_agg(id) FROM invoice_deleted\nUNION ALL\nSELECT 'subscription', array_agg(id) FROM subscription_deleted\nUNION ALL\nSELECT 'team', array_agg(id) FROM team_deleted; \n```", "```\nCREATE TABLE deleted_record (\n    id uuid PRIMARY KEY DEFAULT gen_ulid(),\n    deleted_at timestamptz NOT NULL default now(),\n    original_table varchar(200) NOT NULL,\n    original_id uuid NOT NULL,\n    data jsonb NOT NULL\n); \n```", "```\nWITH deleted AS (\n    DELETE FROM customer\n    WHERE id = @id\n    RETURNING *\n)\nINSERT INTO deleted_record\n\t\t(original_table, original_id, data)\nSELECT 'foo', id, to_jsonb(deleted.*)\nFROM deleted\nRETURNING *; \n```"]