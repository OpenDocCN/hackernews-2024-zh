- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-27 15:08:37'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 15:08:37
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'The Two Sides of Software Testing: Checking and Exploring | AgileConnection'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 软件测试的两面：检查与探索 | 敏捷连接
- en: 来源：[https://www.agileconnection.com/article/two-sides-software-testing-checking-and-exploring](https://www.agileconnection.com/article/two-sides-software-testing-checking-and-exploring)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.agileconnection.com/article/two-sides-software-testing-checking-and-exploring](https://www.agileconnection.com/article/two-sides-software-testing-checking-and-exploring)
- en: Many years ago in a hallway conversation at a conference, a test manager and
    I were discussing our respective approaches to testing.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 许多年前，在一次会议的走廊交谈中，一位测试经理和我讨论了我们各自的测试方法。
- en: '"If they can''t tell me what the software is supposed to do, I can''t test
    it," Francine, the test manager, scowled. "So, I tell them that I won''t start
    testing until they produce a detailed requirements document."'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: “如果他们不能告诉我软件应该做什么，我就无法测试它，”测试经理弗朗西娜皱着眉说道。“所以，我告诉他们我不会开始测试，直到他们提供详细的需求文档。”
- en: My eyebrows shot up through my hairline. At the time, I was working for a Silicon
    Valley software vendor that made consumer applications. If I waited for a comprehensive
    specification before I started testing, I'd be waiting forever. And, I’d be fired
    for failing to contribute meaningfully to the project. I said something to that
    effect, and Francine just shook her head at me. She couldn't imagine not having
    detailed specifications. I couldn't imagine holding the project hostage until
    I got documentation.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我的眉毛突然拱起。当时，我正在一家硅谷的软件供应商工作，他们制作消费类应用程序。如果我等待全面的规格说明才开始测试，我将永远等不到。而且，我会因为未能对项目做出有意义的贡献而被解雇。我大致说了这样的话，弗朗西娜只是摇了摇头。她无法想象没有详细的规格说明。我无法想象在没有文档的情况下才开始项目。
- en: Unable to see each other’s point of view, we wished each other a good day and
    headed off in separate directions.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 无法看到彼此观点的一方，我们互相祝对方有个愉快的一天，然后各自朝不同的方向走去。
- en: '**The Eternal Raging Debate**'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**永恒的激烈辩论**'
- en: 'That hallway conversation represented a familiar debate in the testing community:
    Does "good testing" involve systematically executing a comprehensive set of scripted
    tests designed from the requirements or specifications for the system? Or, should
    testing instead involve an investigative approach to exploring for risks? The
    answers to these questions have historically divided the testing community. The
    debate has sometimes become downright rancorous, with each side accusing the other
    of irresponsible practices that increase risk and decrease quality.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 那次走廊谈话代表了测试界一个熟悉的辩论：良好的测试是否涉及根据系统的需求或规格系统性地执行一套全面的脚本测试？或者，测试是否应该采用探索性方法来探索风险？对这些问题的答案历来分裂了测试界。这场辩论有时变得非常激烈，双方互相指责对方采取的不负责任的做法增加了风险，降低了质量。
- en: In the past, I was firmly on the side of using exploratory approaches. For most
    of my career, I worked for organizations that preferred lightweight documentation,
    so we didn't usually produce detailed test scripts. Even if those organizations
    had wanted binders full of step-by-step test cases, I agreed with James Bach that
    sticking to a testing script is like playing a game of Twenty Questions where
    you have to ask all the questions in advance.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去，我坚定地站在使用探索性方法的一边。在我的大部分职业生涯中，我为偏爱轻量级文档的组织工作，因此我们通常不会制作详细的测试脚本。即使那些组织想要厚厚的步骤详细测试用例册，我也同意詹姆斯·巴赫的观点，认为坚持测试脚本就像玩二十个问题游戏，你必须提前问出所有问题。
- en: However, my perspective on this debate has shifted in the past several years
    as I started working with agile teams that value testing in all forms. I have
    come to realize that the old discussion of whether "good testing" involves predefined,
    detailed test scripts or exploratory testing is like pitting salt against pepper,
    glue against staples, or belts against suspenders.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，随着我开始与重视各种测试形式的敏捷团队合作，我对这场辩论的看法在过去的几年里发生了变化。我意识到，关于“好的测试”是预先定义的、详细的测试脚本还是探索性测试的旧讨论就像是在盐与胡椒、胶水与订书钉、皮带与吊带之间展开较量。
- en: It is a false dilemma and a pointless debate.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个伪问题，也是一个无意义的辩论。
- en: '**Checking**'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**检查**'
- en: Like most agile teams, the teams I work with use lightweight stories as placeholders
    for a conversation about the requirements. That conversation happens when the
    team is ready to start implementing the story. At that point, the team captures
    the details about expectations and acceptance criteria. Before we call the story
    "done" we need to check that the implemented story does what the product owner
    intended.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 像大多数敏捷团队一样，我工作的团队使用轻量级故事作为对需求进行讨论的占位符。团队在准备实施故事时进行讨论。在那时，团队会捕获有关期望和验收标准的详细信息。在我们称故事为“完成”之前，我们需要检查实施的故事是否符合产品所有者的意图。
- en: 'Reflecting on the conversation that Francine and I had all these years ago,
    I can still hear her words: “Until they tell me what the software is supposed
    to do, I can’t test it.”'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 回想起我和弗朗辛多年前的对话，我仍然能听到她的话：“直到他们告诉我软件应该做什么，我才能测试它。”
- en: 'If we reframe that statement a little, we get: “Until they tell me what the
    software is supposed to do, I can’t check that it does that.” That makes sense.
    We have to know what the product owner expects before we can implement it and
    before we can check it, so that’s why we have discussions about user stories to
    gain shared understanding about the expectations.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们稍微重新构想一下这个说法，我们会得到：“直到他们告诉我软件应该做什么，我才能检查它是否实现了。”这是有道理的。在我们能够实施和检查产品所有者期望的软件之前，我们必须知道他们的期望，因此我们需要讨论用户故事以获得对期望的共享理解。
- en: 'Some agile teams have adopted the practice of capturing the results of these
    discussions in concrete examples. For instance:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一些敏捷团队已经采用了在具体示例中捕获这些讨论结果的做法。例如：
- en: Given I am not logged in
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我没有登录
- en: When I visit the Edit Profile page
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 当我访问编辑个人资料页面时
- en: Then I should be redirected to the Login page
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我应该被重定向到登录页面
- en: When I log in
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 当我登录时
- en: Then I should be redirected to the Edit Profile page
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我应该被重定向到编辑个人资料页面
- en: (This example is expressed in the Given/When/Then style that has been popularized
    by the behavior-driven development (BDD) community and is associated with BDD
    tools such as Cucumber.)
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: (此示例采用了行为驱动开发（BDD）社区推广的Given/When/Then风格，并与Cucumber等BDD工具相关联。)
- en: You might notice that when we capture acceptance criteria in the form of concrete
    examples with expectations like this, they look a lot like scripted tests. We
    use them like scripted tests, too; we check that these expectations are met not
    just when we first release the feature but also in subsequent regression tests
    to verify that the system still meets these expectations. Because agile teams
    value fast feedback and need to run these tests so often, we automate these checks
    in order to keep the regression testing burden to a manageable level.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会注意到，当我们以此类期望的具体示例形式捕获验收标准时，它们看起来很像脚本化测试。我们也像脚本化测试一样使用它们；我们不仅在首次发布功能时检查这些期望是否得到满足，还在后续的回归测试中验证系统是否仍然满足这些期望。由于敏捷团队重视快速反馈并且需要频繁运行这些测试，我们自动化这些检查以将回归测试的负担控制在可管理的水平。
- en: 'When a team takes this approach of capturing the acceptance criteria in the
    form of tests, it’s reframing Francine’s position even further: “Until we know
    how we’re going to check this feature, we don’t know enough to build it.” That’s
    a subtle but critical shift that puts tests at the front of the line instead of
    relegating them to the end of the cycle. The result of that shift is that tests
    are not just connected with requirements; they become an expression of the requirements.
    They''re specifications—they specify the expected behavior of the system. When
    automated, they become executable specifications.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 当团队采用以测试形式捕获验收标准时，这进一步重新定义了弗朗辛的立场：“除非我们知道我们将如何检查这个功能，否则我们还不知道足够多的信息来构建它。”这是一个微妙但关键的转变，将测试放在首要位置，而不是将其归类为周期结束时的事项。这种转变的结果是，测试不仅与需求相关联；它们成为需求的表达。它们是规范-它们规定了系统的期望行为。一旦自动化，它们就成为可执行的规范。
- en: '**Exploring**'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**探索**'
- en: No matter how careful we are when we implement a given story, just checking
    the story against expectations is not sufficient to ensure we’ve covered everything.
    There is always the risk that we didn’t anticipate some condition or interaction
    that could result in bad behavior.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 无论我们实现一个给定的故事时有多么小心，只检查故事是否符合期望并不足以确保我们已经覆盖了一切。总是存在我们没有预料到可能导致不良行为的某些条件或交互的风险。
- en: Exploratory testing—particularly session-based exploratory testing as defined
    by James and Jon Bach—gives us a structured way to investigate the system, looking
    for risks and vulnerabilities. As skilled testers, we use test design techniques
    and analytical skills to run one small experiment after another, using the information
    we discovered from the last little experiment to guide the next. As we exercise
    the system, we vary configurations, permissions, and data. We perform different
    actions, perform the same actions but in a different order, and perform actions
    at unexpected times.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 探索性测试——特别是由詹姆斯和乔恩·巴赫定义的基于会话的探索性测试——为我们提供了一种有组织的方式来调查系统，寻找风险和漏洞。作为熟练的测试人员，我们使用测试设计技术和分析技能来进行一个又一个的小实验，利用我们从上一个小实验中发现的信息来指导下一个实验。当我们对系统进行操作时，我们会改变配置、权限和数据。我们执行不同的操作，按不同的顺序执行相同的操作，以及在意想不到的时间执行操作。
- en: 'As we go, we watch carefully for signs that we’ve stumbled onto a condition
    that the system does not handle correctly. In-your-face, unhandled exceptions,
    like an error message reading "ORA-01400: cannot insert NULL," would be one such
    sign. However, we''re also looking for little hints of potential problems, such
    as lagging response times. Each small surprise might point to a potential risk
    that warrants further investigation.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '在进行过程中，我们会仔细观察是否有迹象表明我们已经碰到了系统无法正确处理的情况。像“ORA-01400: cannot insert NULL”这样的显眼、未处理的异常错误消息就是这样的一个迹象。然而，我们也在寻找潜在问题的小提示，比如反应时间滞后。每一个小小的惊喜都可能指向一个需要进一步调查的潜在风险。'
- en: For example, on one project, I discovered in my explorations that a field on
    a form that should have been read-only was actually editable. That's a small sign
    of something amiss, but it pointed to a much bigger problem. The field represented
    the groups to which a user belonged. By changing the value in the field, and without
    having system administration rights, I discovered that I could make myself an
    administrator. Obviously, this is a problem.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在一个项目中，我在我的探索中发现，一个应该是只读的表单字段实际上是可编辑的。这是一种微小的异常迹象，但它指向了一个更大的问题。该字段代表了用户所属的组。通过改变字段中的值，而不需要系统管理权限，我发现我可以使自己成为管理员。显然，这是一个问题。
- en: If it had remained uncaught, we would have had a big security hole in our application.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果它保持未被捕获，我们的应用程序将存在一个严重的安全漏洞。
- en: '**Tested = Checked and Explored**'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**测试过的 = 检查和探索**'
- en: Agile approaches emphasize producing completed features during every iteration
    or sprint, at least monthly. Before we can call a story “done,” it has to be tested.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 敏捷方法强调在每个迭代或冲刺中至少每月生产完成的功能。在我们称故事“完成”之前，它必须经过测试。
- en: 'Remember the conversation that Francine and I had and consider our different
    approaches to testing. Francine emphasized checking; I emphasized exploring. Our
    approaches are the two sides of the testing equation:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 记住弗朗辛和我的对话，考虑我们对测试的不同方法。弗朗辛强调检查；我强调探索。我们的方法是测试方程式的两个方面：
- en: 'Checking: Does the system do what it''s supposed to do?'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查：系统是否执行其预期的功能？
- en: 'Exploring: Are there any other risks or vulnerabilities that we haven''t thought
    about yet?'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索：还有其他我们尚未考虑的风险或漏洞吗？
- en: In hindsight, I can see that both Francine and I were right. And, both of us
    were wrong. Each of us had identified an important aspect of testing, but neither
    of us saw the whole picture. In order to have enough information to declare a
    story “done,” we have to check it and explore it. Both sides of testing—checking
    and exploring—are critical to releasing high-quality software.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 事后看来，我可以看到，弗朗辛和我都是对的。而且，我们两个都错了。我们每个人都确定了测试的一个重要方面，但我们都没有看到整个画面。为了有足够的信息来声明一个故事“完成”，我们必须检查它并探索它。测试的两个方面——检查和探索——对于发布高质量的软件至关重要。
- en: '***Additional Resources***'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '***附加资源***'
