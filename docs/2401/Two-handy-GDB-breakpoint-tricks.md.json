["```\n#define assert(c)  while (!(c)) __builtin_trap()\n#define assert(c)  while (!(c)) __builtin_unreachable()\n#define assert(c)  while (!(c)) *(volatile int *)0 = 0 \n```", "```\n#define assert(c)  do if (!(c)) __debugbreak(); while (0) \n```", "```\nfor (int i = 0; i < n; i++) {\n    // ...\n    int3_assert(...);\n} \n```", "```\n#define breakpoint()  asm (\"int3; nop\") \n```", "```\nfor (int i = 0; i < 1000000000; i++) {\n    if (/* rare condition */) breakpoint();\n    // ...\n} \n```", "```\nvoid example(double *nums, int n, ...)\n{\n    for (int i = 0; i < n; i++) {\n        loop:  // named position at the start of the loop\n        // ...\n    }\n} \n```", "```\n(gdb) dprintf example:loop,\"nums[%d] = %g\\n\",i,nums[i] \n```", "```\n for (int i = 0; i < n; i++) {\n        loop: __attribute((unused))\n        // ...\n    } \n```", "```\n for (int i = 0; i < n; i++) {\n        asm (\"b:\");\n        // ...\n    } \n```"]