- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: Êú™ÂàÜÁ±ª'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:23:39'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Getting things done (in small increments)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Êù•Ê∫êÔºö[https://dubroy.com/blog/getting-things-done-in-small-increments/](https://dubroy.com/blog/getting-things-done-in-small-increments/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: March 21, 2022
  prefs: []
  type: TYPE_NORMAL
- en: 'Many programmers subscribe to the belief that they need large blocks of uninterrupted
    time to get anything done. Paul Graham wrote about this in [Maker‚Äôs Schedule,
    Manager‚Äôs Schedule](http://www.paulgraham.com/articles.html):'
  prefs: []
  type: TYPE_NORMAL
- en: One reason programmers dislike meetings so much is that they‚Äôre on a different
    type of schedule from other people. Meetings cost them more.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Programmers] generally prefer to use time in units of half a day at least.
    You can‚Äôt write or program well in units of an hour. That‚Äôs barely enough time
    to get started.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When you‚Äôre operating on the maker‚Äôs schedule, meetings are a disaster. A single
    meeting can blow a whole afternoon, by breaking it into two pieces each too small
    to do anything hard in.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Don‚Äôt get me wrong, I love having a whole afternoon to work on something without
    interruption. It‚Äôs probably ideal for most people. But it‚Äôs an exaggeration to
    say that it‚Äôs *impossible* to program well in units of an hour.
  prefs: []
  type: TYPE_NORMAL
- en: Parent‚Äôs schedule
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Last summer, my wife and I had our third child. Before we had kids, I‚Äôd sometimes
    spend a full day ‚Äî or even a weekend ‚Äî working on a fun programming project. But
    now, with three kids and a full-time job, I‚Äôm lucky to find a half dozen free
    hours spread out across the week.
  prefs: []
  type: TYPE_NORMAL
- en: 'My primary side project is [Ohm](https://ohmjs.org), a parsing toolkit for
    JavaScript. I‚Äôve been working on it since 2015, and been the sole maintainer since
    2017\. Since our third child was born, I‚Äôve managed to ship:'
  prefs: []
  type: TYPE_NORMAL
- en: ‚Ä¶and about 75% of the time I invested in this was in increments of one hour
    or less, when my kids were sleeping.
  prefs: []
  type: TYPE_NORMAL
- en: Trying to get work done this way was certainly a big adjustment, but I managed
    to develop some habits and find some tricks that made it work for me. Obviously
    I can‚Äôt say that what works for me would work for everyone. But like almost everything
    in life, I‚Äôm pretty sure most people can improve significantly through practice.
  prefs: []
  type: TYPE_NORMAL
- en: Some useful tactics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here are some things that I found to be helpful (caveat lector, YMMV, and all
    that) ‚Äî
  prefs: []
  type: TYPE_NORMAL
- en: '**Make progress every day.** A few things (like minor bugs) might take less
    than an hour. But most things worth doing take longer, which means that I can‚Äôt
    finish them in a single sitting. On those things, I try to make a little progress
    every day ‚Äî even if it‚Äôs only 20 or 30 minutes. It keeps the cache warm: if I
    work on something early in the morning, I‚Äôll keep thinking about it over the course
    of the day. Then, if I have another half hour at the end of the day, the problem
    is still pretty fresh in my head.'
  prefs: []
  type: TYPE_NORMAL
- en: I‚Äôm not strict about *when* I do the work. Sometimes I‚Äôll work in the early
    morning (~6am, right after making coffee), and sometimes in the evening (9‚Äì10pm).
    The most important thing is to make a little progress every day.
  prefs: []
  type: TYPE_NORMAL
- en: '**Always know what the next thing to do is.** For me, this means having either
    a clear end goal (e.g., fix this bug, make this test green) or a concrete next
    step (e.g., change all callers of *wiggle* to call *waggle*). If I plan this ahead
    of time, then when I sit down at my computer, I can immediately get to work.'
  prefs: []
  type: TYPE_NORMAL
- en: I was never a huge fan of test-driven development, but I do find it helpful
    in this context. Once I have a failing test, I find it much easier to resume the
    work again later. And writing the test helps me figure out the next manageable
    unit of progress.
  prefs: []
  type: TYPE_NORMAL
- en: 'If I need to stop working right in the middle of something, sometimes I leave
    a note directly in the source code, like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This will cause a syntax error the next time I run the tests, which reminds
    me of what I need to do next.
  prefs: []
  type: TYPE_NORMAL
- en: '**Pay attention to feedback loops.** When working in such small increments,
    I find fast feedback to be even more important than usual. Depending on what I‚Äôm
    working on, this might mean unit tests, [fast refresh](https://github.com/pmmmwh/react-refresh-webpack-plugin)
    for React stuff, or using [watchexec](https://github.com/watchexec/watchexec)
    to automatically re-run a script.'
  prefs: []
  type: TYPE_NORMAL
- en: '**For bigger things, make a plan and keep a log.** When I‚Äôm starting a more
    complex task, like a performance investigation or a big refactoring, I take 10-15
    minutes to write down a plan before I start the work. Nothing fancy, just a few
    bullet points in a text file. And when I get interrupted, I take 30 seconds to
    summarize my progress and any next steps I should take.'
  prefs: []
  type: TYPE_NORMAL
- en: I find that planning my work this way also makes me more effective. When I had
    big blocks of uninterrupted time, I would usually just dive into a refactoring
    without thinking it through too deeply. But when I sit down to plan things out
    in detail, I often realize that I‚Äôm missing a critical detail and need to adjust
    my plan.
  prefs: []
  type: TYPE_NORMAL
- en: '**Block distractions.** If I‚Äôm not careful, I can fall into a habit of checking
    Twitter, HN, etc. as soon as I sit down at my computer. This can easily waste
    20 or 30 minutes at the start of a working session. If I‚Äôve only got an hour,
    it‚Äôs half gone.'
  prefs: []
  type: TYPE_NORMAL
- en: When I blocked those sites on my computer, I found it much easier to get into
    a focused state quickly. It also prevents me from quickly checking command-tabbing
    to the browser whenever I‚Äôm stuck too long on something tricky (which I‚Äôm also
    guilty of).
  prefs: []
  type: TYPE_NORMAL
- en: Most of these things I learned the hard way, as I struggled to try to get things
    done in the limited free time that I had. I don‚Äôt think there‚Äôs anything groundbreaking
    here, just a few small things that have made a difference for me. Maybe they‚Äôre
    useful to you, too.
  prefs: []
  type: TYPE_NORMAL
- en: Beyond the tactics, I suspect that practice is also important here. JB Rainsberger
    suggests that [using the Pomodoro technique will train you to achieve focus quickly](https://twitter.com/jbrains/status/1504836590941655046).
    I‚Äôve used it off and on over the past couple years; it‚Äôs possible that helped
    as well.
  prefs: []
  type: TYPE_NORMAL
- en: üí¨ *Want to leave feedback? [Send me an email](https://dubroy.com/blog/about/#contact)
    or [respond on on Twitter](https://twitter.com/dubroy/status/1505904560736374787).*
  prefs: []
  type: TYPE_NORMAL
