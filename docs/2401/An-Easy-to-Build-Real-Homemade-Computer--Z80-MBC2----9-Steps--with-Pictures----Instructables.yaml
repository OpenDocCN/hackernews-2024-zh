- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 14:38:36'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:38:36
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'An Easy to Build Real Homemade Computer: Z80-MBC2! : 9 Steps (with Pictures)
    - Instructables'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一款易于构建的真正家庭制作计算机：Z80-MBC2！：9步（附图片）-Instructables
- en: 来源：[https://www.instructables.com/An-Easy-to-Build-Real-Homemade-Computer-Z80-MBC2/](https://www.instructables.com/An-Easy-to-Build-Real-Homemade-Computer-Z80-MBC2/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.instructables.com/An-Easy-to-Build-Real-Homemade-Computer-Z80-MBC2/](https://www.instructables.com/An-Easy-to-Build-Real-Homemade-Computer-Z80-MBC2/)
- en: If you are curious about how a computer works and interacts with "external things",
    nowadays there are a lot of boards ready to play like Arduino or Raspberry and
    many others. But this boards have all the same "limit"... they hide the inner
    part because they use a MCU (Micro Controller Unit) or a SOC (System On Chip)
    so you can't touch the CPU, I/O, the internal bus and all these stuff that are
    what makes a computer work.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想知道计算机是如何工作并与“外部事物”进行交互的，现在有很多准备好的板可以使用，例如Arduino或Raspberry等。但是这些板都有相同的“限制”…它们隐藏了内部部件，因为它们使用了MCU（微控制器单元）或SOC（片上系统），因此您无法触及CPU、I/O、内部总线等这些使计算机工作的东西。
- en: There is an other option using some older part as 8bit CPUs (the so called "retrocomputing").
    They are simple to understand and you can find a lot of documentation and books
    for free, and allow to build real computers with all the needed function blocks
    (CPU, I/O, RAM, ROM/EPROM, etc...).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 还有另一种选择，使用一些旧的8位CPU（所谓的“复古计算”）。它们易于理解，您可以免费找到大量文档和书籍，并且允许构建具有所有必需功能块（CPU、I/O、RAM、ROM/EPROM等）的真正计算机。
- en: But generally they use hard to find parts, and require outdated instruments
    like an EPROM programmer and eraser or a GAL programmer, and simpler ones have
    very limited features.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 但一般它们使用难以找到的零件，并需要过时的工具，比如一个EPROM编程器和擦除器或一个GAL编程器，而更简单的则功能非常有限。
- en: So I've mixed old and "new" parts to make an unique design that doesn't need
    any legacy EPROM programmer or fancy ICs, using easy to find components. The Atmega32A
    MCU acts as an I/O subsystem, "emulating" the EPROM and all the I/O components.
    More, using an Arduino bootloader, It can be easily programmed with the well known
    Arduino IDE.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我混合了旧的和“新”的部件，制作出了一种独特的设计，不需要任何传统的EPROM编程器或花哨的集成电路，使用易于找到的元件。 Atmega32A MCU充当I/O子系统，“模拟”EPROM和所有I/O组件。此外，使用Arduino引导加载程序，可以轻松使用众所周知的Arduino
    IDE进行编程。
- en: 'The needed ICs are:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 所需的集成电路有：
- en: Z80 CPU CMOS (Z84C00) 8Mhz or greater
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Z80 CPU CMOS（Z84C00）8Mhz或更高
- en: Atmega32A
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Atmega32A
- en: TC551001-70 (128KB RAM)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TC551001-70（128KB RAM）
- en: 74HC00
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 74HC00
- en: If you want the 16x GPIO expansion (GPE option) add a MCP23017 too.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要16x GPIO扩展（GPE选项），还需添加一个MCP23017。
- en: The Z80-MBC2 has a multi-boot capability and can run CP/M 2.2, QP/M 2.71 and
    CP/M 3 (128KB banked memory supported), so you can use a very large amount of
    SW with it (e.g. you can easily find Basic, C, Assembler, Pascal, Fortran, Cobol
    compilers, and some of these are already provided in the virtual disks on the
    SD).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Z80-MBC2具有多引导功能，可以运行CP/M 2.2、QP/M 2.71和CP/M 3（支持128KB分段内存），因此您可以使用大量的软件（例如，您可以轻松找到Basic、C、汇编、Pascal、Fortran、Cobol编译器，其中一些已经提供在SD上的虚拟磁盘中）。
- en: Hard Disks are emulated using a microSD FAT16 or FAT32 formatted (a 1GB microSD
    is enough), so it is easy exchange the files with your PC (16 HDs for every OS
    are supported) using **[cpmtoolsGUI](http://star.gmobb.jp/koji/cgi/wiki.cgi?action=ATTACH&page=CpmtoolsGUI&file=CPMTG%5FENG%5F20180903%2Ezip)**
    .
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 硬盘使用微型SD FAT16或FAT32格式化（1GB微型SD足够），因此可以轻松与PC交换文件（每个操作系统支持16个硬盘），使用**[cpmtoolsGUI](http://star.gmobb.jp/koji/cgi/wiki.cgi?action=ATTACH&page=CpmtoolsGUI&file=CPMTG%5FENG%5F20180903%2Ezip)**。
- en: Of course you need a terminal to interact with the Z80-MBC2, and a common USB-serial
    adapter together with a terminal emulation SW will be a cheap and simple choice.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，您需要一个终端来与Z80-MBC2进行交互，一个常见的USB串行适配器，再加上一个终端仿真软件，将是一个便宜且简单的选择。
