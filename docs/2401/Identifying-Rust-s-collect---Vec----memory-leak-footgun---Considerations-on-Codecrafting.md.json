["```\nlet denom = 257;\nlet optimistic = false;\nlet graph = build_graph(denom, optimistic);\nlet graph = build_graph(denom, optimistic); \n```", "```\nlet graph = build_graph(denom, optimistic);\nstd::mem::drop(graph);\nlet graph = build_graph(denom, optimistic); \n```", "```\nlet res = get_cull_all(ds, max_denom as u128, optimistic);\nprintln!(\"precol {} {}\", res.len(), res.capacity());\n\nlet mut res: Vec<_> = res\n    .into_iter()\n    .map(|(ds2, p)| (cull_map.get(ds2), p as u32))\n    .collect();\n\nmain_len_tot += res.len();\nmain_cap_tot += res.capacity();\nprintln!(\"{} {} tot {} {}\", res.len(), res.capacity(), main_len_tot, main_cap_tot);\n// res.shrink_to_fit();\nassert!(main_edges.len() == id);\nmain_edges.push(res); \n```", "```\nprecol 46 11400\n46 34200 tot 10410429 2330729253\nprecol 54 11340\n54 34020 tot 10410483 2330763273\nprecol 2 5520\n2 16560 tot 10410485 2330779833 \n```", "```\nlet mut v = vec![1,2,3];\nv.push(4);\nprintln!(\"len {} cap {}\", v.len(), v.capacity());\nlet v = v.into_iter().map(|x| x+1).collect::<Vec<_>>();\nprintln!(\"len {} cap {}\", v.len(), v.capacity());\nlet v = v.iter().copied().map(|x| x+1).collect::<Vec<_>>();\nprintln!(\"len {} cap {}\", v.len(), v.capacity()); \n```", "```\nlen 4 cap 6\nlen 4 cap 6\nlen 4 cap 4 \n```", "```\nlet mut v = vec![1,2,3,4];\nv.push(1u128);\nprintln!(\"len {} cap {} v={:?}\", v.len(), v.capacity(), v);\nlet v = v.into_iter().map(|x| x as u64).collect::<Vec<_>>();\nprintln!(\"len {} cap {} v={:?}\", v.len(), v.capacity(), v);\nlet v = v.into_iter().map(|x| x as u32).collect::<Vec<_>>();\nprintln!(\"len {} cap {} v={:?}\", v.len(), v.capacity(), v);  \nlet v = v.into_iter().map(|x| x as u8).collect::<Vec<_>>();\nprintln!(\"len {} cap {} v={:?}\", v.len(), v.capacity(), v);  \nlet v = v.into_iter().map(|x| x as u16).collect::<Vec<_>>();\nprintln!(\"len {} cap {} v={:?}\", v.len(), v.capacity(), v); \n```", "```\nlen 5 cap 8 v=[1, 2, 3, 4, 1]\nlen 5 cap 16 v=[1, 2, 3, 4, 1]\nlen 5 cap 32 v=[1, 2, 3, 4, 1]\nlen 5 cap 128 v=[1, 2, 3, 4, 1]\nlen 5 cap 5 v=[1, 2, 3, 4, 1] \n```", "```\n/// Specialization trait used for Vec::from_iter\n///\n/// ## The delegation graph:\n///\n/// ```", "``` \n```"]