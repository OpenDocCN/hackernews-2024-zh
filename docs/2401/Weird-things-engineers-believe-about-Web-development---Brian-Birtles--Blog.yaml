- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:34:57'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Weird things engineers believe about Web development - Brian Birtles’ Blog
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://birtles.blog/2024/01/06/weird-things-engineers-believe-about-development/](https://birtles.blog/2024/01/06/weird-things-engineers-believe-about-development/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*I wrote most of this post sometime in 2022 but I think it holds up alright
    in 2024 so I decided to publish it for posterity. I don’t really like doing posts
    like this—I’d much rather share some innocuous learnings or tips but it turns
    out I have opinions too* 😓 *Sorry!*'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '***2024-02-21**: I’ve added a few reflections at [the end of the post](#reflections-a-couple-of-months-later).*'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '***2024-04-27**: Developpez.com has produced a [French translation of this
    post](https://web.developpez.com/actu/356070/Les-ingenieurs-croient-des-choses-etranges-sur-le-developpement-Web-par-Brian-Birtles/).*'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: Since I quit Mozilla and went back to full-time Web development, I’ve discovered
    a few surprises. It turns out Web development is actually pretty hard, Web developers
    are actually very smart, and some of these frameworks and techniques we mocked
    as browser engineers aren’t so bad. Oops.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: At the same time, it turns out some Web developers have ideas about browsers
    and the Web that, as a former browser engineer and standards editor, I’m a bit
    dubious of.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: Here are a few of the things that surprised me.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: '[“Web browser engineers know Web development really well”](#web-browser-engineers-know-web-development-really-well)'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[“The people who make Web specifications know Web development really well”](#the-people-who-make-web-specifications-know-web-development-really-well)'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[“Web developers know Web development really well”](#web-developers-know-web-development-really-well)'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[“Browsers aren’t made to run SPAs”](#browsers-arent-made-to-run-spas)'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[”MPAs will replace SPAs”](#mpas-will-replace-spas)'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[“All sites should work without JavaScript”](#all-sites-should-work-without-javascript)'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[“Web development shouldn’t need a build step”](#web-development-shouldnt-need-a-build-step)'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[“My blog is representative of Web development at large”](#my-blog-is-representative-of-web-development-at-large)'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It’s easy to imagine that Web browser engineers, who write the code that makes
    up the Web platform, must know the Web inside-out like no-one else.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: The trouble is, writing Web browsers is hard.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: Most browser engineers focus on a particular area and know it really well with
    only a superficial understanding of other areas. Furthermore, browser platform
    engineers are writing C++ and Rust code all day long with a smattering of very
    simple JavaScript test cases. On top of that, they contribute to one massive respository
    where someone else takes care of all the tooling.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: As a result, in their day jobs browser engineers are not fighting webpack, not
    trying to understand full-page TypeScript errors (they’ve got C++ template errors
    to fill *that* hole in their lives), not trying to get Safari on iOS to behave
    like other browsers, not struggling with CSS at scale, not trying to evaluate
    if the latest SSR/SSG/island framework is worth investing in, not refactoring
    massive JS codebases for more optimal chunking, not filing exasperated issues
    on GitHub because the latest version of one of their dependencies broke their
    app, not trying to get all their tools to agree on ESM vs CJS, and not losing
    sleep over whether or not they chose the right state management approach or if
    they should rewrite the entire thing for the tenth time over.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在他们的日常工作中，浏览器工程师并没有在与webpack斗争，也没有试图理解完整页面的TypeScript错误（他们有C++模板错误来填补他们生活中的*那个*空洞），也没有试图让iOS上的Safari表现得像其他浏览器一样，也没有在应对大规模的CSS时挣扎，也没有试图评估最新的SSR/SSG/island框架是否值得投资，也没有为了更优化的代码分块而重构庞大的JS代码库，也没有在GitHub上提交沮丧的问题，因为他们的某个依赖的最新版本破坏了他们的应用，也没有试图让所有工具在ESM与CJS之间达成一致，也没有为是否选择了正确的状态管理方法或是否应该第十次重写整个东西而失眠。
- en: In short, they’re not doing Web development day in and day out so they know
    much less about real-world Web development than Web developers probably expect.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，他们并没有日复一日地进行Web开发，所以他们对于现实世界的Web开发了解比Web开发人员可能期望的要少。
- en: Now the engineers working on browser *developer tools* and the browser *front-end*
    often *are* using JS day-to-day and certainly have more awareness of the issues,
    but it’s still a few degrees removed from regular Web development. For example,
    they only need to target a single browser engine’s platform features, and often
    only a single browser version (being able to use the new and shiny features without
    worrying about compatibility is *amazing*), don’t need to worry about bundle size,
    or servers, or being offline, or so many other issues that make Web development
    hard.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，致力于浏览器*开发者工具*和浏览器*前端*的工程师通常*是*日复一日地使用JS，并且肯定更加关注这些问题，但这仍然与常规Web开发有一定距离。例如，他们只需要针对单个浏览器引擎的平台功能，通常只需考虑单个浏览器版本（能够使用新的闪亮功能而不用担心兼容性问题是*了不起的*），无需担心捆绑大小，服务器，离线，或许多其他使Web开发变得困难的问题。
- en: Obviously some browser engineers have hobby projects, but the constraints on
    a hobby project are a world apart from being in a startup where you live or die
    by the success of your Web app.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，一些浏览器工程师有兴趣的项目，但是对于兴趣项目的约束与在创业公司中生死与共的约束完全不同，后者取决于您的Web应用程序的成功与否。
- en: I started my career in graphic design and Web development and even after I started
    contributing to Firefox I worked at a Web development company in Osaka for a time
    and produced some Web apps at Mozilla Japan too. However, after I quit Mozilla
    and got back into Web development full-time I was shocked at how much it had changed
    and how little I knew about it.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我的职业生涯始于平面设计和Web开发，甚至在我开始为Firefox做贡献之后，我在大阪的一家Web开发公司工作了一段时间，并在Mozilla日本制作了一些Web应用程序。然而，当我辞去Mozilla的工作，全职回到Web开发时，我对它的变化以及我对它了解的很少感到震惊。
- en: My experience as a browser engineer has been incredibly useful in Web development
    not least because I know where to look, who to ask, and where to file bugs, but
    I’d be kidding myself if I said that being a browser engineer automatically qualified
    me as a Web developer.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名浏览器工程师，我的经验在Web开发中非常有用，最主要的原因不仅仅是因为我知道在哪里寻找，问谁，以及在哪里提交错误报告，但如果我说成为一名浏览器工程师自动使我成为Web开发人员，我会自欺欺人的。
- en: During my time at Mozilla, the Firefox OS days were by far the most enjoyable.
    We had internal teams building real-world mobile Web apps that we, as the platform
    team, had to debug and make successful as our highest priority. I saw how [`transitionend`
    events](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event)
    could be unreliable and cause Web apps to be buggy and overly complicated and
    so I proposed and implemented the [`transitioncancel` event](https://developer.mozilla.org/docs/Web/API/Element/transitioncancel_event)
    and Web Animations’ [`Animation.finished` promise](https://developer.mozilla.org/docs/Web/API/Animation/finished).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在Mozilla工作期间，Firefox OS的日子是最令人愉快的。我们有内部团队构建真实的移动Web应用程序，我们作为平台团队必须调试和使其成功作为我们的最高优先级。我看到[`transitionend`事件](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event)可能是不可靠的，导致Web应用程序出现错误和过于复杂，因此我提出并实现了[`transitioncancel`事件](https://developer.mozilla.org/docs/Web/API/Element/transitioncancel_event)和Web
    Animations的[`Animation.finished` promise](https://developer.mozilla.org/docs/Web/API/Animation/finished)。
- en: But even working side-by-side with Web developers could not prepare me for actually
    *being* a full-time Web developer again. For the most part browser engineers just
    operate in a different world from Web developers and might not be the Web developer
    superheroes we imagine them to be.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 但即使与 Web 开发人员并肩工作，也不能让我完全准备好再次成为全职的 Web 开发人员。在很大程度上，浏览器工程师和 Web 开发人员的工作环境是不同的，也许并不是我们想象中的
    Web 开发人员超级英雄。
- en: Ok, but surely the people working on Web *standards* and *specifications* (who,
    it turns out, are mostly browser engineers) must be well-versed in Web development,
    right?
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，但是毫无疑问，致力于 Web *标准*和*规范*的人员（事实证明，他们大部分是浏览器工程师）必须对 Web 开发了如指掌，对吗？
- en: 'Back in 2012, [Brendan Eich pointed out](https://brendaneich.com/2012/02/community-prioritized-web-standards/)
    that, “Standards-making like law-making is definitely [sausage-making](https://en.wikiquote.org/wiki/John_Godfrey_Saxe)”
    referring to the following quote from John Godfrey Saxe:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 2012 年，[Brendan Eich 指出](https://brendaneich.com/2012/02/community-prioritized-web-standards/)，“制定标准就像制定法律一样肯定是[制作香肠](https://en.wikiquote.org/wiki/John_Godfrey_Saxe)”，引用了
    John Godfrey Saxe 的以下语录：
- en: Laws, like sausages, cease to inspire respect in proportion as we know how they
    are made.
  id: totrans-33
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 法律就像香肠一样，随着我们了解它们是如何制定的，就会失去尊重。
- en: As a Web developer, it’s easy to imagine a group of people, infinitely wise
    about all things related to Web technology, making calm, rational decisions based
    on the technical merits of each proposal balanced against a thorough understanding
    of industry needs.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个 Web 开发人员，很容易想象一群对与 Web 技术相关的所有事情都无比明智的人，他们根据每个提案的技术优势和对行业需求的深入理解做出冷静、理性的决定。
- en: That illusion typically won’t last your first working group meeting. Despite
    the best of intentions, sometimes decisions get made based, at least in part,
    on one person’s charisma or forceful personality, on who happens to be in the
    room at the time, on how tired everyone is, or, dare I suggest, maybe even someone’s
    need to ship a feature in order to fill out their promotion packet.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这种错觉通常不会在你的第一个工作组会议上持续下去。尽管怀着最好的意图，有时决定会在某种程度上基于某个人的魅力或强势个性，基于当时在场的人，基于大家有多累，或者，我敢说，甚至基于某人为了填写他们的晋升文件夹而需要发布一个功能。
- en: That sounds very cynical so let me make two clarifications.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这听起来非常愤世嫉俗，所以让我做两点澄清。
- en: Firstly, the folks on these groups are well-meaning, wonderful people. Furthermore,
    they are often aware of their limitations and try their best to elicit Web developer
    feedback. Unfortunately, I’ve yet to see a group do this very successfully. There
    are Twitter/X polls, for example, but they tend to only be answered by the Web
    developers on the bleeding edge and are easily skewed by *who* spreads the word
    about the poll.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，这些团体中的人都是善良、出色的人。此外，他们通常意识到自己的局限性，并尽力征求 Web 开发人员的反馈。不幸的是，我还没有看到一个团体能够非常成功地做到这一点。例如，有
    Twitter/X 投票，但往往只有处于前沿的 Web 开发人员会回答，并且很容易被*谁*传播了投票的消息而影响结果。
- en: Secondly, I haven’t had much experience with WHATWG specs like HTML and DOM
    where decisions appear to be made asynchronously (“any decisions made during in-person
    meetings are to be considered non-binding”—[WHATWG meetings](https://whatwg.org/working-mode#meetings)),
    but my impression is that they seem to make better decisions. Folks like Anne
    van Kesteren, Simon Pieters, and Domenic Denicola probably know the Web better
    than anyone else on the planet. But even that is not the same as knowing Web development.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，我对 WHATWG 规范（如 HTML 和 DOM）没有太多经验，在这些规范中，决定似乎是异步进行的（“在面对面会议期间做出的任何决定都被视为不具约束力”—[WHATWG
    会议](https://whatwg.org/working-mode#meetings)），但我的印象是它们似乎做出了更好的决定。像 Anne van Kesteren、Simon
    Pieters 和 Domenic Denicola 这样的人可能比地球上的任何其他人更了解 Web。但即使如此，也不等同于了解 Web 开发。
- en: As a browser engineer it’s really satisfying to ship a new platform feature.
    There are articles about it on Smashing Magazine and CSS tricks and Twitter/X
    goes abuzz with the news. It’s easy to think that now the whole world now knows
    about this great new advance in the Web’s capabilities.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个浏览器工程师，将一个新的平台功能发布出去真是令人满意。有关此功能的文章可以在《Smashing Magazine》和《CSS Tricks》以及
    Twitter/X 上找到。人们开始热烈讨论这个消息。很容易就会认为现在全世界都知道了 Web 能力方面的这个伟大的新进展。
- en: At one point a few years ago, a few of us in Mozilla’s Japan team decided to
    interview local Web developers in Tokyo to learn what developer tools they would
    benefit from.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 几年前，Mozilla 日本团队的我们决定在东京采访当地的 Web 开发人员，以了解他们可以从中受益的开发人员工具。
- en: The results were surprising.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 结果令人惊讶。
- en: Many didn’t know about new CSS features that had shipped 10 years ago. What’s
    more, even when we told them about them, they didn’t seem too excited. They were
    doing just fine with jQuery and WordPress, thank you.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 许多人不知道已经在十年前发布了新的 CSS 功能。更重要的是，即使我们告诉他们，他们似乎也不太激动。他们用 jQuery 和 WordPress 还挺好的，谢谢。
- en: Instead, they were having trouble with things like, “When I show clients a site
    in responsive design mode, if the window doesn’t have a mockup of an iPhone around
    it, clients can’t grasp that they are looking at a preview of how the site will
    look on a smartphone. I really need that iPhone mockup.”
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，他们遇到的问题是，“当我在响应式设计模式下向客户展示网站时，如果窗口周围没有 iPhone 的模型，客户就无法理解他们正在看的是站点在智能手机上的预览。我真的需要那个
    iPhone 模型。”
- en: As a browser engineer involved in developing new Web standards I was a little
    disappointed but my lasting impression was of the constraints on these folks who
    are making their living from shipping Web sites and Web apps.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个参与制定新网络标准的浏览器工程师，我有点失望，但我对这些从事网站和 Web 应用程序发布工作的人的印象是受制于这些约束。
- en: Unlike people working on browsers or well-funded Silicon Valley startups, many
    of these people are working for little shops with considerable pressure to deliver
    something quickly and then move onto the next project in order to pay the bills.
    They don’t have the luxury of spending a morning tinkering with upcoming technologies
    and instead reach for tried and trusted solutions they have experience with.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 与从事浏览器开发或资金充裕的硅谷初创企业的人不同，许多人在小商店工作，他们面临着巨大的压力，需要迅速交付项目以支付账单，然后转移到下一个项目上。他们没有花上一整个上午摆弄即将到来的技术的奢侈，而是寻找他们有经验的经过验证的解决方案。
- en: Another surprise from moving from browser development back to Web development
    was some of the assertions about how browsers work.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 从浏览器开发转回 Web 开发时的另一个惊喜是关于浏览器工作原理的一些断言。
- en: When I worked on animations, I was surprised at how many people believed that
    some animations “run on the GPU” (the browser can offload some animations to a
    separate process or thread that updates animations using the GPU to composite
    or even paint each frame but it doesn’t offload them to the GPU wholesale) but
    that was a fairly minor misunderstanding compared to some of the other ones that
    get thrown around like, “browsers aren’t made to run SPAs (single page applications)“.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当我在做动画时，我很惊讶许多人认为一些动画是“在 GPU 上运行的”（浏览器可以将一些动画卸载到一个单独的进程或线程中，该进程或线程使用 GPU 来合成或甚至绘制每一帧的动画，但它并不会全部卸载到
    GPU 上），但与其他一些被扔来的论点相比，这只是一个相当小的误解，比如，“浏览器不适合运行单页应用程序（SPA）”。
- en: I believe the argument here is that originally browsers would load content off
    the network, progressively laying it out and rendering it and have been heavily
    optimized for this. Dynamic content came later and so has been less heavily optimized.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为这里的论点是，最初浏览器会从网络加载内容，逐步布局和渲染内容，并且已经受到了很大的优化。动态内容是后来才出现的，因此受到的优化程度较少。
- en: Having worked on a browser on and off for nearly two decades I’m not convinced
    this is the case, or at least not anymore.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去近二十年里我一直在从事浏览器工作，但我对此表示怀疑，或者至少不再那么确信。
- en: After all, the Firefox front-end and developer tools are, in effect, SPAs. The
    developer tools in particular are written using React and Redux and are in every
    sense an SPA.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 毕竟，Firefox 前端和开发工具实际上是单页应用程序（SPA）。特别是开发工具是使用 React 和 Redux 编写的，从各个方面来看都是单页应用程序。
- en: To the argument that browsers are deficient at handling complex and long-lived
    DOM trees with dynamic changes made via JavaScript, the browser itself stands
    in contradiction to that claim.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 对于浏览器在处理通过 JavaScript 进行的复杂和长期存在的动态更改时是否存在不足的论点，浏览器本身与该论点相矛盾。
- en: An argument could be made that *on mobile* browsers aren’t optimized to run
    SPAs. After all, on Android, Firefox switched from an HTML rendered browser chrome
    to a native browser chrome in order to improve performance. I’m not in a position
    to comment on what the particular performance constraints were that lead to that
    change, but [a blog from that time](https://lucasr.org/2011/11/15/native-ui-for-firefox-on-android/)
    suggests it was related to improving app startup time and panning and scrolling
    performance, neither of which point to browsers being deficient at handling SPAs
    compared to other architectures.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 可以提出一个论点，即在移动端浏览器并没有针对运行SPAs进行优化。毕竟，在Android上，Firefox从HTML渲染的浏览器chrome切换到了本地浏览器chrome以提高性能。我无法评论导致这种变化的具体性能限制是什么，但是[当时的一篇博客](https://lucasr.org/2011/11/15/native-ui-for-firefox-on-android/)表明与改善应用程序启动时间和平移和滚动性能有关，这两点都没有指出与其他架构相比，浏览器在处理SPAs方面存在不足。
- en: ”Ok, so maybe browsers can handle complex long-lived DOM trees with frequent
    dynamic changes, but SPAs tend to have large JS bundles that are slow to download
    and parse, blocking the initial render.” That’s a fair argument, but it’s an argument
    for smaller render-blocking initial bundles, which applies to equally to your
    average WordPress site, not an argument that browsers are somehow unsuited to
    running SPAs.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: “好吧，也许浏览器可以处理复杂的长期存在的DOM树，并频繁地进行动态更改，但是SPAs往往具有大量的JS捆绑包，下载和解析速度较慢，会阻塞初始渲染。”这是一个公平的论点，但这是一个关于更小的阻塞初始渲染捆绑包的论点，同样适用于您的普通WordPress站点，并不是浏览器不适合运行SPAs的论点。
- en: While we’re talking about SPAs and “the one true way to write Web apps”, a more
    recent variation on the “browsers can’t handle SPAs” take is, “MPAs (multi-page
    applications) will replace SPAs”.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们谈论SPAs和“编写Web应用的唯一真正方法”时，对“浏览器无法处理SPAs”观点的一个更近期的变体是，“多页面应用（MPAs）将取代SPAs”。
- en: I’m pretty excited about MPAs. More specifically, as someone who is involved
    with a lot of animation specs, I’m excited by the [view transitions spec](https://drafts.csswg.org/css-view-transitions-1/)
    spec. It’s something we wanted to do at Mozilla for a while, particularly during
    the Firefox OS days, and made a [proposal](https://www.chrislord.net/2015/04/24/web-navigation-transitions/)
    to that end. Kudos to Jake and others for finally making it happen.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我对MPAs感到非常兴奋。更具体地说，作为一个参与了很多动画规范的人，我对[视图转换规范](https://drafts.csswg.org/css-view-transitions-1/)感到兴奋。这是我们在Mozilla想做很久了的事情，特别是在Firefox
    OS时期，我们提出了[提案](https://www.chrislord.net/2015/04/24/web-navigation-transitions/)。感谢Jake和其他人最终实现了这一点。
- en: View transitions were originally implemented for SPAs but have been adapted
    to work for MPAs and to the extent that they make multi-page sites more enjoyable
    they are a very welcome addition.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 视图转换最初是为单页面应用（SPAs）实现的，但已经被改编为适用于多页面应用（MPAs），并且在使多页面站点更加愉快的程度上，它们是非常受欢迎的补充。
- en: However, building on the “SPAs are bad” thinking, there seems to be a tendency
    to assume that MPAs are the future and SPAs are on the way out.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在“SPAs不好”的基础上，似乎有一种倾向是认为MPAs是未来，而SPAs已经过时了。
- en: Unlike the earlier points in this post, my surprise at this take is not based
    on my experience with working on browsers, but on my more recent experience with
    working on Web apps.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 与本文早期观点不同，我对这种看法的惊讶并不是基于我在浏览器工作经验上，而是基于我最近在Web应用上工作的经验。
- en: First though, what do we even mean by MPAs?
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 不过首先，我们所说的多页面应用（MPAs）是什么意思呢？
- en: My understanding is that whereas SPAs are characterized by having a long-lived
    DOM tree or two that are frequently updated by script, MPAs primarily update content
    by navigating to different HTML resources served from the network. These don’t
    have to be topmost navigations—it could be by navigating an `<iframe>`, for example.
    Similarly, SPAs might use `<iframe>`s as a means of chunking but there’s a difference
    in how content is typically updated.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我的理解是，相对于SPAs，MPAs的特点是通过导航到不同的由网络提供的HTML资源来更新内容。这些资源不必是顶级导航，例如可以通过导航一个`<iframe>`来实现。同样，SPAs可能使用`<iframe>`来分块，但内容更新方式有所不同。
- en: By this definition, Google Docs is an SPA since although each document is served
    as a separate resource, most of the time you’re interacting with the one document
    that is continually updated via JavaScript. YouTube would probably be considered
    an MPA but it might actually be implemented as an SPA in order to smooth out changes
    in content, intercepting navigations and replacing the content via script—that
    is, until view transitions can help with that.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 按照这个定义，Google Docs是一个SPA，因为虽然每个文档都作为一个单独的资源提供，但大部分时间你都在与通过JavaScript持续更新的一个文档进行交互。YouTube可能被认为是MPA，但它实际上可能是以SPA的形式实现的，以平滑内容的变化，拦截导航并通过脚本替换内容——也就是说，直到视图转换可以帮助解决这个问题。
- en: 'In either case, my surprise at the idea that MPAs will replace *all* SPAs is
    simple: How would Figma or Photoshop for Web work as an MPA? Or Slack, or Discord,
    or Google Maps?'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 无论哪种情况，我对MPAs将取代*所有*SPAs的想法感到惊讶：Figma或Photoshop for Web如何作为MPA工作？或者Slack，或者Discord，或者Google
    Maps？
- en: I’m currently working on an offline-first mobile Web app that stores data locally
    and syncs to the server. Wanting to be on the forefront of Web tech I investigated
    how we could embrace MPAs.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我目前正在开发一个离线优先的移动Web应用，可以在本地存储数据并同步到服务器。为了走在Web技术的前沿，我调查了如何采用多页面应用（MPAs）。
- en: To keep a long story short, if we’re to retain our desired UX which has independently
    navigable panels and our offline-first requirement, we *could* introduce some
    `<iframe>`s to partition out some of the functionality into separate HTML requests
    (as opposed to separate script chunk requests) and we could probably even pre-render
    some chunks sometimes. The trouble is it would increase the complexity ten-fold
    (two-way sync becomes three-way sync for a start) while providing no benefit to
    customers whatsoever—instead it would almost certainly lead to more bugs, more
    latency, and shipping features more slowly.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 为了长话短说，如果我们要保持我们所期望的独立导航面板和我们的离线优先要求的用户体验（UX），我们*可能*会引入一些`<iframe>`来将一些功能划分为单独的HTML请求（而不是单独的脚本块请求），我们甚至可能有时会预先渲染一些块。问题在于，这会使复杂性增加十倍（双向同步变成三向同步首先要开始），而且完全不会给客户带来任何好处——相反，这几乎肯定会导致更多的错误、更多的延迟和更慢地发布功能。
- en: Given that our app is not currently released I realise that’s a fairly weak
    argument since no-one can look at the app and suggest a better approach so I’m
    just asking you to trust me on this one. I tried. I really did. It’s just not
    the right architecture for this particular app and I’m surprised by the suggestion
    that *everything* should be an MPA.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于我们的应用程序目前尚未发布，我意识到这是一个相当薄弱的论点，因为没有人能够查看应用程序并建议更好的方法，所以我只是请求你相信我。我试过了。我真的试过了。这对于这个特定的应用程序来说并不是正确的架构，我对“*一切*都应该是MPA”的建议感到惊讶。
- en: 'Continuing on our theme of Web development best practices, building a site
    that works without JavaScript is an admirable goal. Doing so probably means it
    degrades gracefully, has no JS blocking the initial render, and works on a wide
    range of browsers. But I’ve been surprised to see how often this becomes dogmatic:
    “*all* sites should work without JavaScript”.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 继续我们的Web开发最佳实践主题，构建一个可以在没有JavaScript的情况下运行的站点是一个值得赞美的目标。这样做可能意味着它会优雅地降级，没有JavaScript阻塞初始渲染，并且在各种浏览器上运行。但令我惊讶的是这种做法经常变得教条化：“*所有*站点都应该在没有JavaScript的情况下运行”。
- en: I guess it’s easy to come to this conclusion if *your* site is able to work
    without JavaScript (see [“My blog is representative of Web development at large”](#my-blog-is-representative-of-web-development-at-large))
    but it feels a little myopic to me.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我想如果*你*的网站能够在没有JavaScript的情况下运行，那么很容易得出这个结论（见[“我的博客代表了大规模Web开发”](#my-blog-is-representative-of-web-development-at-large)），但对我来说这有点狭隘。
- en: I’ve mentioned Figma and Photoshop for Web before; it’s hard to imagine how
    they could work without JavaScript. Likewise for a browser’s developer tools.
    Or even [Parapara Animation](/2012/01/27/parapara-animation/)!
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我以前提到过Figma和Photoshop for Web；很难想象它们在没有JavaScript的情况下如何工作。同样适用于浏览器的开发者工具。甚至[Parapara
    Animation](/2012/01/27/parapara-animation/)也是如此！
- en: Furthermore, although many advocates against JS are also concerned about accessibility,
    JavaScript is often necessary in order to make an app accessible.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，尽管许多反对JavaScript的倡导者也关注可访问性，但通常需要JavaScript才能使应用程序具有可访问性。
- en: One thing the accessibility folks at Mozilla taught me about keyboard navigation
    was that `Tab` navigation should be fairly coarse. That is, you use `Tab` to navigate
    to the control group (e.g. toolbar) and then use the arrow keys to move within
    that group. That allows you to move around an app more quickly without having
    to `Tab` through every single control first. WAI calls this a [“roving tabindex”](https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#kbd_roving_tabindex).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: Mozilla 的可访问性专家教会我的一件事是 `Tab` 导航应该相当粗糙。也就是说，您使用 `Tab` 键导航到控件组（例如工具栏），然后使用箭头键在该组内移动。这样可以让您在应用程序中更快地移动，而不必先通过每个控件
    `Tab` 一遍。WAI 将此称为[“roving tabindex”](https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#kbd_roving_tabindex)。
- en: However, in order to implement this kind of coarse-grained keyboard navigation
    you’re going to need JavaScript. If you want to make the arrow-key based navigation
    two-dimensional, you’re going to need even more JavaScript. Maybe one day we’ll
    fill that gap in the platform (looking at you, [focusgroup](https://open-ui.org/components/focusgroup.explainer/))
    but for now you should feel no shame about using client-side JavaScript to make
    your app accessible.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，要实现这种粗粒度键盘导航，您需要使用 JavaScript。如果要使基于箭头键的导航二维化，您将需要更多的 JavaScript。也许总有一天我们会填补平台上的这一空白（看向你，[focusgroup](https://open-ui.org/components/focusgroup.explainer/)），但目前你可以毫不羞愧地使用客户端
    JavaScript 来使你的应用程序可访问。
- en: Honestly, I think some sites should use *more* JavaScript.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 说实话，我认为有些网站应该使用*更多*的 JavaScript。
- en: As an example, the [Eleventy documentation](https://www.11ty.dev/docs/) seems
    to avoid using client-side JavaScript for the most part. As Eleventy supports
    various templating languages it provides code samples in each of the different
    languages. Unfortunately, it doesn’t record which language you’ve selected so
    if your chosen language is not the default one, you are forced to change tabs
    on *every single* code sample. A little client-side JavaScript here would make
    the experience so much more pleasant for users.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，[Eleventy 文档](https://www.11ty.dev/docs/)似乎在很大程度上避免使用客户端 JavaScript。由于 Eleventy
    支持各种模板语言，它在每种不同的语言中提供了代码示例。不幸的是，它不记录您选择了哪种语言，因此如果您选择的语言不是默认语言，您将被迫在*每一个*代码示例上更改选项卡。在这里加入一点客户端
    JavaScript 将使用户的体验更加愉快。
- en: '*Update (2024-01-11): It seem that Eleventy have taken this feedback onboard
    and [fixed this](https://twitter.com/eleven_ty/status/1745156260649959708). Thank
    you!* 🙏'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '*更新（2024-01-11）：看起来 Eleventy 已经接受了这个反馈，并[修复了这个问题](https://twitter.com/eleven_ty/status/1745156260649959708)。谢谢！*
    🙏'
- en: '*While just about everything in this post is from 2022, while tidying it up
    I couldn’t resist adding just one more recent idea that surprised me.*'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '*虽然这篇文章中的几乎一切都来自 2022 年，但在整理它时，我忍不住加入了一个最近惊讶我的新想法。*'
- en: Our final stop on the Web development dogma train is a view that’s come up a
    few times but still surprises me. The most recent rendition I saw went something
    like, “we’re so blind and stubborn that we’ve ended up with a hugely complex toolchain
    but we really should be able to ship Web apps without a build step at all”.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在 Web 开发教条列车上的最后一站是一个观点，这个观点已经出现过几次，但仍然让我感到惊讶。我最近看到的最新版本大致是，“我们是如此盲目和固执，以至于我们最终拥有了一个极其复杂的工具链，但实际上我们应该能够在完全没有构建步骤的情况下发布
    Web 应用程序”。
- en: As someone who spent most of his career working with compiled languages the
    desire to go without a build step is surprising. The things compiler engineers
    do amaze me. They are geniuses who layer clever optimization on top of clever
    optimization transforming my very average code into something unrecognizable and
    insanely fast. If anything, I want more of that compiler magic in my Web development.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个大部分时间都在使用编译语言工作的人，去掉构建步骤的愿望令人惊讶。编译器工程师做的事情令我惊讶。他们是将聪明的优化层层叠加在一起的天才，将我的普通代码转变成了难以辨认且速度疯狂快的东西。如果有什么的话，我更希望在我的
    Web 开发中有更多这样的编译器魔法。
- en: Obviously JavaScript presents its own challenges since it can be very hard to
    statically determine the side effects of a certain operation but I’m sure there’s
    still more room to explore in optimizing JavaScript at compile time.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，JavaScript 也存在自己的挑战，因为很难静态确定某个操作的副作用，但我相信在编译时优化 JavaScript 还有更多的探索空间。
- en: Web developers seem to agree on optimizing image assets and pre-generating static
    HTML pages where it makes sense, why is there resistance to optimizing code assets
    too? Why defer computation and I/O to runtime that can be done once at build time?
    If nothing else, I have no desire to ship my megabyte-long comments cursing iOS
    Safari to every user on every request.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Web开发人员似乎都同意优化图像资产和在合适的地方预生成静态HTML页面，为什么对优化代码资产也存在抵抗？为什么要将计算和I/O推迟到运行时，而这些可以在构建时完成一次呢？即使没有其他原因，我也不想将我长达几兆字的对iOS
    Safari的咒骂评论发送给每个请求的用户。
- en: Maybe 2024 will be the year where client-side Rust/WASM frontend frameworks
    start to get traction and if that’s the case, we’d better get used to having a
    build step!
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 或许2024年将是客户端Rust/WASM前端框架开始受到关注的一年，如果是这样，我们最好开始适应构建步骤！
- en: A number of the points above could possibly be summarised as “My blog is representative
    of Web development at large”. That is, coming from browser engineer to Web developer,
    most of the notions about Web development that have surprised me are the result
    of people extrapolating their experience of the Web in a way that doesn’t overlap
    with mine.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 上述一些观点可能可以总结为“我的博客代表了大规模Web开发”。也就是说，从浏览器工程师到Web开发人员，我发现大多数让我感到惊讶的Web开发概念是人们根据自己对Web的体验进行推断，而这种推断方式与我的体验并不重叠。
- en: Since I left Mozilla over four years ago, I’ve spent most of my time working
    on a Web app. I’ve also spent *way* too long setting up this blog. Surprisingly,
    with regards to tooling, architecture, or Web platform features used, I’ve found
    almost no overlap between the two. It’s almost as if blogs and apps exist in entirely
    disparate corners of the Web development landscape.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 自从四年多前离开Mozilla以来，我大部分时间都在开发一个Web应用程序。我也花费了*太*长时间来设置这个博客。令人惊讶的是，在工具、架构或Web平台功能方面的使用上，我几乎没有发现两者之间有任何重叠。这几乎就像博客和应用程序存在于完全不同的Web开发领域一样。
- en: My app is a mass of TypeScript code, my blog uses almost no client-side JavaScript.
    My app is hugely complicated by two-directional data sync, my blog is read-only.
    My app uses webpack, Playwright E2E tests, a component framework, and a state
    management library, my blog uses none of those.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我的应用程序是一堆TypeScript代码，我的博客几乎没有使用客户端JavaScript。我的应用程序通过双向数据同步变得非常复杂，我的博客是只读的。我的应用程序使用webpack，Playwright端对端测试，一个组件框架和一个状态管理库，而我的博客没有使用这些。
- en: If you’re mostly engaged with one or the other, it’s easy to think that’s what
    Web development looks like. In truth, Web development is probably more diverse
    than any of us imagines.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你主要参与其中之一，很容易认为这就是Web开发的样子。事实上，Web开发可能比我们想象的更加多样化。
- en: There are other notions I’ve found surprising but the common theme in the above
    is it’s easy to assume our experience of the Web is representative of Web development
    in general.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 上述内容中还有其他令我感到惊讶的概念，但以上共同的主题是，很容易假设我们对Web的体验代表了Web开发的普遍情况。
- en: Moving from browser development back to Web development has been humbling because
    it’s so much broader and deeper than I knew. I have a much greater respect for
    Web developers, especially those at little Web shops and startups that live or
    die by the success of their Web apps.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 从浏览器开发转回到Web开发是一种谦卑的体验，因为它比我了解的要广泛和深入得多。我对Web开发人员有了更大的尊重，尤其是那些靠其Web应用程序的成功与否而生死攸关的小型Web商店和初创企业。
- en: If that’s you, I hope reading this post gives you confidence that even if browser
    engineers, standards editors, and other Web developers insist on a particular
    way of doing things, you know your constraints better than anyone else and you’re
    probably doing things just fine.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你也是这种情况，我希望阅读本文能让你相信，即使浏览器工程师、标准编辑和其他Web开发人员坚持某种特定的做事方式，你也比任何人都更了解自己的限制，而且你很可能做得很好。
- en: 'Since posting this article I’ve received some very useful feedback which I’ll
    summarise below:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 自从发布这篇文章以来，我收到了一些非常有用的反馈，我将在下面总结一下：
- en: Some people pointed out that the background behind a lot of anti-JavaScript
    and anti-SPA sentiment is a reaction to seeing static sites being rendered as
    React SPAs which is a very poor fit. That was helpful context that I hadn’t appreciated.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有些人指出，反对JavaScript和反对SPA情绪背后的背景是对将静态站点渲染为React SPA的反应，这是一种非常不合适的做法。这是我没有意识到的有益背景信息。
- en: Others clarified that the “no build step” argument is more about local development
    and not about production assets. That makes a lot of sense and is something I
    can appreciate.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他人澄清，“无构建步骤”的论点更多地是关于本地开发，而不是关于生产资产。这很有道理，也是我能理解的事情。
- en: My point wasn’t to say you *should* have a build step but simply to say that
    coming from browser development I was surprised at the anti-build-step sentiment
    because I’m used to compilers and I’d be interested in seeing what more they can
    do for us.
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我的观点并不是说你*应该*有一个构建步骤，而只是想说，作为一个来自浏览器开发领域的人，我对反对构建步骤的情绪感到惊讶，因为我习惯于编译器，我很想看看它们还能为我们做些什么。
- en: 'Some people took issue with some of the later points because I failed to clearly
    summarise my main contention. Here it is:'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有些人对一些后来的观点提出了异议，因为我没有清晰地总结我的主要争论。这里是：
- en: I worked on browsers for over a decade and am still involved in Web standards
    and browser development. *I love the platform and encourage others to make full
    use of it.*
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我在浏览器上工作了十多年，仍然参与Web标准和浏览器开发。*我热爱这个平台，并鼓励其他人充分利用它。*
- en: My contention is with the absolute terms with which Web development best practices
    are sometimes asserted. Web development social media can be a fierce place—something
    I was sheltered from when working on browsers.
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我的争论是关于有时对Web开发最佳实践断言的绝对条件。Web开发社交媒体可能是一个激烈的地方——这是我在浏览器工作时所不曾经历的。
- en: I’m certainly not trying to establish a new dogma but just to push back and
    say that using JavaScript, writing an SPA, and having a build step is sometimes
    the right choice and you shouldn’t feel bad about it.
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我当然不是在建立一种新的教条，而只是在反驳并说，使用JavaScript，编写单页应用，并具有构建步骤有时是正确的选择，你不应该感到难过。
