["```\nIntroduce BPF trampoline that works as a bridge between kernel functions, BPF\nprograms and other BPF programs.\n\nThe first use case is fentry/fexit BPF programs that are roughly equivalent to\nkprobe/kretprobe. Unlike k[ret]probe there is practically zero overhead to call\na set of BPF programs before or after kernel function.\n\nThe second use case is heavily influenced by pain points in XDP development.\nBPF trampoline allows attaching similar fentry/fexit BPF program to any\nnetworking BPF program. It's now possible to see packets on input and output of\nany XDP, TC, lwt, cgroup programs without disturbing them. This greatly helps\nBPF-based network troubleshooting.\n\nThe third use case of BPF trampoline will be explored in the follow up patches.\nThe BPF trampoline will be used to dynamicly link BPF programs. It's more\ngeneric mechanism than array and link list of programs used in tracing,\nnetworking, cgroups. In many cases it can be used as a replacement for\nbpf_tail_call-based program chaining. See [1] for long term design discussion.\n\nv3->v4:\n- Included Peter's\n  \"86/alternatives: Teach text_poke_bp() to emulate instructions\" as a first patch.\n  If it changes between now and merge window, I'll rebease to newer version.\n  The patch is necessary to do s/text_poke/text_poke_bp/ in patch 3 to fix the race.\n- In patch 4 fixed bpf_trampoline creation race spotted by Andrii.\n- Added patch 15 that annotates prog->kern bpf context types. It made patches 16\n  and 17 cleaner and more generic.\n- Addressed Andrii's feedback in other patches.\n\nv2->v3:\n- Addressed Song's and Andrii's comments\n- Fixed few minor bugs discovered while testing\n- Added one more libbpf patch\n\nv1->v2:\n- Addressed Andrii's comments\n- Added more test for fentry/fexit to kernel functions. Including stress test\n  for maximum number of progs per trampoline.\n- Fixed a race btf_resolve_helper_id()\n- Added a patch to compare BTF types of functions arguments with actual types.\n- Added support for attaching BPF program to another BPF program via trampoline\n- Converted to use text_poke() API. That's the only viable mechanism to\n  implement BPF-to-BPF attach. BPF-to-kernel attach can be refactored to use\n  register_ftrace_direct() whenever it's available.\n\n[1]\nhttps://lore.kernel.org/bpf/20191112025112.bhzmrrh2pr76ss...\n\nAlexei Starovoitov (19):\n  bpf: refactor x86 JIT into helpers\n  bpf: Add bpf_arch_text_poke() helper\n  bpf: Introduce BPF trampoline\n  libbpf: Introduce btf__find_by_name_kind()\n  libbpf: Add support to attach to fentry/fexit tracing progs\n  selftest/bpf: Simple test for fentry/fexit\n  bpf: Add kernel test functions for fentry testing\n  selftests/bpf: Add test for BPF trampoline\n  selftests/bpf: Add fexit tests for BPF trampoline\n  selftests/bpf: Add combined fentry/fexit test\n  selftests/bpf: Add stress test for maximum number of progs\n  bpf: Reserve space for BPF trampoline in BPF programs\n  bpf: Fix race in btf_resolve_helper_id()\n  bpf: Annotate context types\n  bpf: Compare BTF types of functions arguments with actual types\n  bpf: Support attaching tracing BPF program to other BPF programs\n  libbpf: Add support for attaching BPF programs to other BPF programs\n  selftests/bpf: Extend test_pkt_access test\n  selftests/bpf: Add a test for attaching BPF prog to another BPF prog\n    and subprog\n\nPeter Zijlstra (1):\n  x86/alternatives: Teach text_poke_bp() to emulate instructions\n\n arch/x86/include/asm/text-patching.h          |  24 +-\n arch/x86/kernel/alternative.c                 | 132 ++++--\n arch/x86/kernel/jump_label.c                  |   9 +-\n arch/x86/kernel/kprobes/opt.c                 |  11 +-\n arch/x86/net/bpf_jit_comp.c                   | 424 +++++++++++++++---\n include/linux/bpf.h                           | 138 +++++-\n include/linux/bpf_types.h                     |  78 ++--\n include/linux/bpf_verifier.h                  |   1 +\n include/linux/btf.h                           |   1 +\n include/uapi/linux/bpf.h                      |   3 +\n kernel/bpf/Makefile                           |   1 +\n kernel/bpf/btf.c                              | 363 ++++++++++++++-\n kernel/bpf/core.c                             |   9 +\n kernel/bpf/syscall.c                          |  77 +++-\n kernel/bpf/trampoline.c                       | 253 +++++++++++\n kernel/bpf/verifier.c                         | 131 +++++-\n net/bpf/test_run.c                            |  41 ++\n net/core/filter.c                             |  12 +-\n tools/include/uapi/linux/bpf.h                |   3 +\n tools/lib/bpf/bpf.c                           |   8 +-\n tools/lib/bpf/bpf.h                           |   5 +-\n tools/lib/bpf/bpf_helpers.h                   |  13 +\n tools/lib/bpf/btf.c                           |  22 +\n tools/lib/bpf/btf.h                           |   2 +\n tools/lib/bpf/libbpf.c                        | 154 +++++--\n tools/lib/bpf/libbpf.h                        |   7 +-\n tools/lib/bpf/libbpf.map                      |   3 +\n .../selftests/bpf/prog_tests/fentry_fexit.c   |  90 ++++\n .../selftests/bpf/prog_tests/fentry_test.c    |  64 +++\n .../selftests/bpf/prog_tests/fexit_bpf2bpf.c  |  76 ++++\n .../selftests/bpf/prog_tests/fexit_stress.c   |  76 ++++\n .../selftests/bpf/prog_tests/fexit_test.c     |  64 +++\n .../selftests/bpf/prog_tests/kfree_skb.c      |  39 +-\n .../testing/selftests/bpf/progs/fentry_test.c |  90 ++++\n .../selftests/bpf/progs/fexit_bpf2bpf.c       |  91 ++++\n .../testing/selftests/bpf/progs/fexit_test.c  |  98 ++++\n tools/testing/selftests/bpf/progs/kfree_skb.c |  52 +++\n .../selftests/bpf/progs/test_pkt_access.c     |  38 +-\n 38 files changed, 2484 insertions(+), 219 deletions(-)\n create mode 100644 kernel/bpf/trampoline.c\n create mode 100644 tools/testing/selftests/bpf/prog_tests/fentry_fexit.c\n create mode 100644 tools/testing/selftests/bpf/prog_tests/fentry_test.c\n create mode 100644 tools/testing/selftests/bpf/prog_tests/fexit_bpf2bpf.c\n create mode 100644 tools/testing/selftests/bpf/prog_tests/fexit_stress.c\n create mode 100644 tools/testing/selftests/bpf/prog_tests/fexit_test.c\n create mode 100644 tools/testing/selftests/bpf/progs/fentry_test.c\n create mode 100644 tools/testing/selftests/bpf/progs/fexit_bpf2bpf.c\n create mode 100644 tools/testing/selftests/bpf/progs/fexit_test.c\n\n-- \n2.23.0\n\n```"]