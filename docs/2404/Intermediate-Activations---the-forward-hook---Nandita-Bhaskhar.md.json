["```\nprint(model)\n> ResNet(\n\t\t(conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), \n                                  padding=(3, 3), bias=False)\n\t  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, \n                                  track_running_stats=True)\n\t  (relu): ReLU(inplace=True)\n\t  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, \n                                  dilation=1, ceil_mode=False)\n\t  (layer1): Sequential(\n\t    (0): BasicBlock(\n\t      (conv1): Conv2d(64, 64, kernel_size=(3, 3), \n                    stride=(1, 1), padding=(1, 1), bias=False)\n\t      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, \n                    affine=True, track_running_stats=True)\n\t      (relu): ReLU(inplace=True)\n\t      (conv2): Conv2d(64, 64, kernel_size=(3, 3), \n                    stride=(1, 1), padding=(1, 1), bias=False)\n\t      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, \n                    affine=True, track_running_stats=True)\n\t    )\n\t    (1): BasicBlock(\n\t      (conv1): Conv2d(64, 64, kernel_size=(3, 3), \n                    stride=(1, 1), padding=(1, 1), bias=False)\n\t      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, \n                    affine=True, track_running_stats=True)\n\t      (relu): ReLU(inplace=True)\n\t      (conv2): Conv2d(64, 64, kernel_size=(3, 3), \n                    stride=(1, 1), padding=(1, 1), bias=False)\n\t      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, \n                    affine=True, track_running_stats=True)\n\t    )\n\t  )\n\t  (layer2): Sequential(\n\t    (0): BasicBlock(\n\t      (conv1): Conv2d(64, 128, kernel_size=(3, 3), \n                    stride=(2, 2), padding=(1, 1), bias=False)\n\t      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, \n                    affine=True, track_running_stats=True)\n\t      (relu): ReLU(inplace=True)\n\t      (conv2): Conv2d(128, 128, kernel_size=(3, 3), \n                    stride=(1, 1), padding=(1, 1), bias=False)\n\t      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, \n                    affine=True, track_running_stats=True)\n\t      (downsample): Sequential(\n\t        (0): Conv2d(64, 128, kernel_size=(1, 1), \n                    stride=(2, 2), bias=False)\n\t        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, \n                    affine=True, track_running_stats=True)\n\t      )\n\t    )\n\t    (1): BasicBlock(\n\t      (conv1): Conv2d(128, 128, kernel_size=(3, 3), \n                    stride=(1, 1), padding=(1, 1), bias=False)\n\t      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, \n                    affine=True, track_running_stats=True)\n\t      (relu): ReLU(inplace=True)\n\t      (conv2): Conv2d(128, 128, kernel_size=(3, 3), \n                    stride=(1, 1), padding=(1, 1), bias=False)\n\t      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, \n                    affine=True, track_running_stats=True)\n\t    )\n\t  )\n\t  (layer3): Sequential(\n\t    (0): BasicBlock(\n\t      (conv1): Conv2d(128, 256, kernel_size=(3, 3), \n                    stride=(2, 2), padding=(1, 1), bias=False)\n\t      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, \n                    affine=True, track_running_stats=True)\n\t      (relu): ReLU(inplace=True)\n\t      (conv2): Conv2d(256, 256, kernel_size=(3, 3), \n                    stride=(1, 1), padding=(1, 1), bias=False)\n\t      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, \n                    affine=True, track_running_stats=True)\n\t      (downsample): Sequential(\n\t        (0): Conv2d(128, 256, kernel_size=(1, 1), \n                    stride=(2, 2), bias=False)\n\t        (1): BatchNorm2d(256, eps=1e-05, \n                    momentum=0.1, affine=True, track_running_stats=True)\n\t      )\n\t    )\n\t    (1): BasicBlock(\n\t      (conv1): Conv2d(256, 256, kernel_size=(3, 3), \n                    stride=(1, 1), padding=(1, 1), bias=False)\n\t      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, \n                    affine=True, track_running_stats=True)\n\t      (relu): ReLU(inplace=True)\n\t      (conv2): Conv2d(256, 256, kernel_size=(3, 3), \n                    stride=(1, 1), padding=(1, 1), bias=False)\n\t      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, \n                    affine=True, track_running_stats=True)\n\t    )\n\t  )\n\t  (layer4): Sequential(\n\t    (0): BasicBlock(\n\t      (conv1): Conv2d(256, 512, kernel_size=(3, 3), \n                    stride=(2, 2), padding=(1, 1), bias=False)\n\t      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, \n                    affine=True, track_running_stats=True)\n\t      (relu): ReLU(inplace=True)\n\t      (conv2): Conv2d(512, 512, kernel_size=(3, 3), \n                    stride=(1, 1), padding=(1, 1), bias=False)\n\t      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, \n                    affine=True, track_running_stats=True)\n\t      (downsample): Sequential(\n\t        (0): Conv2d(256, 512, kernel_size=(1, 1), \n                    stride=(2, 2), bias=False)\n\t        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, \n                    affine=True, track_running_stats=True)\n\t      )\n\t    )\n\t    (1): BasicBlock(\n\t      (conv1): Conv2d(512, 512, kernel_size=(3, 3), \n                    stride=(1, 1), padding=(1, 1), bias=False)\n\t      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, \n                    affine=True, track_running_stats=True)\n\t      (relu): ReLU(inplace=True)\n\t      (conv2): Conv2d(512, 512, kernel_size=(3, 3), \n                    stride=(1, 1), padding=(1, 1), bias=False)\n\t      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, \n                    affine=True, track_running_stats=True)\n\t    )\n\t  )\n\t  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\n\t  (fc): Linear(in_features=512, out_features=1000, bias=True)\n\t) \n```"]