- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 13:32:38'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: A Beginner's Guide to the ESP8266
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://tttapa.github.io/ESP8266/Chap01%20-%20ESP8266.html](https://tttapa.github.io/ESP8266/Chap01%20-%20ESP8266.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A Beginner's Guide to the ESP8266
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Pieter P, 08-03-2017*'
  prefs: []
  type: TYPE_NORMAL
- en: Some time ago, I wrote
  prefs: []
  type: TYPE_NORMAL
- en: '[a Beginner''s Guide to Arduino](http://www.instructables.com/id/A-Beginners-Guide-to-Arduino/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'that seems to be very popular, so I decided to create a follow-up:'
  prefs: []
  type: TYPE_NORMAL
- en: '**A Beginner''s Guide to the ESP8266**'
  prefs: []
  type: TYPE_NORMAL
- en: . That's right, a tutorial on how to use the world's most popular $3 Wi-Fi board.
  prefs: []
  type: TYPE_NORMAL
- en: This is going to be a very in-depth tutorial, covering some networking concepts
    as well. If you're a beginner, and just want to go straight to the more exciting
    Wi-Fi part, feel free to do so, I included short *TL;DR's* in the longer, more
    technical parts.
  prefs: []
  type: TYPE_NORMAL
- en: 'A short overview of what I''ll cover in this article:'
  prefs: []
  type: TYPE_NORMAL
- en: '**What is an ESP8266?** A short overview of what an ESP8266 is, and what you
    can do with it'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Deciding on what board to buy**: There''s loads of different ESP8266 available
    these days, finding the one that''s best for you can be hard'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Installing the software**: you need to install some software to program the
    ESP8266, and maybe a USB driver'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Setting up the hardware**: some modules and boards need some external components'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**The ESP8266 as a microcontroller**: the ESP8266 can be used as a normal microcontroller,
    just like an Arduino'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Network protocols**: Before we start using the Wi-Fi capabilities of the
    ESP8266, I''ll teach you some of the network protocols involved'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Setting up a Wi-Fi connection**: That''s probably why you''re reading this,
    right?'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Name resolution**: Find the ESP8266 on your local network using mDNS'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Setting up a simple web server**: This enables you to add web pages to the
    ESP8266, and browse them from your computer or phone'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Setting up an advanced web server**: a more advanced server with a real file
    system that allows you to upload new files over Wi-Fi'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**OTA - uploading programs over Wi-Fi**: You don''t have to upload programs
    over USB, you can use Wi-Fi instead'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Wirelessly controlling your RGB lighting**: Change the color of your LED
    strips using your phone or computer'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Getting the time**: Connect to a time server using NTP and sync the ESP''s
    clock'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Monitoring sensors**: log the temperature in your living room, save it in
    flash memory and show it in a fancy graph in your browser'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Getting email notifications**: Turn on a notification light when you''ve
    got unread emails'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Advanced features**: use DNS, captive portals, Wi-Fi connector libraries,
    OSC ...'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This guide expects some basic knowledge of microcontrollers like the Arduino.
    If that's something you're not already familiar with, I'd recommend you to read
    my
  prefs: []
  type: TYPE_NORMAL
- en: '[Beginner''s Guide to Arduino](https://www.instructables.com/id/A-Beginners-Guide-to-Arduino/)'
  prefs: []
  type: TYPE_NORMAL
- en: first, it covers a lot of the basics that I won't go into in this article.
  prefs: []
  type: TYPE_NORMAL
- en: I really want to focus on the ESP8266-specific things, like Wi-Fi and other
    network protocols, the ESP's hardware, software, IoT, etc ...
  prefs: []
  type: TYPE_NORMAL
- en: What is an ESP8266?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The ESP8266 is a System on a Chip (SoC), manufactured by the Chinese company
  prefs: []
  type: TYPE_NORMAL
- en: '[Espressif](https://espressif.com/en/)'
  prefs: []
  type: TYPE_NORMAL
- en: . It consists of a Tensilica L106 32-bit
  prefs: []
  type: TYPE_NORMAL
- en: '**micro controller**'
  prefs: []
  type: TYPE_NORMAL
- en: unit (MCU) and a
  prefs: []
  type: TYPE_NORMAL
- en: '**Wi-Fi transceiver**'
  prefs: []
  type: TYPE_NORMAL
- en: . It has
  prefs: []
  type: TYPE_NORMAL
- en: '**11 GPIO pins**'
  prefs: []
  type: TYPE_NORMAL
- en: '* (General Purpose Input/Output pins), and an'
  prefs: []
  type: TYPE_NORMAL
- en: '**analog input**'
  prefs: []
  type: TYPE_NORMAL
- en: as well. This means that you can program it like any normal Arduino or other
    microcontroller. And on top of that, you get Wi-Fi communication, so you can use
    it to connect to your Wi-Fi network, connect to the Internet, host a web server
    with real web pages, let your smartphone connect to it, etc ... The possibilities
    are endless! It's no wonder that this chip has become the most popular IOT device
    available.
  prefs: []
  type: TYPE_NORMAL
- en: There are many different modules available, standalone modules like the
  prefs: []
  type: TYPE_NORMAL
- en: '[ESP-## series](http://en.ai-thinker.com/html/Products/WIFI_Module/ESP_01-14Series/)'
  prefs: []
  type: TYPE_NORMAL
- en: by AI Thinker, or complete development boards like the
  prefs: []
  type: TYPE_NORMAL
- en: '[NodeMCU DevKit](http://nodemcu.com/index_en.html)'
  prefs: []
  type: TYPE_NORMAL
- en: or the
  prefs: []
  type: TYPE_NORMAL
- en: '[WeMos D1](http://www.wemos.cc/)'
  prefs: []
  type: TYPE_NORMAL
- en: . Different boards may have different pins broken out, have different Wi-Fi
    antennas, or a different amount of flash memory on board.
  prefs: []
  type: TYPE_NORMAL
- en: (*) The ESP8266 chip itself has 17 GPIO pins, but 6 of these pins (6-11) are
    used for communication with the on-board flash memory chip.
  prefs: []
  type: TYPE_NORMAL
- en: Programming
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There are different ways to program the ESP8266, but I'll only cover the method
    using the Arduino IDE. This is really easy for beginners, and it's a very familiar
    environment if you've used Arduino boards before.
  prefs: []
  type: TYPE_NORMAL
- en: 'Just keep in mind that it''s not limited to this option: there''s also an official
    SDK available to program it in real C, this is very useful if you want to optimize
    your code or do some advanced tricks that aren''t supported by the Arduino IDE.
    Another possibility is to flash it with a'
  prefs: []
  type: TYPE_NORMAL
- en: '[LUA](https://github.com/nodemcu/nodemcu-firmware)'
  prefs: []
  type: TYPE_NORMAL
- en: interpreter, so you can upload and run LUA scripts. Or maybe you're more familiar
    with Python? Then you should check out the
  prefs: []
  type: TYPE_NORMAL
- en: '[MicroPython firmware](http://micropython.org/download#esp8266)'
  prefs: []
  type: TYPE_NORMAL
- en: to interpret MicroPython scripts. I'm sure there's other languages available
    as well, so just do a quick Google search and write your code in the language
    of your choice.
  prefs: []
  type: TYPE_NORMAL
- en: Requirements
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You''ll need a couple of things in order to follow this guide:'
  prefs: []
  type: TYPE_NORMAL
- en: An ESP8266 board
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A computer that can run the Arduino IDE (Windows, Mac or Linux)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A USB-to-Serial converter, it is very important that you use a **3.3V** model*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A USB cable
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A 3.3V power supply or voltage regulator*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A Wi-Fi network to connect to
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: (*) Your board may already include these. More information can be found in the
    next chapter.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
