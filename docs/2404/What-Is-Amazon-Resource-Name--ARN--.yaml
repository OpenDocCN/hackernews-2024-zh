- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 13:38:22'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 13:38:22'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: What Is Amazon Resource Name (ARN)?
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是亚马逊资源名称（ARN）？
- en: 来源：[https://everythingdevops.dev/what-is-amazon-resource-name-arn/](https://everythingdevops.dev/what-is-amazon-resource-name-arn/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://everythingdevops.dev/what-is-amazon-resource-name-arn/](https://everythingdevops.dev/what-is-amazon-resource-name-arn/)
- en: AWS has many [services](https://aws.amazon.com/products/?aws-products-all.sort-by=item.additionalFields.productNameLowercase&aws-products-all.sort-order=asc&awsf.re%3AInvent=*all&awsf.Free%20Tier%20Type=*all&awsf.tech-category=*all)
    and resources ranging from EC2 instances to [S3 buckets](https://everythingdevops.dev/optimize-aws-storage-costs-with-amazon-s3-lifecycle-configurations/),
    and you can have multiple instances for each resource. In a scenario where you
    need to identify a specific resource, it is only logical to have a unique ID for
    each resource. Well, there is, and it's called Amazon Resource Name (ARN).
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 拥有许多[服务](https://aws.amazon.com/products/?aws-products-all.sort-by=item.additionalFields.productNameLowercase&aws-products-all.sort-order=asc&awsf.re%3AInvent=*all&awsf.Free%20Tier%20Type=*all&awsf.tech-category=*all)和资源，从
    EC2 实例到[S3 存储桶](https://everythingdevops.dev/optimize-aws-storage-costs-with-amazon-s3-lifecycle-configurations/)，每种资源可以拥有多个实例。在需要识别特定资源的情况下，每个资源具有唯一的
    ID 是非常合理的。这种唯一标识是称为亚马逊资源名称（ARN）。
- en: In this article, you will understand ARNs and their significance within the
    Amazon Web Services (AWS) ecosystem. You'll get to dissect the structure of an
    ARN and how you can retrieve them. By the end of this article, identifying and
    deciphering ARNs will be a breeze for you.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，您将了解 ARN 及其在亚马逊网络服务（AWS）生态系统中的重要性。您将深入剖析 ARN 的结构以及如何检索它们。到本文末，识别和解析 ARN
    对您来说将变得轻而易举。
- en: What Is an ARN?
  id: totrans-split-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是 ARN？
- en: An [ARN](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html)
    is a unique identifier assigned to each resource in AWS. It is a string that's
    used to identify resources within the AWS ecosystem. ARNs identify resources such
    as Amazon EC2 instances, Amazon S3 buckets, IAM (Identity and Access Management)
    users, roles, policies, and others within AWS.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[ARN](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html)
    是分配给 AWS 中每个资源的唯一标识符。它是一个字符串，用于标识 AWS 生态系统内的资源，如 Amazon EC2 实例、Amazon S3 存储桶、IAM（身份和访问管理）用户、角色、策略等。'
- en: ARNs are required to specify a resource unambiguously across all of AWS. They
    are used in various AWS services and APIs to identify resources and grant permissions.
    This means that each resource can be identified uniquely regardless of the AWS
    region or AWS account it belongs to.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: ARN 用于在 AWS 的所有部分中唯一地指定资源。它们用于各种 AWS 服务和 API 中，以识别资源并授予权限。这意味着每个资源可以在不考虑其所属
    AWS 区域或账户的情况下被唯一标识。
- en: This universality allows AWS services to accurately locate and manage resources
    irrespective of their location or ownership. For example, an IAM policy attached
    to a user in one AWS account can refer to an S3 bucket in another AWS account
    by using the ARN of the bucket, ensuring that the policy is applied correctly.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 此普遍性使得 AWS 服务能够准确地定位和管理资源，而不受其位置或所有权的限制。例如，附加到一个 AWS 账户中的用户的 IAM 策略可以通过使用存储桶的
    ARN 指向另一个 AWS 账户中的 S3 存储桶，以确保策略被正确应用。
- en: Why are ARNs Important?
  id: totrans-split-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ARN 为什么重要？
- en: Aside from uniquely identifying resources, ARNs play a crucial role in the AWS
    ecosystem. They can allow you to access your resources programmatically, which
    is essential when using Infrastructure as Code (IaC) tools like CloudFormation,
    Terraform, [OpenTofu](https://everythingdevops.dev/kubernetes-with-opentofu-a-guide-to-being-fully-open-source/)
    etc.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 除了唯一标识资源外，ARN 在 AWS 生态系统中扮演着至关重要的角色。它们可以让您以编程方式访问您的资源，这在使用基础架构即代码（IaC）工具如 CloudFormation、Terraform、[OpenTofu](https://everythingdevops.dev/kubernetes-with-opentofu-a-guide-to-being-fully-open-source/)
    等时至关重要。
- en: 'Alongside this, below are a few reasons why you should pay more attention to
    ARNs:'
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，以下是您应更多关注 ARN 的几个原因：
- en: '**Resource-Level Permissions**: Some AWS services allow you to specify resource-level
    permissions, granting different levels of access to various resources within the
    same service. ARNs play a vital role in defining these resource-level permissions
    accurately. For instance, you can grant read access to one S3 bucket and write
    access to another S3 bucket within the same AWS account.'
  id: totrans-split-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源级权限**：一些 AWS 服务允许您指定资源级权限，为同一服务内的各种资源授予不同级别的访问权限。ARN 在准确定义这些资源级权限中发挥着至关重要的作用。例如，您可以为同一
    AWS 账户中的一个 S3 存储桶授予读取权限，为另一个 S3 存储桶授予写入权限。'
- en: '**Cross-Service References**: ARNs enable cross-service references, allowing
    resources from one AWS service to interact with resources from another service.
    For example, an IAM policy attached to an EC2 instance might reference an S3 bucket
    using its ARN, enabling the instance to access the bucket securely.'
  id: totrans-split-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**API Operations**: When interacting with AWS programmatically through APIs
    or SDKs, ARNs are used to reference resources. APIs and SDKs provide methods for
    constructing ARNs based on the type of resource and its attributes, making it
    easier to work with them programmatically. For example, when making an API call
    to retrieve information about an EC2 instance, you would typically specify the
    ARN of the instance.'
  id: totrans-split-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**IAM Policies**: An everyday use case for ARNs is in [IAM policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html).
    These policies define who can access which resources and what actions they can
    perform. ARNs are used to specify the resources to which the policy applies. With
    ARNs, you can granularly define IAM policies to allow or deny access to specific
    resources within AWS.'
  id: totrans-split-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Auditing and Logging**: ARNs are often included in AWS CloudTrail logs and
    other auditing mechanisms. When you include ARNs in your logs, you can track which
    resources were accessed, modified, or deleted, providing a detailed audit trail
    of activities within your AWS account.'
  id: totrans-split-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Resource Tagging**: An optional but useful ability of ARNs is their integration
    with resource tagging. Tags are key-value pairs that provide metadata about resources.
    By combining ARNs with tags, you can create policies that apply to resources with
    specific tags, making it easier to manage resources at scale.'
  id: totrans-split-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Structure of an ARN
  id: totrans-split-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'AWS resource ARNs have a specific structure consisting of various components
    called namespaces. Each namespace provides a particular piece of information about
    the resource being identified. ARNs are delimited by colons (`:`) and have the
    following general format:'
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-split-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Below is a breakdown of each component of an ARN:'
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
- en: '**ARN Prefix**: The ARN always starts with the characters `arn:`.'
  id: totrans-split-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Partition**: The partition that the resource is in. This is usually `aws`
    but can also be `aws-cn` for resources in China or `aws-us-gov` in AWS GovCloud
    (US).'
  id: totrans-split-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Service**: This part of the ARN specifies the AWS service that the resource
    belongs to. For example, `s3` for Amazon S3, `ec2` for Amazon EC2, `iam` for IAM,
    etc.'
  id: totrans-split-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Region**: The region where the resource is located. This component is optional
    and is only present for region-specific resources, such as EC2 instances. If the
    resource is global, this part is omitted. An example of a region component is
    `us-west-2` for the US West (Oregon) region.'
  id: totrans-split-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Account ID**: The AWS account ID that owns the resource. This is a 12-digit
    number unique to each AWS account. It can be your account ID or the account ID
    of another AWS account if you are referencing a resource in a different account.
    This ID looks like `123456789012`.'
  id: totrans-split-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Resource ID**: The unique identifier for the resource within the account.
    This part of the ARN uniquely identifies the resource within the account. It can
    be the resource''s name or a unique identifier generated by AWS.'
  id: totrans-split-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There are variations in the structure of ARNs depending on the resource type.
    For example, some ARNs include a resource type in addition to the resource ID,
    separated by a colon (`:`) or a slash (`/`).
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are examples of different ARN variations:'
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-split-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Variation 1 (Slash Separator)**: In this format, the resource type and the
    resource ID are separated by a forward slash (`/`). This format is commonly used
    for certain AWS services, such as Amazon S3 buckets.'
  id: totrans-split-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Example**:'
  id: totrans-split-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-split-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Variation 2 (Colon Separator)**: In this format, the resource type and the
    resource ID are separated by a colon (`:`). This format is used for most other
    AWS services.'
  id: totrans-split-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Example**:'
  id: totrans-split-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-split-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**NOTE:** The choice of separator doesn''t affect the functionality of the
    ARN; it''s merely a convention used by AWS. However, adhering to the appropriate
    format for a given service is essential for consistency.'
  id: totrans-split-40
  prefs: []
  type: TYPE_NORMAL
- en: ARN Paths
  id: totrans-split-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In addition to the standard ARN structure, some resources support using ARN
    paths. ARN paths are a way to organize and structure resources within AWS services
    that support hierarchical resource naming. They allow you to organize resources
    in a tree-like structure, similar to a file system hierarchy.
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
- en: ARN paths are appended to the end of the ARN and are separated by a forward
    slash (`/`). The path components represent the hierarchy of the resources, with
    each element specifying a level in the hierarchy. You can use paths to group related
    resources or represent parent-child relationships between resources.
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, an S3 bucket can have objects stored within it. You can use an
    ARN path to specify the bucket and object within it. The path would look like
    this:'
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-split-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In this example, `example-bucket` is the S3 bucket, `example-folder` is a folder
    within the bucket, and `example-object` is an object stored within the folder.
    The path components are separated by forward slashes to indicate the hierarchy.
  id: totrans-split-46
  prefs: []
  type: TYPE_NORMAL
- en: ARN Wildcards
  id: totrans-split-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The flexibility of ARNs extends further with the use of wildcards. Wildcards
    are special characters that can be used in ARNs to represent multiple resources
    or resource types. They provide a way to specify a group of resources or all resources
    of a certain type without explicitly listing each one.
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
- en: Wildcards can be particularly useful when working with IAM policies, AWS resource
    policies, and certain AWS CLI commands. Especially when you want to grant permissions
    or perform actions on multiple resources that share a common pattern.
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
- en: The most common wildcard used in ARNs is the asterisk (`*`) character. The asterisk
    wildcard matches zero or more characters within the ARN component. It's often
    used to match multiple resources or values in policy or resource specification.
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
  zh: ARN中最常用的通配符是星号（`*`）字符。星号通配符在ARN组件内匹配零个或多个字符。它通常用于在策略或资源规范中匹配多个资源或值。
- en: 'For example, in an IAM policy, `"Resource": "arn:aws:s3:::*"` grants access
    to all S3 buckets in the AWS account.'
  id: totrans-split-51
  prefs: []
  type: TYPE_NORMAL
  zh: '例如，在IAM策略中，`"Resource": "arn:aws:s3:::*"`授予对AWS帐户中所有S3存储桶的访问权限。'
- en: 'Below is an example IAM policy statement using a wildcard in the ARN:'
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个使用ARN中通配符的IAM策略声明示例：
- en: '[PRE5]'
  id: totrans-split-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In this example, the wildcard (`*`) is used after the bucket name (`example-bucket`)
    to match all objects within the specified S3 bucket.
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，星号（`*`）用于在存储桶名（`example-bucket`）之后匹配指定S3存储桶中的所有对象。
- en: Aside from the asterisk wildcard, there is another wildcard character that you
    can use in ARNs. This is the question mark (`?`) wildcard. The question mark wildcard
    matches exactly one character within the ARN component. It's used to match a single
    character in a specific position within the ARN.
  id: totrans-split-55
  prefs: []
  type: TYPE_NORMAL
  zh: 除了星号通配符外，在ARN中还有另一个通配符字符可以使用。这就是问号（`?`）通配符。问号通配符精确匹配ARN组件中的一个字符。它用于匹配ARN特定位置的单个字符。
- en: 'An example of using the question mark wildcard in an ARN is:'
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在ARN中使用问号通配符的示例是：
- en: '[PRE6]'
  id: totrans-split-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In this example, the question mark wildcard (`?`) matches a single character
    in the path component of the ARN. This allows you to specify a more specific pattern
    for matching resources.
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，问号通配符（`?`）匹配ARN路径组件中的单个字符。这允许您指定一个更具体的模式来匹配资源。
- en: How to Retrieve ARNs
  id: totrans-split-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何检索ARNs
- en: There are several ways to retrieve the ARNs of your AWS resources. The method
    you choose will depend on your preference and the tools you have available.
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种方法可以检索您的AWS资源的ARN。您选择的方法将取决于您的偏好和可用工具。
- en: 'Below are some common methods for finding the ARNs of your AWS resources:'
  id: totrans-split-61
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是查找您的AWS资源的ARN的一些常见方法：
- en: '**AWS Management Console**: The [AWS Management Console](https://aws.amazon.com/free/?gclid=Cj0KCQjwlZixBhCoARIsAIC745BaYzavvY4aiA_WKKzkx1MSkWM4C-8b24smig8zRqFLVO3fG6SHN4YaAkh7EALw_wcB&trk=99f831a2-d162-429a-9a77-a89f6b3bd6cd&sc_channel=ps&ef_id=Cj0KCQjwlZixBhCoARIsAIC745BaYzavvY4aiA_WKKzkx1MSkWM4C-8b24smig8zRqFLVO3fG6SHN4YaAkh7EALw_wcB:G:s&s_kwcid=AL!4422!3!645125273270!e!!g!!aws%20console!19574556890!145779847152&all-free-tier.sort-by=item.additionalFields.SortRank&all-free-tier.sort-order=asc&awsf.Free%20Tier%20Types=*all&awsf.Free%20Tier%20Categories=*all)
    provides an easy way to view the ARNs of your resources. Typically, you''d follow
    these steps:'
  id: totrans-split-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**AWS管理控制台**：[AWS管理控制台](https://aws.amazon.com/free/?gclid=Cj0KCQjwlZixBhCoARIsAIC745BaYzavvY4aiA_WKKzkx1MSkWM4C-8b24smig8zRqFLVO3fG6SHN4YaAkh7EALw_wcB&trk=99f831a2-d162-429a-9a77-a89f6b3bd6cd&sc_channel=ps&ef_id=Cj0KCQjwlZixBhCoARIsAIC745BaYzavvY4aiA_WKKzkx1MSkWM4C-8b24smig8zRqFLVO3fG6SHN4YaAkh7EALw_wcB:G:s&s_kwcid=AL!4422!3!645125273270!e!!g!!aws%20console!19574556890!145779847152&all-free-tier.sort-by=item.additionalFields.SortRank&all-free-tier.sort-order=asc&awsf.Free%20Tier%20Types=*all&awsf.Free%20Tier%20Categories=*all)提供了查看您的资源ARN的简便方法。通常，您会按照以下步骤进行：'
- en: Navigate to the specific service in the AWS Management Console where the resource
    whose ARN you want to retrieve is located.
  id: totrans-split-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导航到AWS管理控制台中特定服务的位置，您想要检索其ARN的资源所在位置。
- en: Locate the resource you're interested in (e.g., an S3 bucket, an EC2 instance,
    an IAM role).
  id: totrans-split-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定位您感兴趣的资源（例如S3存储桶、EC2实例、IAM角色）。
- en: Typically, the ARN of the resource should be displayed somewhere in the resource's
    details or settings.
  id: totrans-split-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 典型情况下，资源的ARN应该显示在资源的详细信息或设置中。
- en: Copy the ARN from the console and use it as needed.
  id: totrans-split-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从控制台复制ARN并根据需要使用它。
- en: '**2\.  AWS CLI Commands**: You can also use [AWS CLI](https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html)
    commands to retrieve ARNs programmatically. Below are examples of AWS CLI commands
    to retrieve the ARNs of different resources:'
  id: totrans-split-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**2\.  AWS CLI命令**：您还可以使用[AWS CLI](https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html)命令以编程方式检索ARN。以下是用于检索不同资源ARN的AWS
    CLI命令示例：'
- en: 'To retrieve the ARN of an S3 bucket:'
  id: totrans-split-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要检索S3存储桶的ARN：
- en: '[PRE7]'
  id: totrans-split-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'To retrieve the ARN of an EC2 instance:'
  id: totrans-split-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要检索EC2实例的ARN：
- en: '[PRE8]'
  id: totrans-split-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Replace `your-bucket-name` and `your-instance-id` with the actual names or IDs
    of the resources you're interested in.
  id: totrans-split-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用实际感兴趣的资源名称或ID替换`your-bucket-name`和`your-instance-id`。
- en: '**3\. AWS CloudFormation Outputs**: If you''re using [AWS CloudFormation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/Welcome.html)
    to provision and manage your AWS resources, you can retrieve ARNs from CloudFormation
    stack outputs. This method is useful when you want to automate the retrieval of
    ARNs as part of your infrastructure deployment process.'
  id: totrans-split-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**3\. AWS CloudFormation 输出**：如果您使用 [AWS CloudFormation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/Welcome.html)
    来提供和管理 AWS 资源，您可以从 CloudFormation 堆栈输出中检索 ARN。此方法在您希望自动化检索 ARN 作为基础设施部署过程的一部分时非常有用。'
- en: 'Define an output for the ARN of the resource in your CloudFormation template:'
  id: totrans-split-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的 CloudFormation 模板中为资源的 ARN 定义一个输出：
- en: '[PRE9]'
  id: totrans-split-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: After deploying the CloudFormation stack, you can retrieve the output value
    using the AWS CLI or AWS Management Console.
  id: totrans-split-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在部署 CloudFormation 堆栈后，您可以使用 AWS CLI 或 AWS 管理控制台检索输出值。
- en: '[PRE10]'
  id: totrans-split-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Replace `your-stack-name` with the name of your CloudFormation stack.
  id: totrans-split-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 `your-stack-name` 替换为您的 CloudFormation 堆栈的名称。
- en: Common ARN Examples
  id: totrans-split-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见 ARN 示例
- en: 'There are various types of resources in AWS, each with its unique ARN format.
    Below are some common examples of ARNs for different AWS cloud resources:'
  id: totrans-split-80
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 中有各种类型的资源，每种资源都有其独特的 ARN 格式。以下是不同 AWS 云资源的一些常见 ARN 示例：
- en: '[PRE11]'
  id: totrans-split-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-split-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-split-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-split-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-split-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '**Amazon Relational Database Service (RDS) Instance**:'
  id: totrans-split-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Amazon 关系型数据库服务（RDS）实例**：'
- en: '[PRE16]'
  id: totrans-split-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: These examples showcase the diversity of resources in AWS and how ARNs are used
    to identify each resource within the AWS ecosystem uniquely.
  id: totrans-split-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这些示例展示了 AWS 中资源的多样性以及 ARN 如何用于唯一标识 AWS 生态系统内的每个资源。
- en: Best Practices for Working with ARNs
  id: totrans-split-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 ARN 的最佳实践
- en: An ARN is a sensitive piece of information that should be handled carefully
    to ensure the security and integrity of your AWS resources. This is because they
    contain information about the resources they identify, and if exposed or misused,
    they can lead to unauthorized access or unintended actions on your resources.
  id: totrans-split-90
  prefs: []
  type: TYPE_NORMAL
  zh: ARN 是一项敏感信息，应谨慎处理，以确保 AWS 资源的安全性和完整性。这是因为它们包含了它们所标识资源的信息，如果暴露或滥用，可能会导致对资源的未经授权访问或意外操作。
- en: 'Below are some best practices for working with ARNs in AWS:'
  id: totrans-split-91
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是在 AWS 中使用 ARN 的一些最佳实践：
- en: '**Minimal Exposure**: When working with ARNs in configurations, scripts, or
    code, avoid exposing them unnecessarily. Limit the visibility of ARNs to only
    those who need to know them to perform their tasks. If you''re to use them, consider
    using variable placeholders or environment variables to store ARNs securely.'
  id: totrans-split-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最小化暴露度**：在配置、脚本或代码中使用 ARN 时，避免不必要地暴露它们。将 ARN 的可见性限制为仅需要知道它们以执行任务的人员。如果必须使用它们，请考虑使用变量占位符或环境变量安全地存储
    ARN。'
- en: '**Be Specific in Resource References**: Whenever possible, specify resources
    explicitly rather than using wildcards. This helps to reduce the risk of unintended
    access to resources that should not be included in the policy or configuration.'
  id: totrans-split-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在资源引用中要具体化**：尽可能明确指定资源，而不是使用通配符。这有助于减少意外访问不应包含在策略或配置中的资源的风险。'
- en: '**Use Least Privilege Principle**: You should grant only the permissions necessary
    for a resource to perform its intended tasks. Avoid overly permissive policies
    that grant broader access than required. Regularly review and refine IAM policies
    to ensure they align with the principle of least privilege.'
  id: totrans-split-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用最小权限原则**：您应该仅授予资源执行其预期任务所需的权限。避免授予比所需更广泛访问权限的过于宽松的策略。定期审查和优化 IAM 策略，以确保与最小权限原则一致。'
- en: Conclusion
  id: totrans-split-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: In this article, we covered so much about ARNs, from what they are to why they
    are essential. We also discussed how you can retrieve ARNs using different methods
    and provided examples of common ARNs for various AWS cloud services.
  id: totrans-split-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们详细介绍了 ARN 的许多内容，从它们的定义到它们的重要性。我们还讨论了如何使用不同方法检索 ARN，并提供了各种 AWS 云服务的常见
    ARN 示例。
- en: When you see an ARN, you now know that it's more than just a string of characters,
    and breaking down its structure can give you much information about the resource
    it represents.
  id: totrans-split-97
  prefs: []
  type: TYPE_NORMAL
  zh: 当您看到一个 ARN 时，现在您知道它不仅仅是一串字符，分解其结构可以为您提供有关其表示的资源的许多信息。
- en: '********************************************************************************************************************************Like
    this article? Sign up for our newsletter below and become one of over 1000 subscribers
    who stay informed on the latest developments in the world of DevOps. Subscribe
    now!********************************************************************************************************************************'
  id: totrans-split-98
  prefs: []
  type: TYPE_NORMAL
  zh: '********************************************************************************************************************************喜欢这篇文章吗？请在下方订阅我们的新闻简报，成为超过1000名订阅者之一，了解DevOps领域的最新动态。立即订阅！********************************************************************************************************************************'
