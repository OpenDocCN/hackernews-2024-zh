- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-27 13:20:57'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 13:20:57
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Three Reasons Why You Should Not Use iPerf3 on Windows - Microsoft Community
    Hub
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 三个原因为何不应在 Windows 上使用 iPerf3 - Microsoft 社区中心
- en: 来源：[https://techcommunity.microsoft.com/t5/networking-blog/three-reasons-why-you-should-not-use-iperf3-on-windows/ba-p/4117876](https://techcommunity.microsoft.com/t5/networking-blog/three-reasons-why-you-should-not-use-iperf3-on-windows/ba-p/4117876)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://techcommunity.microsoft.com/t5/networking-blog/three-reasons-why-you-should-not-use-iperf3-on-windows/ba-p/4117876](https://techcommunity.microsoft.com/t5/networking-blog/three-reasons-why-you-should-not-use-iperf3-on-windows/ba-p/4117876)
- en: James Kehr here with the Microsoft Commercial Support – Windows Networking team.
    This article will explain why you should not use iPerf3 on Windows for synthetic
    network benchmarking and testing.  Followed by a brief explanation of why you
    should use ntttcp and ctsTraffic instead.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是来自微软商业支持 - Windows 网络团队的 James Kehr 的文章。本文将解释为什么不应该在 Windows 上使用 iPerf3 进行合成网络基准测试和测试。接下来简要解释为什么应该使用
    ntttcp 和 ctsTraffic 代替。
- en: '***UPDATE (22 April 2024): Various update tags were made throughout the article
    based on feedback in the comments.***'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: '***更新（2024年4月22日）：根据评论中的反馈，文章中进行了各种更新标记。***'
- en: Reason 1 – ESnet Does Not Support Windows
  id: totrans-split-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 原因 1 – ESnet 不支持 Windows
- en: '[iPerf3](https://software.es.net/iperf/) is owned and maintained by an organization
    called ESnet (Energy Sciences Network). They do not officially support nor recommend
    that iPerf3 be used on Windows. Their recommendation is to use iPerf2\. More on
    the Microsoft recommendation later.'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[iPerf3](https://software.es.net/iperf/)由一个名为 ESnet（能源科学网络）的组织拥有和维护。他们不正式支持也不建议在
    Windows 上使用 iPerf3。他们建议使用 iPerf2。稍后详细了解微软的建议。'
- en: Here are some direct quotes from the official [ESnet iPerf3 FAQ](https://software.es.net/iperf/faq.html),
    retrieved on 18 April 2024.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是从官方[ESnet iPerf3 FAQ](https://software.es.net/iperf/faq.html)，于2024年4月18日检索到的一些直接引用。
- en: '***I’m trying to use iperf3 on Windows, but having trouble. What should I do?***'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: '***我试图在 Windows 上使用 iperf3，但遇到了问题。我该怎么办？***'
- en: '*iperf3 is not officially supported on Windows, but iperf2 is. We recommend
    you use iperf2.*'
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*iperf3 在 Windows 上没有官方支持，但 iperf2 有。我们建议您使用 iperf2。*'
- en: '***UPDATE (22 April 2024): Please read the [comment](https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Ftechcommunity.microsoft.com%2Ft5%2Fnetworking-blog%2Fthree-reasons-why-you-should-not-use-iperf3-on-windows%2Fbc-p%2F4119600%2Fhighlight%2Ftrue%23M633&data=05%7C02%7CJames.Kehr%40microsoft.com%7C27c73f372e86443d986208dc62ecea72%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C638494016911846998%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=mXIpLUx6lxFC8R%2FMoMHfQM7aeNsscyXRkFLzIiQqWUw%3D&reserved=0)(s)
    from [@rjmcmahon](/t5/user/viewprofilepage/user-id/2431963) for details about
    iPerf2 vs iPerf3.***'
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: '***更新（2024年4月22日）：请阅读[评论](https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Ftechcommunity.microsoft.com%2Ft5%2Fnetworking-blog%2Fthree-reasons-why-you-should-not-use-iperf3-on-windows%2Fbc-p%2F4119600%2Fhighlight%2Ftrue%23M633&data=05%7C02%7CJames.Kehr%40microsoft.com%7C27c73f372e86443d986208dc62ecea72%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C638494016911846998%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=mXIpLUx6lxFC8R%2FMoMHfQM7aeNsscyXRkFLzIiQqWUw%3D&reserved=0)(s)，详细了解
    iPerf2 与 iPerf3 的差异。***'
- en: And from the ESnet “[Obtaining iPerf3](https://software.es.net/iperf/obtaining.html)”
    article, retrieved on 18 April 2024.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 并从 ESnet 的“[获取 iPerf3](https://software.es.net/iperf/obtaining.html)”文章中，于2024年4月18日检索到。
- en: '*Primary development for iperf3 takes place on CentOS 7 Linux, FreeBSD 11,
    and macOS 10.12\. At this time, these are the only officially supported platforms…*'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*iperf3 的主要开发是在 CentOS 7 Linux、FreeBSD 11 和 macOS 10.12 上进行的。目前，这些是唯一官方支持的平台…*'
- en: Microsoft does not recommend using iPerf3 for a different reason.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 微软不推荐使用 iPerf3 的另一个原因。
- en: Reason 2 – iPerf3 is Emulated on Windows
  id: totrans-split-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 原因 2 – iPerf3 在 Windows 上的仿真
- en: iPerf3 does not make Windows native API calls. It only knows how to make Linux/POSIX
    calls.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: iPerf3 不会调用 Windows 的本地 API。它只能调用 Linux/POSIX 的 API。
- en: The iPerf3 community uses Cygwin as an emulation layer to get iPerf3 working
    on Windows. You can read more about Cygwin in their [FAQ](https://www.cygwin.com/faq.html).
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: iPerf3 社区使用 Cygwin 作为仿真层，在 Windows 上实现 iPerf3 的功能。您可以在他们的[常见问题解答](https://www.cygwin.com/faq.html)中了解更多关于
    Cygwin 的信息。
- en: The iPerf3 calls are sent to Cygwin, which translates them to Windows APIs calls.
    Only then does the Windows network stack come into play. The iPerf3 on Windows
    maintainers do an excellent job of making it all work together, but, ultimately,
    there are potential issues with this approach.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: iPerf3 调用被发送到 Cygwin，由其转换为 Windows API 调用。然后 Windows 网络堆栈开始起作用。在 Windows 上，iPerf3
    的维护者们做得非常好，但最终，这种方法可能会存在一些问题。
- en: Not all the iPerf3 features will work on Windows. The basic options work well,
    but advanced capabilities needed for certain network testing may not be available
    on Windows or may behave in unexpected ways.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 并非所有 iPerf3 的功能在 Windows 上都能正常工作。基本选项运行良好，但某些网络测试所需的高级功能可能在 Windows 上不可用或表现出意外行为。
- en: Emulation tends to have a performance penalty. The emulation overhead on a latency
    sensitive operation, such as network testing, can result in lower than expected
    throughput.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟往往会导致性能损失。在对延迟敏感的操作，如网络测试中，模拟的开销可能导致吞吐量低于预期。
- en: Finally, iPerf3 uses uncommon Windows Socket (winsock) options versus native
    Windows applications. For generic throughput testing this is fine. For application
    testing the uncommon socket options will not mimic real-world Windows-native application
    behavior.
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，iPerf3 使用不常见的 Windows Socket (winsock) 选项，与本地的 Windows 应用程序不同。对于通用的吞吐量测试来说这没问题，但对于应用程序测试来说，这些不常见的套接字选项无法模拟真实的
    Windows 本地应用程序行为。
- en: Reason 3 – You Are Probably Using an Old Version of iPerf3.
  id: totrans-split-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三个原因 - 你可能在使用旧版本的 iPerf3。
- en: '***UPDATE (22 April 2024): iperf.fr no longer serves the old Windows iPerf3
    binaries. The site now links to other sites which have actively maintained iPerf3
    for Windows binaries. A big thank you to [@Harvester](/t5/user/viewprofilepage/user-id/598981) for
    pointing this out in comments and to the iperf.fr team for updating their site!***'
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: '***更新（2024年4月22日）：iperf.fr 不再提供旧版 Windows iPerf3 二进制文件。该网站现在链接到其他维护活跃的 iPerf3
    for Windows 二进制文件的网站。非常感谢 [@Harvester](/t5/user/viewprofilepage/user-id/598981)
    在评论中指出这一点，以及感谢iperf.fr团队更新了他们的网站！***'
- en: Go search for “iPerf3 on Windows” on the web. Go ahead, open a tab, and use
    your search engine of choice. Which I am certain is Bing with Copilot.
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 去网络上搜索“iPerf3 on Windows”。继续吧，打开一个标签页，使用你选择的搜索引擎。我相信你一定是用的 Copilot 的 Bing。
- en: What is the top result, and thus the most likely link you will click on? I bet
    the site was iperf.fr.
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 最终的结果是什么，因此最可能点击的链接是什么？我打赌这个站点是 iperf.fr。
- en: The newest version of iPerf3 for Windows on iperf.fr is 3.1.3 from 8 June 2016\.
    That was nearly 8 years ago at the time of writing.
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: iperf.fr 上最新的 iPerf3 版本为来自2016年6月8日的3.1.3版。在写作时已经将近8年了。
- en: The current version of iPerf3, [directly from ESnet](https://github.com/esnet/iperf),
    is 3.16\. A full 15 versions of missing bug fixes, features, and changes from
    the version people are most likely to download.
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当前版本的 iPerf3，[直接来自 ESnet](https://github.com/esnet/iperf)，是 3.16 版。相比人们最有可能下载的版本，这包含了
    15 个版本的修复程序、特性和更改。
- en: This specific copy of iPerf3, from iperf.fr, includes a version of cygwin1.dll
    that contains a bug which limits the socket buffer to 1MB. This will cause poor
    performance on high speed-high latency and high bandwidth networks because iPerf3
    will not be capable of putting enough data in-flight to saturate the link, resulting
    in inaccurate testing.
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: 此份特定的 iPerf3 复制品，来自 iperf.fr，包含一个带有缺陷的 cygwin1.dll 版本，将套接字缓冲区限制在1MB。这会导致在高速高延迟和高带宽网络上性能不佳，因为
    iPerf3 无法发送足够的数据以饱和链路，从而导致测试不准确。
- en: Where should you look for iPerf3 on Windows?
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该在哪里寻找 Windows 上的 iPerf3？
- en: 'From ESnet’s article, “Obtaining iPerf3” they say:'
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: 从 ESnet 的文章“获取 iPerf3”中，他们说：
- en: '*Windows: iperf3 binaries for Windows (built with [Cygwin](https://www.cygwin.com/))
    can be found in a variety of locations, including [https://files.budman.pw/](https://files.budman.pw/) ([discussion
    thread](https://www.neowin.net/forum/topic/1234695-iperf/)).*'
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: '*Windows: 使用 [Cygwin](https://www.cygwin.com/) 构建的 Windows iperf3 二进制文件可以在多个地方找到，包括
    [https://files.budman.pw/](https://files.budman.pw/)（[讨论线程](https://www.neowin.net/forum/topic/1234695-iperf/)）。*'
- en: What Does Microsoft Recommend
  id: totrans-split-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**微软的推荐**'
- en: 'Microsoft maintains two synthetic network benchmarking tools: ntttcp (Windows
    NT Test TCP) and ctsTraffic. The newest version of [ntttcp is maintained on GitHub](https://github.com/microsoft/ntttcp).
    This is a Windows native tool which utilizes Windows networking in the same way
    a native Windows application does.'
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
  zh: 微软维护两个合成网络基准测试工具：ntttcp（Windows NT Test TCP）和ctsTraffic。[ntttcp 的最新版本在 GitHub
    上维护](https://github.com/microsoft/ntttcp)。这是一个使用 Windows 网络的本地工具，与本地 Windows 应用程序使用方式相同。
- en: But what about Linux?
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: 那么 Linux 呢？
- en: There is a Linux version of ntttcp, too! Details can be found on the [ntttcp
    for Linux GitHub](https://github.com/microsoft/ntttcp-for-linux) repo. This is
    a separate codebase built for Linux that is compatible with ntttcp for Windows,
    but it is not identical to the Windows counterpart.
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
  zh: ntttcp 也有 Linux 版本！详细信息可以在 [ntttcp for Linux GitHub](https://github.com/microsoft/ntttcp-for-linux)
    存储库中找到。这是专为 Linux 构建的一个独立代码库，与 Windows 上的 ntttcp 兼容，但与 Windows 版本并非完全相同。
- en: Ntttcp allows you to perform API native synthetic network tests between Windows
    and Windows, Linux and Linux, and between Windows and Linux.
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
  zh: Ntttcp 允许在 Windows 到 Windows、Linux 到 Linux 以及 Windows 到 Linux 之间执行原生 API 合成网络测试。
- en: '[ctsTraffic](https://github.com/microsoft/ctsTraffic) is Windows-to-Windows
    only. Where ntttcp is more iPerf3-like, ctsTraffic has a different set of options
    and goals. ctsTraffic focuses on end-to-end goodput scenarios, where ntttcp and
    iPerf3 focus more on isolating network stack throughput.'
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[ctsTraffic](https://github.com/microsoft/ctsTraffic) 仅支持 Windows 到 Windows。ntttcp
    更类似于 iPerf3，而 ctsTraffic 则具有不同的选项和目标。ctsTraffic 专注于端到端的 goodput 场景，而 ntttcp 和
    iPerf3 更注重隔离网络堆栈的吞吐量。'
- en: How do you use ntttcp?
  id: totrans-split-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 您如何使用 ntttcp？
- en: The Azure team has written a great article about basic ntttcp functionality
    for Windows and Linux. I do not believe in reinventing the wheel, so I will simply
    link you to the article.
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 团队撰写了一篇关于 Windows 和 Linux 上基本 ntttcp 功能的优秀文章。我不认为需要重复创造轮子，因此我将简单地链接您到该文章。
- en: '[https://learn.microsoft.com/en-us/azure/virtual-network/virtual-network-bandwidth-testing?tabs=windo...](https://learn.microsoft.com/en-us/azure/virtual-network/virtual-network-bandwidth-testing?tabs=windows)'
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://learn.microsoft.com/en-us/azure/virtual-network/virtual-network-bandwidth-testing?tabs=windo...](https://learn.microsoft.com/en-us/azure/virtual-network/virtual-network-bandwidth-testing?tabs=windows)'
- en: There is a known interoperability limitation when testing between Windows and
    Linux. Details can be found in this [ntttcp for Linux wiki article on GitHub](https://github.com/microsoft/ntttcp-for-linux/wiki/How-to-interop-with-Windows-NTttcp%3F).
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试 Windows 和 Linux 之间的互操作性时，已知存在一些限制。详细信息请参阅 [ntttcp for Linux GitHub 上的维基文章](https://github.com/microsoft/ntttcp-for-linux/wiki/How-to-interop-with-Windows-NTttcp%3F)。
- en: Testing
  id: totrans-split-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试
- en: I built a lab while preparing this article using two Windows Server 2022 VMs.
    The tests used the newest versions of iPerf3 (3.16), ntttcp (5.39), and ctsTraffic
    (2.0.3.3).
  id: totrans-split-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在准备本文时，我使用了两台 Windows Server 2022 虚拟机建立了一个实验室。测试使用了最新版本的 iPerf3（3.16）、ntttcp（5.39）和
    ctsTraffic（2.0.3.3）。
- en: The default iPerf3 parameters are the most common configuration I see among
    Microsoft support customers. So, I am tuning ntttcp and ctsTraffic to better match
    iPerf3’s default single connection, 128KB buffer length behavior. While this is
    not a perfect comparison, this does make it a better comparison.
  id: totrans-split-46
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的 iPerf3 参数是我在 Microsoft 支持客户中最常见的配置。因此，我正在调整 ntttcp 和 ctsTraffic 以更好地匹配 iPerf3
    的默认单连接、128KB 缓冲区长度行为。虽然这不是一个完美的比较，但这确实使它更接近。
- en: Single stream tests are used for targeted analyses since many applications do
    not perform multi-threaded transfers. Bandwidth and maximum throughput testing
    should be multi-threaded with large buffers, but that is a topic for a different
    day.
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
  zh: 单流测试用于目标分析，因为许多应用程序不执行多线程传输。带宽和最大吞吐量测试应该使用大缓冲区进行多线程处理，但这是另一个话题。
- en: Don’t forget to allow the network traffic on the Windows Defender Firewall if
    you wish to run your own tests.
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望运行自己的测试，请不要忘记在 Windows Defender 防火墙上允许网络流量。
- en: iPerf3
  id: totrans-split-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: iPerf3
- en: 'iPerf3 server command:'
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
  zh: iPerf3 服务器命令：
- en: '[PRE0]'
  id: totrans-split-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'iPerf3 client command:'
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
  zh: iPerf3 客户端命令：
- en: '[PRE1]'
  id: totrans-split-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The average across multiple tests was about 7.5 Gbps. The top result was 8.5
    Gbps, with a low of 5.26 Gbps.
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
  zh: 多次测试的平均值约为 7.5 Gbps。最高结果为 8.5 Gbps，最低为 5.26 Gbps。
- en: ntttcp
  id: totrans-split-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ntttcp
- en: 'Ntttcp server command:'
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
  zh: Ntttcp 服务器命令：
- en: '[PRE2]'
  id: totrans-split-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Ntttcp client command:'
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
  zh: Ntttcp 客户端命令：
- en: '[PRE3]'
  id: totrans-split-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Ntttcp averaged about 12.75 Gbps across multiple tests. The top test averaged
    13.5 Gbps, with a low test of 12.5 Gbps.
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
  zh: ntttcp 多次测试的平均值约为 12.75 Gbps。最高测试平均为 13.5 Gbps，最低测试为 12.5 Gbps。
- en: Ntttcp does something called pre-posting receives, which is unique to this tool.
    This reduces application wait time as part of network stack isolation, allowing
    for quicker than normal application responses to socket messages.
  id: totrans-split-61
  prefs: []
  type: TYPE_NORMAL
  zh: Ntttcp 执行所谓的预先发布接收，这是该工具的独特功能。这减少了应用程序等待时间，作为网络堆栈隔离的一部分，使得应用程序对套接字消息的响应比正常情况更快。
- en: '*-r* is receiver, and *-s* is sender.'
  id: totrans-split-62
  prefs: []
  type: TYPE_NORMAL
  zh: '*-r* 是接收端，*-s* 是发送端。'
- en: '*-m* is a mapping of values that are: <num threads>, <CPU affinity>, <Target
    IP>. In this test we use a single thread, no CPU affinity (*), and both -r and
    -s side uses the target IP address as the final value.'
  id: totrans-split-63
  prefs: []
  type: TYPE_NORMAL
  zh: '*-m* 是数值映射，即：<线程数>、<CPU 亲和性>、<目标 IP>。在此测试中，我们使用单线程，无 CPU 亲和性（*），而 -r 和 -s 两侧使用目标
    IP 地址作为最终值。'
- en: '*-t* is test time, in seconds.'
  id: totrans-split-64
  prefs: []
  type: TYPE_NORMAL
  zh: '*-t* 是测试时间，以秒为单位。'
- en: '*-l* sets the buffer length. You can use K|M|G with ntttcp as shorthand for
    kilo-, mega-, and giga-bytes.'
  id: totrans-split-65
  prefs: []
  type: TYPE_NORMAL
  zh: '*-l* 设置缓冲区长度。您可以使用 K|M|G 作为 ntttcp 的简写，表示千字节、兆字节和吉字节。'
- en: ctsTraffic
  id: totrans-split-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ctsTraffic
- en: These commands are run in PowerShell to make reading values easier.
  id: totrans-split-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令在 PowerShell 中运行，以便更轻松地阅读值。
- en: 'ctsTraffic server command:'
  id: totrans-split-68
  prefs: []
  type: TYPE_NORMAL
  zh: ctsTraffic 服务器命令：
- en: '[PRE4]'
  id: totrans-split-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'ctsTraffic client command:'
  id: totrans-split-70
  prefs: []
  type: TYPE_NORMAL
  zh: ctsTraffic 客户端命令：
- en: '[PRE5]'
  id: totrans-split-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The result, about 9.2 Gbps average. It is a little faster and far more consistent
    than iPerf3, but not quite as fast as ntttcp. The two primary reasons why ctsTraffic
    is slower are data integrity checks and the use of the recommended overlapped
    IO model. This means ctsTraffic uses a single pending receive versus pre-posting
    receives like ntttcp.
  id: totrans-split-72
  prefs: []
  type: TYPE_NORMAL
  zh: 结果约为 9.2 Gbps 平均。它比 iPerf3 快一点，且更为一致，但不如 ntttcp 快。ctsTraffic 较慢的两个主要原因是数据完整性检查和使用推荐的重叠
    IO 模型。这意味着 ctsTraffic 使用单一挂起接收，而不像 ntttcp 那样预先设置接收。
- en: '*-Buffer* is the buffer length (ntttp: -l).'
  id: totrans-split-73
  prefs: []
  type: TYPE_NORMAL
  zh: '*-Buffer* 是缓冲区长度（ntttp：-l）。'
- en: '*-Transfer* is the amount of data to send per iteration.'
  id: totrans-split-74
  prefs: []
  type: TYPE_NORMAL
  zh: '*-Transfer* 是每次迭代发送的数据量。'
- en: '*-Iterations/-ServerExitLimit* is the number of times a data sets will be transferred.'
  id: totrans-split-75
  prefs: []
  type: TYPE_NORMAL
  zh: '*-Iterations/-ServerExitLimit* 是数据集将被传输的次数。'
- en: '*-Connections* is the number of concurrent TCP streams that will be used.'
  id: totrans-split-76
  prefs: []
  type: TYPE_NORMAL
  zh: '*-Connections* 是将使用的并发 TCP 流的数量。'
- en: '*-TimeLimit* is the number of milliseconds to run the test. The test stops
    even if the iteration transfer has not been completed when the time limit is reached.'
  id: totrans-split-77
  prefs: []
  type: TYPE_NORMAL
  zh: '*-TimeLimit* 是运行测试的毫秒数。当达到时间限制时，即使迭代传输未完成，测试也会停止。'
- en: Thank you for reading and I hope this helps improve your understanding of synthetic
    network benchmarking on Windows!
  id: totrans-split-78
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您的阅读，希望这有助于您了解 Windows 上的合成网络基准测试！
