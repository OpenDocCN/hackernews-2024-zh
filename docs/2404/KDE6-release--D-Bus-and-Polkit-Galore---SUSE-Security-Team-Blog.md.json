["```\n<busconfig>\n        <policy user=\"systemd-network\">\n                <allow own=\"org.freedesktop.network1\"/>\n        </policy>\n\n        <policy context=\"default\">\n                <allow send_destination=\"org.freedesktop.network1\"/>\n                <allow receive_sender=\"org.freedesktop.network1\"/>\n        </policy>\n</busconfig> \n```", "```\n<policy context=\"default\">\n  <allow send_destination=\"*\"/>\n</policy> \n```", "```\n// from SddmAuthHelper::reset()\nQString sddmHomeDirPath = KUser(\"sddm\").homeDir();\nQDir sddmConfigLocation(sddmHomeDirPath + QStringLiteral(\"/.config\"));\nQFile::remove(sddmConfigLocation.path() + QStringLiteral(\"/kdeglobals\"));\nQFile::remove(sddmConfigLocation.path() + QStringLiteral(\"/plasmarc\"));\nQDir(sddmHomeDirPath + \"/.local/share/kscreen/\").removeRecursively(); \n```", "```\n// from SddmAuthHelper::sync()\nQString sddmHomeDirPath = KUser(\"sddm\").homeDir();\n\nQDir sddmCacheLocation(sddmHomeDirPath + QStringLiteral(\"/.cache\"));\nif (sddmCacheLocation.exists()) {\n    sddmCacheLocation.removeRecursively();\n}\n\nQDir sddmConfigLocation(sddmHomeDirPath + QStringLiteral(\"/.config\"));\n\nif (!args[QStringLiteral(\"kscreen-config\")].isNull()) {\n    const QString destinationDir = sddmHomeDirPath + \"/.local/share/kscreen/\";\n    QSet<QString> done;\n    copyDirectoryRecursively(args[QStringLiteral(\"kscreen-config\")].toString(), destinationDir, done);\n} \n```", "```\nActionReply SaveHelper::save(const QVariantMap &args)\n{\n    Q_UNUSED(args);\n    const qint64 uid = QCoreApplication::applicationPid();\n    qDebug() << \"executing uid=\" << uid;\n    return ActionReply::SuccessReply();\n} \n```"]