["```\nclass Stuff:\n    def __init__(self):\n        self.a_list = [1,2,3,4]\n        self.position = 0\n    def __next__(self):\n        try:\n            value = self.a_list[self.position]\n            self.position += 1\n            return value\n        except IndexError:\n            self.position = 0\n            raise StopIteration\n    def __iter__(self):\n        return self \n```", "```\nfor data in Stuff():\n    print(data) \n```", "```\nclass Stuff\n  def initialize\n    @a_list = [1, 2, 3, 4]\n  end\n\n  def each\n    for item in @a_list\n      yield item\n    end\n  end\nend \n```", "```\nStuff.new().each do |item|\n  puts item\nend \n```", "```\nIn [2]: [item for item in Stuff()]\nOut[2]: [1, 2, 3, 4]\n\nIn [3]: [item for item in Stuff() if item % 2 == 0]\nOut[3]: [2, 4] \n```", "```\nclass Stuff\n  ...\n\n  def select\n    out = []\n    each do |e|\n      # If block returns truthy on e, append to out\n      if yield(e)\n        out << e\n      end\n    end\n    out\n  end\n\n  def map\n    out = []\n    # One line block syntax, append output of block processed on e to out\n    each {|e| out << yield(e) } \n    out\nend \n```", "```\nputs Stuff.new().map {|item| item}\nputs Stuff.new().select{|item| item.even?} \n```"]