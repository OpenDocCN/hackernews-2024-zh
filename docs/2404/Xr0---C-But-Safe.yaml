- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 12:53:53'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Xr0 – C But Safe
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://xr0.dev/](https://xr0.dev/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Xr0 is a verifier for C. It eliminates many stubborn instances of undefined
    behaviour, like use-after-frees, double frees, null pointer dereferences and the
    use of uninitialised memory.
  prefs: []
  type: TYPE_NORMAL
- en: 'Xr0 uses C-like annotations to verify code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: <details><summary>More about the annotations</summary>
  prefs: []
  type: TYPE_NORMAL
- en: 'They’re attached to every function that is potentially unsafe and express what
    its callers need to know to use it safely:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The really subtle safety bugs creep in through layers of function calls. Xr0
    makes this impossible, because everything needed to secure safety is distributed
    through every function call, so that no subtle mistake can creep in. It “quantum
    entangles” the safety semantics of every part of the program with every other
    part. Think of it like a infinitely rich type system that rises to the demands
    of your program’s structure. You still have to make the code safe; Xr0 just checks
    your work. Thus Xr0 is magical like the wand, not the magician. The real magic
    comes from the programmer.</details>
  prefs: []
  type: TYPE_NORMAL
- en: Xr0 is a work in progress and currently verifies a subset of C89. Its most significant
    limitation is we haven’t yet implemented verification for loops and recursive
    functions, so these are being bridged by axiomatic annotations. Xr0 1.0.0 will
    enable programming in C with no undefined behaviour, but for now it’s useful for
    verifying sections of programs.
  prefs: []
  type: TYPE_NORMAL
- en: Xr0 is written in pure C and is open source. View it on [GitHub](https://github.com/xr0-org/xr0)
    or [SourceHut](https://git.sr.ht/~lbnz/xr0).
  prefs: []
  type: TYPE_NORMAL
- en: Intrigued?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The best way to understand Xr0 is to [try it](/try). If you want to see how
    Xr0 works, be sure to use the debugger, which you can learn about [here](/debug).
  prefs: []
  type: TYPE_NORMAL
- en: Read the [tutorial](/learn) to learn more, and then if you want to go deeper,
    engage with [our theses](/theses), which explain how Xr0 will make C safe, and
    take a look at [our vision and roadmap](/vision-roadmap).
  prefs: []
  type: TYPE_NORMAL
- en: Come and talk to us on [Discord](https://discord.gg/yfx69tbhxQ), or via email
    [here](mailto:betz@xr0.dev) and [here](mailto:a@xr0.dev).
  prefs: []
  type: TYPE_NORMAL
