["```\n#[no_mangle] fn sum() -> u32 {\n (0..1000).sum() } \n```", "```\nsum:\n mov     eax, 499500 ret \n```", "```\n#[no_mangle] fn sum(n: u32) -> u32 {\n (0..n).sum() } \n```", "```\nsum:\n test    edi, edi je      .LBB0_1 lea     eax, [rdi - 1] lea     ecx, [rdi - 2] imul    rcx, rax shr     rcx lea     eax, [rdi + rcx] dec     eax ret .LBB0_1:\n xor     eax, eax ret \n```", "```\nunsigned int sum(unsigned int n) {\n  unsigned int rv = 0;\n  for (unsigned int i = 0; i < n; i++) {\n rv += i; }  return rv; } \n```", "```\n#[no_mangle] fn sum(arr: &[u32]) -> u32 {\n arr.iter().sum() } \n```"]