- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 12:48:18'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: An awk implementation | A somewhat compact implementation of the awk programming
    language
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://www.raygard.net/awkdoc/](https://www.raygard.net/awkdoc/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <main>
  prefs: []
  type: TYPE_NORMAL
- en: '[](#an-awk-implementation)An awk implementation'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Rob Landley’s [toybox](https://landley.net/toybox/) [project](https://github.com/landley/toybox)
    provides a variety of Linux command-line tools, similar to [busybox](https://busybox.net/).
    I have written a compact but fairly complete `awk` implementation intended to
    integrate with toybox, but it can also build standalone.
  prefs: []
  type: TYPE_NORMAL
- en: This implementation is named `wak`, because all the good `awk` names are taken.
    But when used in toybox, it’s just `awk`, or `toybox awk`.
  prefs: []
  type: TYPE_NORMAL
- en: '`wak` is coded in C99\. It uses mostly C standard library, aka `libc`, but
    also needs some POSIX support, mostly for regular expressions.'
  prefs: []
  type: TYPE_NORMAL
- en: It is not public domain but does have Landley’s very liberal [0BSD](https://landley.net/toybox/license.html)
    license.
  prefs: []
  type: TYPE_NORMAL
- en: These pages describe my awk implementation, but are not complete.
  prefs: []
  type: TYPE_NORMAL
- en: The implementation is at [github](https://github.com/raygard/wak/).
  prefs: []
  type: TYPE_NORMAL
- en: </main>
  prefs: []
  type: TYPE_NORMAL
