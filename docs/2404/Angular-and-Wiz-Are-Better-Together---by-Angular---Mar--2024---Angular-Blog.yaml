- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 12:56:14'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Angular and Wiz Are Better Together | by Angular | Mar, 2024 | Angular Blog
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://blog.angular.io/angular-and-wiz-are-better-together-91e633d8cd5a?gi=a136e0cac466](https://blog.angular.io/angular-and-wiz-are-better-together-91e633d8cd5a?gi=a136e0cac466)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Angular and Wiz Are Better Together
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Authors:* [*Jatin Ramanathan*](https://x.com/JatinRamanathan)*,* [*Minko Gechev*](https://x.com/mgechev)'
  prefs: []
  type: TYPE_NORMAL
- en: 'You may know Angular as the web framework from Google, but Google actually
    has another web framework: Wiz. Both Angular and Wiz are used by thousands of
    engineers and thousands of apps inside of Google. Wiz is an internal framework
    that is used by some of the most popular Google products such as [Search](https://google.com),
    [Photos](https://photos.google.com/), [Payments](https://payments.google.com/)
    and many others. Over the last year we’ve been exploring ways for Angular to benefit
    from the performance of Wiz and Wiz to benefit from the developer experience of
    Angular.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Historically, Angular and Wiz have been serving different segments of apps:'
  prefs: []
  type: TYPE_NORMAL
- en: Wiz has been focused on performance-critical apps. A good example of this is
    Google Search, which aims to render the results as quickly as possible and has
    relatively low interactivity.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Angular has been focused on serving highly interactive apps, prioritizing developer
    experience and quick delivery of complex UIs. Good examples are apps such as [Gemini](https://gemini.google.com/)
    and Google Analytics.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blending of features of Angular and Wiz
  prefs: []
  type: TYPE_NORMAL
- en: What is Wiz?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Millions of users access large Google applications over slow networks and/or
    low-end devices. In such cases initial load latency and amount of JavaScript matters
    a lot. The Wiz framework meets these requirements in a couple of ways. Wiz always
    starts with server-side rendering. Everything on the page, including interactive
    components, is rendered on a highly optimizing streaming solution. This eliminates
    most JavaScript from the critical initial render path. To avoid loading too much
    JavaScript, Wiz only loads the code required by interactive components actually
    rendered on the page. To avoid dropping user events on the client side a small,
    inline library listens for user events at the root and replays them. This novel
    approach to make SSR-first applications leads to the best performance for end
    users, however, it comes with the tradeoff that it increases complexity for developers,
    especially for highly interactive applications.
  prefs: []
  type: TYPE_NORMAL
- en: Blending requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Recently we’ve been seeing a blend of these two different segments. Highly performant
    apps need to ship more features faster to provide value to their users and keep
    them engaged. At the same time, highly interactive apps start shipping more and
    more JavaScript. According to [HTTPArchive](https://httparchive.org/reports/state-of-javascript?lens=top1m&start=2018_06_01&end=latest&view=list),
    JavaScript increased with over 37% on desktop and over 36% on mobile over the
    past 6 years, which significantly impacts performance.
  prefs: []
  type: TYPE_NORMAL
- en: Increase of JavaScript in the top 1m websites based on HTTPArchive
  prefs: []
  type: TYPE_NORMAL
- en: With these blending requirements it becomes harder for developers to decide
    which framework serves their needs better and we start seeing a larger overlap
    of use cases. To respond to the growing demand of a highly performant framework
    with great developer experience, Angular and Wiz joined together to bring the
    best of both worlds. Going forward Angular developers will no longer have to choose
    between developer experience and performance.
  prefs: []
  type: TYPE_NORMAL
- en: Bringing both worlds together
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**The partnership between Angular and Wiz manifests our mission to enable developers
    to build web apps with confidence. Based on the developer feedback we receive
    we seek opportunities to open source some of the best Web development practices
    we discovered at Google.** At the same time, we’d like to bring the great developer
    experience from our Angular community to all of Google.'
  prefs: []
  type: TYPE_NORMAL
- en: In practice this appears as incremental and gradual improvements to each framework.
    You’ve probably seen the fruits of our collaboration with some of the latest changes
    to Angular such as [deferrable views](https://angular.dev/guide/defer#why-use-deferrable-views)
    and our exploration of partial hydration. They are both highly inspired by Wiz’s
    fine grained code loading and an event delegation library.
  prefs: []
  type: TYPE_NORMAL
- en: At the same time, Wiz adopted Angular’s Signals library which is now powering
    the user interface of YouTube, running on billions of devices. Angular Signals
    allowed Wiz to adopt fine-grained UI updates. We switched away from an approach
    that relied on developers to carefully memoize code paths that run on every UI
    update. This resulted in demonstrable performance improvements. To learn more
    about this see the ng-conf [keynote](https://www.youtube.com/watch?v=nIBseTi6RVk&t=2455s).
    We’re excited to see how Angular Signals will improve some of the biggest sites
    in the world, like Search and GMail.
  prefs: []
  type: TYPE_NORMAL
- en: Where are we heading from here?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Our long-term goal is to gradually and responsibly [merge Angular and Wiz](https://twitter.com/sarah_edo/status/1770478763253379488)
    over the coming years. Our strategy is to steadily open source Wiz features via
    Angular and follow our open model of development, allowing the community to both
    influence the roadmap and plan accordingly. We’ll use the public RFC process to
    ensure we gather community feedback on the relevant proposed features. The primary
    goal is to improve the Angular framework.
  prefs: []
  type: TYPE_NORMAL
- en: We believe server side rendering (SSR) is important for the web platform. Our
    experience building some of the most used web products in the world has taught
    us that SSR positively impacts end user experience when done correctly. We want
    to invite the community to innovate using key libraries powering applications
    like Google Search and YouTube.
  prefs: []
  type: TYPE_NORMAL
- en: We’re excited to innovate together to improve web performance for everyone!
  prefs: []
  type: TYPE_NORMAL
