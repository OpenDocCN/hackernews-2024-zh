- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 13:37:47'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 13:37:47'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: We're moving continuous integration back to developer machines
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们正在将持续集成移回开发者的机器
- en: 来源：[https://world.hey.com/dhh/we-re-moving-continuous-integration-back-to-developer-machines-3ac6c611](https://world.hey.com/dhh/we-re-moving-continuous-integration-back-to-developer-machines-3ac6c611)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://world.hey.com/dhh/we-re-moving-continuous-integration-back-to-developer-machines-3ac6c611](https://world.hey.com/dhh/we-re-moving-continuous-integration-back-to-developer-machines-3ac6c611)
- en: Between running Rubocop style rules, Brakeman security scans, and model-controller-system
    tests, it takes our remote BuildKite-based continuous integration setup about
    5m30s to verify a code change is ready to ship for HEY. My Intel 14900K-based
    Linux box can do that in less than half the time (and my M3 Max isn't that much
    slower!). So we're going to drop the remote runners and just bring continuous
    integration back to developer machines at 37signals.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行 Rubocop 样式规则、Brakeman 安全扫描以及模型-控制器-系统测试之间，我们的远程基于 BuildKite 的持续集成设置大约需要
    5 分 30 秒来验证 HEY 的代码更改是否可以发布。而我的基于 Intel 14900K 的 Linux 机器可以在不到一半的时间内完成（而我的 M3
    Max 速度也差不多！）。因此，我们打算放弃远程运行器，将持续集成重新移到 37signals 的开发者机器上。
- en: It's remarkable how big of a leap multi-core developer machines have taken over
    the last five-to-seven years or so. Running all these checks and validations in
    a reasonable time on a local machine would have been unthinkable not too long
    ago. But the 14900K has over 20 cores, the M3 Max has 16, and even a lowly M2
    MacBook has 8\. They're all capable of doing a tremendous amount of parallelized
    work that would have seem fantastical to do locally in the mid 2010s.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 多核开发者机器在过去五到七年间取得了多大的进步，这令人惊叹。在本地机器上以合理的时间运行所有这些检查和验证在不久之前是不可思议的。但是 14900K 有超过
    20 个核心，M3 Max 有 16 个核心，甚至是低端的 M2 MacBook 也有 8 个核心。它们都能够并行处理大量工作，在2010年代中期想要在本地做到这些是不可想象的。
- en: HEY is a pretty substantial code base too. About 55,000 lines of Ruby code,
    which is verified by some 5,000 test cases along with another 300-some system
    tests. Virtually all of these tests go through the full-stack and hit the database.
    These are not mocked to the hilt.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: HEY 的代码库也相当庞大。大约 55,000 行的 Ruby 代码，通过约 5,000 个测试用例以及另外 300 多个系统测试进行验证。几乎所有这些测试都经过全栈测试并且访问数据库。这些并非全都是模拟测试。
- en: To me, the most satisfying part of the improved performance of modern developer
    CPUs is the possibility to simplify our stacks. Installing, operating, and caring
    for a remote CI setup is a substantial complication. Either you do it on your
    own hardware, and deal with that complexity directly, or you pay through the nose
    for a cloud-based setup. Getting to flush all of it down the simplification drain
    is an amazing step forward.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 对我来说，现代开发者 CPU 性能提升最令人满意的部分是简化我们的技术栈的可能性。安装、操作和管理远程 CI 设置是一个相当复杂的过程。要么你在自己的硬件上进行操作并直接处理这些复杂性，要么你通过云端设置付出昂贵的代价。能够把所有这些都简化掉，是一个了不起的进步。
- en: As always, the simplified future is not evenly distributed. I can't see the
    likes of Shopify or GitHub being able to run the full battery of tests against
    their millions of lines of code locally any time soon. But 99.99% of all web apps
    are much closer to HEY in breadth than they are to those behemoths. And small
    teams ought to remove all the moving parts possible. Never aspire to a more complicated
    stack than what your application calls for.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 就像往常一样，简化的未来并不平等。我不认为像 Shopify 或 GitHub 这样的公司能在短期内在本地运行针对它们数百万行代码的完整测试。但是 99.99%
    的 Web 应用程序在广度上更接近于 HEY，而不是这些巨头。小团队应该尽可能去除所有可能的动态部分。永远不要期望一个比你的应用程序所需更复杂的技术栈。
- en: So we need to keep burning those
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们需要继续燃烧这些
- en: '[bridges of complexity](https://world.hey.com/dhh/introducing-propshaft-ee60f4f6)'
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[复杂性的桥梁](https://world.hey.com/dhh/introducing-propshaft-ee60f4f6)'
- en: once we get to the other side. I can't wait to set fire to every single one
    of the remote continuous integration bridges we have here at 37signals. Progress
    is a bonfire.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们到达另一边时。我迫不及待地想要放火烧掉在 37signals 这里的所有远程持续集成桥梁。进步就是燃烧的篝火。
