["```\n  /* tiny.c */\n  int main(void) { return 42; }\n\n```", "```\n  $ gcc -Wall tiny.c\n  $ ./a.out ; echo $?\n  42\n\n```", "```\n  $ wc -c a.out\n     3998 a.out\n\n```", "```\n  $ gcc -Wall -s tiny.c\n  $ ./a.out ; echo $?\n  42\n  $ wc -c a.out\n     2632 a.out\n\n```", "```\n  $ gcc -Wall -s -O3 tiny.c\n  $ wc -c a.out\n     2616 a.out\n\n```", "```\n  ; tiny.asm\n  BITS 32\n  GLOBAL main\n  SECTION .text\n  main:\n                mov     eax, 42\n                ret\n\n```", "```\n  $ nasm -f elf tiny.asm\n  $ gcc -Wall -s tiny.o\n  $ ./a.out ; echo $?\n  42\n\n```", "```\n  $ wc -c a.out\n     2604 a.out\n\n```", "```\n  ; tiny.asm\n  BITS 32\n  GLOBAL _start\n  SECTION .text\n  _start:\n                mov     eax, 42\n                ret\n\n```", "```\n  $ nasm -f elf tiny.asm\n  $ gcc -Wall -s tiny.o\n  tiny.o(.text+0x0): multiple definition of `_start'\n  /usr/lib/crt1.o(.text+0x0): first defined here\n  /usr/lib/crt1.o(.text+0x36): undefined reference to `main'\n\n```", "```\n  $ nasm -f elf tiny.asm\n  $ gcc -Wall -s -nostartfiles tiny.o\n  $ ./a.out ; echo $?\n  Segmentation fault\n  139\n\n```", "```\n  ; tiny.asm\n  BITS 32\n  EXTERN _exit\n  GLOBAL _start\n  SECTION .text\n  _start:\n                push    dword 42\n                call    _exit\n\n```", "```\n  $ nasm -f elf tiny.asm\n  $ gcc -Wall -s -nostartfiles tiny.o\n  $ ./a.out ; echo $?\n  42\n\n```", "```\n  $ wc -c a.out\n     1340 a.out\n\n```", "```\n  $ gcc -Wall -s -nostdlib tiny.o\n  tiny.o(.text+0x6): undefined reference to `_exit'\n\n```", "```\n  ; tiny.asm\n  BITS 32\n  GLOBAL _start\n  SECTION .text\n  _start:\n                mov     eax, 1\n                mov     ebx, 42  \n                int     0x80\n\n```", "```\n  $ nasm -f elf tiny.asm\n  $ gcc -Wall -s -nostdlib tiny.o\n  $ ./a.out ; echo $?\n  42\n\n```", "```\n  $ wc -c a.out\n      372 a.out\n\n```", "```\n  00000000 B801000000        mov        eax, 1\n  00000005 BB2A000000        mov        ebx, 42\n  0000000A CD80              int        0x80\n\n```", "```\n  00000000 31C0              xor        eax, eax\n  00000002 40                inc        eax\n  00000003 B32A              mov        bl, 42\n  00000005 CD80              int        0x80\n\n```", "```\n  $ nasm -f elf tiny.asm\n  $ ld -s tiny.o\n  $ ./a.out ; echo $?\n  42\n  $ wc -c a.out\n      368 a.out\n\n```", "```\n  $ objdump -x a.out | less\n\n```", "```\n  Sections:\n  Idx Name          Size      VMA       LMA       File off  Algn\n    0 .text         00000007  08048080  08048080  00000080  2**4\n                    CONTENTS, ALLOC, LOAD, READONLY, CODE\n    1 .comment      0000001c  00000000  00000000  00000087  2**0\n                    CONTENTS, READONLY\n\n```", "```\n  00000080: 31C0 40B3 2ACD 8000 5468 6520 4E65 7477  1.@.*...The Netw\n  00000090: 6964 6520 4173 7365 6D62 6C65 7220 302E  ide Assembler 0.\n  000000A0: 3938 0000 2E73 796D 7461 6200 2E73 7472  98...symtab..str\n\n```", "```\n  ; tiny.s\n  .globl _start\n  .text\n  _start:\n                xorl    %eax, %eax\n                incl    %eax\n                movb    $42, %bl\n                int     $0x80\n\n```", "```\n  $ gcc -s -nostdlib tiny.s\n  $ ./a.out ; echo $?\n  42\n  $ wc -c a.out\n      368 a.out\n\n```", "```\n  Sections:\n  Idx Name          Size      VMA       LMA       File off  Algn\n    0 .text         00000007  08048074  08048074  00000074  2**2\n                    CONTENTS, ALLOC, LOAD, READONLY, CODE\n    1 .data         00000000  0804907c  0804907c  0000007c  2**2\n                    CONTENTS, ALLOC, LOAD, DATA\n    2 .bss          00000000  0804907c  0804907c  0000007c  2**2\n                    ALLOC\n\n```", "```\n  BITS 32\n\n                org     0x08048000\n\n  ehdr:                                                 ; Elf32_Ehdr\n                db      0x7F, \"ELF\", 1, 1, 1, 0         ;   e_ident\n        times 8 db      0\n                dw      2                               ;   e_type\n                dw      3                               ;   e_machine\n                dd      1                               ;   e_version\n                dd      _start                          ;   e_entry\n                dd      phdr - $$                       ;   e_phoff\n                dd      0                               ;   e_shoff\n                dd      0                               ;   e_flags\n                dw      ehdrsize                        ;   e_ehsize\n                dw      phdrsize                        ;   e_phentsize\n                dw      1                               ;   e_phnum\n                dw      0                               ;   e_shentsize\n                dw      0                               ;   e_shnum\n                dw      0                               ;   e_shstrndx\n\n  ehdrsize      equ     $ - ehdr\n\n  phdr:                                                 ; Elf32_Phdr\n                dd      1                               ;   p_type\n                dd      0                               ;   p_offset\n                dd      $$                              ;   p_vaddr\n                dd      $$                              ;   p_paddr\n                dd      filesize                        ;   p_filesz\n                dd      filesize                        ;   p_memsz\n                dd      5                               ;   p_flags\n                dd      0x1000                          ;   p_align\n\n  phdrsize      equ     $ - phdr\n\n  _start:\n\n  ; your program here\n\n  filesize      equ     $ - $$\n\n```", "```\n  ; tiny.asm\n                org     0x08048000\n\n  ;\n  ; (as above)\n  ;\n\n  _start:\n                mov     bl, 42\n                xor     eax, eax\n                inc     eax\n                int     0x80\n\n  filesize      equ     $ - $$\n\n```", "```\n  $ nasm -f bin -o a.out tiny.asm\n  $ chmod +x a.out\n  $ ./a.out ; echo $?\n  42\n\n```", "```\n  $ wc -c a.out\n       91 a.out\n\n```", "```\n  ; tiny.asm\n\n  BITS 32\n\n                org     0x08048000\n\n  ehdr:                                                 ; Elf32_Ehdr\n                db      0x7F, \"ELF\"                     ;   e_ident\n                db      1, 1, 1, 0, 0\n  _start:       mov     bl, 42\n                xor     eax, eax\n                inc     eax\n                int     0x80\n                dw      2                               ;   e_type\n                dw      3                               ;   e_machine\n                dd      1                               ;   e_version\n                dd      _start                          ;   e_entry\n                dd      phdr - $$                       ;   e_phoff\n                dd      0                               ;   e_shoff\n                dd      0                               ;   e_flags\n                dw      ehdrsize                        ;   e_ehsize\n                dw      phdrsize                        ;   e_phentsize\n                dw      1                               ;   e_phnum\n                dw      0                               ;   e_shentsize\n                dw      0                               ;   e_shnum\n                dw      0                               ;   e_shstrndx\n\n  ehdrsize      equ     $ - ehdr\n\n  phdr:                                                 ; Elf32_Phdr\n                dd      1                               ;   p_type\n                dd      0                               ;   p_offset\n                dd      $$                              ;   p_vaddr\n                dd      $$                              ;   p_paddr\n                dd      filesize                        ;   p_filesz\n                dd      filesize                        ;   p_memsz\n                dd      5                               ;   p_flags\n                dd      0x1000                          ;   p_align\n\n  phdrsize      equ     $ - phdr\n\n  filesize      equ     $ - $$\n\n```", "```\n  $ nasm -f bin -o a.out tiny.asm\n  $ chmod +x a.out\n  $ ./a.out ; echo $?\n  42\n  $ wc -c a.out\n       84 a.out\n\n```", "```\n  ; tiny.asm\n\n  BITS 32\n\n                org     0x08048000\n\n  ehdr:\n                db      0x7F, \"ELF\"             ; e_ident\n                db      1, 1, 1, 0, 0\n  _start:       mov     bl, 42\n                xor     eax, eax\n                inc     eax\n                int     0x80\n                dw      2                       ; e_type\n                dw      3                       ; e_machine\n                dd      1                       ; e_version\n                dd      _start                  ; e_entry\n                dd      phdr - $$               ; e_phoff\n                dd      0                       ; e_shoff\n                dd      0                       ; e_flags\n                dw      ehdrsize                ; e_ehsize\n                dw      phdrsize                ; e_phentsize\n  phdr:         dd      1                       ; e_phnum       ; p_type\n                                                ; e_shentsize\n                dd      0                       ; e_shnum       ; p_offset\n                                                ; e_shstrndx\n  ehdrsize      equ     $ - ehdr\n                dd      $$                                      ; p_vaddr\n                dd      $$                                      ; p_paddr\n                dd      filesize                                ; p_filesz\n                dd      filesize                                ; p_memsz\n                dd      5                                       ; p_flags\n                dd      0x1000                                  ; p_align\n  phdrsize      equ     $ - phdr\n\n  filesize      equ     $ - $$\n\n```", "```\n  $ nasm -f bin -o a.out tiny.asm\n  $ chmod +x a.out\n  $ ./a.out ; echo $?\n  42\n  $ wc -c a.out\n       76 a.out\n\n```", "```\n  ; tiny.asm\n\n  BITS 32\n\n                org     0x00200000\n\n                db      0x7F, \"ELF\"             ; e_ident\n                db      1, 1, 1, 0, 0\n  _start:\n                mov     bl, 42\n                xor     eax, eax\n                inc     eax\n                int     0x80\n                dw      2                       ; e_type\n                dw      3                       ; e_machine\n                dd      1                       ; e_version\n                dd      _start                  ; e_entry\n                dd      phdr - $$               ; e_phoff\n  phdr:         dd      1                       ; e_shoff       ; p_type\n                dd      0                       ; e_flags       ; p_offset\n                dd      $$                      ; e_ehsize      ; p_vaddr\n                                                ; e_phentsize\n                dw      1                       ; e_phnum       ; p_paddr\n                dw      0                       ; e_shentsize\n                dd      filesize                ; e_shnum       ; p_filesz\n                                                ; e_shstrndx\n                dd      filesize                                ; p_memsz\n                dd      5                                       ; p_flags\n                dd      0x1000                                  ; p_align\n\n  filesize      equ     $ - $$\n\n```", "```\n  $ nasm -f bin -o a.out tiny.asm\n  $ chmod +x a.out\n  $ ./a.out ; echo $?\n  42\n  $ wc -c a.out\n       64 a.out\n\n```", "```\n  ; tiny.asm\n\n  BITS 32\n\n                org     0x00010000\n\n                db      0x7F, \"ELF\"             ; e_ident\n                dd      1                                       ; p_type\n                dd      0                                       ; p_offset\n                dd      $$                                      ; p_vaddr \n                dw      2                       ; e_type        ; p_paddr\n                dw      3                       ; e_machine\n                dd      _start                  ; e_version     ; p_filesz\n                dd      _start                  ; e_entry       ; p_memsz\n                dd      4                       ; e_phoff       ; p_flags\n  _start:\n                mov     bl, 42                  ; e_shoff       ; p_align\n                xor     eax, eax\n                inc     eax                     ; e_flags\n                int     0x80\n                db      0\n                dw      0x34                    ; e_ehsize\n                dw      0x20                    ; e_phentsize\n                dw      1                       ; e_phnum\n                dw      0                       ; e_shentsize\n                dw      0                       ; e_shnum\n                dw      0                       ; e_shstrndx\n\n  filesize      equ     $ - $$\n\n```", "```\n  $ nasm -f bin -o a.out tiny.asm\n  $ chmod +x a.out\n  $ ./a.out ; echo $?\n  42\n  $ wc -c a.out\n       52 a.out\n\n```", "```\n  ; tiny.asm\n\n  BITS 32\n\n                org     0x00010000\n\n                db      0x7F, \"ELF\"             ; e_ident\n                dd      1                                       ; p_type\n                dd      0                                       ; p_offset\n                dd      $$                                      ; p_vaddr \n                dw      2                       ; e_type        ; p_paddr\n                dw      3                       ; e_machine\n                dd      _start                  ; e_version     ; p_filesz\n                dd      _start                  ; e_entry       ; p_memsz\n                dd      4                       ; e_phoff       ; p_flags\n  _start:\n                mov     bl, 42                  ; e_shoff       ; p_align\n                xor     eax, eax\n                inc     eax                     ; e_flags\n                int     0x80\n                db      0\n                dw      0x34                    ; e_ehsize\n                dw      0x20                    ; e_phentsize\n                db      1                       ; e_phnum\n                                                ; e_shentsize\n                                                ; e_shnum\n                                                ; e_shstrndx\n\n  filesize      equ     $ - $$\n\n```", "```\n  $ nasm -f bin -o a.out tiny.asm\n  $ chmod +x a.out\n  $ ./a.out ; echo $?\n  42\n  $ wc -c a.out\n       45 a.out\n\n```"]