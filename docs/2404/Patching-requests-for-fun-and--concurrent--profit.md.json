["```\nfrom time import time\nfrom threading import Thread\nimport requests\nimport urllib3\n\n# Mute warnings when cert verification is disabled\nurllib3.disable_warnings()\n\ndef do_request(verify):\n    requests.get('https://example.com', verify=verify)\n\ndef measure(verify):\n    threads = [Thread(target=do_request, args=(verify,)) for _ in range(30)]\n\n    start = time()\n    for t in threads: t.start()\n    for t in threads: t.join()\n    end = time()\n\n    print(end - start)\n\nmeasure(verify=True)\nmeasure(verify=False) \n```", "```\nncalls  tottime  percall  cumtime  percall filename:lineno(function)\n30/1    0.681    0.023    0.002    0.002 {method 'load_verify_locations' of '_ssl._SSLContext' objects}\n30/1    0.181    0.006    0.002    0.002 {method 'connect' of '_socket.socket' objects}\n60/2    0.180    0.003    1.323    0.662 {method 'read' of '_ssl._SSLSocket' objects} \n```", "```\nncalls  tottime  percall  cumtime  percall filename:lineno(function)\n30/1    0.233    0.008    0.001    0.001 {method 'do_handshake' of '_ssl._SSLSocket' objects}\n30/1    0.106    0.004    0.002    0.002 {method 'connect' of '_socket.socket' objects}\n60/2    0.063    0.001    0.505    0.253 {method 'read' of '_ssl._SSLSocket' objects} \n```", "```\nDEFAULT_SSL_CONTEXT = create_urllib3_context()\nDEFAULT_SSL_CONTEXT.load_verify_locations(extract_zipped_paths(DEFAULT_CA_BUNDLE_PATH))\n\ndef _urllib3_request_context(\n    ...\n    cert_reqs = \"CERT_REQUIRED\"\n    if verify is False:\n        cert_reqs = \"CERT_NONE\"\n+   elif verify is True:\n+       pool_kwargs[\"ssl_context\"] = DEFAULT_SSL_CONTEXT\n+   elif isinstance(verify, str):\n+       if not os.path.isdir(verify):\n+           pool_kwargs[\"ca_certs\"] = verify\n+       else:\n+           pool_kwargs[\"ca_cert_dir\"] = verify\n    pool_kwargs[\"cert_reqs\"] = cert_reqs \n```"]