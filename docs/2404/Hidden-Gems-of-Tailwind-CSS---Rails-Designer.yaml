- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 13:33:32'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: Hidden Gems of Tailwind CSS | Rails Designer
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://railsdesigner.com/hidden-gems-tailwind/](https://railsdesigner.com/hidden-gems-tailwind/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Tailwind CSS makes designing and creating web UI’s a breeze. No wonder it’s
    my number one choice for every (Rails-based) SaaS app I’ve launched over the last
    few years. It is no surprise it is also a core tool of [Rails Designer](https://railsdesigner.com/).
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
- en: I wanted to list some of the lesser known or obscure features, for future me,
    but most importantly for you to squeeze even more out of all that Tailwind CSS
    offers.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
- en: Change radio/checkbox colors
  id: totrans-split-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Use the `accent-*` utilities to change the color of a checkbox or radio button.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-split-10
  prefs: []
  type: TYPE_PRE
- en: Peer-modifier
  id: totrans-split-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `peer`-modifier allows to style an element based on a **sibling state**.
    Alright, now you’re talking nonsense! Let’s look at an example?
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-split-13
  prefs: []
  type: TYPE_PRE
- en: Please provide a valid email address.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
- en: It works by adding `peer` to one element and then the immediate next element
    can use any `peer-*` utility. It works with every pseudo-class modifier, like
    `peer-hover`, `peer-required` and `peer-disabled`. Once you know this utility,
    you will find plenty of ways to use it **instead of JavaScript**.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
- en: Style file-inputs
  id: totrans-split-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When you want to spruce up your file-input field, use the `file:` modifier.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-split-18
  prefs: []
  type: TYPE_PRE
- en: It takes a few utilities, but packs a lot of style to your file-input!
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
- en: Change color opacity
  id: totrans-split-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Every color-utility in Tailwind CSS allows to append a `/n` opacity-modifier.
    So this works for every text-color, background-color and ring-color.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-split-22
  prefs: []
  type: TYPE_PRE
- en: I find I use this often to let elements blend more with backgrounds that have
    gradients to them. Or to get the color *just right*.
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
- en: Combining font-size and line-height
  id: totrans-split-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In a similar way you can combine font-size and line-height.
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
- en: 'You likely know about the font-size utilites (`text-sm`, `text-base` and so
    on) and the line-height utilties (relative: `leading-loose` and `leading-tight`,
    fixed: `leading-4` and `leading-6`).'
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
- en: '*Note*: Relative line-height is based on its current font-size. While a fixed
    line-height, sets it irrespective of the current font-size.'
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
- en: You can combine the fixed line-height with the font-size `text-xl/8` to set
    a font size of `1.25rem` with a line-height of `2rem`.
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
- en: Add space between elements
  id: totrans-split-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This one I use all the time as it’s a great way to add space between an element
    and an optional element. `gap-*` only adds the space between actual elements,
    it not just adds `margin-left` or `margin-right`.
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
- en: I learned too late that `gap-*` can also be used in flex layouts, not just in
    a grid (as the name implies). There’s also `gap-x-*` and `gap-y-*` if you want
    to add space respectively horizontal (left/right) or vertical (up/down).
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
- en: Transition hover/active states
  id: totrans-split-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Something that can really up the “feel” of your app is micro transitions. It’s
    something I add a lot.
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
- en: Instead of `bg-sky-100 hover:bg-sky-200`.
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
- en: 'I do: `bg-sky-100 transition hover:bg-sky-200`.'
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
- en: 'For something even smoother, write it like this: `bg-sky-100 transition ease-in-out
    duration-300 hover:bg-sky-200`.'
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
- en: Get the latest Rails Designer updates
  id: totrans-split-37
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: If you use this on bigger card-elements, it’s worth to add a `delay-75` so the
    transition is not triggered when the user hovers over the element when scrolling.
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
- en: Pointer events
  id: totrans-split-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is one I stumbled upon recently when fixing a bug for the [Rails Designer’s
    NotificationComponent](https://railsdesigner.com/components/notifications/).
  id: totrans-split-40
  prefs: []
  type: TYPE_NORMAL
- en: If you have an element that is “above” another element (as is the case with
    container-element with NotificationComponent, you have witnessed this as well.
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
- en: Pointer events will trigger on child elements and pass-through to elements that
    are “below” the target.
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
- en: 'Add `pointer-events-none` and you’re done: love it!'
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
- en: Truncating multi-line text
  id: totrans-split-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When dealing with user-generated content, you 100% come into situations it will
    break your UI.
  id: totrans-split-45
  prefs: []
  type: TYPE_NORMAL
- en: '`line-clamp-*` utility helps with this. It breaks off the sentence at the given
    number and adds ellipsis (`…`, not to be confused with: `...`).'
  id: totrans-split-46
  prefs: []
  type: TYPE_NORMAL
- en: 'It adds this CSS to the element:'
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-split-48
  prefs: []
  type: TYPE_PRE
- en: You can use any number from 1 to 6 or `none`.
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
- en: Combine width and height for square element
  id: totrans-split-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before, when you wanted a square element, like an [AvatarComponent](https://railsdesigner.com/components/avatars/),
    you needed to add both the `w-*` and the `h-*`.
  id: totrans-split-51
  prefs: []
  type: TYPE_NORMAL
- en: Now these can be combined with the `size-*` utility that set the width and height
    at the same value.
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
- en: Highlight text
  id: totrans-split-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A little extra personality to your app can be added by adding the `selection:`
    modifier. Add it your body-element to tweak every page when text is selected.
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-split-55
  prefs: []
  type: TYPE_PRE
- en: Just like on this site (try selecting text)!
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
- en: Named groups
  id: totrans-split-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can style elements based on the state (hover, focus, disabled) of its parent
    element. It works like this:'
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-split-59
  prefs: []
  type: TYPE_PRE
- en: 'But I prefer to, almost always, name my groups. Like so:'
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-split-61
  prefs: []
  type: TYPE_PRE
- en: It took me a bit of time to remember the syntax, but it has proved a valuable
    default when doing more advanced UI work.
  id: totrans-split-62
  prefs: []
  type: TYPE_NORMAL
- en: Add custom variants
  id: totrans-split-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can add your own variants to target really specific things. Let’s take the
    one I use in all my Rails apps (which all use `turbo-frame`s).
  id: totrans-split-64
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-split-65
  prefs: []
  type: TYPE_PRE
- en: Now you can style elements differently *when they are within a `turbo-frame`*.
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-split-67
  prefs: []
  type: TYPE_PRE
- en: Imagine the element when viewed as a page doesn’t has a dropshadow, but when
    viewed in turbo-frame (eg. as [Modal](https://railsdesigner.com/components/modals/))
    it does add a dropshadow. Making elements truly reusable.
  id: totrans-split-68
  prefs: []
  type: TYPE_NORMAL
- en: Arbitrary values
  id: totrans-split-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If all of the many Tailwind CSS utilities are not enough, you can use *any value*
    you want! I use this really as a last resort, as it stills feels like going against
    the framework (even though it is a framework-supported feature).
  id: totrans-split-70
  prefs: []
  type: TYPE_NORMAL
- en: You take any of the available utility and add your own value, like this `text-[0.65rem]`
    (really something I use in all my apps—maybe need to make it a custom variant?).
  id: totrans-split-71
  prefs: []
  type: TYPE_NORMAL
- en: That’s all I have for now. Is there any feature you don’t see too often? [Do
    share it with me](mailto:support@railsdesigner.com).
  id: totrans-split-72
  prefs: []
  type: TYPE_NORMAL
