- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 13:33:32'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 13:33:32
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Hidden Gems of Tailwind CSS | Rails Designer
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Tailwind CSS 的隐藏宝石 | Rails Designer
- en: 来源：[https://railsdesigner.com/hidden-gems-tailwind/](https://railsdesigner.com/hidden-gems-tailwind/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://railsdesigner.com/hidden-gems-tailwind/](https://railsdesigner.com/hidden-gems-tailwind/)
- en: Tailwind CSS makes designing and creating web UI’s a breeze. No wonder it’s
    my number one choice for every (Rails-based) SaaS app I’ve launched over the last
    few years. It is no surprise it is also a core tool of [Rails Designer](https://railsdesigner.com/).
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: Tailwind CSS 使得设计和创建 Web UI 变得轻而易举。难怪它是我过去几年里每个（基于 Rails 的）SaaS 应用的首选工具。[Rails
    Designer](https://railsdesigner.com/) 的核心工具也毫不意外。
- en: I wanted to list some of the lesser known or obscure features, for future me,
    but most importantly for you to squeeze even more out of all that Tailwind CSS
    offers.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我想列出一些不太知名或鲜为人知的功能，为未来的我，但更重要的是为了让你能更充分地利用 Tailwind CSS 提供的一切。
- en: Change radio/checkbox colors
  id: totrans-split-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改单选框/复选框颜色
- en: Use the `accent-*` utilities to change the color of a checkbox or radio button.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`accent-*`工具来改变复选框或单选按钮的颜色。
- en: '[PRE0]'
  id: totrans-split-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Peer-modifier
  id: totrans-split-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 同级修饰符
- en: The `peer`-modifier allows to style an element based on a **sibling state**.
    Alright, now you’re talking nonsense! Let’s look at an example?
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: '`peer`修饰符允许根据**同级状态**样式化一个元素。好吧，现在你在说些无稽之谈！我们来看一个例子？'
- en: '[PRE1]'
  id: totrans-split-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Please provide a valid email address.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 请提供一个有效的电子邮件地址。
- en: It works by adding `peer` to one element and then the immediate next element
    can use any `peer-*` utility. It works with every pseudo-class modifier, like
    `peer-hover`, `peer-required` and `peer-disabled`. Once you know this utility,
    you will find plenty of ways to use it **instead of JavaScript**.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 它通过在一个元素上添加`peer`，然后立即使用任何`peer-*`实用程序的下一个元素，可以与每个伪类修饰符一起工作，如`peer-hover`、`peer-required`和`peer-disabled`。一旦了解了这个实用工具，您将发现有很多方法可以使用它，而不是
    JavaScript。
- en: Style file-inputs
  id: totrans-split-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 样式文件输入
- en: When you want to spruce up your file-input field, use the `file:` modifier.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当您想要提升文件输入字段的外观时，请使用`file:`修饰符。
- en: '[PRE2]'
  id: totrans-split-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: It takes a few utilities, but packs a lot of style to your file-input!
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 它需要几个实用工具，但可以为你的文件输入添加大量的样式！
- en: Change color opacity
  id: totrans-split-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改颜色不透明度
- en: Every color-utility in Tailwind CSS allows to append a `/n` opacity-modifier.
    So this works for every text-color, background-color and ring-color.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: Tailwind CSS 中的每个颜色工具都允许附加`/n`不透明度修饰符。因此，这对于每个文本颜色、背景颜色和环形颜色都适用。
- en: '[PRE3]'
  id: totrans-split-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: I find I use this often to let elements blend more with backgrounds that have
    gradients to them. Or to get the color *just right*.
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我经常使用它来让元素与具有渐变背景的背景更加融合。或者让颜色*刚刚好*。
- en: Combining font-size and line-height
  id: totrans-split-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结合字体大小和行高
- en: In a similar way you can combine font-size and line-height.
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，您可以结合字体大小和行高。
- en: 'You likely know about the font-size utilites (`text-sm`, `text-base` and so
    on) and the line-height utilties (relative: `leading-loose` and `leading-tight`,
    fixed: `leading-4` and `leading-6`).'
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经了解字体大小工具（`text-sm`，`text-base`等）和行高工具（相对：`leading-loose`和`leading-tight`，固定：`leading-4`和`leading-6`）。
- en: '*Note*: Relative line-height is based on its current font-size. While a fixed
    line-height, sets it irrespective of the current font-size.'
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: '*注意*：相对行高是基于当前字体大小的。而固定行高则是独立于当前字体大小设置的。'
- en: You can combine the fixed line-height with the font-size `text-xl/8` to set
    a font size of `1.25rem` with a line-height of `2rem`.
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将固定行高与字体大小`text-xl/8`组合使用，设置字体大小为`1.25rem`，行高为`2rem`。
- en: Add space between elements
  id: totrans-split-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在元素之间添加空白
- en: This one I use all the time as it’s a great way to add space between an element
    and an optional element. `gap-*` only adds the space between actual elements,
    it not just adds `margin-left` or `margin-right`.
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我经常使用的一个方法，因为它是在元素和可选元素之间添加空间的绝佳方式。`gap-*`仅在实际元素之间添加空间，而不只是添加`margin-left`或`margin-right`。
- en: I learned too late that `gap-*` can also be used in flex layouts, not just in
    a grid (as the name implies). There’s also `gap-x-*` and `gap-y-*` if you want
    to add space respectively horizontal (left/right) or vertical (up/down).
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我学得太晚了，`gap-*`不仅可以在网格中使用（如其名称所示），还可以在 flex 布局中使用。还有`gap-x-*`和`gap-y-*`，分别用于水平（左/右）或垂直（上/下）方向添加间距。
- en: Transition hover/active states
  id: totrans-split-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 过渡悬停/活动状态
- en: Something that can really up the “feel” of your app is micro transitions. It’s
    something I add a lot.
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: 真正提升应用程序“感觉”的一些微过渡可以做到这一点。这是我经常添加的一些东西。
- en: Instead of `bg-sky-100 hover:bg-sky-200`.
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
  zh: 而不是`bg-sky-100 hover:bg-sky-200`。
- en: 'I do: `bg-sky-100 transition hover:bg-sky-200`.'
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我做的是：`bg-sky-100 transition hover:bg-sky-200`。
- en: 'For something even smoother, write it like this: `bg-sky-100 transition ease-in-out
    duration-300 hover:bg-sky-200`.'
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: 对于更加流畅的效果，可以像这样编写：`bg-sky-100 transition ease-in-out duration-300 hover:bg-sky-200`。
- en: Get the latest Rails Designer updates
  id: totrans-split-37
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 获取最新的 Rails Designer 更新
- en: If you use this on bigger card-elements, it’s worth to add a `delay-75` so the
    transition is not triggered when the user hovers over the element when scrolling.
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您将其用于较大的卡片元素上，则值得添加 `delay-75`，以便当用户滚动并悬停在元素上时不触发过渡。
- en: Pointer events
  id: totrans-split-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 指针事件
- en: This is one I stumbled upon recently when fixing a bug for the [Rails Designer’s
    NotificationComponent](https://railsdesigner.com/components/notifications/).
  id: totrans-split-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我最近在为 [Rails Designer 的 NotificationComponent](https://railsdesigner.com/components/notifications/)
    修复错误时偶然发现的一个问题。
- en: If you have an element that is “above” another element (as is the case with
    container-element with NotificationComponent, you have witnessed this as well.
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有一个元素位于另一个元素的“上方”（例如具有 NotificationComponent 的容器元素，您也见过这种情况）。
- en: Pointer events will trigger on child elements and pass-through to elements that
    are “below” the target.
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
  zh: 指针事件将触发子元素，并传递到“下方”目标的元素。
- en: 'Add `pointer-events-none` and you’re done: love it!'
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
  zh: 添加 `pointer-events-none`，您就完成了：我喜欢它！
- en: Truncating multi-line text
  id: totrans-split-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 截断多行文本
- en: When dealing with user-generated content, you 100% come into situations it will
    break your UI.
  id: totrans-split-45
  prefs: []
  type: TYPE_NORMAL
  zh: 处理用户生成的内容时，您肯定会遇到破坏 UI 的情况。
- en: '`line-clamp-*` utility helps with this. It breaks off the sentence at the given
    number and adds ellipsis (`…`, not to be confused with: `...`).'
  id: totrans-split-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`line-clamp-*` 实用工具对此很有帮助。 它在给定的数字处断开句子并添加省略号（`…`，请勿与`...`混淆）。'
- en: 'It adds this CSS to the element:'
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
  zh: 它将此 CSS 添加到元素中：
- en: '[PRE4]'
  id: totrans-split-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: You can use any number from 1 to 6 or `none`.
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用从 1 到 6 的任何数字或 `none`。
- en: Combine width and height for square element
  id: totrans-split-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将宽度和高度结合为正方形元素
- en: Before, when you wanted a square element, like an [AvatarComponent](https://railsdesigner.com/components/avatars/),
    you needed to add both the `w-*` and the `h-*`.
  id: totrans-split-51
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，当您想要一个正方形元素时，比如 [AvatarComponent](https://railsdesigner.com/components/avatars/)，您需要同时添加
    `w-*` 和 `h-*`。
- en: Now these can be combined with the `size-*` utility that set the width and height
    at the same value.
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这些可以与设置宽度和高度相同值的 `size-*` 实用程序结合使用。
- en: Highlight text
  id: totrans-split-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突出显示文本
- en: A little extra personality to your app can be added by adding the `selection:`
    modifier. Add it your body-element to tweak every page when text is selected.
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
  zh: 通过添加 `selection:` 修饰符，您可以为应用程序增加一些额外的个性。 将其添加到您的 body 元素以在选择文本时调整每个页面。
- en: '[PRE5]'
  id: totrans-split-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Just like on this site (try selecting text)!
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
  zh: 就像在这个网站上一样（尝试选择文本）！
- en: Named groups
  id: totrans-split-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 命名分组
- en: 'You can style elements based on the state (hover, focus, disabled) of its parent
    element. It works like this:'
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以根据其父元素的状态（悬停、焦点、禁用）样式化元素。 它的工作方式如下：
- en: '[PRE6]'
  id: totrans-split-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'But I prefer to, almost always, name my groups. Like so:'
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
  zh: 但我几乎总是喜欢为我的分组命名。 就像这样：
- en: '[PRE7]'
  id: totrans-split-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: It took me a bit of time to remember the syntax, but it has proved a valuable
    default when doing more advanced UI work.
  id: totrans-split-62
  prefs: []
  type: TYPE_NORMAL
  zh: 记住语法花了我一些时间，但在进行更高级的 UI 工作时，它已被证明是一个有价值的默认选择。
- en: Add custom variants
  id: totrans-split-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加自定义变体
- en: You can add your own variants to target really specific things. Let’s take the
    one I use in all my Rails apps (which all use `turbo-frame`s).
  id: totrans-split-64
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以添加自己的变体来针对非常具体的事物。 让我们看看我在所有 Rails 应用程序中使用的变体（所有这些应用程序都使用 `turbo-frame`）。
- en: '[PRE8]'
  id: totrans-split-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Now you can style elements differently *when they are within a `turbo-frame`*.
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您可以在*元素位于 `turbo-frame` 内时*以不同的样式显示元素。
- en: '[PRE9]'
  id: totrans-split-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Imagine the element when viewed as a page doesn’t has a dropshadow, but when
    viewed in turbo-frame (eg. as [Modal](https://railsdesigner.com/components/modals/))
    it does add a dropshadow. Making elements truly reusable.
  id: totrans-split-68
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，当作为页面查看时，元素没有投影效果，但当作为 turbo-frame 查看时（例如作为 [Modal](https://railsdesigner.com/components/modals/)），它会添加投影效果。
    使元素真正可重复使用。
- en: Arbitrary values
  id: totrans-split-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 任意值
- en: If all of the many Tailwind CSS utilities are not enough, you can use *any value*
    you want! I use this really as a last resort, as it stills feels like going against
    the framework (even though it is a framework-supported feature).
  id: totrans-split-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所有的 Tailwind CSS 实用工具都不足以满足您的需求，您可以使用*任何值*！ 我真的把它当作最后的手段，因为这仍然感觉像是违背了框架的初衷（尽管这是一个由框架支持的功能）。
- en: You take any of the available utility and add your own value, like this `text-[0.65rem]`
    (really something I use in all my apps—maybe need to make it a custom variant?).
  id: totrans-split-71
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以采用任何可用的实用工具并添加您自己的值，比如`text-[0.65rem]`（这是我在所有应用程序中都使用的东西——也许需要将其作为自定义变体？）。
- en: That’s all I have for now. Is there any feature you don’t see too often? [Do
    share it with me](mailto:support@railsdesigner.com).
  id: totrans-split-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我就讲到这里了。 您有没有看到不太常见的功能？ [请与我分享](mailto:support@railsdesigner.com)。
