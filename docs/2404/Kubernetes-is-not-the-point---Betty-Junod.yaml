- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 13:06:26'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: Kubernetes is not the point — Betty Junod
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://www.bettyjunod.com/blog/kubernetes-is-not-the-point](https://www.bettyjunod.com/blog/kubernetes-is-not-the-point)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Today, we have thousands of individual technologies with loads of options within
    each category and I can’t help but wonder if we may have lost sight of what the
    point of all this was. We are all still in search of that platform experience.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
- en: Completely bespoke and completely complex
  id: totrans-split-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: So where did we go wrong? Or did we? We got so excited about what a couple of
    new components unlocked that it inspired us to chase every single component in
    the stack. The great innovation that the CNCF brought on was that so much of the
    experimentation and innovation was out in the open. You would see tipping points
    in areas like storage, networking, or security that would drive vendors to create
    a host of new projects and then standards would emerge to agree upon the interfaces.
    The many SIGs and project maturity stages helped to provide a structure for big
    changes and setting expectations for end users.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
- en: Even with that the rate of new projects introduced and the sometimes seemingly
    VHS vs. BETA type debates between technology approaches made it difficult for
    end users to decide which technology to choose and bet their enterprise architecture
    on. In addition to weighing an ever growing and evolving list of technology choices,
    the pressure to be truly “engineering-led” or  “innovative” led many an IT organization
    to piece together their own platform from the open source puzzle pieces, support
    it themselves, and engage publicly with the upstream. This alone requires an engineering
    culture that many companies were prepared for.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: While interesting from a technology point of view, this led to a complexity
    that often bogged teams down with lifecycle and integration management and maintenance
    of the system more than supporting getting apps built and deployed to production.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
- en: Our excitement into the ingredients led us to over shop for the latest and greatest
    without planning ahead for the final meal. Too many end user RFPs were seen with
    project names or technology buzzwords sprinkled in without a mention of new or
    different capabilities to be delivered that will improve business initiatives
    and application outcomes.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
- en: '***The question is really, does anyone remember what they were building and
    who they were building for? How differentiated is your platform heavy lifting?***'
  id: totrans-split-12
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Coming full circle to the return of PaaS
  id: totrans-split-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Don’t call it a comeback and especially don’t call it a PaaS but the idea is
    back and today it goes by Internal Developer Platform or Platform Engineering
    now. Regardless of the name, the spirit remains that the idea we had with PaaS
    was right. We still want that experience.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
