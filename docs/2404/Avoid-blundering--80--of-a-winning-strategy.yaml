- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 12:53:41'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: 'Avoid blundering: 80% of a winning strategy'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://longform.asmartbear.com/avoid-blundering/](https://longform.asmartbear.com/avoid-blundering/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Why do startups typically fail? It turns out that “avoiding those things” is
    already a plan for success.
  prefs: []
  type: TYPE_NORMAL
- en: 'You have been told:'
  prefs: []
  type: TYPE_NORMAL
- en: Establish a vision.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set goals against the vision.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create actions that achieve the goals.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Measure progress against the goals.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: I’ve told you that myself. It’s [how you should plan work](https://longform.asmartbear.com/strategic-planning/).
  prefs: []
  type: TYPE_NORMAL
- en: But… what if success is just as much about what *not* to do, as what *to* do?
    What if intentional goals aren’t the only way to succeed?
  prefs: []
  type: TYPE_NORMAL
- en: 'What if 80% of winning comes from: Not blundering.'
  prefs: []
  type: TYPE_NORMAL
- en: Not blundering your way to victory
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Chess Grandmaster and chess-world-famous teacher / coach Ben Finegold has a
    simple explanation for who wins amateur chess games:'
  prefs: []
  type: TYPE_NORMAL
- en: 'What most people say is: “That guy is better than that guy, so that guy won.”'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: But that’s *not* why that guy won. Normally the game is very close, and then
    someone blunders and now it’s over.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: If you look at it with a computer, it will say “no one’s winning” and then “white’s
    winning” and then “black’s winning” and then “no one’s winning again” and then
    someone blunders and they lose.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: —*Ben Finegold, [YouTube](https://youtu.be/EDgRR7SGf0M?si=aVoR9dcmmvd6zgbZ&t=282)
    (with light editing)*
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Not strategy, not memorizing opening lines, not practicing your end-game technique,
    not studying the Great Games of History, not drilling with puzzles to get better
    at tactics, … just blundering. *Good* chess players need to do all that, but we
    scrubs just need to “not blunder.”
  prefs: []
  type: TYPE_NORMAL
- en: Is this true for me? I’m a decidedly mediocre chess player, especially considering
    how much time I’ve spent with videos, puzzles, courses, and playing. Are the outcomes
    of my games dictated by blundering, like Ben says?
  prefs: []
  type: TYPE_NORMAL
- en: Fortunately, I have perfect data. I have hundreds of games with people who are
    the same strength as me. Chess.com computes an analysis of every game, including
    the number of blunders, mistakes, and inaccuracies made by each player.
  prefs: []
  type: TYPE_NORMAL
- en: 'I won, thanks to four blunders by my opponent. We suck at chess. As Ben says:
    The truth hurts.'
  prefs: []
  type: TYPE_NORMAL
- en: I checked my last twenty decisive games. I won exactly 50%, which is further
    evidence that the players were of equal skill, and that the analysis includes
    both wins and losses.
  prefs: []
  type: TYPE_NORMAL
- en: Theoretically, the best estimator of “who will win” is whichever player has
    a higher Elo rating. In these games, the player with the higher Elo won 55% of
    the time—barely more predictive than a coin flip. This makes sense, because the
    players were close in Elo, which means the players are of equivalent strength,
    so each ought to win half the time.
  prefs: []
  type: TYPE_NORMAL
- en: In my games, the player who committed more blunders lost 86% of the time. Ben
    is right!
  prefs: []
  type: TYPE_NORMAL
- en: 'However, in 40% of the games both players had an equal number of blunders.
    So I also included “mistakes”—the next-worst kind of error. I computed a simple
    “error score” that includes mistakes while giving blunders more weight:'
  prefs: []
  type: TYPE_NORMAL
- en: '`    [number of mistakes] +` `2 × [number of blunders]`'
  prefs: []
  type: TYPE_NORMAL
- en: Now almost all the games received a decisive prediction, and the player with
    the higher error score lost 81% of the time.
  prefs: []
  type: TYPE_NORMAL
- en: To win at chess, blunder less.
  prefs: []
  type: TYPE_NORMAL
- en: This is true across many sports. In [a wonderful article](https://fs.blog/avoiding-stupidity/?utm_source=longform.asmartbear.com&utm_campaign=longform.asmartbear.com&utm_medium=post),
    Shane Parrish recounts Simon Ramo’s analysis of amateur tennis games, in which
    he found that 80% of the points were *lost* rather than *won*. Meaning, 80% of
    the points were awarded to player P because player Q made an error such as hitting
    the ball out of bounds, or into the net, or double-faulting. Only 20% of the points
    were “won,” such as a powerful return that landed out of reach of the other player.
  prefs: []
  type: TYPE_NORMAL
- en: 'Ramo concludes the same thing that I concluded about chess, even invoking the
    word “blunder”:'
  prefs: []
  type: TYPE_NORMAL
- en: … if you choose to win at tennis—as opposed to having a good time—the strategy
    for winning is to avoid mistakes. The way to avoid mistakes is to be conservative
    and keep the ball in play, letting the other player have plenty of room in which
    to blunder his way to defeat, because, being an amateur, they will play a losing
    game and not know it.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Could the same rule be true of other complex systems, like startups? My amateur
    chess games were 80% determined by blundering, and Ramo’s amateur tennis points
    were 80% determined by blundering.
  prefs: []
  type: TYPE_NORMAL
- en: Could “not blundering” be 80% of winning?
  prefs: []
  type: TYPE_NORMAL
- en: Blundering in startups
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It’s common to say “startups die because they ran out of money” or “startups
    die because the founders gave up.” But that’s like saying someone died because
    their heart stopped, without mentioning that they were battling lung cancer. Doctors
    call “heart stopped” the “proximate cause”—the last thing that happened—as distinguished
    from the underlying cause.
  prefs: []
  type: TYPE_NORMAL
- en: We need to identify the cancer, not just say “the founder stopped.” Otherwise,
    the advice for how-not-to-blunder would be “never stop.” But [“never stop” is
    not helpful, and indeed not correct](https://longform.asmartbear.com/perseverance/).
  prefs: []
  type: TYPE_NORMAL
- en: But it’s not “turtles all the way down.” We mustn’t dig too deep, as tempting
    as “[5 Why’s](https://en.wikipedia.org/wiki/Five_whys)” might be. Maybe they got
    cancer because they smoked a pack of cigarettes every day, so “smoking” is the
    cause. Maybe they started smoking to fit in with a crowd, but “wanting to fit
    in with the crowd” was not the cause of death, and it would be incorrect to conclude
    that “fitting in with the crowd is unhealthy.” (Though sloughing off that activity
    might help you [avoid unhappiness](https://longform.asmartbear.com/fulfillment/).)
  prefs: []
  type: TYPE_NORMAL
- en: So we need to identify the blunders which aren’t merely proximate, but aren’t
    so distant that they are irrelevant.
  prefs: []
  type: TYPE_NORMAL
- en: There are many sources that claim to finally explain why startups fail. I’ve
    provided a raw list at the end of this article. I’ve deduplicated and rearranged
    those into the lists below, and added a heavy dose of my own opinions.
  prefs: []
  type: TYPE_NORMAL
- en: Proximate causes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'First, let’s dispense with the proximate causes, as these are not real reasons,
    and we should neither repeat nor analyze them:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Ran out of cash.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*(A consequence of failure, not a cause. Unless you over-spent with no plausible
    way to recover it with revenue.)*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Pivot gone bad.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*(the reason you pivoted is because it was already failing)*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Founder stopped.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*(As opposed to what?)*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Didn’t find [Product Market Fit (PMF)](https://longform.asmartbear.com/product-market-fit/).**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*(a restatement of “it didn’t work”)*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Bad luck
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Perhaps there was nothing you could have done to predict or prevent the failure.
    That makes it no less real, but perhaps there’s nothing to learn from it, or to
    do differently next time:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Sudden, dramatic shift in the economy.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*(If COVID bankrupted the movie theater, there’s no “strategy” they should
    have already had in place to prevent it.)*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Surprise co-founder break-up.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*(Some of these are preventable—see below—but if someone falls ill, or breaks
    a promise, or bails, or commits fraud, it’s unclear what should have been done
    differently.)*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: What *doesn’t* kill startups
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Equally interesting are things that appear on these lists, but I don’t agree
    that it’s a blunder.
  prefs: []
  type: TYPE_NORMAL
- en: '**Bad idea.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*(We’re repeatedly told that all [great ideas start out looking like bad ideas](https://longform.asmartbear.com/chaos-at-start/),
    so “having an apparently-bad idea” cannot be a blunder by itself. It’s not the
    initial idea, it’s in [finding the market and in the execution](https://longform.asmartbear.com/product-market-fit-formula/),
    iterating the idea into a working business.)*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Can’t make the product.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*(While this can happen, typically the founders know how to build things; indeed,
    building the product while ignoring all other aspects of building the business,
    is often the problem)*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**The number of co-founders.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*(It’s easy to find examples of successful startups with one or multiple founders,
    and equally easy to find failures. It’s easy to find failures specifically due
    to having just one founder, or due to or having multiple. Even the great Paul
    Graham says [in a single essay](https://www.paulgraham.com/startupmistakes.html?utm_source=longform.asmartbear.com&utm_campaign=longform.asmartbear.com&utm_medium=post)
    that a major cause of startup failure is “Single Founder” and later “Fights Between
    Founders.” I personally believe that 3 founders is a warning flag and ≥4 founders
    is a bright red flag, but it’s common for some of those founders to bleed off
    anyway (which is also why it’s a red flag). It’s more important that the quantity
    of founders matches the style and personality of the founders.)*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Location.**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*(This is still a valid reason for startups that intend to scale and become
    Unicorns, because those startups will need to hire many people, in all departments,
    with experience in those environments, quickly, and that’s much harder to do in
    a location (including “distributed”) where the talent doesn’t already exist. This
    is also true of raising money. However this is becoming less true every year,
    and it’s irrelevant if the startup doesn’t have that goal.)*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Preventable blunders
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Self-inflicted blunders are preventable, or at least one can dramatically reduce
    the risk of occurrence. So, if you don’t, that’s on you.
  prefs: []
  type: TYPE_NORMAL
- en: Didn’t talk to customers (and listen)
  prefs: []
  type: TYPE_NORMAL
- en: If you didn’t talk to customers before you started, and especially after you
    started, that’s a blunder. If you talked to them and weren’t honest with yourself
    about what they were saying, that’s your faulty analysis. You should have used
    the [Iterative Hypothesis Method](https://longform.asmartbear.com/customer-development/)
    or some other reputable framework.
  prefs: []
  type: TYPE_NORMAL
- en: No market need / Bad market
  prefs: []
  type: TYPE_NORMAL
- en: If the market was small and stagnant or shrinking, you already knew that. If
    there weren’t enough people who needed the product, you could have known that.
    If they don’t agree they have the problem, or that it’s worth money to solve,
    you could have known that. If they don’t have the budget or don’t accept the price,
    you could have known that. If they’re happy with what they have, you could have
    known that. The checklist of [things that make for a good market](https://longform.asmartbear.com/problem/)
    is well-known; you don’t have an excuse for not finding out before spending six
    months writing code.
  prefs: []
  type: TYPE_NORMAL
- en: 'There’s just one mistake that kills startups: not making something users want.
    If you make something users want, you’ll probably be fine, whatever else you do
    or don’t do. —[Paul Graham](https://www.paulgraham.com/startupmistakes.html?utm_source=longform.asmartbear.com&utm_campaign=longform.asmartbear.com&utm_medium=post)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Did not select a target audience, and clearly communicate the value proposition
    to them
  prefs: []
  type: TYPE_NORMAL
- en: Speaking to everyone means speaking to no one. Speaking to everyone is a blunder;
    it’s laziness or fear of deciding who this product is for. This determines the
    language on your home page, in your advertisements, in your sales calls, inside
    your product. Especially now, with AI, there’s no excuse for not distilling what
    is special and vital about you, into language that your target audience can understand.
    You must [sell to Carol, your ICP](https://longform.asmartbear.com/icp-ideal-customer-persona/),
    which also means knowing exactly who Carol is.
  prefs: []
  type: TYPE_NORMAL
- en: Too many things had to go right
  prefs: []
  type: TYPE_NORMAL
- en: All startups have risks, and have potentially fatally large gaps with a high
    risk of not being solved. But some have too many gaps—too many things to go right
    simultaneously. If you have nearly all the requisite skills, if nearly all the
    objections customers have are addressed, if the market is healthy, if there are
    many possible distribution channels, if there are many possible niches, if more
    and more money is being spent in the market, then you should take a risk on the
    remaining gaps. But if all of those things are uncertain or are gaps that you
    know you’ll need some luck to overcome, then the probability that *all* of those
    things will break your way is near-zero, and you already knew that when you started.
    Your path [should consist of “or’s,” not “and’s.”](https://longform.asmartbear.com/capturing-luck/)
  prefs: []
  type: TYPE_NORMAL
- en: Founders / investors broke up
  prefs: []
  type: TYPE_NORMAL
- en: This can be bad luck, but you do pick your co-founders, and either you’ve known
    them for a while (in which case you made a poor selection) or you didn’t (in which
    case you made a rash decision). One reason why “break up” kills startups is that
    the departing founder left holding a huge amount of stock; the reason for *that*
    is there wasn’t a vesting schedule for all founders. That is a blunder. In any
    case, the team did it to itself—it wasn’t a competitor, or the economy, or the
    customers.
  prefs: []
  type: TYPE_NORMAL
- en: Had no differentiation in the market
  prefs: []
  type: TYPE_NORMAL
- en: This blunder is obvious from day one, when you had no idea why you were special,
    why the product is special, why someone should buy from you instead of someone
    else, why you’re the right person to build this company, why you will succeed
    in a space where many others have failed before. There are so many [kinds of leverage](https://longform.asmartbear.com/leverage/)
    you could have used, and you chose none of them.
  prefs: []
  type: TYPE_NORMAL
- en: '“Tolstoy opens Anna Karenina by observing: ‘All happy families are alike; each
    unhappy family is unhappy in its own way.’ Business is the opposite. All happy
    companies are different: each one earns a monopoly by solving a unique problem.
    All failed companies are the same: they failed to escape competition.”'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Peter Thiel, [Zero to One](https://www.amazon.com/Zero-One-Notes-Startups-Future/dp/0804139296?utm_source=longform.asmartbear.com&utm_campaign=longform.asmartbear.com&utm_medium=post)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Refused to seek the truth / refused to see the truth / refused to learn
  prefs: []
  type: TYPE_NORMAL
- en: We all have to force ourselves to see the truth, because the truth hurts. The
    truth is that our ideas weren’t right, our insight isn’t shared by customers,
    our awesome design is confusing, our potential customers love that competitor
    we’ve been calling “dumb,” that thing we say is “broken” is not in fact broken,
    the pain we insist our customers are experiencing, they’re not experiencing. [Did
    you even ask?](https://longform.asmartbear.com/customer-development/) If you asked,
    [were you listening](https://longform.asmartbear.com/good-startup-ideas/)? If
    you haven’t made major changes to your strategy and product and positioning, then
    you’re blundering. Seek the truth, then [face the truth](https://longform.asmartbear.com/failure-to-face-the-truth/).
  prefs: []
  type: TYPE_NORMAL
- en: Launching too early / Launching too late
  prefs: []
  type: TYPE_NORMAL
- en: It’s funny that both of these are causes of failure. It’s a preventable blunder
    to launch with a [crappy MVP instead of a simple but lovable v1](https://longform.asmartbear.com/slc/).
    And because builders love only the building, they build for six months (or two
    years) without customers. Shipping crap, and never shipping, are both blunders.
    (P.S. Also, don’t “launch.” No one cares except your friends, and you’re going
    to have to reliably and consistently get customers for the next three years anyway,
    so just work on that.)
  prefs: []
  type: TYPE_NORMAL
- en: Premature scaling
  prefs: []
  type: TYPE_NORMAL
- en: Before Product/Market Fit, the job is to discover what works. What customers
    [will actually pay for](https://longform.asmartbear.com/willingness-to-pay/) (and
    keep paying for a year later), what is the [perfect, target customer](https://longform.asmartbear.com/icp-ideal-customer-persona/)
    and [what do they want](https://longform.asmartbear.com/needs-stack/), how do
    you reach them through marketing and close them through sales (whether self-sold
    or human-sold), what you should charge and how. Many founders either don’t know
    [what Product/Market Fit looks like](https://longform.asmartbear.com/product-market-fit/),
    or don’t want to know, because they want to declare “I have it!” because it feels
    good to say and garners healthy congratulations and maybe a touch of envy on Twitter.
    But scaling is about doubling-down on what works—doing it more, faster, better,
    higher quality, more efficiently. Spending that time and money before you know
    what works, means wasting all that time and money. Then you run out of both. A
    blunder possibly of ignorance, but typically of putting ego before the truth.
  prefs: []
  type: TYPE_NORMAL
- en: Selling to the Enterprise before $20M ARR
  prefs: []
  type: TYPE_NORMAL
- en: If you’re targeting the Enterprise segment from day one, and you’re already
    built for the sales, enablement, onboarding, account management, legal, security,
    and product requirements, then this doesn’t apply to you. However, few startups
    begin there, exactly because of those heavy requirements. The common pattern is
    to have some success with the small or mid-market, then observe that “Salesforce
    bought some seats!” and decide to “go upmarket” because “we’re seeing signal that
    they need it.” There are always individual teams inside large companies who will
    buy your stuff—that’s good! But that’s different from targeting “the enterprise.”
    You probably don’t even know what you don’t know—a position of weakness that screams
    “bad strategy.” This is an easy blunder to avoid; take the orders from the teams,
    stick with [the leverage you have](https://longform.asmartbear.com/productive-meeting-activities/),
    and don’t confuse a team using a tool on the side with what it takes to make multi-million-dollar
    top-down sales.
  prefs: []
  type: TYPE_NORMAL
- en: Unworkable business model / cannot be profitable
  prefs: []
  type: TYPE_NORMAL
- en: Unit economics can be measured right out of the gate. You already have a rough
    idea of the costs of production, and you know you’ll have to spend money and time
    on marketing and sales. [Mismatching price to the business model](https://longform.asmartbear.com/pricing-determines-your-business-model/)
    by an order of magnitude is preventable. Many companies have no sensible business
    model even at scale. They say “we’ll figure that out later,” but that’s just admitting
    you’re blundering and hoping your future self will figure out how to stop blundering.
    Sometimes you will; if you don’t, whose fault was that?
  prefs: []
  type: TYPE_NORMAL
- en: Writing code instead of winning customers
  prefs: []
  type: TYPE_NORMAL
- en: 'After you have a working product in market, why aren’t you getting more customers?
    The builder says: Because I need more features. Or: Because the product has too
    many bugs. Both are incorrect; there are customers who need only the current features,
    but you’re not working on getting their attention with marketing, piquing their
    interest with the website, and winning their business with sales. And *potential*
    customers certainly aren’t ignoring you because your product has a bug—they don’t
    even know that yet. Coders like to code; everything else is hard, and not fun,
    and unclear how to execute, and costs money, and it’s so comfy to just sink back
    into the comfort of Visual Studio and marvel at the prescience of Copilot and
    tweak a CSS class. So people don’t find you, and don’t buy, and the company fails,
    because you blundered marketing and sales.'
  prefs: []
  type: TYPE_NORMAL
- en: Expanding the target market before winning the target market / moving too quickly
    to the second product
  prefs: []
  type: TYPE_NORMAL
- en: 'I’m not here to call people out, so I won’t actually quote the many times I’ve
    seen someone on Twitter declaring that now that they’ve reached $2,700 in MRR,
    they are expanding into a new market segment. This simple blunder belies a lack
    of focus, a lack of conviction in the strategy, and lack of understanding that
    it is ten times easier to win another customer in [your existing target market](https://longform.asmartbear.com/icp-ideal-customer-persona/)
    than it is to expand. This blunder dilutes your attention, marketing dollars,
    positioning, messaging, and product sharpness, and is easy to avoid. [There is
    a time for expansion](https://longform.asmartbear.com/adjacency/): Later.'
  prefs: []
  type: TYPE_NORMAL
- en: Lack of passion / endurance
  prefs: []
  type: TYPE_NORMAL
- en: It is possible that there was passion at the start, but it evaporated, or there
    was an honest intention of spending the next ten years working on this mission,
    but you broke down. But that excuse is only valid if, on day one, you honestly
    took stock of what your passions were, what strengths you were going to [leverage](https://longform.asmartbear.com/leverage/),
    understanding [who you are](https://longform.asmartbear.com/fulfillment/), had
    a mission you deeply cared about (besides “make money” or “be able to say you’re
    a founder”), read about the [emotional whiplash](https://longform.asmartbear.com/startups-emotionally-draining/)
    that startups always entail, and made the [trade-offs against other important
    things](https://longform.asmartbear.com/two-big-things/) in your life. If you
    didn’t do those things, it’s a blunder, not self-discovery. (If it really was
    self-discovery, you are forgiven, and more importantly, you should forgive yourself.)
  prefs: []
  type: TYPE_NORMAL
- en: 'In most cases, I’ve linked to specific ways to avoid each blunder. Which leads
    to the final point:'
  prefs: []
  type: TYPE_NORMAL
- en: '**There is a way to build startups with lower risk**, in large part by avoiding
    those blunders, which I’ve summarized in my [Roadmap for Product/Market Fit](https://longform.asmartbear.com/product-market-fit-formula/).'
  prefs: []
  type: TYPE_NORMAL
- en: Is this a fail-safe path? Of course not. Even in chess. The rest of the game
    does matter.
  prefs: []
  type: TYPE_NORMAL
- en: Still, when you can reduce so much risk by avoiding avoidable things, especially
    with frameworks that detail what “not blundering” looks like, why wouldn’t you
    do that?
  prefs: []
  type: TYPE_NORMAL
- en: 80% winning is not blundering.
  prefs: []
  type: TYPE_NORMAL
- en: '***☞ If you''re enjoying this, please [subscribe](https://longform.asmartbear.com/subscribe/)
    and share this article! ☜***'
  prefs: []
  type: TYPE_NORMAL
- en: '[Subscribe](https://longform.asmartbear.com/subscribe) for more, and'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Thank you for sharing!
  prefs: []
  type: TYPE_NORMAL
- en: 'Addendum: External sources of “why startups fail”'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[CB Insights](https://www.cbinsights.com/research/report/startup-failure-reasons-top/?utm_source=longform.asmartbear.com&utm_campaign=longform.asmartbear.com&utm_medium=post):
    From “111 interviews”'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[Paul Graham](https://www.paulgraham.com/startupmistakes.html?utm_source=longform.asmartbear.com&utm_campaign=longform.asmartbear.com&utm_medium=post):
    The 18 mistakes that kill startups'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Single founder (as opposed to having a co-founder)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Fights Between Founders
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Bad location
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Marginal niche
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Derivative idea
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Obstinacy
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hiring Bad Programmers
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choosing the Wrong Platform
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Slowness in Launching
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Launching Too Early
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Having No Specific User in Mind
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Raising Too Little Money
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Raising Too Much Money
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Poor Investor Management
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Spending Too Much
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Sacrificing Users to (Supposed) Profit
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Not Wanting to Get Your Hands Dirty
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A Half-Hearted Effort
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Tom Eisenmann](https://hbr.org/2021/05/why-start-ups-fail?utm_source=longform.asmartbear.com&utm_campaign=longform.asmartbear.com&utm_medium=post):
    Why startups fail, from hundreds of interviews and surveys'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Good Idea, Bad Bedfellows (not just founders, but investors, key executives
    and employees)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: False Starts (not researching enough before starting or MVP—customers, competitors,
    market)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Maintaining Balance (managing psychology and maintaining a healthy determination)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Steve Blank](https://steveblank.com/2012/05/14/9-deadliest-start-up-sins/?utm_source=longform.asmartbear.com&utm_campaign=longform.asmartbear.com&utm_medium=post):
    9 Deadliest Startup Sins'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '*(You can see Lean Startup screaming out of these: Answers are outside the
    building, not in your head, now seek it and iterate.)*'
  prefs: []
  type: TYPE_NORMAL
- en: Assuming you know what the customer wants
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The “I know what features to build” flaw
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Focusing on the launch date
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Emphasizing execution instead of testing, learning, and iteration
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Writing a business plan that doesn’t allow for trial and error
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Confusing traditional job titles with a startup’s needs
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Executing on a sales and marketing plan
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Prematurely scaling your company based on a presumption of success
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Management by crisis, which leads to a death spiral
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[John Osher](https://www.entrepreneur.com/business-news/business-top-17-startup-mistakes-you-can39t-afford-to/78474?utm_source=longform.asmartbear.com&utm_campaign=longform.asmartbear.com&utm_medium=post):
    17 common mistakes from consumer products'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '*(Many are variants of “scaled too quickly” or “spent money ahead of need.”)*'
  prefs: []
  type: TYPE_NORMAL
- en: Failing to spend enough time researching the business idea to see if it’s viable.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Miscalculating market size, timing, ease of entry and potential market share.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Underestimating financial requirements and timing.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Over-projecting sales volume and timing.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Making cost projections that are too low.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hiring too many people and spending too much on offices and facilities
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Lacking a contingency plan for a shortfall in expectations.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Bringing in unnecessary partners.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hiring for convenience rather than skill requirements.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Neglecting to manage the entire company as a whole.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Accepting that it’s “not possible” too easily rather than finding a way.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Focusing too much on sales volume and company size rather than profit.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Seeking confirmation of your actions rather than seeking the truth.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Lacking simplicity in your vision.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Lacking clarity of your long-term aim and business purpose.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Lacking focus and identity.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Lacking an exit strategy.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Andrew Montalenti](https://thenextweb.com/news/why-startups-die?utm_source=longform.asmartbear.com&utm_campaign=longform.asmartbear.com&utm_medium=post):
    (founder of Parse.ly) Common startup mistakes'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Marriage trouble
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: No bootstrapping plan
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Startup as a career move
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Refusal to change the original idea
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Preemptive scaling
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Growing too fast
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Scared of code
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Not in touch with customers
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: No differentiation in the market
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Failure to clearly communicate value propositions
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Leadership dysfunction, especially founder strife
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Can’t find profitable business model
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
