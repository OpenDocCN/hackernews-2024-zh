- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: Êú™ÂàÜÁ±ª'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 13:08:49'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: Why I recommend Renovate over any other dependency update tools ¬∑ Jamie Tanna
    | Software Engineer
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Êù•Ê∫êÔºö[https://www.jvt.me/posts/2024/04/12/use-renovate/](https://www.jvt.me/posts/2024/04/12/use-renovate/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: If you've read my blog before, or interacted with me at work or in the Open
    Source world, you're likely to know that I'm a huge fan of [Renovate](https://docs.renovatebot.com/).
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
- en: For those that aren't aware, Renovate is one of the big players in dependency
    updating tooling, commonly seen in comparisons with Dependabot or Snyk.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
- en: I've been using Renovate for the last ~5 years, alongside a mix of Dependabot
    and Snyk to keep me grounded. I *absolutely love* Renovate, and make a point of
    making it so I can run Renovate where possible.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
- en: I've also had the experience operating Renovate in self-hosted mode as well
    as used [the hosted Renovate app by Mend](https://developer.mend.io) and the Mend
    Enterprise SAAS, and [I've written about the lessons learned self-hosting Renovate](https://www.jvt.me/posts/2024/05/03/renovate-self-hosting-lessons/).
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: Renovate has some really key features that set it apart from the competition,
    and I'm sure in the time it's taken me to write this, they've shipped some new
    ones üòª
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
- en: '(Aside: I''m largely writing this blog post now, as I''ve recently been shouting
    the benefits of Renovate, and instead of writing another internal-only document
    at work (as I did at Deliveroo), I wanted to [write it as a form of blogumentation](https://www.jvt.me/posts/2017/06/25/blogumentation/)).'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
- en: Prior art
  id: totrans-split-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A few years back, I wrote about [some tips for using Renovate](https://www.jvt.me/posts/2021/09/26/whitesource-renovate-tips/)
    to make keeping your software up-to-date easier, which I still stand by.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
- en: Since then, I've worked across a number of different ecosystems, repository
    sizes, and levels of comfort merging dependency updates, and have learned a few
    more things about effectively using Renovate - but through it, I'm still very
    sure of Renovate being the best tool in the ecosystem.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
- en: Configurability
  id: totrans-split-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Renovate is *extremely* configurable, with [dozens of configuration options](https://docs.renovatebot.com/configuration-options/)
    to tune your experience. But Renovate doesn't end up being "too" configurable,
    where you end up spending more time tweaking config than doing the changes, but
    configurable enough that it's very likely you can do what you need to with it.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
- en: Centralised, shareable presets
  id: totrans-split-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is something that really hit me when we were rolling out Dependabot at
    Deliveroo, where my team owned ~30 repositories, and so for each of these repos,
    we needed to hand-craft a `dependabot.yml`, as Dependabot needs to be told which
    directories contain which dependencies, and how often to update them.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
- en: After we'd had about a week of usage, we started needing to tweak the configuration
    in a few of them to reduce the noise, which then required us to raise PRs across
    all the repos and get them updated.
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
- en: Because Dependabot requires a bit of a snowflake configuration per repository,
    this wasn't easily automatable, even with [great tools available to automate some
    of the bulk updates](https://www.jvt.me/posts/2023/01/21/bulk-git-repo-changes/),
    which made this a rather onerous and frustrating process.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
- en: Compare this to Renovate, where there's an excellent first-class support for
    [shareable config presets](https://docs.renovatebot.com/config-presets/), in which
    you can "extend" multiple configuration(s).
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
- en: This allows a team that wants to have consistency (i.e. in how often they receive
    updates to the AWS and Google Cloud SDKs, or which labels they want on PRs) to
    create a shared preset for their team that defines this. Then, each of their repositories
    can "extend" this configuration, as well as defining their own configuration on
    top of it at a repo-specific level.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
- en: 'This also makes it possible to provide good guardrails for your organisation,
    providing a good set of defaults, such as a `base.json`:'
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-split-24
  prefs: []
  type: TYPE_PRE
- en: 'This then allows defining a somewhat opinionated good starting point for teams
    with a `default.json`:'
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-split-26
  prefs: []
  type: TYPE_PRE
- en: 'Then, teams only need to set the following in their repos'' `renovate.json`,
    and they''ll have the benefits of onboarding with a lot of the hard work done
    with starting:'
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-split-28
  prefs: []
  type: TYPE_PRE
- en: And that's it üëè
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
- en: Good defaults
  id: totrans-split-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Linking back to the comment about having to hand-craft `dependabot.yml`s, the
    great thing about Renovate is that there's some great defaults, and that it can
    autodetect the ecosystems your repo uses, and appropriately raises PRs.
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
- en: This ease of onboarding is truly excellent, and you can even have [an onboarding
    PR](https://docs.renovatebot.com/getting-started/installing-onboarding/#repository-onboarding)
    raised to your repos to make it even simpler.
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
- en: For instance, at Deliveroo, we made it so [there was a default set of configuration
    for all repos](https://www.jvt.me/posts/2023/01/30/renovate-global-defaults/)
    to give us an easy means to update Docker images, but then if teams wanted to
    manage everything, they could add a `renovate.json`, and it'd be more fully featured.
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, Renovate comes with some great inbuilt configuration in the form
    of presets, including [a "best practices" guide](https://docs.renovatebot.com/upgrade-best-practices/)
    and associated preset, which makes it easier to keep on top of community best
    practices, without needing to bikeshed about what you think is best.
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
- en: If you find that `config:best-practices` is a little too much, there's `config:recommended`
    as a starting point, and you can always downgrade or exclude rules you'd prefer
    not to follow. Or if you *really* want to control things `config:base` is the
    minimum you should pull in.
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
- en: Grouping
  id: totrans-split-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As suggested above, it's possible to tune how different packages get updated,
    where you can [group multiple updates into a single PR](https://docs.renovatebot.com/noise-reduction/#package-grouping).
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
- en: 'For instance, let''s say that you use 9 different AWS services in your application,
    and instead of receiving 9 PRs every time there are updates across the SDKs, you
    want a single one. In this case, you could craft the following Renovate configuration:'
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-split-39
  prefs: []
  type: TYPE_PRE
- en: 'What''s great about this is that you can also bundle things like all patch
    updates into a single PR:'
  id: totrans-split-40
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-split-41
  prefs: []
  type: TYPE_PRE
- en: This is something that's [recently](https://github.blog/2023-08-24-a-faster-way-to-manage-version-updates-with-dependabot/)
    been added to Dependabot, which is great, cause Renovate's had it for years üòù
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
- en: Use for one-off bumps
  id: totrans-split-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Because Renovate is an Open Source tool you can run on the command-line, it
    means you can *also* get the ability to use [Renovate for one-off executions](https://www.jvt.me/posts/2022/12/12/renovate-one-off/),
    for instance to get everyone in your organisation to a minimum version of a given
    dependency, or just to do an infrequently performed set of updates.
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
- en: Something I always refer back to is the fact that Renovate has a *tonne* of
    supported package managers, package ecosystems and versioning tools.
  id: totrans-split-45
  prefs: []
  type: TYPE_NORMAL
- en: 'Renovate''s [bot comparison guide docs](https://docs.renovatebot.com/bot-comparison/)
    has a good example which links out to the differences between:'
  id: totrans-split-46
  prefs: []
  type: TYPE_NORMAL
- en: As Dependabot is more focussed on being used on GitHub's platforms (citation
    needed?) support for things like CircleCI, GitLab CI or other competitors' tooling
    doesn't seem to be available.
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
- en: Adding support for additional ecosystems
  id: totrans-split-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One of the things you'll be used to having from your dependency update tool
    of choice is your standard package manager support, where it'll update a `go.mod`
    or a `pom.xml` in your repositories.
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
- en: But one thing that's quite important to understand is that there are *many more*
    dependencies in your project than those installed in your package manager. Something
    I find great about Renovate is that, as well as managing `Dockerfile`s, `build.gradle`s,
    `.gitlab-ci.yml`, etc, it will *also* manage things your `.ruby-version` or configuration
    for the ASDF version manager.
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
- en: But what about some of the non-standard, or organisation-specific means for
    tracking versions?
  id: totrans-split-51
  prefs: []
  type: TYPE_NORMAL
- en: 'For instance, installing the `golangci-lint` linting tool recommends using
    `curl | sh`:'
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-split-53
  prefs: []
  type: TYPE_PRE
- en: 'And it''s common for `Dockerfile`s to have a definition of the version of dependencies:'
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-split-55
  prefs: []
  type: TYPE_PRE
- en: 'Or what if you have a custom deployment configuration like:'
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-split-57
  prefs: []
  type: TYPE_PRE
- en: It's very unlikely that you have these supported by other tools out-of-the-box,
    and Renovate is the same.
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
- en: But Renovate *does* give you the ability to manage these versions yourself.
  id: totrans-split-59
  prefs: []
  type: TYPE_NORMAL
- en: 'Using Renovate''s [custom managers](https://docs.renovatebot.com/modules/manager/regex/)
    we can craft a configuration file such as:'
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-split-61
  prefs: []
  type: TYPE_PRE
- en: And this will allow us to manage the `golangci-lint` installation.
  id: totrans-split-62
  prefs: []
  type: TYPE_NORMAL
- en: Ideally, this sort of configuration may make it upstream so Renovate can do
    it out-of-the-box, but as we can see from the above example, there may be things
    that are organisation- or repo-specific, and so having it upstream'd doesn't make
    sense.
  id: totrans-split-63
  prefs: []
  type: TYPE_NORMAL
- en: Because you can do more with it
  id: totrans-split-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: And you can do even more with it - I've mentioned you can use it for one-off
    updates on the command-line, but for instance I've also written a tool [renovate-graph](https://gitlab.com/tanna.dev/renovate-graph)
    which takes the detected dependency data from Renovate and gives you a JSON blob
    you can consume.
  id: totrans-split-65
  prefs: []
  type: TYPE_NORMAL
- en: This underpins a large swathe of the power behind [dependency-management-data](https://dmd.tanna.dev)
    and can be used for other means, such as [converting Renovate data exports to
    a Software Bill of Materials (SBOM)](https://www.jvt.me/posts/2023/11/03/renovate-to-sbom/).
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
- en: Dependency Dashboard
  id: totrans-split-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One thing I love about Renovate is that you can enable the [Dependency Dashboard](https://docs.renovatebot.com/key-concepts/dashboard/),
    which gives you an overview of the detected dependencies, open PRs, as well s
    anything that may be waiting, or has failed to update.
  id: totrans-split-68
  prefs: []
  type: TYPE_NORMAL
- en: This is a hugely useful insight into the at-a-glance how far behind are we on
    updates, giving a view of whether you maybe want to spend a bit more time focussing
    on updates, or looking at ways to cut through the noise.
  id: totrans-split-69
  prefs: []
  type: TYPE_NORMAL
- en: When you merge a PR into your default branch, Renovate will rebase open PRs,
    so they're easier to review, and are guaranteed to run against the latest changes.
    However, if you're not getting to your updates as often as changes are going in,
    you may have a tonne of PRs constantly building, which is a waste of energy and
    CI minutes.
  id: totrans-split-70
  prefs: []
  type: TYPE_NORMAL
- en: Instead, you can use the Dependency Dashboard for its ability to i.e. [require
    major bumps be gated behind a manual approval](https://docs.renovatebot.com/key-concepts/dashboard/#require-approval-for-major-updates),
    as it's likely you'll need some human interaction for that PR, and can then only
    raise it when you're actually ready to deal with it.
  id: totrans-split-71
  prefs: []
  type: TYPE_NORMAL
- en: Open Source
  id: totrans-split-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A very important factor to me is that Renovate is Open Source, and open to community
    contributions.
  id: totrans-split-73
  prefs: []
  type: TYPE_NORMAL
- en: Although it's probably best to be split into another article, I love the AGPL3,
    and it's a great way of making sure that anyone hosting Renovate as a platform
    makes sure that their users get the access to the source code.
  id: totrans-split-74
  prefs: []
  type: TYPE_NORMAL
- en: 'Alternatively, Snyk is proprietary, and ~~Dependabot is source available (or
    at a stretch "open source" not "Open Source") with [a license](https://github.com/dependabot/dependabot-core?tab=readme-ov-file#license)
    that doesn''t even appear on the SPDX license list~~. **Update 2024-05-19**: Dependabot
    is now MIT-licensed üëè'
  id: totrans-split-75
  prefs: []
  type: TYPE_NORMAL
- en: Renovate is also brilliantly set up as a community project, where they're shipping
    hundreds of PRs a month, alongside managing the community really well. I've seen
    a few things change in the last few years I've been more actively contributing,
    and it's a really well run project and an indication of something I'd love to
    be able to replicate at some point!
  id: totrans-split-76
  prefs: []
  type: TYPE_NORMAL
- en: It also helps that [Mend](https://mend.io), the company behind Renovate, invests
    a fair bit of time and money into development of the project, as well as their
    commercial offerings on top of it, which continue to make the project sustainable
    and remain Free and Open.
  id: totrans-split-77
  prefs: []
  type: TYPE_NORMAL
- en: Great documentation
  id: totrans-split-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Following on from the excellent community and maintainer contributions alike,
    there's also some really excellent work on a technical writing and documentation
    point of view, which makes a lot of tasks straightforward to solve.
  id: totrans-split-79
  prefs: []
  type: TYPE_NORMAL
- en: If there's something a little more complex or custom than the docs can offer,
    it's usually something that can be answered by the community in a GitHub Discussion,
    and likely could turn into a docs improvement, if necessary.
  id: totrans-split-80
  prefs: []
  type: TYPE_NORMAL
- en: There's even a great [comparison table between Renovate and other dependency
    update bots](https://docs.renovatebot.com/bot-comparison/), as well as [tips on
    how best to update your projects](https://docs.renovatebot.com/upgrade-best-practices/).
  id: totrans-split-81
  prefs: []
  type: TYPE_NORMAL
- en: I've recently discovered a few pages and features that I wasn't aware, just
    by going through the docs.
  id: totrans-split-82
  prefs: []
  type: TYPE_NORMAL
- en: Overall
  id: totrans-split-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In summary, there's just so much that makes Renovate a greater choice than any
    of the alternatives, and I'm sure I could talk about more things that make it
    great.
  id: totrans-split-84
  prefs: []
  type: TYPE_NORMAL
- en: Whether you self-host it for maximum control (such as being able to access internal
    artifact registries), or run the hosted app for ease of operations, or just run
    it from the command-line once in a while, it can be hugely useful to your experience
    as an engineer.
  id: totrans-split-85
  prefs: []
  type: TYPE_NORMAL
- en: I hope you'll check it out!
  id: totrans-split-86
  prefs: []
  type: TYPE_NORMAL
