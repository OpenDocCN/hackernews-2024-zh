- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 13:05:02'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: How does the classic Win32 ListView handle incremental searching? - The Old
    New Thing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://devblogs.microsoft.com/oldnewthing/20240408-00/?p=109627](https://devblogs.microsoft.com/oldnewthing/20240408-00/?p=109627)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: How does the classic Win32 ListView handle incremental searching?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The classic Win32 ListView supports incremental search: You can start typing
    the name of an item to search for it. But it’s a bit more complicated than that.'
  prefs: []
  type: TYPE_NORMAL
- en: You see, there’s more than one way that people expect type-to-search to work.
    In one pattern, you type the first letter of the thing you want, and the system
    finds the first item that starts with that letter. If that’s not the one you want,
    you press that same letter again, and the system finds the second item that starts
    with that letter. Keep pressing that same letter until you get to the item you
    want. This is how list box searching worked in Windows 1.0.
  prefs: []
  type: TYPE_NORMAL
- en: Another pattern is to type the first letter of the thing you want, and the system
    finds the first item that starts with that letter. If that’s not the one you want,
    then type the second letter of the thing you want, and the system finds the first
    item whose first two letters match the letters you typed. Keep typing more and
    more letters until you get to the item you want.
  prefs: []
  type: TYPE_NORMAL
- en: Which pattern should the classic Win32 ListView control use?
  prefs: []
  type: TYPE_NORMAL
- en: '[Why not both](https://knowyourmeme.com/memes/why-not-both-why-dont-we-have-both
    "Why Not Both? meme explanation")?'
  prefs: []
  type: TYPE_NORMAL
- en: If you type the same letter over and over again, then the classic Win32 ListView
    assumes that you are using the first pattern, and each time you press the same
    letter again, it selects the next item that starts with that letter. But if you
    type different letters, then the classic Win32 ListView assumes that you are typing
    a prefix, and it selects the first item that starts with that prefix.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, suppose that you have a ListView with the following items:'
  prefs: []
  type: TYPE_NORMAL
- en: Cougar
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leopard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lemur
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lion
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Llama
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tiger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You type L, and this selects *Leopard*, the first animal on the list that begins
    with L.
  prefs: []
  type: TYPE_NORMAL
- en: You type another L. Since this is now two L’s, the Win32 ListView is in “repeated
    letter” mode, and it selects the second L-animal, which is *Lemur*.
  prefs: []
  type: TYPE_NORMAL
- en: Now you type A. This is no longer a repeat of the same letter, so the Win32
    ListView switches to “prefix” mode, and it selects the first item which begins
    with “LLA”, which is *Llama*.
  prefs: []
  type: TYPE_NORMAL
