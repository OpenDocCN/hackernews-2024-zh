- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-27 13:06:37'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024年5月27日 13:06:37
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Caching is often enough
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 缓存通常足够
- en: 来源：[https://www.mnot.net/blog/2003/06/28/caching_is_often_enough](https://www.mnot.net/blog/2003/06/28/caching_is_often_enough)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.mnot.net/blog/2003/06/28/caching_is_often_enough](https://www.mnot.net/blog/2003/06/28/caching_is_often_enough)
- en: Caching is often enough
  id: totrans-split-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缓存通常足够
- en: Saturday, 28 June 2003
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 2003年6月28日，星期六
- en: '[HTTP Caching](/blog/http-caching/)'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[HTTP 缓存](/blog/http-caching/)'
- en: I feel compelled to respond to [Norm Walsh’s thoughts on caching](http://norman.walsh.name/2003/06/26/cache
    "Caching is Not Enough").
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我觉得有必要回应[诺姆·沃尔什关于缓存的思考](http://norman.walsh.name/2003/06/26/cache "Caching is
    Not Enough")。
- en: It’s important to distinguish between the capabilities of a specific product
    (such as WWWoffle) and the technology that it implements (caching). I would agree
    that the general state of cache implementation leaves much to be desired, both
    in clients and in proxies. However, I would not write off the technology wholesale.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 区分一个特定产品（如WWWoffle）的能力和它实现的技术（缓存）是很重要的。我同意缓存实施的一般状态在客户端和代理中都远未达到理想水平。但我不会完全否定这项技术。
- en: For example, Norm claims that you can’t populate a cache. Untrue; it’s simple
    to populate any cache, simply by driving a workload through it. If that’s too
    simplistic, I know of at least one commercial proxy cache which allows you to
    push content into it in a efficient and secure manner, using nothing but HTTP
    (I know this because I forced them to do it, when I had the weight of a Fortune
    25 company behind me; handy thing, that ;)
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，诺姆声称你不能填充一个缓存。这不正确；通过简单地驱动工作负载，可以轻松填充任何缓存。如果这显得太简单了，我知道至少有一种商业代理缓存允许您以高效且安全的方式通过HTTP将内容推送到其中（我知道这一点是因为当时我背后有财富25强公司的支持；这是一个很方便的事情；）
- en: A stickier problem is “pinning” representations in the cache, so that they don’t
    get evicted by others. This is less common (most vendors will tell you to just
    buy more disk, which I don’t consider acceptable in some situations), but I know
    of one implementation that does allow this.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 更棘手的问题是在缓存中“固定”表示，这样它们就不会被其他内容所替换。这种情况比较少见（大多数供应商会告诉你只需购买更多硬盘，但在某些情况下我认为这并不可接受），但我知道有一种实现允许这样做。
- en: Norm would also like the ability to override the resource’s choice of representation
    in a private or local scope. I think this is really just a facet of his first
    problem; find the cache at the appropriate scope (e.g., on the local machine,
    in the local network, etc.) and push a representation into it, with the appropriate
    metadata.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 诺姆还希望能够在私有或本地范围内覆盖资源对表示的选择。我认为这实际上只是他第一个问题的一个方面；找到适当范围内的缓存（例如在本地机器上，在本地网络中等）并推送一个带有适当元数据的表示形式进去是很重要的。
- en: BTW, many caches allow you to modify their content through the local filesystem,
    if you know the proper incantations (and there are tools to help). How RESTful.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便说一句，许多缓存允许您通过本地文件系统修改它们的内容，如果您知道适当的咒语的话（并且有工具可用）。多么符合REST原则啊。
- en: Finally, Norm would like a way to map arbitrarily specified URIs to other URIs,
    based on a ruleset. There’s actually been a lot of work in this area; a few IETF
    efforts around this space include the Contextualisation of Localisation BoF (what
    a mouthful), OPES and CDI; my own work in this area led me to produce [URISpace](https://www.w3.org/TR/urispace.html).
    This, by the way, isn’t really a function of caching, but rather one of an intermediary
    (where caching often happens).
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，诺姆希望有一种方法来根据规则集将任意指定的URI映射到其他URI。实际上，在这个领域已经进行了很多工作；一些IETF关于这一领域的努力包括本地化语境化的BOF（这个名字真是一口气），OPES和CDI；我在这个领域的工作导致我制定了[URISpace](https://www.w3.org/TR/urispace.html)。顺便说一句，这实际上并不是缓存的功能，而是中间件的功能（在那里通常发生缓存）。
- en: I’m not convinced that there’s need for a specialized peice of software called
    and “XML Catalog,” because all of the functions that Norm describes are generic
    and desireables for all kinds of content, not just XML.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我并不认为有必要专门使用名为“XML目录”的软件，因为诺姆描述的所有功能都是通用的，而且对于所有类型的内容都是理想的，而不仅仅是XML。
- en: I would not debate that the functionality of current implementations is seriously
    impaired, however. The caching community has focused entirely on performance,
    to the detriment of the functionality and granularity of capability in their products.
    I think there are some really interesting opportunities in this space, and would
    very much like to hear people’s thoughts.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我并不否认当前实现的功能性严重受损。缓存社区完全专注于性能，却忽视了产品功能和能力粒度的损害。我认为在这个领域有一些非常有趣的机会，而且非常愿意听听大家的想法。
- en: Alas, I’m no longer paid to think about all things caching and intermediary,
    so my time for doing so is limited. That said, it looks like what I am paid for
    - Web services - is veering in the direction where intermediaries are in the spotlight,
    so I suspect interesting times may be ahead.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 可惜的是，我不再受雇于思考所有缓存和中介的事情，因此我用来思考的时间有限。尽管如此，看起来我现在的工作 - Web服务 - 正朝着中介处于聚光灯下的方向发展，所以我认为未来可能会有有趣的时刻。
