- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 13:06:37'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: Caching is often enough
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://www.mnot.net/blog/2003/06/28/caching_is_often_enough](https://www.mnot.net/blog/2003/06/28/caching_is_often_enough)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Caching is often enough
  id: totrans-split-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Saturday, 28 June 2003
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
- en: '[HTTP Caching](/blog/http-caching/)'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
- en: I feel compelled to respond to [Norm Walsh’s thoughts on caching](http://norman.walsh.name/2003/06/26/cache
    "Caching is Not Enough").
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: It’s important to distinguish between the capabilities of a specific product
    (such as WWWoffle) and the technology that it implements (caching). I would agree
    that the general state of cache implementation leaves much to be desired, both
    in clients and in proxies. However, I would not write off the technology wholesale.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
- en: For example, Norm claims that you can’t populate a cache. Untrue; it’s simple
    to populate any cache, simply by driving a workload through it. If that’s too
    simplistic, I know of at least one commercial proxy cache which allows you to
    push content into it in a efficient and secure manner, using nothing but HTTP
    (I know this because I forced them to do it, when I had the weight of a Fortune
    25 company behind me; handy thing, that ;)
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
- en: A stickier problem is “pinning” representations in the cache, so that they don’t
    get evicted by others. This is less common (most vendors will tell you to just
    buy more disk, which I don’t consider acceptable in some situations), but I know
    of one implementation that does allow this.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
- en: Norm would also like the ability to override the resource’s choice of representation
    in a private or local scope. I think this is really just a facet of his first
    problem; find the cache at the appropriate scope (e.g., on the local machine,
    in the local network, etc.) and push a representation into it, with the appropriate
    metadata.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
- en: BTW, many caches allow you to modify their content through the local filesystem,
    if you know the proper incantations (and there are tools to help). How RESTful.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
- en: Finally, Norm would like a way to map arbitrarily specified URIs to other URIs,
    based on a ruleset. There’s actually been a lot of work in this area; a few IETF
    efforts around this space include the Contextualisation of Localisation BoF (what
    a mouthful), OPES and CDI; my own work in this area led me to produce [URISpace](https://www.w3.org/TR/urispace.html).
    This, by the way, isn’t really a function of caching, but rather one of an intermediary
    (where caching often happens).
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
- en: I’m not convinced that there’s need for a specialized peice of software called
    and “XML Catalog,” because all of the functions that Norm describes are generic
    and desireables for all kinds of content, not just XML.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
- en: I would not debate that the functionality of current implementations is seriously
    impaired, however. The caching community has focused entirely on performance,
    to the detriment of the functionality and granularity of capability in their products.
    I think there are some really interesting opportunities in this space, and would
    very much like to hear people’s thoughts.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我并不否认当前实现的功能性严重受损。缓存社区完全专注于性能，却忽视了产品功能和能力粒度的损害。我认为在这个领域有一些非常有趣的机会，而且非常愿意听听大家的想法。
- en: Alas, I’m no longer paid to think about all things caching and intermediary,
    so my time for doing so is limited. That said, it looks like what I am paid for
    - Web services - is veering in the direction where intermediaries are in the spotlight,
    so I suspect interesting times may be ahead.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 可惜的是，我不再受雇于思考所有缓存和中介的事情，因此我用来思考的时间有限。尽管如此，看起来我现在的工作 - Web服务 - 正朝着中介处于聚光灯下的方向发展，所以我认为未来可能会有有趣的时刻。
