["```\nconst createIconEmbeddingsString = (icon) => `icon: \"${icon.name}\", categories: [${categories}] tags: [${tags}]`;\n```", "```\ncosine_similarity(x,y) = 1 - cosine distance(x,y)\n```", "```\nSELECT\n  1 - cosine_distance (search_query.embedding,\n    icon.embedding) as similarity,\n  *\nFROM\n  icon\n  join search_query on search_query.text = 'dog'\nORDER BY\n  cosine_distance (search_query.embedding, icon.embedding) ASC\nLIMIT 50;\n```", "```\nSELECT\n  1 - cosine_distance (search_query.embedding,\n    icon.embedding) AS similarity,\n  *\nFROM\n  icon\n  JOIN search_query ON search_query.text = 'dog'\n  JOIN icon_set ON icon_set.slug = icon.icon_set_slug\nWHERE\n  icon_set.slug in('lucide', 'mdi')\nORDER BY\n  cosine_distance (search_query.embedding,\n    icon.embedding) ASC\nLIMIT 50;\n```", "```\nSELECT\n  (\n    0.5 * COALESCE(      -- so nulls are turned into 0\n     1 - cosine_distance (search_query.embedding, icon.embedding),\n     0\n    ) + 0.5 *     -- so clicks matter less than embeddings.\n    COALESCE( \n      search_query_selection. \"count\"::decimal / \n        max(search_query_selection. \"count\") OVER (),\n    0)\n  ) AS score,\n  icon.*\nFROM\n  icon\n  LEFT JOIN search_query_selection\n    ON icon.id = search_query_selection.icon_id\n  LEFT JOIN search_query\n    ON search_query.text = 'dog'\n      AND search_query.id = search_query_selection.search_query_id\n  ORDER BY score DESC\n  LIMIT 50;\n```", "```\nWITH current_icon AS (\n    SELECT\n      embedding,\n      slug,\n      icon_set_slug\n    FROM\n      icon\n    WHERE\n      icon_set_slug = 'lucide'\n      AND slug = 'activity'\n)\nSELECT\n    *\nFROM\n    icon\nINNER JOIN current_icon ON\nicon.icon_set_slug = current_icon.icon_set_slug\nAND icon.slug != current_icon.slug\nORDER BY\n    1 - cosine_distance (\n    icon.embedding,\n    current_icon.embedding\n)\nLIMIT 50;\n```"]