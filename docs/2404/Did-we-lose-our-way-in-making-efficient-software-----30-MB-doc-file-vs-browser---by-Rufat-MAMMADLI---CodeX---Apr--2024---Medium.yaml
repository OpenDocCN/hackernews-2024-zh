- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 13:36:42'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 13:36:42'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Did we lose our way in making efficient software? — ~30 MB doc file vs browser
    | by Rufat MAMMADLI | CodeX | Apr, 2024 | Medium
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们在开发高效软件方面是否迷失了方向？— ~30 MB文档文件 vs 浏览器 | 作者：Rufat MAMMADLI | CodeX | 2024年4月
    | Medium
- en: 来源：[https://rufatmammadli.medium.com/did-we-lose-our-way-in-making-efficient-software-30-mb-doc-file-vs-browser-fed12dd866a4](https://rufatmammadli.medium.com/did-we-lose-our-way-in-making-efficient-software-30-mb-doc-file-vs-browser-fed12dd866a4)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://rufatmammadli.medium.com/did-we-lose-our-way-in-making-efficient-software-30-mb-doc-file-vs-browser-fed12dd866a4](https://rufatmammadli.medium.com/did-we-lose-our-way-in-making-efficient-software-30-mb-doc-file-vs-browser-fed12dd866a4)
- en: Did we lose our way in making efficient software? — ~30 MB doc file vs browser
  id: totrans-split-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们在开发高效软件方面是否迷失了方向？— ~30 MB文档文件 vs 浏览器
- en: Yesterday, my father told me he needed to install Microsoft Word on his laptop
    to work on his doc file.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 昨天，我父亲告诉我，他需要在他的笔记本电脑上安装Microsoft Word来处理他的文档文件。
- en: He also wanted to transfer his doc file to his work computer to continue to
    work on it when he is at the office. I thought a web app might be good for him.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 他还想把他的文档文件传输到他的工作电脑上，在办公室时继续工作。我想一个Web应用对他来说可能会很好。
- en: I showed him the Google Docs option because he already has a Google Account,
    and it is easier to use, cloud-based, and syncs automatically.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我向他展示了Google Docs选项，因为他已经有了Google账号，使用起来更容易，基于云，可以自动同步。
- en: I set up his doc file in Google Docs, and… When I type anything in the doc file,
    it takes seconds to see it on screen. The doc file size was ~30 MB, and contains
    some images, and simple tables but mostly text. Unfortunately, Chrome and/or Google
    Docs couldn’t handle it.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我在Google Docs中设置了他的文档文件，然后…当我在文档文件中输入任何内容时，屏幕上要等几秒钟才能看到。文档文件大小约为`30 MB`，包含一些图片和简单的表格，但主要是文本。不幸的是，Chrome和/或Google
    Docs无法处理它。
- en: He didn't want to pay for Microsoft Office. So, I installed LibreOffice for
    him. And I tested the doc file on it. It was quicker than The Flash.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 他不想为Microsoft Office付费。所以，我为他安装了LibreOffice。我测试了这个文档文件。它比闪电快。
- en: After this, I kept thinking about today’s software standards. Are we going backward
    about performance-wise software development? Are the newest, cool, modern tools,
    frameworks, and languages taking us backward efficiency-wise?
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我一直在思考今天的软件标准。我们在性能方面是否在倒退？最新、酷、现代的工具、框架和语言是否在效率方面将我们带回去了？
- en: It looks like the hardware specs are increased to handle these types of web
    apps, browsers were unnecessary If we had pure native apps only. Like, why the
    mobile phones need to have 8 or 16 GB RAM?
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来硬件规格提升了以处理这些类型的Web应用，如果我们只有纯粹的本地应用程序，浏览器就不再需要了。比如，为什么手机需要有8或16 GB RAM？
- en: The web needs native rendering instead of some UI rendering engine wrappers.
    You can’t open a ~30 MB Word file in Google Docs on a well-spec laptop because
    the browser needs more memory and CPU usage.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 网络需要本地渲染，而不是某些UI渲染引擎的包装。你不能在配置良好的笔记本电脑上用Google Docs打开一个大约`30 MB`的Word文件，因为浏览器需要更多的内存和CPU使用率。
- en: I think we lost our way of developing optimized, efficient, and performance-wise
    applications. We need to solve this issue. Even the 2K of RAM Apollo computer
    (1966) took humanity to the moon, but you can’t work on a ~30 MB doc file in a
    browser in 2024.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为我们在开发优化、高效和性能方面的应用程序时迷失了方向。我们需要解决这个问题。即使1966年阿波罗计算机只有2K RAM，也能带领人类登上月球，但在2024年你不能在浏览器上处理一个大约`30
    MB`的文档文件。
- en: I’m focused on the web because today everyone in the industry is also concentrating
    on PWA applications for the future.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我专注于网络，因为现在行业内每个人都在关注未来的PWA应用程序。
- en: API optimization is also important in web and native apps. Because API performance
    can contribute to apps’ performances. It will be a shameless plug but I would
    like to talk about my product that monitors APIs which would help to optimize
    them. It is [https://onradar.io](https://onradar.io). Onradar provides uptime
    monitoring and flow-based monitoring for APIs. You can create possible user scenarios
    with related APIs in the flow editor and let Onradar test it 24/7\. It will alert
    you If there is any incident.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在Web和本地应用程序中，API优化也很重要。因为API的性能可以影响应用程序的性能。我想自己的产品可以监控API优化，不好意思打广告，但我想谈谈我的产品，它可以监控API的稳定性，可以通过流程编辑器创建相关API的可能用户场景，让Onradar全天候进行测试。如果出现任何问题，它会提醒你。
- en: Thank you for reading!
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 谢谢阅读！
