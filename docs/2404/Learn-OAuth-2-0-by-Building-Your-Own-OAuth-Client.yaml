- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 13:17:34'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 13:17:34'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Learn OAuth 2.0 by Building Your Own OAuth Client
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过构建自己的OAuth客户端学习OAuth 2.0
- en: 来源：[https://annotate.dev/p/hello-world/learn-oauth-2-0-by-building-your-own-oauth-client-U2HaZNtvQojn4F](https://annotate.dev/p/hello-world/learn-oauth-2-0-by-building-your-own-oauth-client-U2HaZNtvQojn4F)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://annotate.dev/p/hello-world/learn-oauth-2-0-by-building-your-own-oauth-client-U2HaZNtvQojn4F](https://annotate.dev/p/hello-world/learn-oauth-2-0-by-building-your-own-oauth-client-U2HaZNtvQojn4F)
- en: You've built an OAuth client using the authorization code grant type. However,
    should you develop your own OAuth client from scratch? Generally, no. Subtle bugs
    or novel exploits can introduce serious security risks. Instead, opting for well-tested,
    open-source OAuth clients is a safer choice.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经使用授权码授予类型构建了一个OAuth客户端。但是，是否应该从零开始开发自己的OAuth客户端呢？一般来说，不应该。微妙的错误或新颖的漏洞可能会引入严重的安全风险。相反，选择经过充分测试的开源OAuth客户端是一个更安全的选择。
- en: Understanding the inner workings of an OAuth client is important. It gives you
    knowledge about the configuration options available in open-source libraries,
    helps in troubleshooting OAuth-related issues, and makes learning other OAuth
    flows like refresh, PKCE, and implicit a breeze. You're also in a great position
    to learn about OpenID Connect (OIDC); a protocol built atop of OAuth.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 理解OAuth客户端的内部工作机制非常重要。它使您了解开源库中可用的配置选项，帮助解决与OAuth相关的问题，并使学习其他OAuth流程（如刷新、PKCE和隐式流）变得轻松。您还可以更好地了解OpenID
    Connect（OIDC）；这是一个建立在OAuth之上的协议。
- en: In the next walkthrough, you'll explore OIDC—what problems it addresses and
    the minimal code adjustments needed to support it. Stay tuned!
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的演示中，您将探索OIDC——它解决了哪些问题，以及支持它所需的最小代码调整。敬请关注！
