- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 13:17:16'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: Perlisisms - "Epigrams in Programming" by Alan J. Perlis
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://www.cs.yale.edu/homes/perlis-alan/quotes.html](https://www.cs.yale.edu/homes/perlis-alan/quotes.html)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
- en: EPIGRAMS IN PROGRAMMING
  id: totrans-split-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
- en: 1\. One man's constant is another man's variable.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: '2\. Functions delay binding; data structures induce binding. Moral: Structure
    data late in the programming process.'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Syntactic sugar causes cancer of the semicolon.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Every program is a part of some other program and rarely fits.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
- en: 5\. If a program manipulates a large amount of data, it does so in a small number
    of ways.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
- en: 6\. Symmetry is a complexity-reducing concept (co-routines include subroutines);
    seek it everywhere.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
- en: 7\. It is easier to write an incorrect program than understand a correct one.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
- en: 8\. A programming language is low level when its programs require attention
    to the irrelevant.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
- en: 9\. It is better to have 100 functions operate on one data structure than 10
    functions on 10 data structures.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
- en: '10\. Get into a rut early: Do the same process the same way. Accumulate idioms.
    Standardize. The only difference(!) between Shakespeare and you was the size of
    his idiom list - not the size of his vocabulary.'
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
- en: 11\. If you have a procedure with ten parameters, you probably missed some.
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
- en: 12\. Recursion is the root of computation since it trades description for time.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
- en: 13\. If two people write exactly the same program, each should be put into microcode
    and then they certainly won't be the same.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
- en: 14\. In the long run every program becomes rococo - then rubble.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
- en: 15\. Everything should be built top-down, except the first time.
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
- en: '16\. Every program has (at least) two purposes: the one for which it was written,
    and another for which it wasn''t.'
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
- en: 17\. If a listener nods his head when you're explaining your program, wake him
    up.
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
- en: 18\. A program without a loop and a structured variable isn't worth writing.
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
- en: 19\. A language that doesn't affect the way you think about programming, is
    not worth knowing.
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
- en: '20\. Wherever there is modularity there is the potential for misunderstanding:
    Hiding information implies a need to check communication.'
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
- en: 21\. Optimization hinders evolution.
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
- en: 22\. A good system can't have a weak command language.
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
- en: 23\. To understand a program you must become both the machine and the program.
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
- en: 24\. Perhaps if we wrote programs from childhood on, as adults we'd be able
    to read them.
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
- en: 25\. One can only display complex information in the mind. Like seeing, movement
    or flow or alteration of view is more important than the static picture, no matter
    how lovely.
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
- en: 26\. There will always be things we wish to say in our programs that in all
    known languages can only be said poorly.
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
- en: 27\. Once you understand how to write a program get someone else to write it.
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
- en: 28\. Around computers it is difficult to find the correct unit of time to measure
    progress. Some cathedrals took a century to complete. Can you imagine the grandeur
    and scope of a program that would take as long?
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
- en: 29\. For systems, the analogue of a face-lift is to add to the control graph
    an edge that creates a cycle, not just an additional node.
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
- en: 30\. In programming, everything we do is a special case of something more general
    -- and often we know it too quickly.
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
- en: 31\. Simplicity does not precede complexity, but follows it.
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
- en: 32\. Programmers are not to be measured by their ingenuity and their logic but
    by the completeness of their case analysis.
  id: totrans-split-40
  prefs: []
  type: TYPE_NORMAL
- en: 33\. The eleventh commandment was "Thou Shalt Compute" or "Thou Shalt Not Compute"
    - I forget which.
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
- en: 34\. The string is a stark data structure and everywhere it is passed there
    is much duplication of process. It is a perfect vehicle for hiding information.
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
- en: '35\. Everyone can be taught to sculpt: Michelangelo would have had to be taught
    not to. So it is with great programmers.'
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
- en: 36\. The use of a program to prove the 4-color theorem will not change mathematics
    - it merely demonstrates that the theorem, a challenge for a century, is probably
    not important to mathematics.
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
- en: 37\. The most important computer is the one that rages in our skulls and ever
    seeks that satisfactory external emulator. The standarization of real computers
    would be a disaster - and so it probably won't happen.
  id: totrans-split-45
  prefs: []
  type: TYPE_NORMAL
- en: 38\. Structured Programming supports the law of the excluded middle.
  id: totrans-split-46
  prefs: []
  type: TYPE_NORMAL
- en: '39\. Re graphics: A picture is worth 10K words - but only those to describe
    the picture. Hardly any sets of 10K words can be adequately described with pictures.'
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
- en: 40\. There are two ways to write error-free programs; only the third one works.
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
- en: 41\. Some programming languages manage to absorb change, but withstand progress.
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
- en: 42\. You can measure a programmer's perspective by noting his attitude on the
    continuing vitality of FORTRAN.
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
- en: 43\. In software systems, it is often the early bird that makes the worm.
  id: totrans-split-51
  prefs: []
  type: TYPE_NORMAL
- en: 44.Sometimes I think the only universal in the computing field is the fetch-execute
    cycle.
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
- en: 45\. The goal of computation is the emulation of our synthetic abilities, not
    the understanding of our analytic ones.
  id: totrans-split-53
  prefs: []
  type: TYPE_NORMAL
- en: 46\. Like punning, programming is a play on words.
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
- en: 47\. As Will Rogers would have said, "There is no such thing as a free variable."
  id: totrans-split-55
  prefs: []
  type: TYPE_NORMAL
- en: 48\. The best book on programming for the layman is "Alice in Wonderland"; but
    that's because it's the best book on anything for the layman.
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
- en: '49\. Giving up on assembly language was the apple in our Garden of Eden: Languages
    whose use squanders machine cycles are sinful. The LISP machine now permits LISP
    programmers to abandon bra and fig-leaf.'
  id: totrans-split-57
  prefs: []
  type: TYPE_NORMAL
- en: 50\. When we understand knowledge-based systems, it will be as before -- except
    our fingertips will have been singed.
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
- en: 51\. Bringing computers into the home won't change either one, but may revitalize
    the corner saloon.
  id: totrans-split-59
  prefs: []
  type: TYPE_NORMAL
- en: 52\. Systems have sub-systems and sub-systems have sub- systems and so on ad
    infinitum - which is why we're always starting over.
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
- en: 53\. So many good ideas are never heard from again once they embark in a voyage
    on the semantic gulf.
  id: totrans-split-61
  prefs: []
  type: TYPE_NORMAL
- en: 54\. Beware of the Turing tar-pit in which everything is possible but nothing
    of interest is easy.
  id: totrans-split-62
  prefs: []
  type: TYPE_NORMAL
- en: 55\. A LISP programmer knows the value of everything, but the cost of nothing.
  id: totrans-split-63
  prefs: []
  type: TYPE_NORMAL
- en: 56\. Software is under a constant tension. Being symbolic it is arbitrarily
    perfectible; but also it is arbitrarily changeable.
  id: totrans-split-64
  prefs: []
  type: TYPE_NORMAL
- en: 57\. It is easier to change the specification to fit the program than vice versa.
  id: totrans-split-65
  prefs: []
  type: TYPE_NORMAL
- en: 58\. Fools ignore complexity. Pragmatists suffer it. Some can avoid it. Geniuses
    remove it.
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
- en: 59\. In English every word can be verbed. Would that it were so in our programming
    languages.
  id: totrans-split-67
  prefs: []
  type: TYPE_NORMAL
- en: 60\. In seeking the unattainable, simplicity only gets in the way.
  id: totrans-split-68
  prefs: []
  type: TYPE_NORMAL
- en: 61\. In programming, as in everything else, to be in error is to be reborn.
  id: totrans-split-69
  prefs: []
  type: TYPE_NORMAL
- en: 62\. In computing, invariants are ephemeral.
  id: totrans-split-70
  prefs: []
  type: TYPE_NORMAL
- en: 63\. When we write programs that "learn", it turns out that we do and they don't.
  id: totrans-split-71
  prefs: []
  type: TYPE_NORMAL
- en: '64\. Often it is the means that justify the ends: Goals advance technique and
    technique survives even when goal structures crumble.'
  id: totrans-split-72
  prefs: []
  type: TYPE_NORMAL
- en: '65\. Make no mistake about it: Computers process numbers - not symbols. We
    measure our understanding (and control) by the extent to which we can arithmetize
    an activity.'
  id: totrans-split-73
  prefs: []
  type: TYPE_NORMAL
- en: 66\. Making something variable is easy. Controlling duration of constancy is
    the trick.
  id: totrans-split-74
  prefs: []
  type: TYPE_NORMAL
- en: 67\. Think of all the psychic energy expended in seeking a fundamental distinction
    between "algorithm" and "program".
  id: totrans-split-75
  prefs: []
  type: TYPE_NORMAL
- en: 68\. If we believe in data structures, we must believe in independent (hence
    simultaneous) processing. For why else would we collect items within a structure?
    Why do we tolerate languages that give us the one without the other?
  id: totrans-split-76
  prefs: []
  type: TYPE_NORMAL
- en: 69\. In a 5 year period we get one superb programming language. Only we can't
    control when the 5 year period will be.
  id: totrans-split-77
  prefs: []
  type: TYPE_NORMAL
- en: 70\. Over the centuries the Indians developed sign language for communicating
    phenomena of interest. Programmers from different tribes (FORTRAN, LISP, ALGOL,
    SNOBOL, etc.) could use one that doesn't require them to carry a blackboard on
    their ponies.
  id: totrans-split-78
  prefs: []
  type: TYPE_NORMAL
- en: '71\. Documentation is like term insurance: It satisfies because almost no one
    who subscribes to it depends on its benefits.'
  id: totrans-split-79
  prefs: []
  type: TYPE_NORMAL
- en: 72\. An adequate bootstrap is a contradiction in terms.
  id: totrans-split-80
  prefs: []
  type: TYPE_NORMAL
- en: '73\. It is not a language''s weakness but its strengths that control the gradient
    of its change: Alas, a language never escapes its embryonic sac.'
  id: totrans-split-81
  prefs: []
  type: TYPE_NORMAL
- en: '74\. Is it possible that software is not like anything else, that it is meant
    to be discarded: that the whole point is to see it as a soap bubble?'
  id: totrans-split-82
  prefs: []
  type: TYPE_NORMAL
- en: '75\. Because of its vitality, the computing field is always in desperate need
    of new cliches: Banality soothes our nerves.'
  id: totrans-split-83
  prefs: []
  type: TYPE_NORMAL
- en: 76\. It is the user who should parameterize procedures, not their creators.
  id: totrans-split-84
  prefs: []
  type: TYPE_NORMAL
- en: '77\. The cybernetic exchange between man, computer and algorithm is like a
    game of musical chairs: The frantic search for balance always leaves one of the
    three standing ill at ease.'
  id: totrans-split-85
  prefs: []
  type: TYPE_NORMAL
- en: 78\. If your computer speaks English, it was probably made in Japan.
  id: totrans-split-86
  prefs: []
  type: TYPE_NORMAL
- en: 79\. A year spent in artificial intelligence is enough to make one believe in
    God.
  id: totrans-split-87
  prefs: []
  type: TYPE_NORMAL
- en: 80\. Prolonged contact with the computer turns mathematicians into clerks and
    vice versa.
  id: totrans-split-88
  prefs: []
  type: TYPE_NORMAL
- en: 81\. In computing, turning the obvious into the useful is a living definition
    of the word "frustration".
  id: totrans-split-89
  prefs: []
  type: TYPE_NORMAL
- en: '82\. We are on the verge: Today our program proved Fermat''s next-to-last theorem.'
  id: totrans-split-90
  prefs: []
  type: TYPE_NORMAL
- en: 83\. What is the difference between a Turing machine and the modern computer?
    It's the same as that between Hillary's ascent of Everest and the establishment
    of a Hilton hotel on its peak.
  id: totrans-split-91
  prefs: []
  type: TYPE_NORMAL
- en: '84\. Motto for a research laboratory: What we work on today, others will first
    think of tomorrow.'
  id: totrans-split-92
  prefs: []
  type: TYPE_NORMAL
- en: 85\. Though the Chinese should adore APL, it's FORTRAN they put their money
    on.
  id: totrans-split-93
  prefs: []
  type: TYPE_NORMAL
- en: 86\. We kid ourselves if we think that the ratio of procedure to data in an
    active data-base system can be made arbitrarily small or even kept small.
  id: totrans-split-94
  prefs: []
  type: TYPE_NORMAL
- en: 87\. We have the mini and the micro computer. In what semantic niche would the
    pico computer fall?
  id: totrans-split-95
  prefs: []
  type: TYPE_NORMAL
- en: 88\. It is not the computer's fault that Maxwell's equations are not adequate
    to design the electric motor.
  id: totrans-split-96
  prefs: []
  type: TYPE_NORMAL
- en: 89\. One does not learn computing by using a hand calculator, but one can forget
    arithmetic.
  id: totrans-split-97
  prefs: []
  type: TYPE_NORMAL
- en: 90\. Computation has made the tree flower.
  id: totrans-split-98
  prefs: []
  type: TYPE_NORMAL
- en: 91\. The computer reminds one of Lon Chaney -- it is the machine of a thousand
    faces.
  id: totrans-split-99
  prefs: []
  type: TYPE_NORMAL
- en: '92\. The computer is the ultimate polluter: its feces are indistinguish- able
    from the food it produces.'
  id: totrans-split-100
  prefs: []
  type: TYPE_NORMAL
- en: 93\. When someone says "I want a programming language in which I need only say
    what I wish done," give him a lollipop.
  id: totrans-split-101
  prefs: []
  type: TYPE_NORMAL
- en: '94\. Interfaces keep things tidy, but don''t accelerate growth: Functions do.'
  id: totrans-split-102
  prefs: []
  type: TYPE_NORMAL
- en: 95\. Don't have good ideas if you aren't willing to be responsible for them.
  id: totrans-split-103
  prefs: []
  type: TYPE_NORMAL
- en: 96\. Computers don't introduce order anywhere as much as they expose opportunities.
  id: totrans-split-104
  prefs: []
  type: TYPE_NORMAL
- en: 97\. When a professor insists computer science is X but not Y, have compassion
    for his graduate students.
  id: totrans-split-105
  prefs: []
  type: TYPE_NORMAL
- en: 98\. In computing, the mean time to failure keeps getting shorter.
  id: totrans-split-106
  prefs: []
  type: TYPE_NORMAL
- en: '99\. In man-machine symbiosis, it is man who must adjust: The machines can''t.'
  id: totrans-split-107
  prefs: []
  type: TYPE_NORMAL
- en: 100\. We will never run out of things to program as long as there is a single
    program around.
  id: totrans-split-108
  prefs: []
  type: TYPE_NORMAL
- en: '101\. Dealing with failure is easy: Work hard to improve. Success is also easy
    to handle: You''ve solved the wrong problem. Work hard to improve.'
  id: totrans-split-109
  prefs: []
  type: TYPE_NORMAL
- en: 102\. One can't proceed from the informal to the formal by formal means.
  id: totrans-split-110
  prefs: []
  type: TYPE_NORMAL
- en: 103\. Purely applicative languages are poorly applicable.
  id: totrans-split-111
  prefs: []
  type: TYPE_NORMAL
- en: 104\. The proof of a system's value is its existence.
  id: totrans-split-112
  prefs: []
  type: TYPE_NORMAL
- en: 105\. You can't communicate complexity, only an awareness of it.
  id: totrans-split-113
  prefs: []
  type: TYPE_NORMAL
- en: 106\. It's difficult to extract sense from strings, but they're the only communication
    coin we can count on.
  id: totrans-split-114
  prefs: []
  type: TYPE_NORMAL
- en: '107\. The debate rages on: is PL/I Bachtrian or Dromedary?'
  id: totrans-split-115
  prefs: []
  type: TYPE_NORMAL
- en: 108\. Whenever two programmers meet to criticize their programs, both are silent.
  id: totrans-split-116
  prefs: []
  type: TYPE_NORMAL
- en: 109\. Think of it! With VLSI we can pack 100 ENIACS in 1 sq. cm.
  id: totrans-split-117
  prefs: []
  type: TYPE_NORMAL
- en: 110\. Editing is a rewording activity.
  id: totrans-split-118
  prefs: []
  type: TYPE_NORMAL
- en: 111\. Why did the Roman Empire collapse? What is Latin for office automation?
  id: totrans-split-119
  prefs: []
  type: TYPE_NORMAL
- en: 112\. Computer Science is embarrassed by the computer.
  id: totrans-split-120
  prefs: []
  type: TYPE_NORMAL
- en: 113\. The only constructive theory connecting neuroscience and psychology will
    arise from the study of software.
  id: totrans-split-121
  prefs: []
  type: TYPE_NORMAL
- en: 114\. Within a computer natural language is unnatural.
  id: totrans-split-122
  prefs: []
  type: TYPE_NORMAL
- en: 115\. Most people find the concept of programming obvious, but the doing impossible.
  id: totrans-split-123
  prefs: []
  type: TYPE_NORMAL
- en: 116\. You think you know when you can learn, are more sure when you can write,
    even more when you can teach, but certain when you can program.
  id: totrans-split-124
  prefs: []
  type: TYPE_NORMAL
- en: 117\. It goes against the grain of modern education to teach children to program.
    What fun is there in making plans, acquiring discipline in organizing thoughts,
    devoting attention to detail and learning to be self-critical?
  id: totrans-split-125
  prefs: []
  type: TYPE_NORMAL
- en: 118\. If you can imagine a society in which the computer- robot is the only
    menial, you can imagine anything.
  id: totrans-split-126
  prefs: []
  type: TYPE_NORMAL
- en: 119\. Programming is an unnatural act.
  id: totrans-split-127
  prefs: []
  type: TYPE_NORMAL
- en: 120\. Adapting old programs to fit new machines usually means adapting new machines
    to behave like old ones.
  id: totrans-split-128
  prefs: []
  type: TYPE_NORMAL
