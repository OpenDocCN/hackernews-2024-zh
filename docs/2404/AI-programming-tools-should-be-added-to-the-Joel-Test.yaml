- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 13:24:44'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 13:24:44'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: AI programming tools should be added to the Joel Test
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AI 编程工具应该被添加到 Joel 测试中。
- en: 来源：[https://blog.waleson.com/2024/04/ai-programming-tools-should-be-added-to.html](https://blog.waleson.com/2024/04/ai-programming-tools-should-be-added-to.html)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://blog.waleson.com/2024/04/ai-programming-tools-should-be-added-to.html](https://blog.waleson.com/2024/04/ai-programming-tools-should-be-added-to.html)
- en: 'Here''s a wake-up call to all CTOs: AI programming tools are getting freaking
    amazing and if you don''t allow your teams to use them somehow, it will bite you
    in the ass in a couple of years. You will be slower and you will lose your best
    people.'
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 对所有首席技术官来说，这是一个警钟：AI 编程工具变得非常惊人，如果你不允许你的团队以某种方式使用它们，几年后它会对你产生负面影响。你会变慢，失去最好的人才。
- en: '[The infamous Joel Test](https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/)
    is a list from the year 2000 of 12 things all great software companies do. Since
    then most companies have implemented Git and CI/CD, checking of three items, so
    we have some space left in the 2024 update ;) I believe "Do you allow your developers
    to use AI assisted development environments?" is a necessary addition.'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[臭名昭著的 Joel 测试](https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/)
    是一份来自 2000 年的关于所有优秀软件公司应该做的 12 件事情的清单。自那时以来，大多数公司已经实施了 Git 和 CI/CD，检查了其中的三项，所以在
    2024 年更新中我们还有一些空间 ;) 我相信“你是否允许你的开发者使用 AI 辅助开发环境？”是一个必要的补充。'
- en: I get that you don't want your source code to end up on some OpenAI / Microsoft
    / Github server somewhere, sure, but find a way to use your own models or learn
    to live with it. Note that this is often not the same as "#9 - Do you use the
    best tools money can buy?" as blocking AI tools is about data security, not money.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我明白你不希望你的源代码最终出现在 OpenAI / Microsoft / Github 的服务器上，当然，但找到一种方法使用你自己的模型或学会适应它。请注意，这通常不同于“#9
    - 你是否使用最好的工具来购买？”因为阻止 AI 工具涉及数据安全，而不是金钱。
- en: So why do I think developers need AI programming tools? I'm a seasoned developer
    with about 15 years of serious programming experience. In the last 10 years I've
    done less of it, as I was busy with Product Manager / CTO things. I'm now starting
    my own company, so I'm programming a lot, and I'm exploring whether some technologies
    really have a 2-10x impact on my work ([supabase](https://supabase.com/) does,
    shout-out to you guys!). I wanted to give AI assistants a try, so I spun up Github
    Copilot, [plandex.ai](http://plandex.ai) and [aider.chat](http://aider.chat) .
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 那么为什么我认为开发者需要 AI 编程工具呢？我是一名有着大约 15 年严肃编程经验的资深开发者。在过去的 10 年里，由于忙于产品经理和首席技术官的工作，我的编程工作相对减少了。现在我正在创办自己的公司，所以我正在大量编程，并且在探索某些技术是否真的对我的工作有
    2-10 倍的影响（[supabase](https://supabase.com/) 确实有，向你们致敬！）。我想试试 AI 助理，所以我启动了 Github
    Copilot，[plandex.ai](http://plandex.ai) 和 [aider.chat](http://aider.chat) 。
- en: 'There''s plenty of things wrong with these tools: they are often wrong, are
    slow and the GPT4 ones are really expensive. I have many opinions on how AI programming
    tools should work instead of the brute-force LLMs we use today, but I''ll reserve
    those for another post. Because even in this early phase I can say that **I will
    never go back to not using them**. And this is just the start, it will only get
    better from here. Programming with Copilot is different from normal programming,
    a bit like singing a duet I guess. You have to adapt to having a partner, give
    it the right cues, move out of the way when it''s their turn etc. But it takes
    the boring repetitive tasks out of programming, and I love it. I feel less tired,
    can do better work, and feel like I''m often going 2x faster.'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工具有很多问题：它们经常出错，速度慢，而且 GPT-4 的工具真的很昂贵。关于 AI 编程工具应如何工作，我有很多看法，而不是我们今天使用的蛮力语言模型，但我会留待另一篇文章。因为即使在这个早期阶段，我可以说**我永远不会回到不使用它们的时候**。而且这只是开始，从这里只会变得更好。使用
    Copilot 进行编程与普通编程不同，有点像合唱一样。你必须适应有一个合作伙伴，给它正确的提示，在它轮到的时候让它出场等等。但它能够减少编程中的乏味重复任务，我喜欢这种感觉。我感觉不那么累，可以做更好的工作，而且我觉得自己经常以两倍的速度前进。
- en: So if you're an engineer, find a place that does not block you from using AI
    tools. Ask it during your interview process!
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果你是一名工程师，请找一个不会阻止你使用 AI 工具的地方。在面试过程中问问这个问题！
- en: 'If you''re a CTO: find a way to get your engineers to use them, or make one.'
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是一名首席技术官：找到一种方法让你的工程师使用它们，或者自己创造一种方法。
- en: And if you're Joel Spolsky, please release an update of the Joel Test, would
    love to know what you think in 2024 ;)
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是 Joel Spolsky，请更新 Joel 测试，我们很想知道你在 2024 年的想法 ;)
- en: '[Discuss on HN](https://news.ycombinator.com/item?id=40112544)'
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 HN 上讨论](https://news.ycombinator.com/item?id=40112544)'
