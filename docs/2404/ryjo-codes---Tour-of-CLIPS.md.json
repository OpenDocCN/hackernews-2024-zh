["```\n; Welcome to the tutorial! This is known as a \"comment.\"\n; It is meant to help developers\n; understand a particular line of code better.\n;\n; Click the (batch*) button to run this code sample.\n; You will see CLIPS code written in this area of the webpage\n; throughout this tour.\n;\n; This is a WASM compilation of CLIPS run completely in your browser;\n; no server involved!\n(println \"Hello, world\")\n```", "```\n(print Hello)\n(println \", World!\")\n(printout t \"Welcome to this tour of CLIPS\" crlf)\n(format t \"I hope that you have %s!%n\" fun)\n```", "```\n(defrule will-run-no-matter-what\n      =>\n      (println \"Hello from a rule, world!\"))\n(run)\n```", "```\n(assert (name ryjo))\n(println \"The current facts: \")\n(facts)\n(retract 1)\n(println \"After retracting: \")\n(facts)\n```", "```\n(defrule greet\n      (name ?name)\n      =>\n      (println \"Hello \" ?name \"!\"))\n(assert (name ryjo))\n(run)\n```", "```\n(clear)\n\n(assert (name Zach) (name Zethus))\n\n(defrule non-ryjos-only\n  (name ~ryjo)\n  =>\n  (println \"Hello, not ryjo!\"))\n\n(run)\n```", "```\n(clear)\n\n(assert\n  (name Gabe)\n  (name ryjo)\n  (name John))\n\n(defrule non-ryjos-only\n  (name ?n&~ryjo)\n  =>\n  (println \"Hello, \" ?n \"!\"))\n\n(defrule ryjo\n  (name ryjo)\n  =>\n  (println \"Oh hey there\"))\n\n(run)\n```", "```\n(clear)\n\n(assert\n  (name Gabe)\n  (name ryjo)\n  (name John)\n  (name Zach)\n  (name Zethus)\n  (name Peter))\n\n(defrule ors\n  (name ?name&Gabe|Peter)\n  =>\n  (println \"Greetings, \" ?name))\n\n(defrule and-nots\n  (name ?name&~ryjo&~Zach&~Zethus)\n  =>\n  (println \"Hi there, \" ?name))\n\n(run)\n```", "```\n(clear)\n\n(defrule allow-entry-to-bar\n  (name ?person)\n  (age ?person ?a&:(>= ?a 21))\n  =>\n  (println ?person \" is over 21 years old and can enter the bar!\"))\n\n(defrule no-entry-to-bar\n  (name ?person)\n  (age ?person ?a&:(< ?a 21))\n  =>\n  (println ?person \" is not allowed in (under 21).\"))\n\n(assert\n  (name ryjo) (age ryjo 32)\n  (name someone) (age someone 20))\n\n(run)\n```", "```\n(clear)\n\n(defrule allow-entry-to-bar\n  (name ?person)\n  (age ?person ?a)\n  (test (>= ?a 21))\n  =>\n  (println ?person \" is over 21 years old and can enter the bar!\"))\n\n(defrule no-entry-to-bar\n  (name ?person)\n  (age ?person ?a)\n  (test (< ?a 21))\n  =>\n  (println ?person \" is not allowed in (under 21).\"))\n\n(assert\n  (name ryjo) (age ryjo 32)\n  (name someone) (age someone 20))\n\n(run)\n```", "```\n(clear)\n\n(assert\n  (name ryjo) (age ryjo 32)\n  (name someone) (age someone 20)\n  (name another))\n\n(defrule accept-roster\n  (forall (name ?n) (age ?n ?))\n  =>\n  (println \"Roster has been accepted\"))\n\n(defrule decline-roster\n  (not (forall (name ?n) (age ?n ?)))\n  =>\n  (println \"Roster has been declined\"))\n\n(run)\n```", "```\n(clear)\n\n(defrule any-age-reported\n  (exists (age ? ?))\n  =>\n  (println \"Users have begun to report their age\"))\n\n(defrule no-ages-reported\n  (not (age ? ?))\n  =>\n  (println \"No user has reported their age yet...\"))\n\n(defrule reported-age\n  (name ?n)\n  (age ?n ?a)\n  =>\n  (format t \"%s has reported their age: %d%n\" ?n ?a))\n\n(defrule has-not-reported-age\n  (name ?n)\n  (not (age ?n ?))\n  =>\n  (println ?n \" has not yet reported their age\"))\n\n(defrule all-ages-reported\n  (forall (name ?n) (age ?n ?))\n  =>\n  (println \"Everyone in the system has reported their age\"))\n\n(assert\n  (name ryjo)\n  (name someone)\n  (name another))\n\n(println \"First run results:\")\n(println \"------------------\")\n(run)\n(println \" \")\n\n(assert (age ryjo 32))\n\n(println \"Second run results:\")\n(println \"-------------------\")\n(run)\n(println \" \")\n\n(assert (age someone 20)\n        (age another 52))\n\n(println \"Third run results:\")\n(println \"------------------\")\n(run)\n```", "```\n(clear)\n\n; replace (readline) with (read) and note the differences\n(println \"You entered: \" (readline))\n\n(run)\n```", "```\n(clear)\n\n(defrule get-word-from-user\n  ;uncommenting this line will cause a prompt to popup\n  ;until you enter \"secret\" in the textbox ;)\n  ;(not (word ?))\n  =>\n  (print \"Enter your word: \")\n  (bind ?word (read))\n  (println ?word)\n  (assert (word ?word)))\n\n(defrule user-said-secret\n  (word secret)\n  =>\n  (println \"You said the secret word! Great job\"))\n\n(defrule user-did-not-say-secret\n  ?f \n  (retract ?f)\n  (println \"Try again...\"))\n\n(run)\n```", "```\n(clear)\n\n(defrule get-words-from-user\n  =>\n  (assert (words (readline))))\n\n(defrule catcher\n  (words ?words)\n  =>\n  (println \"You said: \" ?words)\n  (assert (exploded-words (explode$ ?words))))\n\n(defrule counter\n  (exploded-words $?words)\n  =>\n  (println \"That's \" (length$ ?words) \" words total.\"))\n\n(defrule silence\n  (exploded-words)\n  =>\n  (println \"Ah, the strong silent type...\"))\n\n(defrule first-word-one\n  (exploded-words one $?words)\n  =>\n  (println \"Your first word was 'one'\"))\n\n(defrule last-word-last\n  (exploded-words $?words last)\n  =>\n  (println \"Your last word was 'last'\"))\n\n(defrule anywhere\n  (exploded-words $? anywhere $?)\n  =>\n  (println \"At some point, you typed 'anywhere'\"))\n\n(run)\n```", "```\n(clear)\n\n(defrule third\n  (declare (salience 0))\n  ?f \n  (println \"Last!\")\n  (retract ?f))\n\n(defrule never-runs\n  (declare (salience -1))\n  (my-fact)\n  =>\n  (println \":(\"))\n\n(defrule first\n  (declare (salience 2))\n  (my-fact)\n  =>\n  (println \"First!\"))\n\n(defrule second\n  (declare (salience 1))\n  (my-fact)\n  =>\n  (println \"Second!\"))\n\n(assert (my-fact))\n\n(run)\n```", "```\n(clear)\n\n(deffunction say (?words)\n  (println \"You say, \\\"\" ?words \".\\\"\"))\n\n(say \"Hello, world\")\n\n(deffunction shout (?words)\n  (println \"\\\"\" ?words \"!\\\" you shout.\"))\n\n(shout \"Hello, world\")'\n\n(deffunction fahrenheit-to-celsius (?f)\n  (* (- ?f 32) (/ 5 9) ))\n\n(println \"50°F is \" (fahrenheit-to-celsius 50) \"°C\")\n```", "```\n(clear)\n\n(deftemplate person\n  (slot name)\n  (slot greeting (default Hello)))\n\n(assert\n  (person (name Greg))\n  (person (name Sally) (greeting Hi))\n  (person (name Sam) (greeting Howdy)))\n\n(deffunction greet (?name1 ?name2 ?greeting)\n  (println ?name1 \" says \\\"\" ?greeting \"\\\" to \" ?name2 \".\"))\n\n(defrule people-greet-each-other\n  (person (name ?name1) (greeting ?greeting1))\n  (person (name ?name2&~?name1))\n  =>\n  (greet ?name1 ?name2 ?greeting1))\n\n(run)\n```", "```\n(clear)\n\n(deffacts fruits\n  (fruit apple 1)\n  (fruit banana 1)\n  (fruit orange 1))\n\n(deftemplate person\n  (slot name)\n  (slot favorite-fruit))\n\n(deffacts people\n  (person (name Tom) (favorite-fruit apple))\n  (person (name Jenna) (favorite-fruit orange))\n  (person (name Rian) (favorite-fruit apple)))\n\n(defrule people-eat-favorite-fruits\n  (person (name ?name) (favorite-fruit ?fruit))\n  ?f \n  (println ?name \" eats \" ?fruit)\n  (retract ?f))\n\n(defrule persons-favorite-fruit-missing\n  (person (name ?name) (favorite-fruit ?fruit))\n  (not (fruit ?fruit ?))\n  =>\n  (format t \"There's no more of %s's favorite fruit %s!%n\" ?name ?fruit))\n\n(reset)\n\n(assert (fruit apple 2) (fruit orange 2))\n\n(println \"Run 1:\")\n(println \"------\")\n(run)\n\n(println \" \")\n(reset)\n\n(println \"Run 2:\")\n(println \"------\")\n(run)\n```", "```\n(clear)\n(watch statistics)\n\n(defrule fibonacci\n  ?fact  ?i 1))\n  =>\n  (print ?fib \" \")\n  (retract ?fact)\n  (assert (fib (+ ?fib ?lastfib) ?fib (- ?i 1))))\n\n(defrule last-fibonacci-number\n  ?fact \n  (println ?fib)\n  (retract ?fact))\n\n(assert (fib 1 0 10))\n\n(run)\n(unwatch statistics)\n```", "```\n(clear)\n(watch activations)\n\n(defrule b-exists-and-a-less-than-1\n   (b ?b)\n   (a ?a&:(< ?a 1))\n   =>\n   (println \"there is b = \" ?b \", AND a \" ?a \" is less than 1\"))\n\n(defrule a-less-than-1\n   (a ?a&:(< ?a 1))\n   =>\n   (println \"a \" ?a \" is less than 1\"))\n\n(println \"  Step 1  \")\n(println \"==========\")\n(println \"--- assert\")\n(assert (a 2))\n(println \"------ run\")\n(run)\n(println \" \")\n\n(println \"  Step 2  \")\n(println \"==========\")\n(println \"--- assert\")\n(assert (a 0))\n(println \"------ run\")\n(run)\n(println \" \")\n\n(println \"  Step 3  \")\n(println \"==========\")\n(println \"--- assert\")\n(assert (b foo) (a -1) (a 3))\n(println \"------ run\")\n(run)\n(unwatch activations)\n```", "```\n(clear)\n(watch deffunctions)\n\n(deffunction less-than-1 (?a)\n   (println \"calculating whether \" ?a \" is less than 1...\")\n   (< ?a 1))\n\n(defrule b-exists-and-a-less-than-1\n   (b ?b)\n   (a ?a&:(less-than-1 ?a))\n   =>\n   (println \"there is b = \" ?b \", AND a \" ?a \" is less than 1\"))\n\n(defrule a-less-than-1\n   (a ?a&:(less-than-1 ?a))\n   =>\n   (println \"a \" ?a \" is less than 1\"))\n\n(println \"  Step 1  \")\n(println \"==========\")\n(println \"--- assert\")\n(assert (a 2))\n(println \"------ run\")\n(run)\n(println \" \")\n\n(println \"  Step 2  \")\n(println \"==========\")\n(println \"--- assert\")\n(assert (a 0))\n(println \"------ run\")\n(run)\n(println \" \")\n\n(println \"  Step 3  \")\n(println \"==========\")\n(println \"--- assert\")\n(assert (b foo) (a -1) (a 3))\n(println \"------ run\")\n(run)\n(unwatch deffunctions)\n```", "```\n(clear)\n(run)\n```"]