["```\ndef repdigit?(n) = n.digits.uniq.size == 1 \n```", "```\ndef repdigit?(n) = n % 1111 == 0 \n```", "```\ndef kap(n)\n  d = descending_digits(n) - ascending_digits(n)\n  n == d ? n : kap(d)\nend \n```", "```\ndef kap(n)\n  7.times do\n    n = descending_digits(n) - ascending_digits(n)\n  end\n  n\nend \n```", "```\ndef ascending_digits(n) = n.digits.sort.join.to_i \n```", "```\n$ irb irb(main):001>  def ascending_digits(n) = n.digits.sort.join.to_i\n=> :ascending_digits\nirb(main):002>  ascending_digits(3713)\n=> 1337 \n```", "```\ndef descending_digits(n) = n.digits.sort.reverse.join.to_i \n```", "```\nirb(main):007>  descending_digits(1988)\n=> 9881\nirb(main):008>  kap(1988)\n=> 6174 \n```", "```\nirb(main):009>  kap(1000)\n=> 0 \n```", "```\ndef descending_digits(n) = n.digits.sort.reverse.join.ljust(4, '0').to_i \n```", "```\nirb(main):011> kap(1988)\n=> 6174\nirb(main):012> kap(1000)\n=> 6174 \n```", "```\n1.upto(9999) do |n|\n  repdigit?(n) or kap(n) == 6174 or\n    fail \"#{n} is not a repdigit nor does it converge to 6174\"\nend \n```", "```\ndef kap(n)\n  d = descending_digits(n) - ascending_digits(n)\n  n == d ? n : kap(d)\nend\n\ndef ascending_digits(n) = n.digits.sort.join.to_i\ndef descending_digits(n) = n.digits.sort.reverse.join.ljust(4, '0').to_i\ndef repdigit?(n) = n % 1111 == 0\n\n1.upto(9999) do |n|\n  repdigit?(n) or kap(n) == 6174 or\n    fail \"#{n} is not a repdigit nor does it converge to 6174\"\nend \n```"]