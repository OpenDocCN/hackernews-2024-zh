- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 13:32:07'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: More on x86 - by Babbage - The Chip Letter
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://thechipletter.substack.com/p/more-on-x86](https://thechipletter.substack.com/p/more-on-x86)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*A quick programming announcement. This is the first of two shorter posts this
    week. This is a follow-on from last week’s [The Paradox of x86](https://thechipletter.substack.com/p/the-paradox-of-x86).
    The next will look at a historic moment in the development of modern semiconductors.*'
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
- en: Last week’s post on x86 was well-timed as it coincided with
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
- en: writing about whether the x86 Instruction Set Architecture does or doesn’t ‘need
    to die’.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: Casey’s post followed his discussion on the topic with Twitcher [ThePrimegen](https://www.twitch.tv/theprimeagen),
    recorded for posterity on YouTube.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
- en: The whole discussion had been prompted by two recent articles. The first on
    Hackaday [Why x86 Needs To Die](https://hackaday.com/2024/03/21/why-x86-needs-to-die/)
    in turn prompted a response from the Chips and Cheese blog entitled [Why x86 Doesn’t
    Need To Die](https://chipsandcheese.com/2024/03/27/why-x86-doesnt-need-to-die/).
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
- en: 'Casey is on the ‘doesn’t need to die ’ side of the argument and makes a range
    of very valid points, pretty much all of which I agree with. He summarises his
    position as follows:'
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
- en: That said, on the measure, I would disagree that x86 “needs to die”. The reason
    I say that is because x86 (now x64) has done a remarkable job stabilizing software
    development over the past forty years. Sure, you can call that “legacy” or a “maintenance
    problem” if you want to look at the downsides. But you could also call it a *remarkably
    flexible instruction set* if you’d like to look at the upsides.
  id: totrans-split-13
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Casey mentions Intel’s APX proposals for ‘spring cleaning’ the x86 architecture,
    which we discussed briefly when they were announced back in July last year.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
- en: 'Key proposals in APX include:'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
- en: Doubling the number of general purpose registers from 16 to 32;
  id: totrans-split-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New three operand instructions (e.g. adding ability to subtract register1 from
    register2, and place the result in register3);
  id: totrans-split-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New instructions to PUSH / POP two general purpose registers at once;
  id: totrans-split-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New conditional load, store and compare instructions;
  id: totrans-split-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adds the option to suppress status flag writes for common instructions;
  id: totrans-split-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New 64-bit absolute jump instruction.
  id: totrans-split-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Casey highlights, in particular, the ability to suppress flag writes as a potential
    performance win for APX.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
- en: 'While very largely agreeing with Casey, I do think that there are other aspects
    to x86 that these discussions of the topic omit. In particular, the lock-in to
    two hardware vendors has been highly problematic, both for competition and for
    innovation. In the APX post, we asked the question:'
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
- en: Why didn't Intel / AMD do this a decade ago?
  id: totrans-split-24
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: x86-64, the 64-bit version of x86 was announced (by AMD) in 1999\. The first
    Intel x86-64 cores appeared in 2004\. When will the first APX cores appear? As
    far as I can tell Intel hasn’t told us yet, which must mean that it is 2025 at
    the earliest.
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: x86-64，即x86的64位版本，由AMD在1999年宣布。首批英特尔x86-64核心于2004年出现。第一批APX核心将何时出现？据我所知，英特尔尚未透露，这意味着最早要到2025年了。
- en: I don’t think it’s any coincidence that these improvements - which probably
    could have been introduced a decade ago - are appearing only when x86 faces a
    lot more competition. If we needed a demonstration of the problems of the x86
    ‘lock-in’ then this is it.
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为这些改进并非巧合，它们本应该在十年前就出现，但现在出现仅仅是因为x86面临了更多的竞争。如果我们需要一个展示x86“锁定”问题的示例，那么这就是它。
- en: In any event, I think calling, as some do, x86 a ‘legacy’ architecture is premature.
    Intel and AMD have proven that it can remain competitive and it will become more
    so with APX. As we’ve discussed before, x86 will be around for a long time - many
    decades at least - and will continue to be built at scale on leading-edge fabrication
    processes. It just won't be as dominant as it has been for the last couple of
    decades and that is surely healthy.
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，我认为有些人称x86为“遗留”架构还为时过早。英特尔和AMD已经证明它可以保持竞争力，并且在APX的推动下将变得更加竞争力。正如我们之前讨论过的那样，x86将会长期存在
    - 至少还有几十年，并且将继续在领先的制造工艺上大规模生产。它只是不再像过去几十年那样占主导地位，这无疑是健康的发展。
- en: '[Share](https://thechipletter.substack.com/p/more-on-x86?utm_source=substack&utm_medium=email&utm_content=share&action=share)'
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[分享](https://thechipletter.substack.com/p/more-on-x86?utm_source=substack&utm_medium=email&utm_content=share&action=share)'
- en: AMD Ryzen 5 3600(Zen 2 | Matisse | CCD) - Courtesy of Fritzchens Fritz
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: AMD Ryzen 5 3600（Zen 2 | Matisse | CCD）- 来自Fritzchens Fritz的照片
- en: I’m conscious of the fact that [The Paradox of x86](https://thechipletter.substack.com/p/the-paradox-of-x86)
    glossed over several interesting details. In particular, AMD’s role in the development
    of x86 and the potential challenge that ‘it’s not a moat if AMD is also making
    x86 designs.’
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我意识到[《x86的悖论》](https://thechipletter.substack.com/p/the-paradox-of-x86)在某些有趣的细节上进行了简化。特别是AMD在x86开发中的角色以及“如果AMD也在进行x86设计，则它不是一个护城河”的潜在挑战。
- en: Intel and AMD have been fierce competitors in the x86 CPU market for almost
    five decades now. If you’d like to know how it all started, then
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: 英特尔和AMD在x86 CPU市场上已经是激烈的竞争对手将近五十年了。如果你想了解一切是如何开始的，那么
- en: does his usual awesome job in the video below.
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的视频中，他像往常一样出色地完成了工作。
- en: 'Intel’s efforts to compete with AMD have sometimes spilled over into, what
    has been ruled to be, illegal and anti-competitive behavior. For example, the
    European Commission [fined](https://competitionlawblog.kluwercompetitionlaw.com/2024/02/06/what-fine-should-be-imposed-to-intel-for-the-so-called-naked-restrictions-after-the-annulation-of-the-part-of-the-decision-relating-to-loyalty-rebates/#:~:text=On%2022%20September%202023%2C%20the,decision%20of%2013%20May%202009.)
    Intel over a billion Euros in 2009 for:'
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: 英特尔为与AMD竞争而做出的努力有时会溢出成为被判定为非法和反竞争行为。例如，欧盟委员会在2009年对英特尔的“裸露限制”行为罚款超过10亿欧元：
- en: … anti-competitive practices implemented by Intel to the detriment of its competitor
    on the x86 CPU market, AMD, between October 2002 and December 2007\.
  id: totrans-split-34
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '...英特尔实施的反竞争做法，损害了其在x86 CPU市场上的竞争对手AMD，在2002年10月至2007年12月期间。'
- en: (Note that this fine was later overturned and replaced by a smaller fine last
    year.)
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
  zh: （请注意，这项罚款后来被推翻，并在去年换成了更小的罚款。）
- en: Given this fierce competition and Intel’s decades-long manufacturing lead over
    AMD, it’s perhaps remarkable that AMD survived at all.
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于这种激烈的竞争和英特尔几十年来在制造领域的领先优势，AMD竟能够生存下来可能是非常值得注意的。
- en: AMD’s achievement of a market cap greater than Intel’s ($236bn vs $145bn at
    the time of writing on 22/4/24) has been made possible by access to TSMC’s superior
    manufacturing. Even before that though, AMD has often proven to be a nimble and
    innovative competitor. The 64-bit version of x86 was, of course, an AMD creation
    - as AMD64 - whilst Intel pursued Itanium.
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在写作本文时，AMD的市值超过了英特尔的（2360亿美元对1450亿美元）。这一成就得益于TSMC卓越的制造能力。即使在此之前，AMD也经常证明自己是一个灵活而创新的竞争者。当然，x86的64位版本是AMD的创造
    - 称为AMD64 - 而英特尔则追求Itanium。
- en: On the ‘is it really a moat if AMD is also making x86 CPUs’ challenge, a moat
    is just a defensive barrier. In this case, one that protects both firms, just
    not from each other.
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
  zh: 对于‘如果AMD 也在制造x86 CPU，这还能称之为壕沟吗’的挑战，壕沟只是一种防御障碍。在这种情况下，这是一种保护两家公司的障碍，只是不互相保护。
- en: It’s arguable too that AMD’s presence as a maker of x86 CPUs has been good for
    Intel in several ways.
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
  zh: 有人认为AMD 作为x86 CPU制造商的存在在几个方面对英特尔都是有利的。
- en: Extending the physical moat analogy, AMD has plugged occasional gaps in the
    moat when Intel has been distracted with other things, with AMD64 being the most
    notable example.
  id: totrans-split-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 延伸到物理壕沟的类比，当英特尔因其他事务分心时，AMD 填补了壕沟的偶发性漏洞，其中AMD64 是最显著的例子。
- en: More recently, as Intel stumbled on 10nm, AMD has shown that x86 remains a competitive
    architecture, and possibly delayed some switches to Arm.
  id: totrans-split-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更近一步，随着英特尔在10纳米技术上的挫折，AMD 展示了x86 仍然是一种具有竞争力的架构，并可能延迟了一些向Arm 的转变。
- en: Perhaps more significantly, I suspect that competition from AMD has helped to
    keep Intel ‘match fit’, and reduce the complacency that might otherwise have seen
    the firm falter earlier.
  id: totrans-split-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 或许更重要的是，我怀疑AMD 的竞争促使英特尔保持了‘比赛状态’，减少了可能导致公司更早衰退的自满情绪。
- en: Finally, I think that there would have been a lot more antitrust interest in
    x86 both in the US and the EU without AMD’s presence in the market.
  id: totrans-split-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，我认为如果市场上没有AMD的存在，无论是在美国还是欧盟，对x86的反垄断关注都会更多。
- en: I suspect that Intel’s management believes this last point too. Perhaps then
    AMD’s survival shouldn't be such a surprise after all?!
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我怀疑英特尔的管理层也认同这一点。也许是因此，AMD 的生存并不应该那么让人惊讶？！
