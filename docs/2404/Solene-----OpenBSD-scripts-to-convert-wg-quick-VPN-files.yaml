- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 13:41:54'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: 'Solene''% : OpenBSD scripts to convert wg-quick VPN files'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://dataswamp.org/~solene/2024-04-27-openbsd-wg-quick-converter.html](https://dataswamp.org/~solene/2024-04-27-openbsd-wg-quick-converter.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 1\. Introduction [§](#_Introduction)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you use commercial VPN, you may have noticed they all provide WireGuard configurations
    in the wg-quick format, this is not suitable for an easy use in OpenBSD.
  prefs: []
  type: TYPE_NORMAL
- en: As I currently work a lot for a VPN provider, I often have to play with configurations
    and I really needed a script to ease my work.
  prefs: []
  type: TYPE_NORMAL
- en: I made a shell script that turns a wg-quick configuration into a hostname.if
    compatible file, for a full integration into OpenBSD. This is practical if you
    always want to connect to a given VPN server, not for temporary connections.
  prefs: []
  type: TYPE_NORMAL
- en: '[OpenBSD manual pages: hostname.if](https://man.openbsd.org/hostname.if)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Sourcehut project: wg-quick-to-hostname-if](https://git.sr.ht/~solene/wg-quick-to-hostname-if)'
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Usage [§](#_Usage)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It is really easy to use, download the script and mark it executable, then run
    it with your wg-quick configuration as a parameter, it will output the hostname.if
    file to the standard output.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: In the generated file, it uses a trick to dynamically figure the current default
    route which is required to keep a non-vpn route to the VPN gateway.
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Short VPN sessions [§](#_Short_VPN_sessions)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When I shared my script on mastodon, Carlos Johnson shared their own script
    which is pretty cool and complementary to mine.
  prefs: []
  type: TYPE_NORMAL
- en: If you prefer to establish a VPN for a limited session, you may want to take
    a look at his script.
  prefs: []
  type: TYPE_NORMAL
- en: '[Carlos Johnson GitHub: file-wg-sh gist](https://gist.github.com/callemo/aea83a8d0e1e09bb0d94ab85dc809675#file-wg-sh)'
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Prevent leaks [§](#_Prevent_leaks)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If you need your WireGuard VPN to be leakproof (= no network traffic should
    leave the network interface outside the VPN if it''s not toward the VPN gateway),
    you should absolutely do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: your WireGuard VPN should be on rdomain 0
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: WireGuard VPN should be established on another rdomain
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: use PF to block traffic on the other rdomain that is not toward the VPN gateway
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: use the VPN provider DNS or a no-log public DNS provider
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Older blog post: WireGuard and rdomains](https://dataswamp.org/~solene/2021-10-09-openbsd-wireguard-exit.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 5\. Conclusion [§](#_Conclusion)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: OpenBSD's ability to configure WireGuard VPNs with ifconfig has always been
    an incredible feature, but it was not always fun to convert from wg-quick files.
    But now, using a commercial VPN got a lot easier thanks to a few piece of shell.
  prefs: []
  type: TYPE_NORMAL
