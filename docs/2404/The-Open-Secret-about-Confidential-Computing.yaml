- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 13:03:21'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 13:03:21
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: The Open Secret about Confidential Computing
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于保密计算的开放性秘密
- en: 来源：[https://stiankri.substack.com/p/the-open-secret-about-confidential](https://stiankri.substack.com/p/the-open-secret-about-confidential)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://stiankri.substack.com/p/the-open-secret-about-confidential](https://stiankri.substack.com/p/the-open-secret-about-confidential)
- en: '[Confidential Computing](https://en.wikipedia.org/wiki/Confidential_computing)
    is an emerging field that aims to protect running workloads (“data in use“) from
    their environment, thus reducing the Trusted Computing Base (TCB). For VMs, this
    means that the threat model is updated to not trust the hypervisor. The main push
    is from the public cloud vendors to enable running more sensitive workloads. In
    short, the CPU is trusted and creates a clean VM/enclave that can be measured
    and attested. The attestation can be sent off to a trusted environment that can
    exchange it for the secrets needed to perform the work.'
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[保密计算](https://zh.wikipedia.org/wiki/%E4%BF%9D%E5%AF%86%E8%AE%A1%E7%AE%97)是一个新兴领域，旨在保护正在运行的工作负载（“使用中的数据”）免受其环境的影响，从而减少可信计算基础（TCB）。对于虚拟机（VMs），这意味着更新了威胁模型，不再信任虚拟化管理程序。主要推动力来自公共云供应商，以便运行更敏感的工作负载。简而言之，CPU
    可信，并创建一个干净的 VM/enclave，可以进行测量和证明。认证可以发送到可信环境，该环境可以用其交换所需的秘密来执行工作。'
- en: 'If you read the confidential compute marketing from [Azure](https://azure.microsoft.com/en-us/solutions/confidential-compute)
    and [GCP](https://cloud.google.com/security/products/confidential-computing) it
    is easy to think that this is a solved problem. If you read [Trust in Computer
    Systems and the Cloud](https://www.goodreads.com/book/show/58150353) - which is
    an excellent introduction to the topic - it acknowledges that this is a hard problem
    with a lot of things to get right, and a lot of things that are considered out
    of scope (chapter 11). If you read [Security Engineering: A Guide to Building
    Dependable Distributed Systems](https://www.goodreads.com/book/show/3268675-security-engineering)
    - a highly recommended read in general - it is more blunt; saying that the ecosystem
    can be undermined by a single extracted attestation key, which has already been
    demonstrated (section 20.6, third edition).'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: '如果你阅读来自 [Azure](https://azure.microsoft.com/en-us/solutions/confidential-compute)
    和 [GCP](https://cloud.google.com/security/products/confidential-computing) 的保密计算营销，很容易认为这是一个解决了的问题。如果你阅读《[Trust
    in Computer Systems and the Cloud](https://www.goodreads.com/book/show/58150353)》
    - 这是该主题的优秀介绍 - 它承认这是一个需要做很多正确的事情的难题，并且有很多被视为超出范围的事情（第11章）。如果你阅读《[Security Engineering:
    A Guide to Building Dependable Distributed Systems](https://www.goodreads.com/book/show/3268675-security-engineering)》
    - 总体上是一本强烈推荐的阅读 - 它更加直接；指出生态系统可能会被一个提取的认证密钥破坏，这已经被证明过了（第20.6节，第三版）。'
- en: The three main technologies used by Azure and GCP are [AMD SEV-SNP](https://www.amd.com/en/developer/sev.html)
    (VM), [Intel SGX](https://www.intel.com/content/www/us/en/products/docs/accelerator-engines/software-guard-extensions.html)
    (enclave) and [Intel TDX](https://www.intel.com/content/www/us/en/developer/tools/trust-domain-extensions/overview.html)
    (VM). Intel TDX uses Intel SGX for attestation. Both [Intel SGX](https://www.usenix.org/system/files/conference/usenixsecurity18/sec18-van_bulck.pdf)
    and [AMD SEV](https://arxiv.org/pdf/1908.11680.pdf) have had their attestation
    keys extracted. In the case of Intel SGX this was used to [break UHD Blu-Ray DRM](https://sgx.fail/files/sgx.fail.pdf).
    There are so many side channels in Intel SGX that they used a table to keep track
    of which CPUs are vulnerable to which attacks. When Google looked at both [AMD
    SEV-SNP](https://googleprojectzero.blogspot.com/2022/05/release-of-technical-report-into-amd.html)
    and [Intel TDX](https://cloud.google.com/blog/products/identity-security/rsa-google-intel-confidential-computing-more-secure)
    they found a bunch of issues in both. This week further issues in both solutions
    were [published by researchers at ETH Zurich](https://ethz.ch/en/news-und-veranstaltungen/eth-news/news/2024/04/knocking-cloud-security-off-its-game.html).
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: Azure和GCP使用的三种主要技术是[AMD SEV-SNP](https://www.amd.com/en/developer/sev.html)（虚拟机）、[Intel
    SGX](https://www.intel.com/content/www/us/en/products/docs/accelerator-engines/software-guard-extensions.html)（飞地）和[Intel
    TDX](https://www.intel.com/content/www/us/en/developer/tools/trust-domain-extensions/overview.html)（虚拟机）。Intel
    TDX使用Intel SGX进行证明。[Intel SGX](https://www.usenix.org/system/files/conference/usenixsecurity18/sec18-van_bulck.pdf)和[AMD
    SEV](https://arxiv.org/pdf/1908.11680.pdf)的证明密钥已被提取。在Intel SGX的情况下，这被用来[破解UHD蓝光DRM](https://sgx.fail/files/sgx.fail.pdf)。Intel
    SGX中有很多侧信道，他们使用表格来追踪哪些CPU容易受到哪些攻击的影响。当Google审查[AMD SEV-SNP](https://googleprojectzero.blogspot.com/2022/05/release-of-technical-report-into-amd.html)和[Intel
    TDX](https://cloud.google.com/blog/products/identity-security/rsa-google-intel-confidential-computing-more-secure)时，他们在两者中发现了一些问题。本周，瑞士苏黎世联邦理工学院的研究人员发布了更多的问题，涉及这两种解决方案。
- en: Over time the Intel and AMD solutions should become harder targets as bugs are
    found and fixed. However, some architectural decisions might continue to produce
    bugs; the Intel and AMD approaches are based on microcode running on the same
    cores as other workloads, rather than dedicated hardware. This makes them more
    exposed to side channel attacks (which is the source for many of the known bugs).
    The upside is that some things can be patched without having to scrap hardware.
    Though, this also enables the update process to be a potential attack vector.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，随着漏洞的被发现和修复，Intel和AMD的解决方案应该变得更难被攻击。然而，一些架构决策可能会继续产生漏洞；Intel和AMD的方法基于微码在与其他工作负载相同的核心上运行，而不是专用硬件。这使它们更容易受到侧信道攻击的影响（这是许多已知漏洞的来源）。好处是某些问题可以在不必报废硬件的情况下修补。尽管如此，这也使得更新过程成为潜在的攻击向量。
- en: '[AWS uses their proprietary Nitro system](https://aws.amazon.com/blogs/security/confidential-computing-an-aws-perspective/),
    which looks interesting on the surface, but lacks public details and external
    scrutiny, so it’s hard to compare to the Intel and AMD solutions. Conceptually,
    Azure and GCP shift some of the trust to the CPU vendor (AMD or Intel, which are
    already trusted), while AWS take on the same role with their own custom hardware.'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[AWS使用他们专有的Nitro系统](https://aws.amazon.com/blogs/security/confidential-computing-an-aws-perspective/)，表面上看起来很有趣，但缺乏公开细节和外部审查，因此很难与Intel和AMD的解决方案进行比较。在概念上，Azure和GCP将一些信任转移到CPU供应商（已经信任的AMD或Intel），而AWS则通过他们自己的定制硬件扮演同样的角色。'
- en: 'Don’t get me wrong: I think reducing the TBC, which is the aim of Confidential
    Computing, is a great and desirable goal. It should increase the cost of attacks
    and help protect sensitive data. But let’s be clear eyed about the current state
    of things; measured enthusiasm is in order.'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 不要误会：我认为减少TBC（即机密计算的目标）是一个伟大且值得追求的目标。它应该增加攻击的成本并有助于保护敏感数据。但让我们清醒地看待当前的现状；适度的热情是适宜的。
