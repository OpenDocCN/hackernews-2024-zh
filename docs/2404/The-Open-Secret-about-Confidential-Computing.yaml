- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 13:03:21'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: The Open Secret about Confidential Computing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://stiankri.substack.com/p/the-open-secret-about-confidential](https://stiankri.substack.com/p/the-open-secret-about-confidential)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Confidential Computing](https://en.wikipedia.org/wiki/Confidential_computing)
    is an emerging field that aims to protect running workloads (“data in use“) from
    their environment, thus reducing the Trusted Computing Base (TCB). For VMs, this
    means that the threat model is updated to not trust the hypervisor. The main push
    is from the public cloud vendors to enable running more sensitive workloads. In
    short, the CPU is trusted and creates a clean VM/enclave that can be measured
    and attested. The attestation can be sent off to a trusted environment that can
    exchange it for the secrets needed to perform the work.'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you read the confidential compute marketing from [Azure](https://azure.microsoft.com/en-us/solutions/confidential-compute)
    and [GCP](https://cloud.google.com/security/products/confidential-computing) it
    is easy to think that this is a solved problem. If you read [Trust in Computer
    Systems and the Cloud](https://www.goodreads.com/book/show/58150353) - which is
    an excellent introduction to the topic - it acknowledges that this is a hard problem
    with a lot of things to get right, and a lot of things that are considered out
    of scope (chapter 11). If you read [Security Engineering: A Guide to Building
    Dependable Distributed Systems](https://www.goodreads.com/book/show/3268675-security-engineering)
    - a highly recommended read in general - it is more blunt; saying that the ecosystem
    can be undermined by a single extracted attestation key, which has already been
    demonstrated (section 20.6, third edition).'
  prefs: []
  type: TYPE_NORMAL
- en: The three main technologies used by Azure and GCP are [AMD SEV-SNP](https://www.amd.com/en/developer/sev.html)
    (VM), [Intel SGX](https://www.intel.com/content/www/us/en/products/docs/accelerator-engines/software-guard-extensions.html)
    (enclave) and [Intel TDX](https://www.intel.com/content/www/us/en/developer/tools/trust-domain-extensions/overview.html)
    (VM). Intel TDX uses Intel SGX for attestation. Both [Intel SGX](https://www.usenix.org/system/files/conference/usenixsecurity18/sec18-van_bulck.pdf)
    and [AMD SEV](https://arxiv.org/pdf/1908.11680.pdf) have had their attestation
    keys extracted. In the case of Intel SGX this was used to [break UHD Blu-Ray DRM](https://sgx.fail/files/sgx.fail.pdf).
    There are so many side channels in Intel SGX that they used a table to keep track
    of which CPUs are vulnerable to which attacks. When Google looked at both [AMD
    SEV-SNP](https://googleprojectzero.blogspot.com/2022/05/release-of-technical-report-into-amd.html)
    and [Intel TDX](https://cloud.google.com/blog/products/identity-security/rsa-google-intel-confidential-computing-more-secure)
    they found a bunch of issues in both. This week further issues in both solutions
    were [published by researchers at ETH Zurich](https://ethz.ch/en/news-und-veranstaltungen/eth-news/news/2024/04/knocking-cloud-security-off-its-game.html).
  prefs: []
  type: TYPE_NORMAL
- en: Over time the Intel and AMD solutions should become harder targets as bugs are
    found and fixed. However, some architectural decisions might continue to produce
    bugs; the Intel and AMD approaches are based on microcode running on the same
    cores as other workloads, rather than dedicated hardware. This makes them more
    exposed to side channel attacks (which is the source for many of the known bugs).
    The upside is that some things can be patched without having to scrap hardware.
    Though, this also enables the update process to be a potential attack vector.
  prefs: []
  type: TYPE_NORMAL
- en: '[AWS uses their proprietary Nitro system](https://aws.amazon.com/blogs/security/confidential-computing-an-aws-perspective/),
    which looks interesting on the surface, but lacks public details and external
    scrutiny, so it’s hard to compare to the Intel and AMD solutions. Conceptually,
    Azure and GCP shift some of the trust to the CPU vendor (AMD or Intel, which are
    already trusted), while AWS take on the same role with their own custom hardware.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Don’t get me wrong: I think reducing the TBC, which is the aim of Confidential
    Computing, is a great and desirable goal. It should increase the cost of attacks
    and help protect sensitive data. But let’s be clear eyed about the current state
    of things; measured enthusiasm is in order.'
  prefs: []
  type: TYPE_NORMAL
