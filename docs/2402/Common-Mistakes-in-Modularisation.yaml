- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-29 13:29:26'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-29 13:29:26'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Common Mistakes in Modularisation
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模块化中的常见错误
- en: 来源：[https://two-wrongs.com/software-design-tree-and-program-families.html](https://two-wrongs.com/software-design-tree-and-program-families.html)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://two-wrongs.com/software-design-tree-and-program-families.html](https://two-wrongs.com/software-design-tree-and-program-families.html)
- en: 'When we are new to product development, we often dig into the concrete details
    right away. This means we make decisions near the leaves before we tackle higher
    level decisions. Halfway through the development work (i.e. when significant amounts
    of code has been written already), we may have a design tree that looks like this:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们刚开始进行产品开发时，我们经常会立即深入研究具体细节。这意味着我们在解决更高层次决策之前就在叶子附近做出决定。在开发工作进行到一半（即已编写了大量代码）时，我们可能已经有了一个看起来像这样的设计树：
- en: What product does that correspond to? None at all. These decisions are on completely
    different branches, meaning they are mutually exclusive, and there is no way to
    construct a product that satisfies them all. We generally don’t notice this until
    someone forces us to make a decision on e.g. question *b*, and then we realise
    that whatever we choose, we are locking ourselves out of either *k* or *g*.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这对应的是哪种产品？根本就没有。这些决定处于完全不同的分支上，意味着它们是互斥的，没有办法构建一个满足它们所有条件的产品。我们通常不会注意到这一点，直到有人迫使我们对例如问题*b*做出决定，然后我们意识到无论我们选择什么，我们都将自己拒之于*k*或*g*之外。
- en: The silver lining on the dark clouds is that this is usually discovered rather
    late in the development process, so at this point the stakeholders may actually
    be receptive to throwing out most of the decisions we had agreed to in order to
    make the project finish sooner. It is a little embarrassing none the less.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在黑暗的云朵上的银边是，这通常是在开发过程中相当晚才发现的，所以在这一点上，利益相关者实际上可能会愿意放弃我们之前已经同意的大部分决策，以便更快地完成项目。尽管如此，这还是有点尴尬。
- en: 'Sometimes we are lucky and by accident make coherent leaf-level choices, e.g.
    like this:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候我们很幸运，意外地做出了一致的叶子层次选择，例如像这样：
- en: But then when we get around to discussing question *a*, we realise we would
    much rather make the choice that unlocks *c* as an alternative. Unfortunately,
    that’s incompatible with all decisions we’ve made so far.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 但是当我们开始讨论问题*a*时，我们意识到我们更愿意做出解锁*c*作为替代选择的选择。不幸的是，这与我们迄今为止所做的所有决定都不兼容。
- en: 'This is a devious situation that occurs surprisingly often: our early leaf-near
    decisions imply a set of higher level decisions that we disagree with. Again,
    we usually don’t discover this until we are trying to integrate everything and
    get it out the door. Result: lots of expensive rework, or settling for a suboptimal
    solution.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个十分阴险的情况，出现得惊人地频繁：我们早期的叶子附近的决定意味着我们不同意一组更高层次的决策。同样，我们通常是在试图整合一切并推出产品时才发现这一点。结果：大量昂贵的重做，或者妥协于次优解。
- en: 'This is another reason to focus on high-level decisions first: we lower the
    risk of spending time on decisions that we’ll have to tear up later because they
    are incompatible with the overall shape we want the product to have.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这是关注高层决策的另一个原因：我们降低了在后面可能因为它们与我们想要的产品整体形状不兼容而不得不撕毁的决策所花费的时间的风险。
