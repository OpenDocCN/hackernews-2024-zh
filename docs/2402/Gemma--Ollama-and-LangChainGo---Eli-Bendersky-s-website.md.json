["```\npackage  main import  ( \"context\" \"flag\" \"fmt\" \"log\" \"github.com/tmc/langchaingo/llms\" \"github.com/tmc/langchaingo/llms/ollama\" ) func  main()  { modelName  :=  flag.String(\"model\",  \"\",  \"ollama model name\") flag.Parse() llm,  err  :=  ollama.New(ollama.WithModel(*modelName)) if  err  !=  nil  { log.Fatal(err) } query  :=  flag.Args()[0] ctx  :=  context.Background() completion,  err  :=  llms.GenerateFromSinglePrompt(ctx,  llm,  query) if  err  !=  nil  { log.Fatal(err) } fmt.Println(\"Response:\\n\",  completion) } \n```", "```\n$ go run ollama-completion-arg.go --model gemma \"what should be added to 91 to make -20?\"\nResponse:\n The answer is -111.\n\n91 + (-111) = -20 \n```", "```\npackage  main import  ( \"context\" \"flag\" \"fmt\" \"log\" \"github.com/jmorganca/ollama/api\" ) func  main()  { modelName  :=  flag.String(\"model\",  \"\",  \"ollama model name\") flag.Parse() client,  err  :=  api.ClientFromEnvironment() if  err  !=  nil  { log.Fatal(err) } req  :=  &api.GenerateRequest{ Model:  *modelName, Prompt:  flag.Args()[0], Stream:  new(bool),  // disable streaming } ctx  :=  context.Background() var  response  string respFunc  :=  func(resp  api.GenerateResponse)  error  { response  =  resp.Response return  nil } err  =  client.Generate(ctx,  req,  respFunc) if  err  !=  nil  { log.Fatal(err) } fmt.Println(\"Response:\\n\",  response) } \n```"]