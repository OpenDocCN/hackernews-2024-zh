- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 14:52:44'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:52:44
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Code Chores: The boring part of maintenance by matmair'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码日常工作：维护中的乏味部分由 matmair 撰写
- en: 来源：[https://polar.sh/matmair/posts/code-chores-the-boring-part-of-maintenance](https://polar.sh/matmair/posts/code-chores-the-boring-part-of-maintenance)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://polar.sh/matmair/posts/code-chores-the-boring-part-of-maintenance](https://polar.sh/matmair/posts/code-chores-the-boring-part-of-maintenance)
- en: What kind of chores need to happen to keep a self-hosted project long-term viable?
    And why “base” funding is often more important than one-off funds.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使自托管项目长期可行，需要进行哪些日常工作？为什么“基础”资金往往比一次性资金更重要。
- en: InvenTree 0.14.0 (still WIP but the roadmap [is public](https://github.com/inventree/InvenTree/milestone/56))
    is shaping up to be a big one again. We will probably have to stop saying that
    in every release blog, now that we accumulate nearly 200 issues/pull requests
    in a 77-day window.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: InvenTree 0.14.0（仍在进行中，但路线图[公开](https://github.com/inventree/InvenTree/milestone/56)）再次成为一个大版本。我们可能不得不在每个发布博客中停止这样说了，现在我们在
    77 天的时间窗口内积累了近 200 个问题/拉取请求。
- en: '[InvenTree](https://github.com/inventree/inventree) is an Open Source (MIT),
    self-hosted inventory and part library management system written mainly in Python.
    It uses Django and DRF to expose a REST API that can be used from the web, iOS
    and Android apps, a Python library and IOT devices.'
  id: totrans-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[InvenTree](https://github.com/inventree/inventree) 是一个开源（MIT）、自托管的库存和零部件库管理系统，主要用
    Python 编写。它使用 Django 和 DRF 暴露出一个 REST API，可以从网络、iOS 和 Android 应用程序、Python 库和 IOT
    设备中使用。'
- en: Explaining by sample
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 以样本解释
- en: 'A theme for me in this window was code chores. The changes that are not flashy,
    do not make the release notes and just keep things working properly. There were
    lots of things that fall into this category:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个时间窗口中，我主题是代码日常工作。这些变化并不引人注目，不会出现在发布说明中，只是保持事情正常运行。有很多事情属于这个范畴：
- en: Adding a way to check if the API schema is changing with a PR and blocking a
    merge if the API version was not bumped ([PR 6440](https://github.com/inventree/InvenTree/pull/6440)).
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了一种方法，通过 PR 检查 API 架构是否发生变化，并且如果没有提升 API 版本，则阻止合并（[PR 6440](https://github.com/inventree/InvenTree/pull/6440)）。
- en: Upgrading major framework versions. We had to migrate to Django 4 LTS as Django
    3’s End of Life was approaching fast. We know that InvenTree is being run in highly
    restricted/regulated environments so addressing this was paramount. It has been
    in my ToDo [since April 2022](https://github.com/inventree/InvenTree/issues/2853)
    and took quite a lot of detective work and collaboration to get across the finish
    line. We had to patch multiple dependencies, most notably [django-mptt](https://github.com/django-mptt/django-mptt/pull/836)
    to get everything working right. It took me multiple attempts and the final commit
    number is representative of its age. Fortunately, we squash commits before they
    are merged into upstream ([PR 6173](https://github.com/inventree/InvenTree/pull/6173)).
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 升级主要框架版本。由于 Django 3 的生命周期即将结束，我们不得不迁移到 Django 4 LTS。我们知道 InvenTree 在高度受限制/受监管的环境中运行，因此解决这个问题至关重要。这件事情从
    [2022 年 4 月](https://github.com/inventree/InvenTree/issues/2853) 就在我的待办事项中，并且需要进行大量的侦探工作和合作才能完成。我们不得不修补多个依赖项，尤其是
    [django-mptt](https://github.com/django-mptt/django-mptt/pull/836)，以确保一切正常运作。我尝试了多次，最终的提交次数代表了它的历史。幸运的是，我们在将提交合并到上游之前会压缩提交记录（[PR
    6173](https://github.com/inventree/InvenTree/pull/6173)）。
- en: Refactoring the code base to be as easy to read/understand as possible ([PR
    6251](https://github.com/inventree/InvenTree/pull/6251)) or to address depreciation
    ([PR 6210](https://github.com/inventree/InvenTree/pull/6210)).
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重构代码库以尽可能易于阅读/理解（[PR 6251](https://github.com/inventree/InvenTree/pull/6251)）或解决废弃问题（[PR
    6210](https://github.com/inventree/InvenTree/pull/6210)）。
- en: Bumping dependencies also has to be done regularly to keep the stack secure
    ([PR 6421](https://github.com/inventree/InvenTree/pull/6421)).
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定期升级依赖项也是必须的，以保持堆栈安全（[PR 6421](https://github.com/inventree/InvenTree/pull/6421)）。
- en: Exciting changes, right?
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 令人兴奋的变化，不是吗？
- en: Code Chores
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码日常工作
- en: All these things do not qualify for flashy blogs, my best description for them
    is code (base) chores.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些事情都不适合引人注目的博客，我对它们的最好描述是代码（基础）日常工作。
- en: These are what maintenance is really about. Keeping the project running (safe,
    reliable, maintainable, …) so that others can build the fun, simple feature requests.
    Both are important in their own way to keep projects alive. Marketing the latter
    is a lot simpler. Chores in a decent-size project are also not limited to code.
    You have to manage translations, social media, new security settings, CI integrations,
    a website and a host of other things.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这才是维护的真正内容。保持项目运行（安全、可靠、可维护等），以便其他人可以构建有趣的、简单的功能请求。两者在保持项目活跃方面都有自己的重要性。营销后者要简单得多。在一个相当大的项目中，日常工作不仅限于代码。你必须管理翻译、社交媒体、新的安全设置、CI
    集成、网站和其他一系列事务。
- en: Funding the boring stuff
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 资助乏味的事情
- en: Constant funding for projects and maintainers is important to keep all these
    things happening. Not a lot of people enjoy chores, me neither.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 对项目和维护者进行持续的资助非常重要，以确保所有这些事情都在发生。不多的人喜欢日常工作，我也是其中之一。
- en: Companies are often more willing to sponsor specific feature requests - they
    are easy to communicate to management, I get it. This presents a problem because
    the reality of InvenTree is that Oliver (who does a lot more maintenance than
    me) and I spend more time fixing bugs, answering (setup) questions and chores
    than building new features. From conversations with other developers, it seems
    like that is mostly the case in smaller self-hosted OSS projects. But not doing
    the chores ends up with you wearing dirty clothes (or insecure projects in our
    case).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 公司通常更愿意赞助特定的功能请求-它们更容易向管理层传达，我明白。但这带来了一个问题，因为 InvenTree 的现实是，Oliver（他比我做更多的维护工作）和我花费了更多的时间来修复错误，回答（设置）问题和日常工作，而不是构建新的功能。从与其他开发人员的对话中得知，在较小的自托管
    OSS 项目中，这似乎是大多数情况。但不做日常工作最终会导致你穿脏衣服（或者在我们的情况下，项目不安全）。
- en: So how do you attract money if it is a hard sell? There are many possible avenues,
    every big project is trying to balance its answer between easier/specialised distribution,
    open core, support contracts and a myriad of other options.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，如果难以推销，您如何吸引资金？有许多可能的途径，每个大型项目都在尝试在更容易/专业化的分发、开放核心、支持合同以及其他一系列选项之间平衡自己的答案。
- en: I am currently leaning in favour of this platform, Polar. Here we are able to
    easily split money coming in for feature requests between contributors and the
    project to help with maintenance efforts. It is sort of implied with the default
    setup and I appreciate that. It reflects the reality of a mature OSS project.
    A feature won't maintain itself magically after it is merged.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我目前倾向于支持Polar这个平台。在这里，我们可以轻松地将收入分配给提出功能请求的贡献者和项目，以帮助维护工作。这在默认设置中被隐含地表达出来，我很欣赏这一点。它反映了成熟开源软件项目的现实。一个功能在合并后不会像魔术一样自动维护。
- en: I am not sure if this (platform or model) will work but not trying is a guaranteed
    way to fail. Funding was never easy for OSS, I do not suspect this will change
    any time soon.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我不确定这个（平台或模型）是否有效，但不去尝试是失败的必然途径。对于开源软件，资金从来都不容易获得，我不认为这会在短期内发生变化。
- en: Subscribe if you want to get background on InvenTree and its ecosystem. Sponsor
    InvenTree [here](https://polar.sh/inventree/issues) or [on GitHub](https://github.com/sponsors/inventree),
    take a look at [InvenHost](https://polar.sh/invenhost/issues) and thank a maintainer.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想了解InvenTree及其生态背景，请订阅。在这里赞助InvenTree [这里](https://polar.sh/inventree/issues)
    或 [在GitHub上](https://github.com/sponsors/inventree)，参观 [InvenHost](https://polar.sh/invenhost/issues)
    并感谢维护者。
