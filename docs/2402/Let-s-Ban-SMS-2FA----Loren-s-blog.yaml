- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-29 13:24:18'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-29 13:24:18
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Let's Ban SMS 2FA // Loren's blog
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让我们禁止短信双因素认证 // Loren的博客
- en: 来源：[https://lorendb.dev/posts/lets-ban-sms-2fa/](https://lorendb.dev/posts/lets-ban-sms-2fa/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://lorendb.dev/posts/lets-ban-sms-2fa/](https://lorendb.dev/posts/lets-ban-sms-2fa/)
- en: There, I said it.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我说过了。
- en: Now that I’ve got that out of the way, let’s talk a bit about why we should
    actually ban SMS 2FA.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我已经说清楚了，让我们谈一谈为什么我们实际上应该禁止短信双因素认证。
- en: 'A quick note: I’ve rewritten this post to present a more balanced view of the
    topic. You can find the old version on the Internet Archive.'
  id: totrans-split-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一个快速说明：我重新撰写了这篇文章，以呈现更加平衡的观点。你可以在互联网档案馆找到旧版本。
- en: The problems
  id: totrans-split-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: SMS 2FA is something of a paradox in and of itself. Two-factor authentication
    is generally positioned as a way to increase your security; however, [SMS messaging](https://en.wikipedia.org/wiki/SMS)
    is inherently insecure, since it is unencrypted and SMS messages are publicly
    broadcast wirelessly. This means that bad actors who are physically near to you
    can trivially snoop on 2FA codes that are texted to you.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 短信双因素认证本身就有些自相矛盾。双因素认证通常被定位为增加您的安全性的一种方式；然而，[SMS消息](https://en.wikipedia.org/wiki/SMS)本身是不安全的，因为它是未加密的，而且SMS消息是通过无线方式公开广播的。这意味着身边的坏人可以轻松窥视发送给你的2FA代码。
- en: However, unencrypted message broadcasting is not the only concern here. [SIM-swapping](https://en.wikipedia.org/wiki/SIM_swap_scam)
    is another method that can allow an attacker to gain access to your SMS messages;
    in this sort of attack, the attacker calls your phone company, claims that they
    are you, and asks to swap your phone number over to their SIM card. While the
    FCC is [taking action to fight SIM-swapping](https://www.theverge.com/2023/7/11/23791183/fcc-sim-swapping-port-out-phone-hijacking-security-protection),
    it is still very much a relevant attack; in fact, last month (January 2024) the
    U.S. Securities and Exchange Commission had its Twitter (yes, I’m still calling
    it Twitter) account [hacked](https://www.techradar.com/pro/sec-reveals-how-its-twitter-account-was-hacked-and-its-rather-embarrassing)
    in a SIM swap attack.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在这里，未加密的消息广播并不是唯一的问题。[SIM交换](https://en.wikipedia.org/wiki/SIM_swap_scam)是另一种方法，可以允许攻击者访问你的短信消息；在这种攻击中，攻击者打电话给你的手机公司，声称他们是你，要求将你的电话号码转移到他们的SIM卡上。尽管FCC正在[采取行动打击SIM交换](https://www.theverge.com/2023/7/11/23791183/fcc-sim-swapping-port-out-phone-hijacking-security-protection)，但这种攻击仍然非常相关；事实上，上个月（2024年1月），美国证券交易委员会的Twitter账号在SIM交换攻击中被[黑客攻击](https://www.techradar.com/pro/sec-reveals-how-its-twitter-account-was-hacked-and-its-rather-embarrassing)。
- en: To be fair, SIM swapping is not a trivial attack. It generally requires social
    engineering to complete, which makes it less useful for drive-by attackers. However,
    [eSIM swapping](https://www.bleepingcomputer.com/news/security/sim-swappers-hijacking-phone-numbers-in-esim-attacks/)
    is starting to gain popularity. This attack is less complex to complete, as it
    doesn’t require social engineering the phone company. You just need to get the
    victim’s login credentials, log into their phone provider account, and swap the
    eSIM.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 说实话，SIM交换并不是一种简单的攻击。它通常需要社会工程学来完成，这使得它对于路过的攻击者来说不那么有用。然而，[eSIM交换](https://www.bleepingcomputer.com/news/security/sim-swappers-hijacking-phone-numbers-in-esim-attacks/)开始流行起来。这种攻击完成起来不那么复杂，因为它不需要社会工程学来操作电话公司。你只需要获取受害者的登录凭据，登录他们的手机提供商账户，然后交换eSIM。
- en: Companies don’t care
  id: totrans-split-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 公司并不在乎
- en: You might be wondering why this is such a big problem. Sure, SMS is offered
    as a 2FA method on many sites, but you don’t need to enable it, right? Well, it
    turns out that platforms like PayPal and Amazon don’t care that SMS 2FA is insecure.
    If you want to set up any form of 2FA for your account, you are forced to set
    up SMS as a fallback option. This makes their 2FA support little more than a farce,
    given that anybody attacking your Amazon or PayPal account can theoretically override
    your 2FA by intercepting your SMS. The reasoning for this? “If you lose your 2FA
    device, we’ll text you a code to recover access to your account.”
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想知道为什么这是个如此大的问题。当然，许多网站提供短信作为双因素认证的方法，但你并不需要启用它，对吧？然而，事实证明像PayPal和Amazon这样的平台并不关心短信双因素认证的不安全性。如果你想为你的账户设置任何形式的双因素认证，你就被迫设置短信作为后备选项。这使得它们的双因素认证支持几乎成了一个笑话，因为任何攻击你的Amazon或PayPal账户的人理论上都可以通过截取你的短信来覆盖你的双因素认证。他们的理由是？“如果你丢失了你的双因素认证设备，我们会给你发一条短信验证码来恢复访问你的账户。”
- en: '(A bit more on the account recovery: given a valid email address, PayPal will
    happily send you a text to verify a password reset, and Amazon lets you reset
    your password *with just a phone number*. This means that as long as you know
    that somebody has an Amazon account that may be linked to their phone number,
    intercepting their SMS could give you full access to their Amazon account.)'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: (关于账户恢复的更多信息：只要提供有效的电子邮件地址，PayPal会很乐意发送短信来验证密码重置，而Amazon则允许您仅通过电话号码重置密码。这意味着只要您知道某人拥有与其电话号码关联的Amazon账户，拦截其短信就可以完全访问他们的Amazon账户。)
- en: Even for the services that aren’t forcing SMS 2FA down your throat, SMS is still
    presented as an option on many sites. Its ease of use undoubtedly has led many
    people to say “Oh, I’ll just use SMS since it’s easier”, which leaves those people
    more vulnerable to attack.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 即使对于那些没有强制要求SMS双因素认证的服务，SMS仍然作为许多网站的选项呈现。它的易用性无疑导致许多人说：“哦，我只需使用SMS因为更方便”，这使得这些人更容易受到攻击。
- en: Having said this, I must offer a commendation to Twitter. In 2023, they [disabled](https://blog.twitter.com/en_us/topics/product/2023/an-update-on-two-factor-authentication-using-sms-on-twitter)
    SMS 2FA for anyone not subscribed to Twitter Blue, citing its insecurity as the
    reason. I’d prefer if Twitter had disabled SMS 2FA across the board, but even
    if they left it as an incentive for people to pay for Twitter, it’s still a welcome
    change.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 说到这一点，我必须赞扬Twitter。在2023年，他们[停用了](https://blog.twitter.com/en_us/topics/product/2023/an-update-on-two-factor-authentication-using-sms-on-twitter)未订阅Twitter
    Blue的用户的SMS双因素认证，称其不安全为理由。我更希望Twitter彻底禁止SMS双因素认证，但即使他们将其作为鼓励用户购买Twitter的一个理由，这仍然是一个受欢迎的改变。
- en: It isn’t that hard to fix
  id: totrans-split-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修复起来并不是那么难
- en: 'Now, some people might start complaining that changing their SMS 2FA deployment
    will be a huge technical problem. No, it won’t. Companies have several options
    here:'
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，有些人可能会开始抱怨改变他们的SMS双因素认证部署将是一个巨大的技术问题。不，不会的。公司在这里有几个选项：
- en: Use [TOTP](https://en.wikipedia.org/wiki/Time-based_one-time_password); adding
    TOTP support is going to be fairly trivial, since it only requires an algorithm
    to calculate a code based on the original secret value (you’ll probably also want
    to throw in a QR code generator, but that’s technically optional). And it’s not
    like you’ll have to roll your own implemention; GitHub is full of [TOTP libraries
    (and apps)](https://github.com/topics/totp-generator). This does require the user
    to install a TOTP app, but there are many trusted TOTP apps available, so that
    shouldn’t be a big problem.
  id: totrans-split-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用[基于时间的一次性密码（TOTP）](https://en.wikipedia.org/wiki/Time-based_one-time_password)；添加TOTP支持将非常简单，因为它只需要算法来基于原始密钥值计算代码（您可能还想加入一个QR码生成器，但这在技术上是可选的）。而且，您不需要自己实现；GitHub上有许多[基于TOTP的库（和应用程序）](https://github.com/topics/totp-generator)。这确实需要用户安装一个TOTP应用程序，但有许多值得信赖的TOTP应用程序可供选择，因此这不应该是一个大问题。
- en: Use [passkeys](https://www.passkeys.com), the latest and greatest in 2FA security.
    Passkeys are (as far as I can tell) sort of a software-defined WebAuthn key that
    operates like a [hardware security key](https://www.yubico.com/product/security-key-series/security-key-c-nfc-by-yubico-black/)
    (as an aside, apparently Yubico stopped making these in blue). They are supported
    by modern browsers and phone operating systems, not to mention password managers
    like Bitwarden, and are generally designed to be extremely simple to use. Users
    generally shouldn’t need to install any extra apps to use passkeys.
  id: totrans-split-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用[通行证](https://www.passkeys.com)，这是最新和最优秀的双因素认证安全技术。通行证（据我所知）类似于软件定义的WebAuthn密钥，其操作方式类似于[硬件安全密钥](https://www.yubico.com/product/security-key-series/security-key-c-nfc-by-yubico-black/)（顺便说一句，显然Yubico停止生产蓝色版本的了）。它们受到现代浏览器和手机操作系统的支持，还有像Bitwarden这样的密码管理器，通常设计得非常简单易用。用户通常不需要安装额外的应用程序来使用通行证。
- en: If your 2FA flow is hardcoded in such a way that you *have* to use an SMS-like
    flow where you send the user a message containing a one-time code which the user
    must repeat back to you, you can at least swap SMS for a different service. Some
    platforms support email, but you could also use something like end-to-end encrypted
    [Matrix](https://matrix.org) chats, or you could even bake a 2FA sending service
    into your app the way [GitHub does](https://github.blog/2022-01-25-secure-your-github-account-github-mobile-2fa/).
    If you *really* can’t drop SMS, at least try to upgrade messages to [RCS](https://en.wikipedia.org/wiki/Rich_Communication_Services)
    whenever possible. (If you are using Twilio Verify, you are already being automatically
    [upgraded to RCS](https://www.twilio.com/docs/verify/rcs).)
  id: totrans-split-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你的2FA流程被硬编码为必须使用类似短信的流程，其中你向用户发送包含一次性代码的消息，用户必须将其回传给你，你至少可以用其他服务替换SMS。一些平台支持电子邮件，但你也可以使用端到端加密的[Matrix](https://matrix.org)聊天，或者甚至可以像[GitHub](https://github.blog/2022-01-25-secure-your-github-account-github-mobile-2fa/)那样在你的应用程序中嵌入2FA发送服务。如果你真的无法放弃SMS，至少尝试在可能的情况下将消息升级到[RCS](https://en.wikipedia.org/wiki/Rich_Communication_Services)。（如果你正在使用Twilio
    Verify，则已自动升级到[RCS](https://www.twilio.com/docs/verify/rcs)）。
- en: What we can do about it
  id: totrans-split-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们可以采取的行动
- en: How can we combat SMS 2FA? It turns out that there’s a surprising amount of
    things you can do.
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如何应对短信两步验证（SMS 2FA）？事实证明，我们可以采取许多意想不到的措施。
- en: Disable SMS 2FA for any account that will let you turn it off. Obviously, you’ll
    have to keep SMS 2FA on for Amazon and PayPal, but at least reduce your usage
    of SMS 2FA as much as possible.
  id: totrans-split-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于任何可以关闭的帐户，请禁用SMS 2FA。显然，你必须保留Amazon和PayPal的SMS 2FA，但至少尽可能减少使用SMS 2FA。
- en: Write to companies that force SMS 2FA and ask them to remove it.
  id: totrans-split-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给强制使用SMS 2FA的公司写信，要求他们移除它。
- en: Tell others about the risks of SMS 2FA. The more people know about this risk,
    the less the chance that one of them will fall victim to a SIM swap.
  id: totrans-split-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 告诉他人关于SMS 2FA的风险。了解这一风险的人越多，其中一人成为SIM卡交换的受害者的机会就越小。
- en: If you work at a company that has SMS 2FA deployed, ask them to remove it from
    your product. This is especially true if you work at PayPal, Amazon, or anywhere
    else that could be a likely target for attackers. This includes banks (yes, my
    bank forces SMS 2FA, and no, I’m not happy about it).
  id: totrans-split-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你在部署SMS 2FA的公司工作，请要求他们从产品中移除它。如果你在PayPal、Amazon或其他可能成为攻击目标的地方工作，尤其如此。这包括银行（是的，我的银行强制使用SMS
    2FA，我对此并不满意）。
- en: If you live in the US, write to your congressman to urge him to introduce legislation
    banning the use of unencrypted message-based 2FA (and mention the SEC Twitter
    hack to show that the government is susceptible to this attack). If you don’t
    live in the US, write to whoever represents you in your government (e.g. EU residents
    can write their MEP). While this may seem like a bit of a long shot, it’s possible
    that your message could result in an actual law. EU residents are especially likely
    to succeed, given the EU’s historical stance on legislating sane tech laws (i.e.
    the [GDPR](https://en.wikipedia.org/wiki/General_Data_Protection_Regulation) and
    the [DMA](https://en.wikipedia.org/wiki/Digital_Markets_Act)).
  id: totrans-split-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你居住在美国，写信给你的国会议员，敦促他提出立法禁止使用未加密的基于消息的2FA（并提到SEC的Twitter黑客事件，以显示政府也容易受到这种攻击的影响）。如果你不在美国居住，请写信给代表你的政府的人（例如，欧盟居民可以写信给他们的欧洲议会议员）。尽管这可能看起来有些不太可能，但你的信息可能会导致真正的法律出台。欧盟居民尤其有可能成功，鉴于欧盟在立法理性技术法律方面的历史立场（即[GDPR](https://en.wikipedia.org/wiki/General_Data_Protection_Regulation)和[DMA](https://en.wikipedia.org/wiki/Digital_Markets_Act)）。
- en: Share this post, or if you have your own blog, write your own post on this subject!
    The more publicity this issue gets, the better.
  id: totrans-split-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 分享这篇文章，或者如果你有自己的博客，请就此问题撰写自己的文章！这个问题得到的公众关注越多，越好。
- en: The part where I backtrack a bit
  id: totrans-split-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我稍微退缩的那一部分
- en: Having said all of this, is SMS 2FA completely evil? The answer is actually
    complex. First, while SMS 2FA is insecure, it is better than no 2FA at all, since
    it can function as a deterrent to a casual hacker. Second, it is user-friendly.
    TOTP, passkeys, and physical security keys all tend to be more effort to learn
    to use than a simple SMS verification scheme. To successfully remove SMS 2FA,
    we’ll have to educate the general public on how to use the alternatives or create
    a truly simple-to-use alternative. I do think that passkeys could become a good
    solution, however, as device and browser makers have put a lot of effort into
    making them a seamless option.
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我说了这么多，短信两步验证完全邪恶吗？答案实际上很复杂。首先，虽然短信两步验证不安全，但比没有两步验证要好，因为它可以作为对一般黑客的威慑。其次，它很用户友好。与TOTP、密码密钥和物理安全密钥相比，简单的短信验证方案更容易学习使用。要成功地取消短信两步验证，我们需要教育大众如何使用替代方案，或者创建一个真正简单易用的替代方案。我认为密码密钥可能会成为一个好的解决方案，因为设备和浏览器制造商已经付出了很多努力，使它们成为一个无缝的选项。
- en: Conclusion
  id: totrans-split-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: I hope you enjoyed reading this little rant here. Hopefully, you were inspired
    to take action in some way to help remedy the SMS 2FA problem. If you sent a letter
    to your government representative or started a discussion at your company to try
    to remove SMS 2FA, please leave a comment below! If this post gathers enough attention
    and people start logging their actions below, I’ll create a page tracking all
    our SMS 2FA shenanigans to help keep tabs on the situation.
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你喜欢阅读这篇小小的抱怨。希望你能因此受到启发，以某种方式采取行动来帮助解决短信两步验证的问题。如果你给你的政府代表写了一封信，或者在你的公司开始了一场讨论，试图取消短信两步验证，请在下方留言！如果这篇文章引起了足够的关注，人们开始记录他们的行动，我将创建一个页面来追踪我们所有的短信两步验证活动，以帮助监控这个情况。
- en: Comments
  id: totrans-split-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评论
- en: powered by [Cactus Comments](https://cactus.chat)
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: 由 [仙人掌评论](https://cactus.chat) 提供动力
