["```\nimport os\nimport time\n\nimport sysv_ipc\n\nROUNDS = 100\n\ndef run():\n    path = '/tmp/example'\n    fd = os.open(path, flags=os.O_CREAT)\n    os.close(fd)\n    key = sysv_ipc.ftok(path, 42)\n    mem = sysv_ipc.SharedMemory(key, size=20, flags=sysv_ipc.IPC_CREAT, mode=0o644)\n    i = 0\n    message = b\"ping\"\n    while i != ROUNDS:\n        mem.write(message)\n        print(\"Client: Sent ping\")\n        data = mem.read(4)\n        while data == message:\n            time.sleep(1e-6)\n            data = mem.read(4)\n        data = data.decode()\n        print(f\"Client: Received {data}\")\n        i += 1\n    mem.write(b\"end\")\n    mem.detach()\n\nrun() \n```", "```\nimport os\nimport time\n\nimport sysv_ipc\n\ndef run():\n    path = '/tmp/example'\n    fd = os.open(path, flags=os.O_CREAT) # create file\n    os.close(fd)\n    key = sysv_ipc.ftok(path, 42)\n    mem = sysv_ipc.SharedMemory(key, size=20, flags=sysv_ipc.IPC_CREAT, mode=0o644)\n    data = mem.read(4)\n    message = b\"pong\"\n    while data != b\"ping\":\n        time.sleep(5e-6)\n        data = mem.read(4)\n    data = data.decode()\n    while data[0] != 'e':\n        print(f\"Server: Received {data}\")\n        mem.write(message)\n        print(f\"Server: Sent pong\")\n        data = mem.read(4)\n        while data == message:\n            time.sleep(1e-6)\n            data = mem.read(4)\n        data = data.decode()\n    mem.remove()\n    mem.detach()\n    os.unlink(path)\n\nrun() \n```"]