- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-27 14:31:52'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:31:52
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Why Isn’t the Element 100% Supported on CanIUse.com? | anderegg.ca
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Why Isn’t the Element 100% Supported on CanIUse.com? | anderegg.ca
- en: 来源：[https://anderegg.ca/2024/02/02/why-isnt-the-html-element-100-supported](https://anderegg.ca/2024/02/02/why-isnt-the-html-element-100-supported)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://anderegg.ca/2024/02/02/why-isnt-the-html-element-100-supported](https://anderegg.ca/2024/02/02/why-isnt-the-html-element-100-supported)
- en: Why Isn't the <html> Element 100% Supported on CanIUse.com?
  id: totrans-split-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么在 CanIUse.com 上 `<html>` 元素不被 100% 支持？
- en: February 02, 2024
  id: totrans-split-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: February 02, 2024
- en: I saw a [Mastodon post](https://mastodon.gamedev.place/@Ronflaix/111862153259345050)
    that made me laugh this morning. It seemed sort of crazy that the `html` element
    [wouldn’t have 100% support](https://caniuse.com/mdn-html_elements_html) on CanIUse.com.
    Heck, I’ve been using it since 1994 and it worked just fine back then! This led
    me down a bit of a rabbit hole.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 今早我看了一个 [Mastodon 帖子](https://mastodon.gamedev.place/@Ronflaix/111862153259345050)，让我感到很好笑。早上的时候，看到
    `html` 元素在 CanIUse.com 上 [没有 100% 的支持](https://caniuse.com/mdn-html_elements_html)
    ，感觉有点疯狂！自从 1994 年开始使用它，当时它的确很好用！这让我进入了一个小小的深坑。
- en: A bit of background, first. [Can I Use…](https://caniuse.com) is a site that
    helps web developers track the adoption rate of web technologies. It estimates
    browser usage, measures feature compatibility, and spits out a number that tries
    to reflect how available a feature is. It’s a site I’ve been using almost since
    [it launched in 2010](https://web.archive.org/web/20100430032738/http://caniuse.com/)
    and I’ve always found it really useful.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 背景简介。[Can I Use…](https://caniuse.com) 是一个帮助网页开发者追踪网页技术采用率的网站。它估计浏览器使用情况，测量特性兼容性，并提供一个反映特性可用性的数字。自
    [2010 年推出](https://web.archive.org/web/20100430032738/http://caniuse.com/) 以来，我一直在使用这个网站，并且一直觉得它非常有用。
- en: So why is it currently saying the `html` element only has 97.34% support? That’s
    less than the current support percentage for the [`audio` element](https://caniuse.com/audio)!
    It also looks like the same is true for the [`a`](https://caniuse.com/mdn-html_elements_a)
    and [`p`](https://caniuse.com/mdn-html_elements_p) elements with exactly the same
    97.34% support number.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，为什么目前 CanIUse.com 上显示 `html` 元素只有 97.34% 的支持？这比当前 [`audio` 元素的支持率](https://caniuse.com/audio)
    还要低！看起来 [`a`](https://caniuse.com/mdn-html_elements_a) 和 [`p`](https://caniuse.com/mdn-html_elements_p)
    元素的支持率也正好是相同的 97.34%。
- en: One thing I learned when looking into this is that a lot of the data on the
    site actually comes from [MDN](https://developer.mozilla.org/en-US/) ^(. MDN is
    another resource I use and trust, so this seems reasonable to me. It also often
    has stats about feature uptake, so it makes sense for CanIUse.com to piggyback
    on that.)
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在调查的过程中，我学到的一件事是，这个网站上的许多数据实际上来自 [MDN](https://developer.mozilla.org/en-US/)
    ^(. MDN 是我另一个使用和信任的资源，所以这对我来说很合理。它也经常有关于特性采用情况的统计数据，所以 CanIUse.com 借用这些数据是有道理的。)
- en: Looking at the [MDN page for the `html` element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html),
    it has a [browser compatibility section](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html#browser_compatibility).
    In that are two rows with a lot of red Xs. The first is for the optional `manifest`
    attribute on the `html` element. This is deprecated and was never standardized.
    The second is the related “[secure context required](https://w3c.github.io/webappsec-secure-contexts/)”,
    which is an [Editor’s Draft](https://www.w3.org/standards/types/#x2-3-editor-s-draft)
    — that is, not something currently on the standardization track. I don’t know
    how this was previously related to the `html` element, but that use was also [never
    standardized and is deprecated](https://caniuse.com/mdn-html_elements_html_manifest_secure_context_required).
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 查看 [MDN 上的 `html` 元素页面](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html)，它有一个
    [浏览器兼容性部分](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html#browser_compatibility)。其中有两行显示了很多红色的
    X。第一行是关于 `html` 元素上的可选 `manifest` 属性。这个属性已被废弃且从未标准化。第二行涉及 “[secure context required](https://w3c.github.io/webappsec-secure-contexts/)”，这是一个
    [编辑草案](https://www.w3.org/standards/types/#x2-3-editor-s-draft) — 也就是说，目前不在标准化追踪上。我不知道这与
    `html` 元素之前的关联是如何的，但该用法同样 [从未标准化且已废弃](https://caniuse.com/mdn-html_elements_html_manifest_secure_context_required)。
- en: So, there are two features listed here that almost all browsers *correctly*
    do not support. But still, it doesn’t look like this is the reason for the missing
    2.66%. There are some browsers that are listed as “Support Unknown”. Adding up
    all the current usage for these browsers comes to 1.27%. There’s also an entry
    for Android Browser versions 2.1–4.3 which is listed as not supporting the `html`
    element — which I find highly dubious — but it’s listed as having a usage share
    of 0%. I suppose there might be some rounding errors here that would bump the
    1.27% to 2.66%? But I still find this very unclear. Also, I feel very confident
    that those older browsers supported the `html` element!
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在这里列出的两个特性，几乎所有浏览器都*正确地*不支持。但是，看起来这并不是缺失2.66%的原因。有一些浏览器被列为“支持情况未知”。将这些浏览器当前的使用情况加起来，总共为1.27%。还有一个条目是Android浏览器版本2.1至4.3，据说不支持`html`元素
    —— 我觉得这很可疑 —— 但列为使用份额为0%。我想这里可能有一些四舍五入误差，可能会把1.27%增加到2.66%？但我仍然觉得这一点很不清楚。而且，我非常有信心那些旧版本的浏览器支持`html`元素！
- en: So yeah, I don’t have a great answer for this. If you do, [please let me know](https://mastodon.social/@gavinanderegg)!
    I’ve always taken the numbers from CanIUse.com with a few grains of salt, but
    I’ll be adding a few more going forward. I still think it’s a great resource.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，对于这个问题，我没有一个很好的答案。如果你有的话，请在[这里告诉我](https://mastodon.social/@gavinanderegg)！我一直以来对CanIUse.com上的数据持保留态度，但今后我会再添加几个。我仍然认为这是一个很好的资源。
- en: '* * *'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**UPDATE:** [rezonant](https://cliff.social/@rezonant) on Mastodon poked me
    to let me know that he posted a [comment on Hacker News](https://news.ycombinator.com/item?id=39236148)
    that has a possible explanation. The short version: if you switch to “% of all
    tracked” in the top right beside “usage”, and then add up the “support unknown”
    browser number, you get 99.98%. It’s a lot easier to see how rounding errors could
    make this the correct number. Still, I think the way older browsers are handled
    here is confusing. It doesn’t affect the overall number too much, but in the case
    of base level elements like `html`, it seems odd.'
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**更新：** [rezonant](https://cliff.social/@rezonant) 在Mastodon上提醒我，他在Hacker News上发表了一篇[评论](https://news.ycombinator.com/item?id=39236148)，提出了一个可能的解释。简而言之：如果你在右上角的“使用率”旁边切换到“所有已追踪的百分比”，然后将“支持情况未知”的浏览器数字加起来，你会得到99.98%。这样更容易看出四舍五入误差可能使这个数字正确。但我认为这里对待旧版本浏览器的方式令人困惑。这并不会对总体数字产生太大影响，但在像`html`这样的基础元素的情况下，这似乎很奇怪。'
- en: '* * *'
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
