- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-29 13:20:47'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-29 13:20:47'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Almost a fully open-source boot chain for Rockchip's RK3588!
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 几乎完全开源的 Rockchip RK3588 引导链！
- en: 来源：[https://www.collabora.com/news-and-blog/blog/2024/02/21/almost-a-fully-open-source-boot-chain-for-rockchips-rk3588/](https://www.collabora.com/news-and-blog/blog/2024/02/21/almost-a-fully-open-source-boot-chain-for-rockchips-rk3588/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.collabora.com/news-and-blog/blog/2024/02/21/almost-a-fully-open-source-boot-chain-for-rockchips-rk3588/](https://www.collabora.com/news-and-blog/blog/2024/02/21/almost-a-fully-open-source-boot-chain-for-rockchips-rk3588/)
- en: Eugen Hristev
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Eugen Hristev
- en: February 21, 2024
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 2024年2月21日
- en: '***Now included in our Debian images & available via our GitLab, you can build
    a complete, working BL31 (Boot Loader stage 3.1), and replace the closed binary
    blob with an open-source binary that anyone can compile.***'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '***现在已经包含在我们的 Debian 镜像中，并通过我们的 GitLab 可用，您可以构建一个完整的、工作的 BL31（引导加载程序阶段3.1），并用任何人都可以编译的开源二进制替换闭源二进制。***'
- en: In resuming our efforts in getting Rockchip's RK3588 supported upstream, we
    can see that recently the boot-chain has improved in the sense that the open-source
    BL31 (Boot Loader stage 3.1) from TF-A is now included in our Debian images, which
    are published on our [GitLab](https://gitlab.collabora.com/hardware-enablement/rockchip-3588).
    Previously, to build U-Boot, the stage 2 SPL (Secondary Program Loader) and stage
    3 U-Boot proper, it was mandatory to include a closed-source DDR training binary
    blob and also a pre-built BL31 blob from the vendor.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 恢复我们的努力，以获得 Rockchip 的 RK3588 在上游的支持，我们可以看到最近引导链的改进，即来自 TF-A 的开源 BL31（引导加载程序阶段3.1）现在包含在我们的
    Debian 镜像中，这些镜像发布在我们的[GitLab](https://gitlab.collabora.com/hardware-enablement/rockchip-3588)上。以前，要构建
    U-Boot，需要包含一个闭源 DDR 训练二进制 Blob 和来自供应商的预构建 BL31 Blob。
- en: TF-A is the Trusted-Firmware for Cortex-A cores (which are also the types of
    cores used by the RK3588). Currently this project is the defacto standard trusted
    firmware for ARM SoCs, but it does not support the RK3588\. However Rockchip have
    sent a few patches to the TF-A project [here](https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/21840)
    to support this product. We had the chance to look at these patches, try them
    out, and put them together in a [dedicated repository](https://gitlab.collabora.com/hardware-enablement/rockchip-3588/trusted-firmware-a)
    on our RK3588 enablement effort's page. From TF-A we can now build a complete
    working BL31 and replace the closed binary blob with an open-source binary that
    we can compile ourselves.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: TF-A 是 Cortex-A 核心的可信固件（RK3588 也使用这种类型的核心）。目前，这个项目是 ARM SoC 的事实标准可信固件，但不支持 RK3588。然而，瑞芯微已经向
    TF-A 项目[提交了一些补丁](https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/21840)
    来支持这款产品。我们有机会查看这些补丁，尝试它们，并将它们整合到我们 RK3588 支持工作的[专用存储库](https://gitlab.collabora.com/hardware-enablement/rockchip-3588/trusted-firmware-a)中。现在我们可以从
    TF-A 构建完整的工作 BL31，并用我们自己编译的开源二进制替换闭源二进制。
- en: 'Here is a log of RK3588 booting using the open-source TF-A BL31 stage:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这是使用开源 TF-A BL31 阶段的 RK3588 引导的日志：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This is an excellent step towards making the boot chain completely open, more
    reliable, and easier to tweak. Previously, closed source binary blobs were opaque,
    nobody (except Rockchip) knew what the software was doing and nobody (except Rockchip)
    could apply bug fixes, updates, or changes. With this new possibility, we can
    solve issues, improve security , provide new features, and much more due to the
    fact that everyone has access and can review the code in TF-A.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这是朝着使引导链完全开放、更可靠、更易于调整的一个极好的步骤。以前，闭源二进制 Blob 是不透明的，除了瑞芯微之外，没有人知道软件在做什么，也没有人（除了瑞芯微）能够应用错误修复、更新或更改。有了这种新的可能性，我们可以解决问题，提高安全性，提供新功能，以及更多，因为每个人都可以访问并审查
    TF-A 中的代码。
- en: There are still some missing parts and the most important that is remaining
    right now is the DDR training blob, which is still closed source.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 仍然有一些缺失的部分，目前最重要的是 DDR 训练的二进制，它仍然是闭源的。
- en: 'At the moment of writing this article, we have identified a few differences
    from the binary blob previously used, which we can highlight as following:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，我们已经确定了与先前使用的二进制 Blob 有一些不同之处，我们可以总结如下：
- en: There could be more issues that are unknown at the moment and users should be
    aware of it.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 目前可能还有更多未知的问题，用户应该注意这一点。
- en: As always, our Notes repository holds all the information and a tutorial on
    how to build and flash the bootloader images on boards like the Radxa's Rock-5B
    [here](https://gitlab.collabora.com/hardware-enablement/rockchip-3588/notes-for-rockchip-3588/-/blob/main/upstream_uboot.md?ref_type=heads).
    If you are keen on trying prebuilt images, our Debian recipes repository builds
    them every day with the latest development and [you can download them directly
    from here](https://gitlab.collabora.com/hardware-enablement/rockchip-3588/debian-image-recipes/-/pipelines)!
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 与往常一样，我们的 Notes 存储库包含所有信息和关于如何在 Radxa's Rock-5B 等板上构建和刷写引导程序图像的教程[在这里](https://gitlab.collabora.com/hardware-enablement/rockchip-3588/notes-for-rockchip-3588/-/blob/main/upstream_uboot.md?ref_type=heads)。如果您想尝试预构建的镜像，我们的
    Debian 配方存储库每天都会构建它们，并且[您可以直接从这里下载它们](https://gitlab.collabora.com/hardware-enablement/rockchip-3588/debian-image-recipes/-/pipelines)！
