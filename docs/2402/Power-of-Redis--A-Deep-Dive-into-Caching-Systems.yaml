- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 14:51:49'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:51:49
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Power of Redis: A Deep Dive into Caching Systems'
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Redis的力量：深入了解缓存系统
- en: 来源：[https://nintyzeros.substack.com/p/power-of-redis-a-deep-dive-into-caching](https://nintyzeros.substack.com/p/power-of-redis-a-deep-dive-into-caching)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://nintyzeros.substack.com/p/power-of-redis-a-deep-dive-into-caching](https://nintyzeros.substack.com/p/power-of-redis-a-deep-dive-into-caching)
- en: '*👋 Hi, this is [](https://twitter.com/gergelyorosz) Venkat and here with a
    full issue of the The ZenMode Engineer Newsletter. In every issue, I cover one
    topic explained in a simpler terms in areas related to computer technologies and
    beyond.*'
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*👋 嗨，这是 [](https://twitter.com/gergelyorosz) Venkat，我在这里带着《ZenMode工程师通讯》的整个问题。每期我都会简单解释一个与计算机技术及其它相关领域相关的主题。*'
- en: '* * *'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: In the realm of high-performance applications, caching systems like Redis stand
    as guardians of speed and efficiency.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在高性能应用程序领域，像Redis这样的缓存系统是速度和效率的守护者。
- en: They act as intermediaries, intercepting data requests and serving up frequently
    accessed information with lightning-fast speed, all while shielding your primary
    data source from excessive load.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 它们充当中间人，拦截数据请求并以闪电般的速度提供经常访问的信息，同时保护您的主要数据源免受过大负荷的影响。
- en: But how do these systems work their magic? Buckle up, as we delve into understanding
    Redis and its caching techniques.(***Detailed architecture and Use cases (Paid))***
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 但这些系统是如何发挥魔力的呢？准备好了吗，让我们深入理解Redis及其缓存技术。（***详细架构和使用案例（付费）***）
- en: But before that… What is actually caching and why do we even need it?
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 但在此之前... 什么是缓存？为什么我们需要它？
- en: Imagine you're walking to your own cafe(for work ofcourse!).
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，你走到自己的咖啡馆（当然是为了工作！）。
- en: There is a demand for specific coffee bean ☕everyday in the morning.☀
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 每天早上都有特定的咖啡豆☕需求。
- en: What do you do ?
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你会做什么？
- en: Instead of searching the whole pantry every morning, you keep a jar of instant
    coffee readily available for quick brews.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 与每天早晨在整个食品储藏室寻找不同，您将速溶咖啡罐放在手边以便快速冲泡。
- en: 'That''s the essence of ***caching***:'
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是***缓存***的本质：
- en: Storing frequently used data in a readily accessible location for faster retrieval.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 将经常使用的数据存储在方便快速访问的位置以加快检索速度。
- en: In the digital world, data often resides on hard drives, which are slower than
    your computer's memory (RAM).
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在数字世界中，数据通常存储在比计算机内存（RAM）更慢的硬盘上。
- en: Accessing data from a hard drive is like walking to the pantry, whereas accessing
    data in RAM is like grabbing the instant coffee from the jar.
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 从硬盘访问数据就像走到食品储藏室，而从RAM访问数据就像从罐子里取出速溶咖啡一样快。
- en: 'So caching is basically needed if you demand:'
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果您需要：
- en: '**Speed:** It dramatically improves response times. Just like you get your
    coffee faster with instant coffee, your applications and websites load quicker
    with cached data.⚡⚡'
  id: totrans-split-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**速度：** 它显著提高了响应时间。就像您通过速溶咖啡更快地获取咖啡一样，您的应用程序和网站通过缓存数据加载速度更快。⚡⚡'
- en: '**Reduced Load:** Frequent database access can overload it, impacting performance.
    Caching reduces the burden on the database, ensuring smooth operation.🔃'
  id: totrans-split-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**减少负载：** 频繁访问数据库可能会使其过载，影响性能。缓存减轻了数据库的负担，确保平稳运行。🔃'
- en: '**Cost-Effectiveness:** By minimizing database usage, caching can lead to lower
    server costs, especially for high-traffic applications. 💲💲💲'
  id: totrans-split-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成本效益：** 通过最小化数据库使用，缓存可以降低服务器成本，特别是对于高流量的应用程序。💲💲💲'
- en: While there are different types of caching. You can optimize it based on your
    requirements
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管有不同类型的缓存，您可以根据需求进行优化。
- en: '**Browser Caching:** Stores website data on your device for faster future visits.'
  id: totrans-split-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**浏览器缓存：** 将网站数据存储在您的设备上，以便未来访问更快。'
- en: '**Application Caching:** Specific applications implement their own caching
    mechanisms.'
  id: totrans-split-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用程序缓存：** 特定应用程序实现其自己的缓存机制。'
- en: '**Content Delivery Networks (CDNs):** Distribute cached content across geographically
    dispersed servers for faster global access.'
  id: totrans-split-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内容分发网络（CDN）：** 将缓存内容分布在地理位置分散的服务器上，以加快全球访问速度。'
- en: okay, lets get back to Redis!
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，让我们回到Redis！
- en: '[Redis](https://redis.io/?ref=architecturenotes.co) (“***RE***mote ***DI***ctionary
    ***S***ervice”) is an open-source key-value database server.'
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[Redis](https://redis.io/?ref=architecturenotes.co)（“***RE***mote ***DI***ctionary
    ***S***ervice”）是一个开源的键值数据库服务器。'
- en: The most accurate description of Redis is that it's a data structure server.
    This specific nature of Redis has led to much of its popularity and adoption amongst
    developers.
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: Redis最准确的描述是它是一个数据结构服务器。Redis特有的这种特性使其在开发者中广受欢迎和采用。
- en: Imagine a library where the most popular books are readily available on a dedicated
    shelf instead of tucked away in the stacks.
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一个图书馆，最受欢迎的书籍可以立即在专用书架上找到，而不是藏在书架中。
- en: That's the key principle behind Redis - it stores frequently accessed data **in
    memory (RAM)**, which is significantly faster than traditional disk-based storage.
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是Redis的关键原则 - 它将频繁访问的数据存储在内存（RAM）中，比传统基于磁盘的存储快得多。
- en: This translates to lightning-fast data retrieval, a stark contrast to the sluggishness
    of accessing data from databases.
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着数据检索速度极快，与从数据库中访问数据的缓慢形成鲜明对比。
- en: But speed isn't everything.
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
  zh: 但速度并非一切。
- en: Caching systems also embrace the power of key-value stores.
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
  zh: 缓存系统也充分利用了键值存储的强大功能。
- en: Think of them as digital dictionaries where each data item is associated with
    a unique key.
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: 将它们视为数字词典，其中每个数据项与唯一键关联。
- en: This allows for quick lookups and retrieval, eliminating the need to scan through
    vast amounts of data to find what you need based on below key concepts.
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得快速查找和检索成为可能，无需扫描大量数据以找到所需的内容，基于下面的关键概念。
- en: '**Hashing:** Used for mapping keys to data locations in memory. Redis employs
    its own hashing function (MurmurHash) for efficient key distribution and retrieval.'
  id: totrans-split-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**哈希：** 用于在内存中将键映射到数据位置。Redis使用自己的哈希函数（MurmurHash）来进行高效的键分布和检索。'
- en: '**Skip Lists:** Used in Sorted Sets for efficiently maintaining ordered elements
    based on scores. Skip lists offer logarithmic time complexity for insertion, deletion,
    and retrieval operations.'
  id: totrans-split-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**跳跃表：** 在有序集合中用于有效地维护基于分数的有序元素。跳跃表提供对插入、删除和检索操作的对数时间复杂度。'
- en: '**Pub/Sub:** Leverages a publish-subscribe pattern for real-time data updates.
    Channels act as topics, and subscribers are notified of new messages published
    to relevant channels.'
  id: totrans-split-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发布/订阅：** 利用发布-订阅模式进行实时数据更新。频道充当主题，订阅者会收到发布到相关频道的新消息的通知。'
- en: 'It boasts a diverse set of data structures that cater to various needs:'
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
  zh: 它拥有一系列适应各种需求的数据结构：
- en: 'Let''s delve into each Redis data structure with some concrete examples to
    illustrate their use cases:'
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入探讨每种Redis数据结构，并用一些具体的例子来说明它们的用例：
- en: '**Simple Strings types:**'
  id: totrans-split-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**简单字符串类型：**'
- en: Consider Caching frequently accessed user profiles, storing website configuration
    settings, or keeping track of simple counters.
  id: totrans-split-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 考虑缓存频繁访问的用户配置文件，存储网站配置设置，或跟踪简单计数器。
- en: Storing a user's name under the key "username:JohnDoe" with the value "John
    Smith".
  id: totrans-split-45
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 将用户的姓名存储在键“username:JohnDoe”下，值为“John Smith”。
- en: '**Hashes types:**'
  id: totrans-split-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**哈希类型：**'
- en: Storing user profiles with multiple attributes, product information with various
    details, or shopping cart contents with item IDs and quantities.
  id: totrans-split-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 存储具有多个属性的用户配置文件，带有各种详细信息的产品信息，或者购物车内容，包括项目ID和数量。
- en: Storing a user's profile information under the key "user:123" with fields like
    "name", "email", and "age".
  id: totrans-split-48
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 将用户的配置文件信息存储在键“user:123”下，包括“name”，“email”和“age”字段。
- en: '**Lists:**'
  id: totrans-split-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**列表：**'
- en: Implementing task queues, managing chat message history, or creating a to-do
    list application.
  id: totrans-split-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 实现任务队列，管理聊天消息历史记录，或创建待办事项列表应用程序。
- en: Using a list called "todo:JohnDoe" to store tasks like "Buy groceries", "Finish
    report", and "Call mom".
  id: totrans-split-51
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 使用名为“todo:JohnDoe”的列表来存储任务，例如“购买杂货”，“完成报告”和“给妈妈打电话”。
- en: '**Sets:**'
  id: totrans-split-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**集合：**'
- en: Filtering duplicate entries, checking user membership in groups, or implementing
    real-time chat room member lists.
  id: totrans-split-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 过滤重复条目，检查用户是否属于组，或实现实时聊天室成员列表。
- en: Using a set called "unique_users" to store unique user IDs for website analytics.
  id: totrans-split-54
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 使用名为“unique_users”的集合来存储网站分析中的唯一用户ID。
- en: '**Sorted Sets:**'
  id: totrans-split-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**有序集合：**'
- en: Creating leaderboards for games or competitions, prioritizing tasks based on
    importance, or implementing real-time trending topics.
  id: totrans-split-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建游戏或竞赛排行榜，根据重要性优先处理任务，或实现实时热门话题。
- en: Using a sorted set called "leaderboard" to rank users based on their scores
    in a game, with the highest score at the top.
  id: totrans-split-57
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 使用名为“leaderboard”的有序集合来根据游戏中的得分对用户进行排名，最高分位于顶部。
- en: 'Additionally, it also supports:'
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，它还支持：
- en: '**Redis Streams:** Imagine a social media platform like Twitter using Redis
    Streams to process and store a high volume of tweets in real-time.'
  id: totrans-split-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Redis Streams：** 想象一个社交媒体平台像Twitter使用Redis Streams来实时处理和存储大量的推文。'
- en: '**Redis Pub/Sub:** A news website could use Redis Pub/Sub to broadcast breaking
    news updates to all subscribed users instantly.'
  id: totrans-split-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Redis Pub/Sub：** 新闻网站可以使用Redis Pub/Sub将突发新闻更新实时广播给所有订阅用户。'
- en: '**Redis Lua Scripting:** An e-commerce platform might use Lua scripting to
    conditionally update product prices based on specific criteria within Redis.'
  id: totrans-split-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Redis Lua脚本：** 一个电子商务平台可能会使用Lua脚本在Redis中根据特定条件条件性地更新产品价格。'
- en: This flexibility allows Redis to adapt to a wide range of use cases, from caching
    frequently accessed website content to powering real-time chat applications.
  id: totrans-split-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这种灵活性使Redis能够适应广泛的用例，从缓存经常访问的网站内容到支持实时聊天应用程序。
- en: Remember, the choice of data structure depends on your specific needs and the
    type of data you're working with.
  id: totrans-split-63
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，数据结构的选择取决于您的具体需求和您正在处理的数据类型。
- en: By understanding these diverse options, you can leverage Redis to its full potential
    and build efficient, scalable applications.
  id: totrans-split-64
  prefs: []
  type: TYPE_NORMAL
  zh: 通过理解这些多样化的选择，您可以充分利用Redis，构建高效、可扩展的应用程序。
- en: '**So, how does the magic happen?**'
  id: totrans-split-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**那么，魔法是如何发生的呢？**'
- en: Imagine your web browser wants to display a website. *It first asks Redis, "Hey,
    do you have the content for this page?"*
  id: totrans-split-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 想象一下，您的网络浏览器想要显示一个网站。*它首先询问Redis，“嘿，你有这个页面的内容吗？”*
- en: Redis acts like a super-fast librarian. It checks its "memory shelves" (RAM)
    to see if the requested data is there.
  id: totrans-split-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Redis就像一个超级快的图书管理员。它检查其“内存书架”（RAM），看看请求的数据是否存在。
- en: This check happens in microseconds, much faster than searching a traditional
    database on a hard drive.
  id: totrans-split-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个检查过程发生在微秒级，比在硬盘上搜索传统数据库要快得多。
- en: If Redis finds the data (a **cache hit**!), it's like finding the book right
    away on the shelf. It sends the data to the browser instantly, resulting in a
    blazing-fast page load.
  id: totrans-split-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果Redis找到了数据（缓存命中！），就像立即在书架上找到书一样。它立即将数据发送给浏览器，结果是极快的页面加载速度。
- en: If the data isn't in the cache (a **cache miss**), it's like the book being
    checked out or misplaced. Redis then goes to the slower "main library" (database)
    to retrieve the data.
  id: totrans-split-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果数据不在缓存中（缓存未命中），就像书被借走或丢失了一样。然后Redis会去更慢的“主图书馆”（数据库）中检索数据。
- en: Redis retrieves the data from the database and, like a good librarian, also
    adds it to its own "memory shelves" for future requests. This way, if someone
    else wants the same page, it's readily available in the cache, saving another
    trip to the database.
  id: totrans-split-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Redis从数据库中检索数据，并像一个好的图书管理员一样，将其添加到自己的“内存书架”中以备将来请求。这样，如果其他人需要同一页内容，它就可以从缓存中快速获取，避免再次访问数据库。
- en: Like a library backing up its collection, Redis can optionally write the cached
    data to disk (RDB or AOF) in case of power outages or restarts. This ensures data
    isn't lost, but it's slower than keeping it purely in memory.
  id: totrans-split-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就像图书馆备份其收藏一样，Redis可以选择将缓存的数据写入磁盘（RDB或AOF），以防停电或重启时丢失数据。这确保数据不会丢失，但速度比纯内存存储要慢。
- en: '**key Insights:**'
  id: totrans-split-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**关键见解：**'
- en: Redis has various "data structures" like strings, lists, and sets, each suited
    for different types of information. Imagine different sections in the library
    for different content formats.
  id: totrans-split-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Redis拥有各种“数据结构”，如字符串、列表和集合，每种都适用于不同类型的信息。想象图书馆中不同部分用于不同的内容格式。
- en: Caching doesn't have to be perfect. Sometimes, data in the cache might be slightly
    outdated, but the trade-off for speed is often worth it.
  id: totrans-split-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缓存并不需要完美。有时，缓存中的数据可能稍有过时，但通常为了速度所做的权衡是值得的。
- en: Redis can also be used for real-time data processing, leaderboards, and more,
    not just caching. It's a versatile tool for many data needs.
  id: totrans-split-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Redis还可以用于实时数据处理、排行榜等，不仅仅是缓存。它是多种数据需求的多功能工具。
- en: '*But you might think how Redis is so fast ryt ?*'
  id: totrans-split-77
  prefs: []
  type: TYPE_NORMAL
  zh: '*但是你可能会想，Redis为什么这么快呢？*'
- en: 'The blazing speed of Redis compared to traditional databases boils down to
    two key factors: **in-memory storage** and **optimized data structures**.'
  id: totrans-split-78
  prefs: []
  type: TYPE_NORMAL
  zh: Redis比传统数据库更快的惊人速度归结为两个关键因素：**内存存储**和**优化的数据结构**。
- en: But additional to these factors its much faster because of
  id: totrans-split-79
  prefs: []
  type: TYPE_NORMAL
  zh: 但除了这些因素之外，它的速度要快得多，因为
- en: '**Reduced I/O Operations:** Accessing data in RAM bypasses disk I/O operations,
    eliminating bottlenecks and delays associated with hard drives.'
  id: totrans-split-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**减少I/O操作：** 直接访问RAM中的数据可以避免磁盘I/O操作，消除与硬盘相关的瓶颈和延迟。'
- en: '**Single-Threaded Architecture:** Unlike databases with complex multi-threaded
    processing, Redis uses a single-threaded model, simplifying operations and minimizing
    overhead.'
  id: totrans-split-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**单线程架构：** 与复杂的多线程处理数据库不同，Redis采用单线程模型，简化操作并减少开销。'
- en: '**Event-Driven Design:** Redis reacts to requests efficiently with its event-driven
    architecture, handling multiple clients without context switching delays.'
  id: totrans-split-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件驱动设计：** Redis以其事件驱动的架构高效地响应请求，处理多个客户端而无需上下文切换延迟。'
- en: But even with this advantages there is a few limitation to it.
  id: totrans-split-83
  prefs: []
  type: TYPE_NORMAL
  zh: 但即使有这些优点，它也有一些限制。
- en: '**Limited Capacity:** RAM is smaller than hard drives, so Redis can''t store
    massive datasets.'
  id: totrans-split-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**容量有限：** RAM 小于硬盘，因此 Redis 无法存储大规模数据集。'
- en: '**Data Persistence:** By default, Redis data is volatile and lost upon restarts.
    Persistence options (RDB/AOF) exist but come with performance trade-offs.'
  id: totrans-split-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据持久化：** 默认情况下，Redis 数据在重新启动时是易失的。持久化选项（RDB/AOF）存在但会带来性能权衡。'
- en: '**RDB (Snapshotting):** Periodically takes snapshots of the entire dataset
    and stores them on disk. Offers durability but incurs performance overhead.'
  id: totrans-split-86
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**RDB（快照）：** 定期对整个数据集进行快照并存储在磁盘上。提供持久性但会增加性能开销。'
- en: '**AOF (Append-Only File):** Logs every write operation sequentially. Ensures
    data durability but can be slower than RDB.'
  id: totrans-split-87
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**AOF（追加文件）：** 按顺序记录每个写操作。确保数据持久性但可能比 RDB 慢。'
- en: '**Choosing the Right Caching System is a balancing act**'
  id: totrans-split-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**选择正确的缓存系统是一种平衡行为**'
- en: 'The decision to adopt a caching system like Redis depends on several factors:'
  id: totrans-split-89
  prefs: []
  type: TYPE_NORMAL
  zh: 采用像 Redis 这样的缓存系统的决定取决于几个因素：
- en: '**Data Size and Access Patterns:** In-memory caches excel with frequent accesses
    to smaller datasets.'
  id: totrans-split-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据大小和访问模式：** 内存缓存在频繁访问较小数据集时表现出色。'
- en: '**Consistency Requirements:** Decide between eventual consistency (cache updates
    eventually reflect changes) or strong consistency (instantaneous cache updates).'
  id: totrans-split-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一致性要求：** 在最终一致性（缓存更新最终反映更改）和强一致性（即时缓存更新）之间做出选择。'
- en: '**Fault Tolerance:** Consider clustering and data persistence for high availability
    and data durability.'
  id: totrans-split-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**容错性：** 考虑集群化和数据持久化以实现高可用性和数据持久性。'
- en: Thank you for reading The ZenMode. This post is public so feel free to share
    it.
  id: totrans-split-93
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您阅读 The ZenMode。此文章为公开文章，欢迎分享。
- en: '[Share](https://nintyzeros.substack.com/p/power-of-redis-a-deep-dive-into-caching?utm_source=substack&utm_medium=email&utm_content=share&action=share)'
  id: totrans-split-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[分享](https://nintyzeros.substack.com/p/power-of-redis-a-deep-dive-into-caching?utm_source=substack&utm_medium=email&utm_content=share&action=share)'
- en: let's discuss the various Redis deployments and their trade-offs.
  id: totrans-split-95
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们讨论各种 Redis 部署及其权衡。
- en: 'We will be focusing mainly on these configurations:'
  id: totrans-split-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们主要关注这些配置：
- en: Single Redis Instance
  id: totrans-split-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单个 Redis 实例
- en: Redis HA
  id: totrans-split-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Redis 高可用性
- en: Redis Sentinel
  id: totrans-split-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Redis Sentinel
- en: Redis Cluster
  id: totrans-split-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Redis 集群
- en: Depending on your use case and scale, you can decide to use one setup or another.
  id: totrans-split-101
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您的使用情况和规模，您可以决定使用其中一种设置。
