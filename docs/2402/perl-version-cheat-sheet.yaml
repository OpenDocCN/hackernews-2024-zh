- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 14:34:27'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:34:27
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: perl version cheat sheet
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Perl版本速查表
- en: 来源：[https://sheet.shiar.nl/perl/](https://sheet.shiar.nl/perl/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://sheet.shiar.nl/perl/](https://sheet.shiar.nl/perl/)
- en: Perl release summary
  id: totrans-split-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Perl发布摘要
- en: The most significant features introduced for recent versions of the Perl scripting
    language.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 最近Perl脚本语言的重要功能介绍。
- en: Core security support is provided for 3 years, so typical users should run at
    least [5.36](#v5036). Stable distributions such as Debian 10 maintain [5.28](#v5028)+.
    Enterprise platforms retain versions up to [5.10](#v5010).
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 核心安全支持提供了3年，因此典型用户应至少运行[5.36](#v5036)。稳定的发行版如Debian 10保持[5.28](#v5028)+。企业平台保留版本至[5.10](#v5010)。
- en: '5.38 2023-07-02: latest stable release'
  id: totrans-split-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5.38 2023-07-02：最新的稳定发布
- en: '`use feature "module_true"`'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: '`use feature "module_true"`'
- en: default in use 5.37 and up, also `no feature "bareword_filehandles"`
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 默认在5.37及更高版本中使用，也有`no feature "bareword_filehandles"`
- en: '`sub ($var ||=` default`)`'
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: '`sub ($var ||= default)`'
- en: assign values when false (or undefined on `//=`) instead of omitted
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在`//=`时赋值为假（或未定义的情况）而不是省略
- en: '`/(*{ … })/`'
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`/(*{ … })/`'
- en: 'optimistic eval: `(?{ … })` with regex optimisations enabled'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 乐观的评估：启用正则表达式优化的`(?{ … })`
- en: '`class`'
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`class`'
- en: 'define object classes: packages with `field` variables and `method` subroutines
    *(feature, experimental)*'
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 定义对象类：具有`field`变量和`method`子程序的包 *(功能，实验性)*
- en: '`${^LAST_<wbr>SUCCESSFUL_<wbr>PATTERN}`'
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`${^LAST_<wbr>SUCCESSFUL_<wbr>PATTERN}`'
- en: explicit variable to access the previous match as in `s//…/`
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 明确变量用于访问前一个匹配，如`s//…/`
- en: '`%{^HOOK}`'
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`%{^HOOK}`'
- en: perform tasks `require__before` and `require__after` when calling `require`
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 调用`require`时执行任务`require__before`和`require__after`
- en: Unicode
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: Unicode
- en: v15.0
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: v15.0
- en: '5.36 2022-05-28: active core support'
  id: totrans-split-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5.36 2022-05-28：活跃的核心支持
- en: '`use v5.36`'
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`use v5.36`'
- en: use `warnings`; use feature qw'`signatures isa`'; no feature qw'`indirect multidimensional
    switch`'
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: '`use warnings`; use feature qw''`signatures isa`''; no feature qw''`indirect
    multidimensional switch`'''
- en: '`use builtin`'
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: '`use builtin`'
- en: namespace for interpreter functions, such as `weaken` and `blessed` from `Scalar::Util`,
    `ceil`/`floor` from `POSIX`, and `trim` like `String::Util` *(experimental)*
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: 解释器函数的命名空间，例如来自`Scalar::Util`的`weaken`和`blessed`，来自`POSIX`的`ceil`/`floor`，以及类似于`String::Util`的`trim`
    *(实验性)*
- en: '`is_bool(!0)`'
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: '`is_bool(!0)`'
- en: distinguish scalar variable types (by `builtin` functions) for data interoperability
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: 区分标量变量类型（通过`builtin`函数）以实现数据互操作性
- en: '`for my ($k, $v) (%hash)`'
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`for my ($k, $v) (%hash)`'
- en: iterate over multiple values at a time (including `builtin::indexed` for arrays)
    *(feature, experimental)*
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: 一次迭代多个值（包括数组的`builtin::indexed`） *(功能，实验性)*
- en: '`defer {}`'
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`defer {}`'
- en: queue code to be executed when going out of scope *(feature, experimental)*
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在作用域结束时执行排队的代码 *(功能，实验性)*
- en: '`try {} finally {}`'
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`try {} finally {}`'
- en: run code at the end of a `[try](#try)` construct regardless of failure *(feature,
    experimental)*
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: 无论失败与否，在`[try](#try)`结构的末尾运行代码 *(功能，实验性)*
- en: unicode delimiters for quoting operators *(experimental)*
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
  zh: 用于引用运算符的Unicode分隔符 *(实验性)*
- en: '`sub ($var) {!~~pop~~}`'
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`sub ($var) {!~~pop~~}`'
- en: '[signature](#signatures)d subs are stable, but mixing with the arguments array
    `@_` remains experimental *(feature, experimental)*'
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[签名](#signatures)的子程序是稳定的，但与参数数组`@_`混合仍然是实验性 *(功能，实验性)*'
- en: '`$SIG{FPE}`'
  id: totrans-split-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`$SIG{FPE}`'
- en: floating-point exceptions no longer deferred but delivered immediately like
    other signals
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
  zh: 浮点异常不再延迟，而是立即交付，如其他信号
- en: perl `-g`
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
  zh: perl `-g`
- en: disable input record separator (slurp mode), alias for `-0777`
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
  zh: 禁用输入记录分隔符（吞吐模式），别名为`-0777`
- en: Unicode
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
  zh: Unicode
- en: v14.0
  id: totrans-split-45
  prefs: []
  type: TYPE_NORMAL
  zh: v14.0
- en: 5.34 2021-05-20
  id: totrans-split-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5.34 2021-05-20
- en: '`try {} catch`'
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`try {} catch`'
- en: exception handling similar to eval blocks *(feature, experimental)*
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于eval块的异常处理 *(功能，实验性)*
- en: '`/{,*n*}/`'
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`/{,*n*}/`'
- en: empty lower bound quantifier is accepted as shorthand for 0
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
  zh: 空下限量词被接受作为0的简写
- en: '`\x{ … }`'
  id: totrans-split-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`\x{ … }`'
- en: insignificant space within curly braces, also for `\b{}`, `\g{}`, `\k{}`, `\N{}`,
    `\o{}` as well as `/{m,n}/` quantifiers
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
  zh: 曲折括号内的微不足道的空格，也适用于`\b{}`、`\g{}`、`\k{}`、`\N{}`、`\o{}`以及`/{m,n}/`量词
- en: '`0o0`'
  id: totrans-split-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`0o0`'
- en: octal prefix `0o` alternative to `0…` and `oct`
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
  zh: 八进制前缀`0o`替代`0…`和`oct`
- en: '`re::optimization(qr//)`'
  id: totrans-split-55
  prefs: []
  type: TYPE_NORMAL
  zh: '`re::optimization(qr//)`'
- en: debug regular expression optimization information discovered at compile time
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
  zh: 调试正则表达式优化信息在编译时发现
- en: '`no feature …`'
  id: totrans-split-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`no feature …`'
- en: disable discouraged practices of `bareword_filehandles` and `multidimensional`
    array emulation
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
  zh: 禁用不推荐的实践，如`bareword_filehandles`和多维数组仿真
- en: 5.32 2020-06-20
  id: totrans-split-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5.32 2020-06-20
- en: '`isa`'
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
  zh: '`isa`'
- en: infix operator to check class instance *(feature, experimental until 5.36)*
  id: totrans-split-61
  prefs: []
  type: TYPE_NORMAL
  zh: 用于检查类实例的中缀运算符 *(功能，直至5.36仍然是实验性)*
- en: '`$min < $_ <= $max`'
  id: totrans-split-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`$min < $_ <= $max`'
- en: chained comparison repeats inner part as `$min < $_ and $_ <= $max`
  id: totrans-split-63
  prefs: []
  type: TYPE_NORMAL
- en: '`/\p{Name=$var}/`'
  id: totrans-split-64
  prefs: []
  type: TYPE_NORMAL
- en: match Unicode Name property like `\N{}` but with interpolation and subpatterns
  id: totrans-split-65
  prefs: []
  type: TYPE_NORMAL
- en: '`open F, ''+>>'', undef`'
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
- en: respect append mode on temporary files with mixed access
  id: totrans-split-67
  prefs: []
  type: TYPE_NORMAL
- en: '`no feature ''indirect''`'
  id: totrans-split-68
  prefs: []
  type: TYPE_NORMAL
- en: disable indirect object notation such as `new Class` instead of `Class->new`
  id: totrans-split-69
  prefs: []
  type: TYPE_NORMAL
- en: streamzip
  id: totrans-split-70
  prefs: []
  type: TYPE_NORMAL
- en: program distributed with core IO::Compress::Base to compress stdin into a zip
    container
  id: totrans-split-71
  prefs: []
  type: TYPE_NORMAL
- en: Unicode
  id: totrans-split-72
  prefs: []
  type: TYPE_NORMAL
- en: v13.0
  id: totrans-split-73
  prefs: []
  type: TYPE_NORMAL
- en: 5.30 2019-05-22
  id: totrans-split-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`/(?<=var+)`'
  id: totrans-split-75
  prefs: []
  type: TYPE_NORMAL
- en: variable length lookbehind assertions *(experimental until 5.36)*
  id: totrans-split-76
  prefs: []
  type: TYPE_NORMAL
- en: '`m(\p{nv=/.*/})`'
  id: totrans-split-77
  prefs: []
  type: TYPE_NORMAL
- en: match unicode properties by regular expressions *(experimental)*
  id: totrans-split-78
  prefs: []
  type: TYPE_NORMAL
- en: '`~~my $state if 0~~`'
  id: totrans-split-79
  prefs: []
  type: TYPE_NORMAL
- en: workaround for `[state](#state)` (deprecated since v5.10!) is now prohibited
  id: totrans-split-80
  prefs: []
  type: TYPE_NORMAL
- en: '`qr''\N''`'
  id: totrans-split-81
  prefs: []
  type: TYPE_NORMAL
- en: Delimiters must be graphemes; unescaped `{` illegal; `\N` in single quotes
  id: totrans-split-82
  prefs: []
  type: TYPE_NORMAL
- en: Unicode
  id: totrans-split-83
  prefs: []
  type: TYPE_NORMAL
- en: v12.1
  id: totrans-split-84
  prefs: []
  type: TYPE_NORMAL
- en: '5.28 2018-06-22: still maintained by common vendors'
  id: totrans-split-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`delete %hash{…}`'
  id: totrans-split-86
  prefs: []
  type: TYPE_NORMAL
- en: hash slices can be deleted with key+value pairs
  id: totrans-split-87
  prefs: []
  type: TYPE_NORMAL
- en: '`/(*…)/`'
  id: totrans-split-88
  prefs: []
  type: TYPE_NORMAL
- en: alphabetic synonyms for assertions, e.g. `(*atomic:…)` for `(?>…)` and `(*nlb:…)`
    for `(?<!…)` *(experimental until 5.31.6)*
  id: totrans-split-89
  prefs: []
  type: TYPE_NORMAL
- en: '`/(*script_run:)/`'
  id: totrans-split-90
  prefs: []
  type: TYPE_NORMAL
- en: enforces all characters to be from the same script *(experimental until 5.31.6)*
  id: totrans-split-91
  prefs: []
  type: TYPE_NORMAL
- en: '`state @a`'
  id: totrans-split-92
  prefs: []
  type: TYPE_NORMAL
- en: persistent lexical array or hash variables (in addition to [scalars](#state))
  id: totrans-split-93
  prefs: []
  type: TYPE_NORMAL
- en: perl `-i -pe die`
  id: totrans-split-94
  prefs: []
  type: TYPE_NORMAL
- en: 'safe in-place editing: files are replaced only after successful completion'
  id: totrans-split-95
  prefs: []
  type: TYPE_NORMAL
- en: '`${^SAFE_LOCALES}`'
  id: totrans-split-96
  prefs: []
  type: TYPE_NORMAL
- en: locales are thread-safe on supported systems, indicated by this variable
  id: totrans-split-97
  prefs: []
  type: TYPE_NORMAL
- en: Unicode
  id: totrans-split-98
  prefs: []
  type: TYPE_NORMAL
- en: v10.0
  id: totrans-split-99
  prefs: []
  type: TYPE_NORMAL
- en: 5.26 2017-05-30
  id: totrans-split-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`<<~EOT`'
  id: totrans-split-101
  prefs: []
  type: TYPE_NORMAL
- en: indented here-docs, strips same whitespace before delimiter in each line
  id: totrans-split-102
  prefs: []
  type: TYPE_NORMAL
- en: '`@{^CAPTURE}`'
  id: totrans-split-103
  prefs: []
  type: TYPE_NORMAL
- en: array of last match's captures, so `${^CAPTURE}[0]` is `$1`
  id: totrans-split-104
  prefs: []
  type: TYPE_NORMAL
- en: '`//xx`'
  id: totrans-split-105
  prefs: []
  type: TYPE_NORMAL
- en: extended modifier to also ignore whitespace in bracketed character classes
  id: totrans-split-106
  prefs: []
  type: TYPE_NORMAL
- en: '`use Test2::V0`'
  id: totrans-split-107
  prefs: []
  type: TYPE_NORMAL
- en: generic testing framework to replace `Test::*` and `TAP::*`
  id: totrans-split-108
  prefs: []
  type: TYPE_NORMAL
- en: Unicode
  id: totrans-split-109
  prefs: []
  type: TYPE_NORMAL
- en: v9.0
  id: totrans-split-110
  prefs: []
  type: TYPE_NORMAL
- en: 5.24 2016-05-09
  id: totrans-split-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`printf ''%.*2$x''`'
  id: totrans-split-112
  prefs: []
  type: TYPE_NORMAL
- en: reordered precision arguments
  id: totrans-split-113
  prefs: []
  type: TYPE_NORMAL
- en: '`/\b{lb}/`'
  id: totrans-split-114
  prefs: []
  type: TYPE_NORMAL
- en: line break boundary type (position suitable for hyphenation)
  id: totrans-split-115
  prefs: []
  type: TYPE_NORMAL
- en: '`/faster/`'
  id: totrans-split-116
  prefs: []
  type: TYPE_NORMAL
- en: various significant speedups, notably matching fixed substrings, `/i` on caseless
    languages, 64-bit arithmetic, scope overhead
  id: totrans-split-117
  prefs: []
  type: TYPE_NORMAL
- en: Unicode
  id: totrans-split-118
  prefs: []
  type: TYPE_NORMAL
- en: v8.0
  id: totrans-split-119
  prefs: []
  type: TYPE_NORMAL
- en: 5.22 2015-06-01
  id: totrans-split-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`\$alias =`'
  id: totrans-split-121
  prefs: []
  type: TYPE_NORMAL
- en: aliasing via reference (scoped as of v5.25.3) *(experimental)*
  id: totrans-split-122
  prefs: []
  type: TYPE_NORMAL
- en: '`<<>>`'
  id: totrans-split-123
  prefs: []
  type: TYPE_NORMAL
- en: safe `readline` ignoring open flags in arguments
  id: totrans-split-124
  prefs: []
  type: TYPE_NORMAL
- en: '`/()/n`'
  id: totrans-split-125
  prefs: []
  type: TYPE_NORMAL
- en: flag to disable numbered capturing, turning `()` into `(?:)`
  id: totrans-split-126
  prefs: []
  type: TYPE_NORMAL
- en: '`/\b{}/`'
  id: totrans-split-127
  prefs: []
  type: TYPE_NORMAL
- en: 'boundary types: *gcb* (grapheme cluster), *sb* (sentence), *wb* (word)'
  id: totrans-split-128
  prefs: []
  type: TYPE_NORMAL
- en: '`&.`'
  id: totrans-split-129
  prefs: []
  type: TYPE_NORMAL
- en: '`& | ^ ~` consistently numeric, dotted operators for strings *(feature, experimental
    until 5.28)*'
  id: totrans-split-130
  prefs: []
  type: TYPE_NORMAL
- en: '`use re ''strict''`'
  id: totrans-split-131
  prefs: []
  type: TYPE_NORMAL
- en: apply stricter syntax rules to regular expression patterns *(experimental)*
  id: totrans-split-132
  prefs: []
  type: TYPE_NORMAL
- en: '`0x.beep+0`'
  id: totrans-split-133
  prefs: []
  type: TYPE_NORMAL
- en: hexadecimal floating point notation with binary power; `printf '%a'` to display
  id: totrans-split-134
  prefs: []
  type: TYPE_NORMAL
- en: '`~~??~~`'
  id: totrans-split-135
  prefs: []
  type: TYPE_NORMAL
- en: single match shorthand (deprecated since v5.14) requires the operator `*m*?PATTERN?`
  id: totrans-split-136
  prefs: []
  type: TYPE_NORMAL
- en: '`~~use CGI~~`'
  id: totrans-split-137
  prefs: []
  type: TYPE_NORMAL
- en: deprecated interface for serving http requests removed from core, see [CGI::Alternatives](https://metacpan.org/pod/CGI::Alternatives)
  id: totrans-split-138
  prefs: []
  type: TYPE_NORMAL
- en: Unicode
  id: totrans-split-139
  prefs: []
  type: TYPE_NORMAL
- en: v7.0
  id: totrans-split-140
  prefs: []
  type: TYPE_NORMAL
- en: '5.20 2014-05-27: extended vendor support 202X'
  id: totrans-split-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`sub ($var)`'
  id: totrans-split-142
  prefs: []
  type: TYPE_NORMAL
- en: subroutine signatures *(feature, experimental until 5.36)*
  id: totrans-split-143
  prefs: []
  type: TYPE_NORMAL
  zh: 子程序签名 *(功能，直到5.36为实验性)*
- en: '`%hash{…}`'
  id: totrans-split-144
  prefs: []
  type: TYPE_NORMAL
  zh: '`%hash{…}`'
- en: hash slices return key+value pairs
  id: totrans-split-145
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希切片返回键值对
- en: '`[]->@*`'
  id: totrans-split-146
  prefs: []
  type: TYPE_NORMAL
  zh: '`[]->@*`'
- en: postfix dereferencing (also e.g. `$scalar->$*` for `$$scalar`) *(feature, experimental
    until 5.23.1)*
  id: totrans-split-147
  prefs: []
  type: TYPE_NORMAL
  zh: 后缀解引用 (例如 `$scalar->$*` 用于 `$$scalar`) *(功能，直到5.23.1为实验性)*
- en: '`use warnings ''once''; $a`'
  id: totrans-split-148
  prefs: []
  type: TYPE_NORMAL
  zh: '`use warnings ''once''; $a`'
- en: variables $a and $b are exempt from *used once* warnings
  id: totrans-split-149
  prefs: []
  type: TYPE_NORMAL
  zh: 变量 $a 和 $b 豁免于 *used once* 警告
- en: Unicode
  id: totrans-split-150
  prefs: []
  type: TYPE_NORMAL
  zh: Unicode
- en: v6.3
  id: totrans-split-151
  prefs: []
  type: TYPE_NORMAL
  zh: v6.3
- en: 5.18 2013-05-18
  id: totrans-split-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5.18 2013-05-18
- en: '`${^LAST_FH}`'
  id: totrans-split-153
  prefs: []
  type: TYPE_NORMAL
  zh: '`${^LAST_FH}`'
- en: last read filehandle (used by `$.`)
  id: totrans-split-154
  prefs: []
  type: TYPE_NORMAL
  zh: 最后读取文件句柄 (被 `$.` 使用)
- en: '`/(?[ a + b ])/`'
  id: totrans-split-155
  prefs: []
  type: TYPE_NORMAL
  zh: '`/(?[ a + b ])/`'
- en: regex set operations (character subtraction `-`, union `+`, intersection `&`,
    xor `^`) *(experimental until 5.36)*
  id: totrans-split-156
  prefs: []
  type: TYPE_NORMAL
  zh: 正则表达式集操作 (字符减法 `-`, 联合 `+`, 交集 `&`, 异或 `^`) *(直到5.36为实验性)*
- en: '`my sub`'
  id: totrans-split-157
  prefs: []
  type: TYPE_NORMAL
  zh: '`my sub`'
- en: lexical subroutines (also `state`, `our`); buggy before v5.22 *(experimental
    until 5.26)*
  id: totrans-split-158
  prefs: []
  type: TYPE_NORMAL
  zh: 词法子程序 (还有 `state`, `our`); v5.22 之前存在问题 *(直到5.26为实验性)*
- en: '`next $expression`'
  id: totrans-split-159
  prefs: []
  type: TYPE_NORMAL
  zh: '`next $expression`'
- en: loop controls allow runtime expressions
  id: totrans-split-160
  prefs: []
  type: TYPE_NORMAL
  zh: 循环控制允许运行时表达式
- en: '`no warnings ''experimental::…''`'
  id: totrans-split-161
  prefs: []
  type: TYPE_NORMAL
  zh: '`no warnings ''experimental::…''`'
- en: mechanism for experimental features, as of now required for *smartmatch*
  id: totrans-split-162
  prefs: []
  type: TYPE_NORMAL
  zh: 实验性特性机制，目前必须用于 *智能匹配*
- en: Unicode
  id: totrans-split-163
  prefs: []
  type: TYPE_NORMAL
  zh: Unicode
- en: v6.2
  id: totrans-split-164
  prefs: []
  type: TYPE_NORMAL
  zh: v6.2
- en: 5.16 2012-05-20
  id: totrans-split-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5.16 2012-05-20
- en: '`__SUB__`'
  id: totrans-split-166
  prefs: []
  type: TYPE_NORMAL
  zh: '`__SUB__`'
- en: current subroutine reference *(feature)*
  id: totrans-split-167
  prefs: []
  type: TYPE_NORMAL
  zh: 当前子程序引用 *(功能)*
- en: '`fc, "\F"`'
  id: totrans-split-168
  prefs: []
  type: TYPE_NORMAL
  zh: '`fc, "\F"`'
- en: unicode foldcase to compare case-insensitively *(feature)*
  id: totrans-split-169
  prefs: []
  type: TYPE_NORMAL
  zh: Unicode 折叠大小写以不区分大小写比较 *(功能)*
- en: '`"\N{}"`'
  id: totrans-split-170
  prefs: []
  type: TYPE_NORMAL
  zh: '`"\N{}"`'
- en: automatic `use charnames qw( :full :short )`
  id: totrans-split-171
  prefs: []
  type: TYPE_NORMAL
  zh: 自动 `use charnames qw( :full :short )`
- en: Unicode
  id: totrans-split-172
  prefs: []
  type: TYPE_NORMAL
  zh: Unicode
- en: v6.1
  id: totrans-split-173
  prefs: []
  type: TYPE_NORMAL
  zh: v6.1
- en: 5.14 2011-05-14
  id: totrans-split-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5.14 2011-05-14
- en: '`s///r`'
  id: totrans-split-175
  prefs: []
  type: TYPE_NORMAL
  zh: '`s///r`'
- en: non-destructive substitution
  id: totrans-split-176
  prefs: []
  type: TYPE_NORMAL
  zh: 非破坏性替换
- en: '`/(?{ m() })/`'
  id: totrans-split-177
  prefs: []
  type: TYPE_NORMAL
  zh: '`/(?{ m() })/`'
- en: regular expressions can be nested in `/(?{})/` and `/(??{})/` *(experimental
    until 5.20)*
  id: totrans-split-178
  prefs: []
  type: TYPE_NORMAL
  zh: 正则表达式可以嵌套在 `/(?{})/` 和 `/(??{})/` 中 *(直到5.20为实验性)*
- en: '`/dalu`'
  id: totrans-split-179
  prefs: []
  type: TYPE_NORMAL
  zh: '`/dalu`'
- en: 'regexp modifiers to restrict character classes: either **d**efault, **a**scii,
    **l**ocale, or **u**nicode semantics.'
  id: totrans-split-180
  prefs: []
  type: TYPE_NORMAL
  zh: 正则表达式修饰符以限制字符类：默认 **d**、**a**scii、**l**ocale 或 **u**nicode 语义。
- en: '`use re ''/flags''`'
  id: totrans-split-181
  prefs: []
  type: TYPE_NORMAL
  zh: '`use re ''/flags''`'
- en: customise default modifiers
  id: totrans-split-182
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义默认修饰符
- en: '`/(?^)/`'
  id: totrans-split-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`/(?^)/`'
- en: construct to reset to default modifiers
  id: totrans-split-184
  prefs: []
  type: TYPE_NORMAL
  zh: 用于重置默认修饰符的构造
- en: '`FH->method`'
  id: totrans-split-185
  prefs: []
  type: TYPE_NORMAL
  zh: '`FH->method`'
- en: filehandle method calls load IO::File on demand (eg. `STDOUT->flush`)
  id: totrans-split-186
  prefs: []
  type: TYPE_NORMAL
  zh: 文件句柄方法调用根据需要加载 IO::File (例如 `STDOUT->flush`)
- en: '`\o{}`'
  id: totrans-split-187
  prefs: []
  type: TYPE_NORMAL
  zh: '`\o{}`'
- en: escape sequence for octal values beyond \777
  id: totrans-split-188
  prefs: []
  type: TYPE_NORMAL
  zh: 八进制值的转义序列超出 \777
- en: '`use JSON`'
  id: totrans-split-189
  prefs: []
  type: TYPE_NORMAL
  zh: '`use JSON`'
- en: interface with data in JavaScript Object Notation {`decode_json <>`}
  id: totrans-split-190
  prefs: []
  type: TYPE_NORMAL
  zh: 与 JavaScript 对象表示法中的数据接口 {`decode_json <>`}
- en: Unicode
  id: totrans-split-191
  prefs: []
  type: TYPE_NORMAL
  zh: Unicode
- en: v6.0+#8
  id: totrans-split-192
  prefs: []
  type: TYPE_NORMAL
  zh: v6.0+#8
- en: 5.12 2010-04-12
  id: totrans-split-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5.12 2010-04-12
- en: '`package` version'
  id: totrans-split-194
  prefs: []
  type: TYPE_NORMAL
  zh: '`package` 版本'
- en: '`package` NAME VERSION shorthand for `our $VERSION`'
  id: totrans-split-195
  prefs: []
  type: TYPE_NORMAL
  zh: '`package` NAME VERSION 缩写为 `our $VERSION`'
- en: '`...`'
  id: totrans-split-196
  prefs: []
  type: TYPE_NORMAL
  zh: '`...`'
- en: 'yada-yada operator: code placeholder'
  id: totrans-split-197
  prefs: []
  type: TYPE_NORMAL
  zh: 哑元操作符：代码占位符
- en: '`use 5.012`'
  id: totrans-split-198
  prefs: []
  type: TYPE_NORMAL
  zh: '`use 5.012`'
- en: implicit `strict` if use VERSION >= v5.12
  id: totrans-split-199
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用版本 >= v5.12 隐式 `strict`
- en: '`… when`'
  id: totrans-split-200
  prefs: []
  type: TYPE_NORMAL
  zh: '`… when`'
- en: '`when` is now allowed to be used as a statement modifier'
  id: totrans-split-201
  prefs: []
  type: TYPE_NORMAL
  zh: '`when` 现在可以用作语句修饰符'
- en: '`use overload ''qr''`'
  id: totrans-split-202
  prefs: []
  type: TYPE_NORMAL
  zh: '`use overload ''qr''`'
- en: customisable conversion to regular expressions
  id: totrans-split-203
  prefs: []
  type: TYPE_NORMAL
  zh: 可定制的正则表达式转换
- en: '`/\N/`'
  id: totrans-split-204
  prefs: []
  type: TYPE_NORMAL
  zh: '`/\N/`'
- en: inverse \n to match any character except newline regardless of `/s` *(experimental
    until 5.18)*
  id: totrans-split-205
  prefs: []
  type: TYPE_NORMAL
  zh: 反斜杠 \n 匹配除换行符外的任何字符 *(直到5.18为实验性)*
- en: Unicode
  id: totrans-split-206
  prefs: []
  type: TYPE_NORMAL
  zh: Unicode
- en: v5.2
  id: totrans-split-207
  prefs: []
  type: TYPE_NORMAL
  zh: v5.2
- en: '5.10 2007-12-18: supported commercially until 2024'
  id: totrans-split-208
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '5.10 2007-12-18: 商业支持直到 2024'
- en: '`//`'
  id: totrans-split-209
  prefs: []
  type: TYPE_NORMAL
  zh: '`//`'
- en: defined-or operator
  id: totrans-split-210
  prefs: []
  type: TYPE_NORMAL
  zh: 定义或运算符
- en: '`~~`'
  id: totrans-split-211
  prefs: []
  type: TYPE_NORMAL
  zh: '`~~`'
- en: smart-match operator to compare different data types (updated in v5.10.1) *(experimental)*
  id: totrans-split-212
  prefs: []
  type: TYPE_NORMAL
  zh: 智能匹配操作符用于比较不同数据类型 (在v5.10.1中更新) *(实验性)*
- en: '`say`'
  id: totrans-split-213
  prefs: []
  type: TYPE_NORMAL
  zh: '`say`'
- en: print with newline, equivalent to `print @_, "\n"` *(feature)*
  id: totrans-split-214
  prefs: []
  type: TYPE_NORMAL
  zh: 带换行符打印，等同于 `print @_, "\n"` *(功能)*
- en: '`given`'
  id: totrans-split-215
  prefs: []
  type: TYPE_NORMAL
  zh: '`given`'
- en: switch statement to smart-match with `when`/`default` *(feature, experimental)*
  id: totrans-split-216
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `when`/`default` 进行智能匹配的 switch 语句 *(功能，实验性)*
- en: '`/(?<name>)/`'
  id: totrans-split-217
  prefs: []
  type: TYPE_NORMAL
  zh: '`/(?<name>)/`'
- en: named capture buffers into `%+`
  id: totrans-split-218
  prefs: []
  type: TYPE_NORMAL
  zh: 命名捕获缓冲区为 `%+`
- en: '`/(?1)/`'
  id: totrans-split-219
  prefs: []
  type: TYPE_NORMAL
  zh: '`/(?1)/`'
- en: recursive regular expression patterns
  id: totrans-split-220
  prefs: []
  type: TYPE_NORMAL
  zh: 递归正则表达式模式
- en: '`/(?|)/`'
  id: totrans-split-221
  prefs: []
  type: TYPE_NORMAL
  zh: '`/(?|)/`'
- en: resets capture numbering for each contained branch
  id: totrans-split-222
  prefs: []
  type: TYPE_NORMAL
  zh: 重置每个包含分支的捕获编号
- en: '`/.++/`'
  id: totrans-split-223
  prefs: []
  type: TYPE_NORMAL
  zh: '`/.++/`'
- en: possessive quantifiers `?+`, `*+`, `++` to match greedily
  id: totrans-split-224
  prefs: []
  type: TYPE_NORMAL
  zh: 占有量词 `?+`, `*+`, `++` 贪婪匹配
- en: '`s/keep\K//`'
  id: totrans-split-225
  prefs: []
  type: TYPE_NORMAL
  zh: '`s/keep\K//`'
- en: floating positive lookbehind, efficient alternative for `s/(keep)/$1/`
  id: totrans-split-226
  prefs: []
  type: TYPE_NORMAL
  zh: 浮动正向回溯，用于 `s/(keep)/$1/` 的有效替代
- en: '`/p`'
  id: totrans-split-227
  prefs: []
  type: TYPE_NORMAL
  zh: '`/p`'
- en: optionally preserve `${^MATCH}` variables (avoiding `$&` penalty until COW in
    v5.20)
  id: totrans-split-228
  prefs: []
  type: TYPE_NORMAL
  zh: 可选择保留 `${^MATCH}` 变量 (避免在v5.20之前的COW中的 `$&` 惩罚)
- en: '`/\v/, /\h/`'
  id: totrans-split-229
  prefs: []
  type: TYPE_NORMAL
  zh: '`/\v/, /\h/`'
- en: vertical and horizontal whitespace escapes (`\V` `\H` to invert); also `/\R/`
    for newlines
  id: totrans-split-230
  prefs: []
  type: TYPE_NORMAL
  zh: 垂直和水平空白字符转义 (`\V` `\H` 反转); 同时 `/\R/` 用于换行符
- en: '`state`'
  id: totrans-split-231
  prefs: []
  type: TYPE_NORMAL
  zh: '`state`'
- en: persistent `my` variables (scalars only until [5.28](#state_ext)) *(feature)*
  id: totrans-split-232
  prefs: []
  type: TYPE_NORMAL
  zh: 持久的 `my` 变量 (仅标量直到 [5.28](#state_ext)) *(功能)*
- en: '`use autodie`'
  id: totrans-split-233
  prefs: []
  type: TYPE_NORMAL
  zh: '`use autodie`'
- en: replace builtin functions to throw exceptions instead of returning failure {`eval
    {open ...} or $@->matches("open") || die`}
  id: totrans-split-234
  prefs: []
  type: TYPE_NORMAL
  zh: 替换内置函数以抛出异常而不是返回失败 {`eval {open ...} or $@->matches("open") || die`}
- en: '`use IO::Compress::Zip`'
  id: totrans-split-235
  prefs: []
  type: TYPE_NORMAL
  zh: '`use IO::Compress::Zip`'
- en: various file compression standards {`zip IO::Uncompress::Gunzip->new("test.gz")`<wbr>
    `=> "recompressed.zip"`}
  id: totrans-split-236
  prefs: []
  type: TYPE_NORMAL
  zh: 各种文件压缩标准 {`zip IO::Uncompress::Gunzip->new("test.gz")`<wbr> `=> "recompressed.zip"`}
- en: '`use Time::Piece`'
  id: totrans-split-237
  prefs: []
  type: TYPE_NORMAL
  zh: '`use Time::Piece`'
- en: timestamps as objects {`localtime->year > 1900`}
  id: totrans-split-238
  prefs: []
  type: TYPE_NORMAL
  zh: 时间戳作为对象 {`localtime->year > 1900`}
- en: '`use File::Fetch`'
  id: totrans-split-239
  prefs: []
  type: TYPE_NORMAL
  zh: '`use File::Fetch`'
- en: generic data retrieval/download {`File::Fetch->new(uri => "http://localhost/")`<wbr>`->fetch(to
    => \$slurp)`}
  id: totrans-split-240
  prefs: []
  type: TYPE_NORMAL
  zh: 通用数据检索/下载 {`File::Fetch->new(uri => "http://localhost/")`<wbr>`->fetch(to =>
    \$slurp)`}
- en: Unicode
  id: totrans-split-241
  prefs: []
  type: TYPE_NORMAL
  zh: Unicode
- en: v5.0.0
  id: totrans-split-242
  prefs: []
  type: TYPE_NORMAL
  zh: v5.0.0
- en: '5.8 2002-07-18: stable minimum during 20[01]\d'
  id: totrans-split-243
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '5.8 2002-07-18: 在 20[01]\d 期间的稳定最低版本'
- en: '`no utf8`'
  id: totrans-split-244
  prefs: []
  type: TYPE_NORMAL
  zh: '`no utf8`'
- en: full unicode support, `utf8` pragma only for script encoding
  id: totrans-split-245
  prefs: []
  type: TYPE_NORMAL
  zh: 完全支持 Unicode，`utf8` pragma 仅用于脚本编码
- en: '`use open`'
  id: totrans-split-246
  prefs: []
  type: TYPE_NORMAL
  zh: '`use open`'
- en: file handle behaviour altered by PerlIO layers {`binmode $fh, ":bytes"`}
  id: totrans-split-247
  prefs: []
  type: TYPE_NORMAL
  zh: 文件句柄行为通过 PerlIO 层改变 {`binmode $fh, ":bytes"`}
- en: '`open $fh, ''-|'', @cmd`'
  id: totrans-split-248
  prefs: []
  type: TYPE_NORMAL
  zh: '`open $fh, ''-|'', @cmd`'
- en: open list to fork a command without spawning a shell
  id: totrans-split-249
  prefs: []
  type: TYPE_NORMAL
  zh: 打开列表以fork一个命令而不产生shell
- en: '`open $fh, ''>'', \$var`'
  id: totrans-split-250
  prefs: []
  type: TYPE_NORMAL
  zh: '`open $fh, ''>'', \$var`'
- en: perl scalars as virtual files
  id: totrans-split-251
  prefs: []
  type: TYPE_NORMAL
  zh: Perl 标量作为虚拟文件
- en: '`printf ''%1$s'', @args`'
  id: totrans-split-252
  prefs: []
  type: TYPE_NORMAL
  zh: '`printf ''%1$s'', @args`'
- en: syntax to use parameters out of order
  id: totrans-split-253
  prefs: []
  type: TYPE_NORMAL
  zh: 使用参数无序的语法
- en: '`1_2_3 == 123`'
  id: totrans-split-254
  prefs: []
  type: TYPE_NORMAL
  zh: '`1_2_3 == 123`'
- en: underscores between digits allowed in numeric constants
  id: totrans-split-255
  prefs: []
  type: TYPE_NORMAL
  zh: 数字常量中允许在数字之间使用下划线
- en: '`use bignum`'
  id: totrans-split-256
  prefs: []
  type: TYPE_NORMAL
  zh: '`use bignum`'
- en: transparent big number support {`length 1e100 == 101`}
  id: totrans-split-257
  prefs: []
  type: TYPE_NORMAL
  zh: 透明的大数支持 {`length 1e100 == 101`}
- en: '`use if`'
  id: totrans-split-258
  prefs: []
  type: TYPE_NORMAL
  zh: '`use if`'
- en: conditional module inclusion {`no if $] >= 5.022, "warnings", "redundant"`}
  id: totrans-split-259
  prefs: []
  type: TYPE_NORMAL
  zh: 条件模块包含 {`no if $] >= 5.022, "warnings", "redundant"`}
- en: '`use Digest`'
  id: totrans-split-260
  prefs: []
  type: TYPE_NORMAL
  zh: '`use Digest`'
- en: calculate various message digests (data hashes) {`$hash = sha256_hex($data)`}
  id: totrans-split-261
  prefs: []
  type: TYPE_NORMAL
  zh: 计算各种消息摘要（数据哈希） {`$hash = sha256_hex($data)`}
- en: '`use Encode`'
  id: totrans-split-262
  prefs: []
  type: TYPE_NORMAL
  zh: '`use Encode`'
- en: character set conversion {`encode("utf8", decode("iso-8859-1", $octets))`}
  id: totrans-split-263
  prefs: []
  type: TYPE_NORMAL
  zh: 字符集转换 {`encode("utf8", decode("iso-8859-1", $octets))`}
- en: '`use File::Temp`'
  id: totrans-split-264
  prefs: []
  type: TYPE_NORMAL
  zh: '`use File::Temp`'
- en: create a temporary file or directory safely {`$fh = tempfile();`}
  id: totrans-split-265
  prefs: []
  type: TYPE_NORMAL
  zh: 安全创建临时文件或目录 {`$fh = tempfile();`}
- en: '`use List::Util`'
  id: totrans-split-266
  prefs: []
  type: TYPE_NORMAL
  zh: '`use List::Util`'
- en: general-utility list subroutines {`@cards = shuffle 0..51`}
  id: totrans-split-267
  prefs: []
  type: TYPE_NORMAL
  zh: 通用实用列表子例程 {`@cards = shuffle 0..51`}
- en: '`use Locale::Maketext`'
  id: totrans-split-268
  prefs: []
  type: TYPE_NORMAL
  zh: '`use Locale::Maketext`'
- en: various localization and internationalization in `Locale::*` and `L18N::*`
  id: totrans-split-269
  prefs: []
  type: TYPE_NORMAL
  zh: '`Locale::*` 和 `L18N::*` 中的各种本地化和国际化'
- en: '`use Memoize`'
  id: totrans-split-270
  prefs: []
  type: TYPE_NORMAL
  zh: '`use Memoize`'
- en: remember function results, trading space for time {`memoize "stat"`}
  id: totrans-split-271
  prefs: []
  type: TYPE_NORMAL
  zh: 记住函数结果，用空间换时间 {`memoize "stat"`}
- en: '`use MIME::Base64`'
  id: totrans-split-272
  prefs: []
  type: TYPE_NORMAL
  zh: '`use MIME::Base64`'
- en: base64 encoded strings as in email attachments
  id: totrans-split-273
  prefs: []
  type: TYPE_NORMAL
  zh: Base64 编码的字符串如同电子邮件附件
- en: '`use Test::More`'
  id: totrans-split-274
  prefs: []
  type: TYPE_NORMAL
  zh: '`use Test::More`'
- en: modern framework for unit testing {`is $got, $expected`}
  id: totrans-split-275
  prefs: []
  type: TYPE_NORMAL
  zh: 现代化的单元测试框架 {`is $got, $expected`}
- en: '`use Time::HiRes`'
  id: totrans-split-276
  prefs: []
  type: TYPE_NORMAL
  zh: '`use Time::HiRes`'
- en: high resolution timers {`$μs = [gettimeofday]; sleep .1;`<wbr> `$elapsed = tv_interval
    $μs`}
  id: totrans-split-277
  prefs: []
  type: TYPE_NORMAL
  zh: 高分辨率定时器 {`$μs = [gettimeofday]; sleep .1;`<wbr> `$elapsed = tv_interval $μs`}
- en: Unicode
  id: totrans-split-278
  prefs: []
  type: TYPE_NORMAL
  zh: Unicode
- en: v3.2.0
  id: totrans-split-279
  prefs: []
  type: TYPE_NORMAL
  zh: v3.2.0
- en: '5.6 2000-03-23: start of modern compatibility'
  id: totrans-split-280
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '5.6 2000-03-23: 现代兼容性的开始'
- en: '`use warnings`'
  id: totrans-split-281
  prefs: []
  type: TYPE_NORMAL
  zh: '`use warnings`'
- en: pragma to enable warnings in lexical scope
  id: totrans-split-282
  prefs: []
  type: TYPE_NORMAL
  zh: 启用词法作用域中的警告的 pragma
- en: '`use utf8`'
  id: totrans-split-283
  prefs: []
  type: TYPE_NORMAL
  zh: '`use utf8`'
- en: experimental unicode semantics (completed in [v5.8](#utf8_data)) *(experimental
    until 5.8)*
  id: totrans-split-284
  prefs: []
  type: TYPE_NORMAL
  zh: 实验性 Unicode 语义（在 [v5.8](#utf8_data) 中完成） *(实验性功能直到 5.8)*
- en: '`use charnames`'
  id: totrans-split-285
  prefs: []
  type: TYPE_NORMAL
  zh: '`use charnames`'
- en: string escape `\N{}` to insert named character
  id: totrans-split-286
  prefs: []
  type: TYPE_NORMAL
  zh: 字符串转义 `\N{}` 插入命名字符
- en: '`our`'
  id: totrans-split-287
  prefs: []
  type: TYPE_NORMAL
  zh: '`our`'
- en: declare global variables
  id: totrans-split-288
  prefs: []
  type: TYPE_NORMAL
  zh: 声明全局变量
- en: '`v1.2.3`'
  id: totrans-split-289
  prefs: []
  type: TYPE_NORMAL
  zh: '`v1.2.3`'
- en: represent strings as vector of ordinals, useful in version numbers (`printf
    '%vd'` to display)
  id: totrans-split-290
  prefs: []
  type: TYPE_NORMAL
  zh: 将字符串表示为顺序向量，用于版本号 (`printf '%vd'` 显示)
- en: '`0b0`'
  id: totrans-split-291
  prefs: []
  type: TYPE_NORMAL
  zh: '`0b0`'
- en: binary numbers in literals, `printf '%b'`, and `oct`
  id: totrans-split-292
  prefs: []
  type: TYPE_NORMAL
  zh: 字面上的二进制数字，`printf '%b'` 和 `oct`
- en: '`sub :lvalue`'
  id: totrans-split-293
  prefs: []
  type: TYPE_NORMAL
  zh: '`sub :lvalue`'
- en: subroutine attribute to return a modifiable value *(experimental until 5.20)*
  id: totrans-split-294
  prefs: []
  type: TYPE_NORMAL
  zh: 子程序属性，返回一个可修改的值 *(实验性功能直到 5.20)*
- en: '`open my $fh, $mode, $expr`'
  id: totrans-split-295
  prefs: []
  type: TYPE_NORMAL
  zh: '`open my $fh, $mode, $expr`'
- en: file handles in scoped scalars, third argument for unambiguous file name
  id: totrans-split-296
  prefs: []
  type: TYPE_NORMAL
  zh: 文件句柄在作用域标量中，第三个参数用于明确的文件名
- en: '`pack ''q''`'
  id: totrans-split-297
  prefs: []
  type: TYPE_NORMAL
  zh: '`pack ''q''`'
- en: 64-bit integer support (also large files >2GiB) *(experimental until 5.8.1)*
  id: totrans-split-298
  prefs: []
  type: TYPE_NORMAL
  zh: 64位整数支持（也支持大于2GiB的大文件） *(实验性功能直到 5.8.1)*
- en: '`sort $coderef ()`'
  id: totrans-split-299
  prefs: []
  type: TYPE_NORMAL
  zh: '`sort $coderef ()`'
- en: comparison function can be a subroutine reference; prototype `($$)` to pass
    elements as normal `@_`
  id: totrans-split-300
  prefs: []
  type: TYPE_NORMAL
  zh: 比较函数可以是子例程引用；原型 `($$)` 以正常 `@_` 传递元素
- en: '`CHECK {}`'
  id: totrans-split-301
  prefs: []
  type: TYPE_NORMAL
  zh: '`CHECK {}`'
- en: special block called at end of compilation
  id: totrans-split-302
  prefs: []
  type: TYPE_NORMAL
  zh: 编译结束时调用的特殊块
- en: '`/[[:…:]]/`'
  id: totrans-split-303
  prefs: []
  type: TYPE_NORMAL
  zh: '`/[[:…:]]/`'
- en: POSIX character class syntax such as `/[[:alpha:]]/`
  id: totrans-split-304
  prefs: []
  type: TYPE_NORMAL
  zh: POSIX 字符类语法，如 `/[[:alpha:]]/`
- en: Unicode
  id: totrans-split-305
  prefs: []
  type: TYPE_NORMAL
  zh: Unicode
- en: v3.0.1
  id: totrans-split-306
  prefs: []
  type: TYPE_NORMAL
  zh: v3.0.1
