- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:31:12'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Rust, A Game Review — Llogiq on stuff
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://llogiq.github.io/2019/06/07/game.html](https://llogiq.github.io/2019/06/07/game.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Rust, A Game Review
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 07 June 2019
  prefs: []
  type: TYPE_NORMAL
- en: '*Disclaimer: As a mod of /r/rust, I see a lot posts and comments confusing
    the game with the programming language. So I decided to write this humorous take.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'I kept hearing about this “Rust” game that *Mozilla* of all companies has apparently
    been working on for four years supported by a loose knit community of game devs
    (?), so I finally took the plunge. Nice: You can download the game completely
    free of charge and there are zero micropayments. You don’t even need to register!
    There are a few books you can buy, though the main one is [available online](https://doc.rust-lang.org/book),
    also for free. Incredible.'
  prefs: []
  type: TYPE_NORMAL
- en: The [website](https://rust-lang.org) tells you to download and run the installer
    from [rustup.rs](https://rustup.rs), which is bit strange (why don’t they distribute
    the game from their main site? Ah I see, there are installers, but this rustup
    thing can download and update different versions of the game – no idea why one
    would do that).
  prefs: []
  type: TYPE_NORMAL
- en: 'Starting the game gives you a long message containing usage instructions. It
    appears this game is very different from what I’ve played so far. You have to
    create one or more text files and give it to the “compiler” which will then do
    interesting things with it, or at least I hope so. Mental note: This game is not
    for casuals.'
  prefs: []
  type: TYPE_NORMAL
- en: The user interface is pretty bare, but betrays a surprising complexity. The
    game designers have created a whole language of things you can tell the compiler
    to do, and playing basically requires learning this language. There seems to be
    some sort of hive-mind with multiple entities working together to deny you access.
    Your task is to get through.
  prefs: []
  type: TYPE_NORMAL
- en: Your first encounter will probably be the “syntax checker”. This is some sort
    of AI opponent that denies you entry to the other AIs if you fail to close your
    parenthesis or something. As it’s the beginner level, it *tells* you how to beat
    it. Other game designers should take notes – this is a good idea for tutorial
    levels.
  prefs: []
  type: TYPE_NORMAL
- en: Having dispatched with the syntax checker, you move on to the “type checker”.
    See, below the language is another, mostly implicit language, the language of
    types. Those have to line up correctly, or the type checker will stop you. This
    is starting to look like learning Japanese by intercepting untranslated messages
    from a broken TV set. Ah, well, I’ve already sunk half a week into this “game”,
    might as well learn how to play it correctly.
  prefs: []
  type: TYPE_NORMAL
- en: The type checker will also tell you how to beat it. This seems to be a common
    theme with the game. It ups the difficulty a bit by giving you multiple options
    every now and then.
  prefs: []
  type: TYPE_NORMAL
- en: At this point it dawned on me that I had underestimated the complexity of this
    game, so I went to [/r/rust](https://reddit.com/r/rust) to ask how to play correctly,
    only to have my post removed by the mods and being told that I should read the
    sidebar before posting. Which has a few playground rules and a sick video.
  prefs: []
  type: TYPE_NORMAL
- en: The Rust players are very competitive, it seems, and they apppear to coerce
    the game to do surprising things. Modding is obviously a big part of the community,
    and there is a central repository for mods called [crates.io](https://crates.io).
    What is it with Rust people and strange web addresses?
  prefs: []
  type: TYPE_NORMAL
- en: Despite my setback, I was intrigued to look into some of those mods (and also
    skimmed the book, which was quite friendly though jargon-laden) and found a great
    number of strange but effective techniques. I also learned that the players of
    the game refer to themselves as “Rustaceans”, and that there is a final nemesis,
    the “borrow checker”. Only the hardest players manage to dispatch this foe, and
    are rewarded with god-like modding capabilities.
  prefs: []
  type: TYPE_NORMAL
- en: Reading more about it, there is a very rich lore that is strewn on social media,
    various blogs, semi-official websites and other locations. I’ve also learned that
    the designers built a tool called “cargo” that allows one to load mods for playing.
    This makes things much more interesting.
  prefs: []
  type: TYPE_NORMAL
- en: Three weeks in, I finally have my first encounter with the borrow checker. And
    this is where the game gets crazy hard. See, just as with the “type” language
    waiting below the game language to trip up unsuspecting newbies, the “lifetime”
    language is hidden in the “type” language, and if you get it wrong, the borrow
    checker will ruin your day. For now it tells me that I have conflicting lifetime
    requirements. To solve this, I am told I should shorten my lifetime – which I
    already did by playing this game for so long! I’m giving up!
  prefs: []
  type: TYPE_NORMAL
- en: 'Conclusion: I’m reminded of the time I tried Dwarf Fortress, only this time
    the gameplay is even stranger. There is no graphics or sound to speak of, but
    that is besides the point. This game is not for the weak – only the hardest players
    will slog through. Once you’ve mastered all the opponents, you’ll be granted modding
    powers that rival anything seen in other games. Players have even started creating
    GUIs for it *from within the game*. It puzzles me that the designers didn’t think
    of creating their own GUI yet, but I presume they are busy creating even bigger
    and badder enemies.'
  prefs: []
  type: TYPE_NORMAL
- en: '| TOTAL: | ★★☆☆☆ |'
  prefs: []
  type: TYPE_TB
- en: '| gameplay: | ★☆☆☆☆ |'
  prefs: []
  type: TYPE_TB
- en: '| story/lore: | ★★★★☆ |'
  prefs: []
  type: TYPE_TB
- en: '| graphics: | ☆☆☆☆☆ |'
  prefs: []
  type: TYPE_TB
- en: '| sound: | ☆☆☆☆☆ |'
  prefs: []
  type: TYPE_TB
