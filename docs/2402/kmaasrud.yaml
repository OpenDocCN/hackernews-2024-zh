- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 14:45:21'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:45:21
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: kmaasrud
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: kmaasrud
- en: 来源：[https://kmaasrud.com/blog/opml-is-underrated.html](https://kmaasrud.com/blog/opml-is-underrated.html)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://kmaasrud.com/blog/opml-is-underrated.html](https://kmaasrud.com/blog/opml-is-underrated.html)
- en: OPML is underrated
  id: totrans-split-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OPML被低估了
- en: As a response to the general [enshittification](https://doctorow.medium.com/social-quitting-1ce85b67b456)
    of major platforms, I would say we are seeing a resurgence of the old web’s ethos,
    with personal blogs gaining traction and the concept of the [small web](https://neustadt.fr/essays/the-small-web/)
    on the rise. That might be colored by the digital communities I hang around in
    (which are mostly dominated by programmers) but it does at least empirically feel
    like a trend. That brings along with it a new interest in open web standards.
    Among them is RSS, which both I, and I think a lot others, have increasingly integrated
    into our digital routines to keep track of posts from people and sources we’re
    following. RSS aligns perfectly with the movement towards more personalized and
    controlled content consumption. Unlike the algorithm-driven feeds of <q>other
    platforms</q> — which often prioritize engagement over relevance or quality —
    RSS allows me to curate my own information stream. This feels important to me,
    as it gives me a level of autonomy over the content that shapes my views and knowledge,
    as opposed to handing that power over to advertisers.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 作为对主要平台的普遍[侵犯化](https://doctorow.medium.com/social-quitting-1ce85b67b456)的回应，我认为我们正在见证旧网络精神的复兴，个人博客日渐流行，并且[小网络](https://neustadt.fr/essays/the-small-web/)的概念也在兴起。虽然这可能受到我参与的数字社区（大部分由程序员主导）的影响，但至少在经验上确实感觉到这是一个趋势。这带来了对开放网络标准的新兴兴趣。其中之一就是RSS，我和很多其他人越来越多地将其整合到我们的数字日常中，用来跟踪我们关注的人和来源的帖子。RSS与向更个性化和受控内容消费的趋势完美契合。不像<q>其他平台</q>那样由算法驱动的信息流——后者通常优先考虑互动而非相关性或质量——RSS允许我自主策划自己的信息流。对我来说，这感觉很重要，因为它让我能够掌控塑造我的观点和知识的内容，而不是将这种权力交给广告商。
- en: 'There is an issue, though. RSS feeds can be a bit clunky to manage and keep
    track of. Their decentralized nature also makes discoverability an issue. Enter
    [OPML](http://opml.org/spec2.opml), which is an outliner format that is most commonly
    used to store [a list of feed subscriptions](http://opml.org/spec2.opml#subscriptionLists).
    I promise you; having a single file that stores all the feeds you’re interested
    in is a gamechanger, as it makes it significantly easier to organize, migrate,
    and share those feeds across different platforms and devices. Here’s an example:'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，也存在问题。管理和跟踪RSS订阅源可能有些笨拙。它们的分散特性也使得发现性成为一个问题。这时就需要[OPML](http://opml.org/spec2.opml)登场了，这是一种大纲格式，最常用于存储[订阅源列表](http://opml.org/spec2.opml#subscriptionLists)。我向你保证，拥有一个存储你感兴趣的所有订阅源的单一文件是一场改变游戏规则的行动，因为它极大地简化了在不同平台和设备上组织、迁移和共享这些订阅源的过程。这里有个例子：
- en: '[PRE0]'
  id: totrans-split-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Each outline item must have the type `rss` (that goes for both RSS and Atom
    feeds) and must include the `xmlUrl` attribute. Optionally, you can specify some
    more attributes, like adding a title with `text`, a description with `description`
    and a link to the blog front page with `htmlUrl` — that added metadata can be
    very useful. Yes, it is XML-based, which I admit isn’t exactly the easiest format
    to work with, but it has a few advantages, which we’ll get back to.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 每个大纲项必须具有类型`rss`（对于RSS和Atom订阅源都适用），并且必须包含`xmlUrl`属性。可以选择地添加一些额外的属性，比如用`text`添加标题，用`description`添加描述，以及用`htmlUrl`添加到博客首页的链接——这些附加的元数据非常有用。是的，它基于XML，我承认这并不是最容易处理的格式，但它有一些优势，我们将在后面详细讨论。
- en: 'With OPML, you don’t need separate applications or services to categorize feeds.
    Categorization can be achieved within a single OPML file through its outlining
    capabilities or by managing multiple OPML files, each dedicated to a different
    category or use-case. It is a very viable workflow to have one OPML file for your
    YouTube subscriptions, another for your favorite Twitter/X and Mastodon users,
    one more for news sites, and yet another for personal blogs — the world’s your
    oyster. However, there aren’t many application that support nested OPML outlines
    or categorizing based on different files, sadly, but there should be! This is
    a call to action, developers: Perfect side-project!'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 使用OPML，你不需要单独的应用程序或服务来分类订阅源。可以通过其大纲功能在单个OPML文件内实现分类，或通过管理多个专用于不同类别或用例的OPML文件。为你的YouTube订阅设置一个OPML文件，为你喜欢的Twitter/X和Mastodon用户设置另一个，再为新闻网站设置一个，再为个人博客设置一个——世界尽在你掌握。然而，很遗憾，并没有多少应用程序支持嵌套的OPML大纲或基于不同文件分类，但应该有！这是一个行动号召，开发者们：完美的副业项目！
- en: Beyond personal convenience, OPML has the potential to better the *ecosystem*
    of the <q>small web.</q> By not only sharing an RSS feed on your personal website,
    but also your list of subscribed feeds, we’re effectively creating a recommendation
    system that is based on concious curation, not statistical metrics. Your OPML
    file is now called a *[blogroll](https://blogroll.org/what-are-blogrolls/)*, and
    you officially get to call yourself a **90s web developer**. Jokes aside, I believe
    the simple fact that there is a known person behind each recommendation is advantageous.
    Yes, this might promote smaller digital social circles, but I personally think
    the transparency of a known source is the best way to combat [filter bubbles](https://en.wikipedia.org/wiki/Filter_bubble).
    That part is a whole sociological discussion in itself, so if you would like to
    discuss it further, I would love chatting about it on [my mailing list](https://lists.sr.ht/~kmaasrud/inbox).
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 除了个人便利性之外，OPML还有可能改善<q>小网</q>的生态系统。不仅在个人网站上分享RSS订阅源，还可以分享你订阅的列表，这有效地创建了一个基于有意识策划而非统计指标的推荐系统。你的OPML文件现在被称为*[博客列表](https://blogroll.org/what-are-blogrolls/)*，你正式可以称自己为**90年代的网页开发者**。开玩笑的，我认为背后有人的每个推荐的简单事实都是有利的。是的，这可能会促进较小的数字社交圈子，但我个人认为已知来源的透明性是对抗[过滤气泡](https://en.wikipedia.org/wiki/Filter_bubble)的最佳方式。这部分本身是整个社会学讨论的一个话题，如果你想进一步讨论，我很乐意在[我的邮件列表](https://lists.sr.ht/~kmaasrud/inbox)上聊聊。
- en: 'Now, getting back to the fact that OPML is XML-based; I’d like to highlight
    an often-overlooked feature of this: The ability to use an XSL stylesheet to display
    the OPML file rendered through a HTML template when loaded in a browser. With
    this, you can add a short introduction and guide to the format, making the blogroll
    more accessible to those unfamiliar with it. It also opens the possibility to
    showcase each feed with added context or descriptions.'
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，回到OPML基于XML的事实；我想强调一个经常被忽视的特性：通过使用XSL样式表，在浏览器中加载时可以显示经过HTML模板渲染的OPML文件。通过这种方式，你可以添加一个简短的介绍和指南，使得对这个格式不熟悉的人更容易理解博客列表。这也为展示每个订阅源提供了增加的背景或描述的可能性。
- en: <details><summary>Here is an example XSL stylesheet you can use:</summary>
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>这是一个你可以使用的XSL样式表的示例：</summary>
- en: '[PRE1]</details>'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE1]</details>'
- en: You can link to the stylesheet in your OPML file by adding `<?xml-stylesheet
    type="text/xsl" href="path/to/stylesheet.xsl"?>` at the top. I actually do this
    on [my own blogroll](https://kmaasrud.com/blogroll.xml), so check that out if
    you want some inspiration.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过在OPML文件顶部添加`<?xml-stylesheet type="text/xsl" href="path/to/stylesheet.xsl"?>`来链接到样式表。实际上，我在[我的博客列表](https://kmaasrud.com/blogroll.xml)上就这么做的，所以如果你需要一些灵感，可以去看看。
- en: While we’re all getting a bit fed up with the big platforms, OPML is like a
    breath of fresh air from the old web days. It’s all about making life easier when
    managing feeds, sharing cool finds, and stumbling upon new stuff. So I encourage
    you to create your own blogroll, slap it on your website, and share what you’re
    into. It’s a simple move, but it could spark some real connections and bring back
    a bit of that community vibe we miss.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们都有点厌倦大平台时，OPML就像从旧网络时代带来的一股清新空气。它完全是关于在管理订阅源时使生活更轻松，分享有趣的发现，偶然发现新事物。因此，我鼓励你创建自己的博客列表，把它放在你的网站上，并分享你喜欢的东西。这是一个简单的举措，但它可能引发一些真实的连接，并带回我们怀念的社区氛围的一部分。
- en: Here are some posts from sites I follow
  id: totrans-split-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 这里有一些我关注的网站上的帖子
- en: 'TL;DR: rustc will use rust-lld by default on x86_64-unknown-linux-gnu on nightly
    to significantly reduce linking times. Some context Linking time is often a big
    part of compilation time. When rustc needs to build a binary or a shared library,
    it will usually …'
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: TL;DR：rustc 将在夜间版默认使用 rust-lld 来显著减少在 x86_64-unknown-linux-gnu 上的链接时间。一些背景链接时间通常是编译时间的重要组成部分。当
    rustc 需要构建一个二进制文件或共享库时，通常会…
- en: via [Rust Blog](https://blog.rust-lang.org/) May 17, 2024
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: via [Rust Blog](https://blog.rust-lang.org/) 2024年5月17日
- en: Over the past few years I’ve been noticing more and more of a discourse about
    the “small web” in my online communities. It’s cool to see! I mentioned the concept
    in an earlier post and thought I might write a few more words about it today.
    As far as I can tel…
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去的几年里，我在我的在线社区中越来越多地注意到关于“小型网络”的讨论。看到这样的情况真是太酷了！我在早些时候的一篇文章中提到了这个概念，今天想再写几句。据我所知…
- en: via [PKGW](https://newton.cx/~peter/) May 14, 2024
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: via [PKGW](https://newton.cx/~peter/) 2024年5月14日
- en: Today, exactly five years ago, I, Marcel, started working on Music Assistant
    . What began as a quick script, to sync my playlists so I could switch between
    streaming providers, grew into a beast on its own. Music Assistant is what I’d
    like to call a “music…
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，正好是我，马塞尔，五年前开始着手开发Music Assistant。起初只是一个快速脚本，用来同步我的播放列表，这样我可以在不同的流媒体服务提供商之间切换，但它发展成了一种独特的存在。Music
    Assistant 是我想称之为“音乐…
- en: via [Home Assistant](https://www.home-assistant.io/) May 9, 2024
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: via [Home Assistant](https://www.home-assistant.io/) 2024年5月9日
