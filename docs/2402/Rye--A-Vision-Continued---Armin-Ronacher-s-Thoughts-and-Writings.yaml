- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:35:35'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: 'Rye: A Vision Continued | Armin Ronacher''s Thoughts and Writings'
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://lucumr.pocoo.org/2024/2/4/rye-a-vision/](https://lucumr.pocoo.org/2024/2/4/rye-a-vision/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Rye: A Vision Continued'
  id: totrans-split-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: written on Sunday, February 4, 2024
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
- en: In April of last year I released [Rye](https://rye-up.com/) to the public. Rye,
    both then and now, represents my very personal vision of what an improved Python
    packaging and project management solution can look like. Essentially, it's a comprehensive
    user experience, designed so that the only tool a Python programmer would need
    to interface with is Rye itself and it gets you from zero to one in a minute.
    It is capable of bootstrapping Python by automatically downloading different Python
    versions, it creates virtualenvs, it manages dependencies, and lints and formats.
    Initially developed for my own use, I decided to release it to the public, and
    the feedback has been overwhelmingly positive.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
- en: 'When I introduced it, I initiated a discussion thread titled [“Should Rye Exist”](https://github.com/mitsuhiko/rye/discussions/6)
    referencing the well known [XKCD #929](https://xkcd.com/927/) which humorously
    comments on the proliferation of competing standards. I did not feel well throwing
    yet another Python packaging tool into the ring.'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: 'Yet it exists now and has user. This standard issue however I think is helped
    a bit by the fact that Rye doesn''t actually do any of these things itself. It
    wraps established tools:'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
- en: '**Downloading Python**: it provides an automated way to get access to the amazing
    [Indygreg Python Builds](https://github.com/indygreg/python-build-standalone/)
    as well as the PyPy binary distributions.'
  id: totrans-split-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Linting and Formatting**: it bundles [ruff](https://github.com/astral-sh/ruff)
    and makes it available with rye lint and rye fmt.'
  id: totrans-split-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Managing Virtualenvs**: it uses the well established [virtualenv](https://virtualenv.pypa.io/en/latest/)
    library under the hood.'
  id: totrans-split-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Building Wheels**: it delegates that work largely to [build](https://pypi.org/project/build/).'
  id: totrans-split-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Publishing**: its publish command uses [twine](https://pypi.org/project/twine/)
    to accomplish this task.'
  id: totrans-split-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Locking and Dependency Installation:** is today implemented by using [unearth](https://pypi.org/project/unearth/)
    and [pip-tools](https://github.com/jazzband/pip-tools/).'
  id: totrans-split-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As you can see, Rye is not revolutionary and it's not intended to be. Rye itself
    doesn't do all that much as it delegates all the core functionality to other tools
    in the ecosystem. Rye packages these tools together in a user-friendly manner,
    significantly reducing the cognitive load for developers. This convenience eliminates
    the need to learn about various tools, read extensive documentation, and integrate
    these components independently. Rye lets you get from no Python on a computer
    to a fully functioning Python project in under a minute with linting, formatting
    and everything in place. It is sufficiently opinionated that many important decisions
    are made for you. For instance it starts you out with using pyproject.toml and
    picks a wheel build system for you. It also picks the linter and formatter, and
    the preferred Python distribution and decides on a build tool.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
- en: Defaults Matter
  id: totrans-split-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Rye is designed to select the best tools for the job — it picks winners. Why
    does it do that? This approach is inspired by my admiration for the developer
    experience in the Rust ecosystem, particularly the seamless integration of rustup
    and cargo. Their functionality made me long for a similar experience within the
    Python community. Crucially the way this works in the Rust world does not mean
    that cargo does everything. When you run cargo build it invokes rustc, when you
    run cargo doc it runs rustdoc. When you invoke cargo clippy it runs clippy for
    you and so worth. Cargo is a manager that delegates the important work to bespoke
    tools that are improved by sometimes entirely different teams. This also means
    that tools can be swapped out if they are found to be not the right choice any
    more. The experience in the Rust world also showed me that excellent Windows support
    is just a must have. That's why Rye is not just a great experience on macOS and
    Linux, it's also excellent on Windows.
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
- en: I am convinced that the Python community is deserving of an excellent developer
    experience, and Rye, as it stands today, offers a promising beginning. My belief
    is supported by evidence gathered from conducting in-person user interviews and
    demos, where Rye was well received. In fact, every individual who I was able to
    give a guided tour of Rye was impressed by how swiftly one could start working
    with Python. Because it was demonstrably designed to avoid interference with any
    pre-existing Python configurations, Rye allows for a smooth and gradual integration
    and the emotional barrier of picking it up even for people who use other tools
    was shown to be low.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
- en: That said, Rye is a one person project and it does not address the fundamental
    challenges of some of the issues we have in the Python ecosystem. It does not
    solve multi version dependencies, it does not offer better performance for the
    installation of dependencies. It does not help with distributing executables for
    end user applications or anything like this. However I am getting multiple signals
    that the time is right for a tool like Rye to not just exist, but also to rally
    a larger number of the Python community embrace some of these standardization
    ideas.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
- en: What's Next?
  id: totrans-split-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Chris Warrick](https://github.com/Kwpolska) recently [wrote a blog post](https://chriswarrick.com/blog/2024/01/15/python-packaging-one-year-later/)
    where he looked back at the last year of Python packaging that made the rounds
    on Twitter. It laments a bit that we did not make much of a progress in packaging
    and it also talks a bit about Rye and correctly points out that Rye does not have
    enough contributors (basically just me). That''s not a healthy setup.'
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
- en: I still don't really know if Rye *should* exist. It has not yet become established
    and there are plenty of rough edges. I personally really enjoy using it but at
    the same time every time I use it, I get reminded that it would stop existing
    if I did not invest time into it which in some sense is what keeps me going on
    it.
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
- en: However I would love to see the community converge to a Rye like solution, no
    matter where it comes from.
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
- en: Learn More
  id: totrans-split-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Did I spark your interest? I would really appreciate it if you give it a try
    and give feedback:'
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
- en: '*a 16 minute introduction to Rye*'
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.youtube.com/embed/q99TYA7LnuA](https://www.youtube.com/embed/q99TYA7LnuA)'
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
- en: VIDEO
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
- en: This entry was tagged [announcement](/tags/announcement/) and [python](/tags/python/)
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
