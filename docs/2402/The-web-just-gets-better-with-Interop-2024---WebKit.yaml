- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 14:29:34'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:29:34
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: The web just gets better with Interop 2024 | WebKit
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Web 与 Interop 2024 变得更好 | WebKit
- en: 来源：[https://webkit.org/blog/14955/the-web-just-gets-better-with-interop/](https://webkit.org/blog/14955/the-web-just-gets-better-with-interop/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://webkit.org/blog/14955/the-web-just-gets-better-with-interop/](https://webkit.org/blog/14955/the-web-just-gets-better-with-interop/)
- en: The web is amazing. It makes collaborating, learning, and connecting easy for
    billions of people, because it’s intentionally designed to run on radically different
    devices.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: Web 真是令人惊叹。它让数十亿人轻松进行合作、学习和连接，因为它专门设计用于在截然不同的设备上运行。
- en: It’s your job as a web developer to ensure your project works in every browser
    and for every user — and that can be hard to do. It’s a far easier undertaking
    when browsers have identical implementations of the web technology you use.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 作为 Web 开发者，您的工作是确保您的项目在每个浏览器和每个用户中都能正常工作 —— 这可能很难。当浏览器对您使用的 Web 技术有相同的实现时，这个任务就变得容易得多。
- en: Identical implementations are accomplished through the web standards process,
    where people collaborate together to write extremely detailed technical documents
    that define each new web technology — right down to how website bugs should work.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 Web 标准流程实现了相同的实现，人们共同撰写了极为详细的技术文档，定义了每一个新的 Web 技术，直至网站 bug 的工作方式。
- en: One way to check and see if browsers follow the web standards is through automated
    testing. There are several shared repositories of such tests, including [Web Platform
    Tests](https://web-platform-tests.org/). WPT contains over 1.8 million tests,
    of which over 95% pass in all of the major browsers.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 检查浏览器是否遵循 Web 标准的一种方法是通过自动化测试。有几个共享存储库包含这类测试，包括 [Web Platform Tests](https://web-platform-tests.org/)。WPT
    包含超过 180 万个测试，其中超过 95% 在所有主流浏览器中通过。
- en: The Interop Project
  id: totrans-split-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Interop 项目
- en: The Interop project aims to improve interoperability by encouraging browser
    engine teams to look deeper into specific focus areas. Now, for a third year,
    Apple, [Bocoup](https://bocoup.com/blog/interop-2024), [Google](https://web.dev/blog/interop-2024),
    [Igalia](https://www.igalia.com/2024/interop-2024-launches.html), [Microsoft](https://blogs.windows.com/msedgedev/2024/02/01/microsoft-edge-and-interop-2024/),
    and [Mozilla](https://hacks.mozilla.org/2024/02/announcing-interop-2024/) pooled
    our collective expertise and selected a specific subset of automated tests for
    2024.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: Interop 项目旨在通过鼓励浏览器引擎团队深入研究特定的关注领域来提高互操作性。现在，苹果、[Bocoup](https://bocoup.com/blog/interop-2024)、[Google](https://web.dev/blog/interop-2024)、[Igalia](https://www.igalia.com/2024/interop-2024-launches.html)、[Microsoft](https://blogs.windows.com/msedgedev/2024/02/01/microsoft-edge-and-interop-2024/)
    和 [Mozilla](https://hacks.mozilla.org/2024/02/announcing-interop-2024/) 在 2024
    年度汇集了我们的集体专业知识，并为自动化测试选择了特定的子集。
- en: Some of the technologies chosen have been around for a long time. Other areas
    are brand new. By selecting some of the highest priority features that developers
    have avoided for years because of their bugs, we can get them to a place where
    they can finally be relied on. And by selecting exciting new technology, we can
    ensure it’s interoperable from the beginning.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 一些选择的技术已经存在很长时间了，而其他领域则是全新的。通过选择一些开发者因为其 bug 而多年回避的最高优先级功能，我们可以将它们置于可以可靠使用的位置。通过选择激动人心的新技术，我们可以确保从一开始就实现互操作性。
- en: To better understand where interoperability is going in the future, let’s first
    take a look at the impact of Interop 2023.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 要更好地了解未来互操作性的发展方向，首先让我们看一下 Interop 2023 的影响。
- en: Interop 2023
  id: totrans-split-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Interop 2023
- en: '[Interop 2023](https://webkit.org/blog/13706/interop-2023/) was even more of
    an overwhelming success than [Interop 2022](https://webkit.org/blog/12288/working-together-on-interop-2022/).
    In January 2023, 48% of the chosen tests passed in all three of the major browser
    engines (in those shipped to users: Chrome and Firefox for desktop Linux, and
    Safari on macOS Monterey). A year later, that pass rate rose to 95% (in Chrome
    Dev and Firefox Nightly for desktop Linux, and Safari Technology Preview on macOS
    Ventura).'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[Interop 2023](https://webkit.org/blog/13706/interop-2023/) 比 [Interop 2022](https://webkit.org/blog/12288/working-together-on-interop-2022/)
    更加成功。在 2023 年 1 月，48% 的测试被选中，并在所有三大浏览器引擎中（Chrome 和 Firefox 适用于桌面 Linux，以及 macOS
    Monterey 上的 Safari）通过。一年后，通过率提升至 95%（在桌面 Linux 上的 Chrome Dev 和 Firefox Nightly，以及
    macOS Ventura 上的 Safari Technology Preview）。'
- en: '![Screenshot of the graph of results from January to December 2023, available
    at https://wpt.fyi/interop-2023](img/f0700a3c3be54f2a2fa3e674306015de.png)'
  id: totrans-split-16
  prefs: []
  type: TYPE_IMG
  zh: '![2023 年 1 月至 12 月结果图表的屏幕截图，可在 https://wpt.fyi/interop-2023 查看](img/f0700a3c3be54f2a2fa3e674306015de.png)'
- en: The success of Interop 2023, seen on the [“Experimental” dashboard](https://wpt.fyi/interop-2023).
    The “Interop” line, in dark green, shows the percentage of tests that passed in
    all three — Chrome Dev, Firefox Nightly, and Safari Technology Preview.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: Interop 2023 的成功，可以在[“实验”仪表板](https://wpt.fyi/interop-2023)上看到。深绿色的“Interop”线显示了在Chrome
    Dev、Firefox Nightly和Safari Technology Preview中所有测试通过的百分比。
- en: What did Interop 2023 accomplish?
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: Interop 2023 达到了什么成就？
- en: It ensured that all browsers have full support for P3 color, seven years after
    it started shipping.
  id: totrans-split-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保在其发布七年后，所有浏览器都充分支持P3颜色。
- en: Form controls now support vertical writing modes, for the first time in the
    web’s history.
  id: totrans-split-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表单控件现在首次支持垂直书写模式，这在Web历史上是首次。
- en: CSS `border-image` now works as originally intended.
  id: totrans-split-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CSS `border-image` 现在按照最初的意图正常工作。
- en: Subgrid, Container Queries, `:has()`, Motion Path, CSS Math Functions, `inert`
    and `@property` are now supported in every modern browser.
  id: totrans-split-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Subgrid、容器查询、`:has()`、Motion Path、CSS数学函数、`inert`和`@property`现在在所有现代浏览器中都得到了支持。
- en: Improved Web APIs include Offscreen Canvas, Modules in Web Workers, Import Maps,
    Import Assertions, and JavaScript Modules.
  id: totrans-split-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进的Web API包括离屏画布、Web Workers中的模块、导入映射、导入断言和JavaScript模块。
- en: The entire Media Queries 4 specification is now supported everywhere, with easier
    to use syntax.
  id: totrans-split-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整个媒体查询4规范现在在所有地方得到了支持，并且具有更易于使用的语法。
- en: Web Components got a boost with `adoptedStyleSheets`, `ElementInternals`, Form-Associated
    Custom Elements, and the basic behavior of Shadow DOM and Custom Elements.
  id: totrans-split-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web组件在`adoptedStyleSheets`、`ElementInternals`、Form-Associated自定义元素以及Shadow DOM和自定义元素的基本行为方面得到了提升。
- en: Useful CSS pseudo-classes can now be relied on, with consistent cross-browser
    support for `:nth-child()`, `:nth-last-child()`, `:modal`, `:user-valid`, and
    `:user-invalid`.
  id: totrans-split-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在可以依赖一些有用的CSS伪类，并且`:nth-child()`、`:nth-last-child()`、`:modal`、`:user-valid`和`:user-invalid`在所有现代浏览器中均有一致的跨浏览器支持。
- en: Feature queries now have new support for detecting font features.
  id: totrans-split-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特性查询现在新增支持以检测字体特性。
- en: Font Palettes provide robust support for color fonts.
  id: totrans-split-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字体调色板为彩色字体提供了强大的支持。
- en: Significant progress made improving CSS Masking, HTML Forms, Pointer and Mouse
    Events, Scrolling, Transforms, URL, WebCodecs, and a bucket of bugs causing web
    compat issues.
  id: totrans-split-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在改善CSS遮罩、HTML表单、指针和鼠标事件、滚动、变换、URL、WebCodecs以及导致Web兼容性问题的一大堆错误方面取得了显著进展。
- en: '[And more](https://webkit.org/blog/13706/interop-2023/#focus-areas).'
  id: totrans-split-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[更多信息](https://webkit.org/blog/13706/interop-2023/#focus-areas)。'
- en: We hope this work gives you a renewed sense of confidence to use these technologies.
    If you found any of them hard-to-use in the past, give them another try.
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望这项工作能让您重新对使用这些技术充满信心。如果您以前发现其中某些技术难以使用，请再试一次。
- en: Interop 2023 had twenty-six focus areas, twenty of which are being retired as
    a success. Work will continue on Custom Properties, Pointer and Mouse Events,
    URL, and a new grouping called “Layout” — consisting of Flexbox, Grid, and Subgrid.
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: Interop 2023 有26个关注领域，其中20个已成功退役。将继续在自定义属性、指针和鼠标事件、URL以及名为“布局”的新分组（包括Flexbox、Grid和Subgrid）上进行工作。
- en: Interop 2024
  id: totrans-split-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Interop 2024
- en: Now, we are doing it all again for 2024\. Ninety-six focus area proposals were
    submitted for consideration. Ultimately, sixteen were chosen. Grouping some of
    the new proposals together, and continuing some of the work from 2023, gives Interop
    2024 a total of seventeen focus areas.
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们为2024年做好了准备。共有96个关注领域提案提交进行考虑。最终，选择了16个。将一些新提议进行分组，并继续2023年的一些工作，使Interop
    2024 总共有17个关注领域。
- en: '![The Interop 2024 dashboard](img/1d51a67791bd3b85055affa1e9ce5362.png)'
  id: totrans-split-35
  prefs: []
  type: TYPE_IMG
  zh: '![Interop 2024 仪表板](img/1d51a67791bd3b85055affa1e9ce5362.png)'
- en: The Interop 2024 dashboard, looking at the “stable” browsers (those currently
    in the hands of everyday people). Coincidentally, the overall Interop score is
    once again starting at 48%.
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: Interop 2024 仪表板，查看“稳定”浏览器（目前由普通用户使用）。巧合的是，整体的Interop得分再次从48%开始。
- en: New this year, Microsoft Edge now has its own column on the [Interop dashboard](https://wpt.fyi/interop-2024?stable).
    This currently represents Edge and Edge Dev running on Windows 10.
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
  zh: 今年新加入的是，Microsoft Edge 现在在[Interop 仪表板](https://wpt.fyi/interop-2024?stable)上有自己的专栏。目前代表运行在Windows
    10上的Edge和Edge Dev。
- en: The 2024 Focus Areas
  id: totrans-split-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2024 年的关注领域
- en: Accessibility
  id: totrans-split-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 辅助功能
- en: Interop 2023 included an Accessibility Investigation project. Led by Apple’s
    accessibility team, the group worked diligently to create new accessibility testing
    infrastructure for WPT, and write over [1300 new accessibility tests](https://wpt.fyi/results/?label=master&label=experimental&aligned&q=label%3Aaccessibility).
    These tests have now been included in Interop 2024 as a focus area, encouraging
    browsers to increase their support.
  id: totrans-split-40
  prefs: []
  type: TYPE_NORMAL
  zh: Interop 2023包括一个辅助功能调查项目。由苹果的辅助功能团队领导，该小组努力创建了新的WPT辅助功能测试基础设施，并编写了超过[1300个新的辅助功能测试](https://wpt.fyi/results/?label=master&label=experimental&aligned&q=label%3Aaccessibility)。这些测试现在已经作为Interop
    2024的重点领域包含在内，鼓励浏览器增加对其支持。
- en: The majority of new accessibility tests cover [WAI-ARIA](https://w3c.github.io/aria/),
    in particular, [the Roles Model](https://w3c.github.io/aria/#roles) and the [Accessible
    Name and Description Computation](https://w3c.github.io/accname/) (AccName). Together,
    these provide a consistent mechanism for conveying the purpose or intent of an
    element so assistive technology users understand what it is and what they can
    do with it.
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数新的辅助功能测试涵盖了[WAI-ARIA](https://w3c.github.io/aria/)，特别是[角色模型](https://w3c.github.io/aria/#roles)和[可访问名称和描述计算](https://w3c.github.io/accname/)（AccName）。这两者共同提供了一种一致的机制，用于传达元素的目的或意图，以便辅助技术用户了解它的功能和用途。
- en: Other new accessibility tests cover how those technologies are incorporated
    into host languages. For example, the [HTML Accessibility API Mappings specification
    (HTML-AAM)](https://w3c.github.io/html-aam/) defines the default accessibility
    semantics of HTML elements, along with related rules for how browsers work with
    features like the `<label>` element and image `alt` text. (See the [html-aam/roles
    WPT tests](https://wpt.fyi/results/html-aam/roles.html?label=master&label=experimental&aligned&q=label%3Aaccessibility)
    as an example.)
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
  zh: 其他新的辅助功能测试涵盖了这些技术如何被整合到宿主语言中。例如，[HTML辅助功能API映射规范（HTML-AAM）](https://w3c.github.io/html-aam/)定义了HTML元素的默认辅助功能语义，以及与浏览器如何处理`<label>`元素和图像`alt`文本等特性相关的规则。（请参见[html-aam/roles
    WPT测试](https://wpt.fyi/results/html-aam/roles.html?label=master&label=experimental&aligned&q=label%3Aaccessibility)作为示例。）
- en: 'Another new set of tests cover the accessibility of `display: contents`. This
    display mode in CSS provides a useful mechanism for removing the box around content
    — helpful when wanting to adjust the parent/child/grandchild relationships of
    content for the purposes of Flexbox or Grid. But it was off limits for use for
    years, because of the [lack of accessibility in early implementations](https://caniuse.com/css-display-contents).
    Removing the box on an item completely removed all the contents of that box from
    the accessibility tree. Sighted users could still see the child content, but many
    users of assistive technology experienced it completely disappearing. Most of
    these problems have been fixed in browsers, but not all, not for every situation.
    These new tests are the next step toward full accessibility and interoperability.'
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
  zh: '另一组新的测试涵盖了`display: contents`的可访问性。CSS中的这种显示模式提供了一个有用的机制，可以移除内容周围的框 —— 在想要调整用于Flexbox或Grid的父/子/孙关系的内容时特别有用。但是多年来，由于早期实现中的可访问性缺失，这种模式一直被禁用。将项目上的框完全移除会使该框中的所有内容从可访问性树中移除。视觉用户仍然可以看到子内容，但许多辅助技术用户则会完全看不到。大多数这些问题已在浏览器中得到解决，但并非全部，也不适用于所有情况。这些新的测试是迈向完全可访问性和互操作性的下一步。'
- en: By including these new Accessibility tests in Interop 2024, the hope is to fix
    every issue in all browsers. We want it to be easier for developers to create
    accessible sites and make the web better for everyone, including people with disabilities.
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在Interop 2024中包含这些新的辅助功能测试，希望能够修复所有浏览器中的每个问题。我们希望开发人员能更轻松地创建无障碍站点，并使网络对所有人，包括残障人士，变得更好。
- en: CSS Nesting
  id: totrans-split-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: CSS嵌套
- en: '[CSS Nesting](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_nesting/Using_CSS_nesting)
    is a focus area for Interop 2024 to ensure any differences are ironed out, and
    to provide you with the confidence to use it. The ability to nest CSS [shipped
    in all four major browsers](https://caniuse.com/css-nesting) in 2023 — first in
    Chrome, Edge, and Safari in April/May. And then in Firefox in August.'
  id: totrans-split-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[CSS嵌套](https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_nesting/Using_CSS_nesting)是Interop
    2024的一个重点领域，以确保消除任何差异，并为您提供使用它的信心。CSS嵌套的能力在2023年已经在所有四个主要浏览器中推出 — 首先是在4月和5月份的Chrome、Edge和Safari中，然后在8月份的Firefox中。'
- en: The web standard changed slightly between May and August, relaxing the original
    requirement that every nested selector start with a symbol. Developers can now
    simply write `article`, rather than needing to use `& article`.
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
  zh: 网页标准在五月和八月之间略有变化，放宽了每个嵌套选择器必须以符号开头的原始要求。开发者现在可以简单地写`article`，而不必使用`& article`。
- en: All of the implementations have since been updated, but there are still small
    bits that could benefit from attention to interoperability, especially as the
    final complex details of how Nesting works are settled in the CSS Working Group.
    Most of Safari’s test failures, for example, are about how nested CSS [interacts](https://github.com/w3c/csswg-drafts/issues/9509)
    with the Shadow DOM via [`:host`](https://developer.mozilla.org/en-US/docs/Web/CSS/:host).
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的实现都已经更新，但仍有一些细小的部分可能需要注意互操作性，特别是在CSS工作组最终确定嵌套工作原理的复杂细节方面。例如，大部分Safari的测试失败都与嵌套CSS如何通过[`:host`](https://developer.mozilla.org/en-US/docs/Web/CSS/:host)与Shadow
    DOM互动有关。
- en: Custom Properties
  id: totrans-split-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自定义属性
- en: The `@property` at-rule started [shipping in browsers](https://caniuse.com/mdn-css_at-rules_property)
    over the last few years. As part of Interop 2023, the Custom Properties focus
    area rose from 4% of tests passing in all stable browsers to 7.6% passing — with
    90.7% passing in all of the preview browsers. Firefox is the last browser to add
    support, which is currently in progress in Firefox Nightly. Since this work isn’t
    done yet, the focus area is being continued in 2024.
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`@property`规则最近几年开始在浏览器中[发布](https://caniuse.com/mdn-css_at-rules_property)。作为2023互操作性的一部分，自定义属性的焦点区域从所有稳定浏览器中的4%通过测试上升到7.6%
    —— 在所有预览浏览器中，90.7%通过测试。Firefox是最后一个添加支持的浏览器，目前正在Firefox Nightly中进行中。由于这项工作尚未完成，焦点区域将继续在2024年进行。'
- en: With [`@property`](https://developer.mozilla.org/en-US/docs/Web/CSS/@property),
    developers can declare CSS custom properties in a fashion similar to how browser
    engines define CSS properties — specifying its syntax, inheritance behavior, and
    initial value.
  id: totrans-split-51
  prefs: []
  type: TYPE_NORMAL
  zh: 利用[`@property`](https://developer.mozilla.org/en-US/docs/Web/CSS/@property)，开发者可以声明CSS自定义属性，类似于浏览器引擎定义CSS属性的方式
    —— 指定其语法、继承行为和初始值。
- en: '[PRE0]'
  id: totrans-split-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This allows you to do things in CSS that were impossible before, like animating
    gradients or certain parts of transforms.
  id: totrans-split-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得你可以在CSS中做以前无法做到的事情，比如动画渐变或某些部分的变换。
- en: Declarative Shadow DOM
  id: totrans-split-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 声明性Shadow DOM
- en: '[Declarative Shadow DOM](https://webkit.org/blog/13851/declarative-shadow-dom/)
    is a declarative API that lets you create reusable widgets and components by using
    only HTML — no JavaScript is necessary. It’s been [supported](https://caniuse.com/?search=Declarative%20Shadow%20DOM)
    in Safari 16.4 since March 2023, and in Chrome 90 since April 2021\. Firefox has
    an implementation in Firefox Nightly.'
  id: totrans-split-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[声明性Shadow DOM](https://webkit.org/blog/13851/declarative-shadow-dom/)是一种声明性API，允许你仅使用HTML创建可重用的小部件和组件
    —— 不需要JavaScript。自2023年3月起，Safari 16.4和Chrome 90开始[支持](https://caniuse.com/?search=Declarative%20Shadow%20DOM)。Firefox在Firefox
    Nightly中有一个实现。'
- en: Declarative Shadow DOM was one of the often-asked-for features in the [State
    of HTML 2023](https://stateofhtml.com/en-US) survey, so it was chosen to be part
    of Interop 2024 to ensure it becomes interoperable across all browsers.
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
  zh: 声明性Shadow DOM是[HTML 2023现状](https://stateofhtml.com/en-US)调查中经常被要求的功能之一，因此被选定为2024互操作性的一部分，以确保它在所有浏览器中实现互操作性。
- en: Font size adjust
  id: totrans-split-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 字体大小调整
- en: The `font-size-adjust` property is a great example of the usefulness of placing
    attention on older technology. Firefox first [implemented](https://caniuse.com/?search=font-size-adjust)
    font size adjust in 2008, but it was rarely used or even discussed by web designers
    and developers. The early spec evolved over time, adding support for more languages
    through the two-value syntax, and becoming easier to use with the `from-font`
    value.
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`font-size-adjust`属性是关注旧技术实用性的一个很好的例子。Firefox在2008年首次[实现](https://caniuse.com/?search=font-size-adjust)了字体大小调整，但在网页设计师和开发者中很少被使用或讨论。早期规范随时间演变，通过两值语法添加了更多语言支持，并且通过`from-font`值变得更易于使用。'
- en: The WebKit team implemented the basic version in Safari 16.4 and added the updates
    in September’s Safari 17.0\. Mozilla updated their implementation in Firefox 118,
    also in September 2023\. Both Safari and Firefox now pass 100% of all tests. Chrome
    began an experimental implementation in 2015, but has yet to ship it. Now with
    Interop 2024, it’s likely every browser will gain complete support.
  id: totrans-split-59
  prefs: []
  type: TYPE_NORMAL
  zh: WebKit团队在Safari 16.4中实现了基本版本，并在2023年9月份的Safari 17.0中添加了更新。Mozilla也在同一时间更新了他们在Firefox
    118中的实现。现在，Safari和Firefox都通过了所有测试的100%。Chrome在2015年开始了实验性实现，但至今尚未推出。现在随着Interop
    2024的到来，很可能每个浏览器都将获得完整的支持。
- en: '[Font size adjust](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size-adjust)
    provides a simple way to conform all the fonts used in a string of text to be
    the same visual size — so every character in `1.4rem`-sized text, for example,
    has the same x-height — or cap height, `ch` width, `ic` width, or `ic` height.
    The two value syntax allows you to choose which measurement to conform.'
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[字体大小调整](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size-adjust)提供了一种简单的方法，可以使文本字符串中使用的所有字体保持相同的视觉大小
    —— 例如，`1.4rem`大小的文本中的每个字符都具有相同的x-height —— 或cap height、`ch` width、`ic` width或`ic`
    height。两个值的语法允许您选择要调整的测量。'
- en: This property is especially useful when you are mixing code with regular text,
    or mixing multiple languages together, and the different fonts within the same
    sentence have different sizes. With font size adjust you can avoid weirdly-big
    letters. No more fussing with font metrics to find a magic number that makes them
    all look the same size.
  id: totrans-split-61
  prefs: []
  type: TYPE_NORMAL
  zh: 当您将代码与常规文本混合使用或将多种语言混合在一起，并且同一句子中的不同字体具有不同的大小时，此属性尤其有用。使用字体大小调整，您可以避免出现奇怪地大字母。不再需要使用字体度量来找到使它们看起来大小相同的神奇数字。
- en: '![a code demo showing the visual consistency of the inked x-height of multiple
    font families](img/0c467148af7b4cf2054d0dd08331f9ec.png)'
  id: totrans-split-62
  prefs: []
  type: TYPE_IMG
  zh: '![一个演示代码，显示多种字体系列的油墨x-height视觉一致性](img/0c467148af7b4cf2054d0dd08331f9ec.png)'
- en: 'The CSS `font-size-adjust: from font` makes the Courier font adjust its size
    to match its x-height with that from Iowan Old Style, instead of typesetting the
    code to be visually larger. The size uniformity holds even when fallback fonts
    are used instead.'
  id: totrans-split-63
  prefs: []
  type: TYPE_NORMAL
  zh: 'CSS的`font-size-adjust: from font`使Courier字体调整其大小以匹配Iowan Old Style的x-height，而不是调整代码以视觉上更大。即使使用回退字体，大小的一致性也保持不变。'
- en: Learn more about `font-size-adjust` by watching *[What’s new in CSS](https://developer.apple.com/videos/play/wwdc2023/10121/?time=1338)*
    from WWDC23.
  id: totrans-split-64
  prefs: []
  type: TYPE_NORMAL
  zh: 通过观看*[CSS有什么新东西](https://developer.apple.com/videos/play/wwdc2023/10121/?time=1338)*来了解更多关于`font-size-adjust`的内容。
- en: HTTPS URLs for WebSocket
  id: totrans-split-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: WebSocket的HTTPS URL
- en: 'A quirky aspect of the WebSocket API is that you need to use non-HTTP(S) schemes:
    `ws:` (insecure) and `wss:`. As the URLs function otherwise identically to HTTP(S)
    URLs, this makes the API a bit frustrating to deal with. Based on web developer
    feedback the WebKit team decided to address this last year by making the API support
    HTTP(S) URLs as well. We shipped support in Safari 17.0.'
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
  zh: WebSocket API的一个古怪之处是，您需要使用非HTTP(S)方案：`ws:`（不安全）和`wss:`。由于URL在其他方面的功能与HTTP(S)
    URL完全相同，这使得API有点令人沮丧。基于Web开发者的反馈，WebKit团队去年决定通过使API支持HTTP(S) URL来解决这个问题。我们在Safari
    17.0中提供了支持。
- en: 'This means that instead of writing:'
  id: totrans-split-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着，您现在可以写成：
- en: '[PRE1]'
  id: totrans-split-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You can now write the much more ergonomic:'
  id: totrans-split-69
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在可以更加方便地编写：
- en: '[PRE2]'
  id: totrans-split-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: By bringing this to Interop 2024, we hope other browsers will adopt it as well,
    making it universally available for web developers.
  id: totrans-split-71
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将此引入到Interop 2024中，我们希望其他浏览器也会采纳它，使其成为Web开发人员普遍可用的工具。
- en: IndexedDB
  id: totrans-split-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: IndexedDB
- en: '[IndexedDB](https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API)
    is an API that provides powerful ways to store data client-side, in an object-oriented
    database. It started shipping in browsers in 2011, and over the years the web
    standard has kept evolving. Both version 2 and [version 3](https://www.w3.org/TR/IndexedDB/)
    are supported by all major browsers. Version 2 is fully interoperable, but version
    3 needs a bit of attention to bring up the quality of implementations. Being part
    of Interop 2024 will help ensure implementations are completed and aligned.'
  id: totrans-split-73
  prefs: []
  type: TYPE_NORMAL
  zh: '[IndexedDB](https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API)是一个提供强大的客户端数据存储方式的API，是一个面向对象数据库。它从2011年开始在浏览器中使用，并且随着时间推移，Web标准一直在不断发展。所有主流浏览器都支持版本2和[版本3](https://www.w3.org/TR/IndexedDB/)。版本2完全可互操作，但版本3需要一些注意力来提高实现的质量。作为Interop
    2024的一部分，将有助于确保实现完成并保持一致。'
- en: Layout
  id: totrans-split-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 布局
- en: CSS [Grid](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout)
    and [Flexbox](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_flexible_box_layout/Basic_concepts_of_flexbox)
    were both included in the original Interop project in 2021\. [Subgrid](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_grid_layout/Subgrid)
    was added in Interop 2023\. While all three layout methods are now in great shape,
    they still aren’t quite perfect. The tests for these three areas are now being
    combined into one Focus Area called Layout. Work will continue to ensure complex
    edge cases are more interoperable. Meanwhile, developers should absolutely feel
    confident using these three technologies, since all browsers have solid support
    for [Flexbox](https://caniuse.com/flexbox), [Grid](https://caniuse.com/css-grid),
    and now [Subgrid](https://caniuse.com/css-subgrid).
  id: totrans-split-75
  prefs: []
  type: TYPE_NORMAL
  zh: CSS [网格](https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout)
    和 [Flexbox](https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_flexible_box_layout/Basic_concepts_of_flexbox)
    都包含在了原始的Interop项目中，于2021年。[子网格](https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_grid_layout/Subgrid)
    则在Interop 2023中新增。虽然这三种布局方法现在非常成熟，但仍不完美。现在这三个领域的测试正被合并为一个称为“布局”的重点领域。工作将继续确保复杂的边缘情况更具互操作性。同时，开发者应完全放心使用这三种技术，因为所有浏览器都对[Flexbox](https://caniuse.com/flexbox)、[Grid](https://caniuse.com/css-grid)和现在的[Subgrid](https://caniuse.com/css-subgrid)提供了坚实的支持。
- en: Pointer and Mouse Events
  id: totrans-split-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 指针和鼠标事件
- en: '[Pointer events](https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events)
    are DOM events that are fired for a pointing device. They create a single DOM
    event model to handle pointing input devices such as a mouse, pen/stylus, or touch
    with one or more fingers. This API first started [shipping](https://caniuse.com/pointer)
    in browsers in 2012, and landed everywhere by 2019, but still had rocky interoperability.'
  id: totrans-split-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[指针事件](https://developer.mozilla.org/zh-CN/docs/Web/API/Pointer_events)是为指向设备而触发的DOM事件。它们创建了一个单一的DOM事件模型来处理指向输入设备，如鼠标、笔/触控笔或带有一个或多个手指的触摸设备。这个API首次在2012年在浏览器中推出，并在2019年普及到了所有地方，但仍存在不良的互操作性。'
- en: In 2022, the Interop team launched an Investigation Project to look deeper into
    the current state of Pointer and Mouse Events, in an effort to clarify consensus
    and write tests that captured the state of that consensus. For Interop 2023, those
    tests enabled Pointer and Mouse Events to be a Focus Area, where the test pass
    rate was part of the Interop 2023 dashboard and score. Over the year, Pointer
    and Mouse Events rose from a test pass rate of 34% to 81% — the most significant
    progress of any area.
  id: totrans-split-78
  prefs: []
  type: TYPE_NORMAL
  zh: 2022年，Interop团队启动了一个调查项目，深入研究指针和鼠标事件的当前状态，以澄清共识并编写捕捉该共识状态的测试。到了Interop 2023，这些测试使得指针和鼠标事件成为了一个重点关注领域，测试通过率成为了Interop
    2023仪表板和分数的一部分。在一年之内，指针和鼠标事件的测试通过率从34%上升到了81% —— 这是所有领域中最显著的进展。
- en: While passing 81% of tests is a significant improvement, there is more work
    to do, therefore Pointer and Mouse Events will continue to be a Focus Area for
    2024.
  id: totrans-split-79
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管通过了81%的测试是一个显著的改进，但仍有更多工作要做，因此指针和鼠标事件将继续是2024年的一个重点领域。
- en: Popover
  id: totrans-split-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 弹出框
- en: The new [`popover`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/popover)
    attribute in HTML provides a built-into-the-browser way to have an element pop
    into view on the top layer of a page. If you are creating an overlay over the
    entire web page, the [`dialog`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog)
    element is the best option. But when you want to turn any other element into a
    popup message, user interface, or other kind of content that appears and disappears,
    the `popover` element provides a framework to do it.
  id: totrans-split-81
  prefs: []
  type: TYPE_NORMAL
  zh: HTML中新的[`popover`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes/popover)属性提供了一种内置浏览器的方式，使元素在页面的顶层弹出视图。如果您要在整个网页上创建一个遮罩层，则[`dialog`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/dialog)元素是最佳选择。但当您想要将任何其他元素转换为弹出消息、用户界面或其他类型的内容以显示和消失时，`popover`元素提供了一个框架来实现。
- en: Support for `popover` shipped in Chrome 114 and Safari 17.0 in 2023\. Firefox
    currently has support in progress in Firefox Nightly. Being part of Interop 2024
    will ensure this highly desired feature has a fantastic start.
  id: totrans-split-82
  prefs: []
  type: TYPE_NORMAL
  zh: 对`popover`的支持在2023年已经在Chrome 114和Safari 17.0中推出。Firefox目前在Firefox Nightly中正在进行支持。作为Interop
    2024的一部分，这个备受期待的功能将有一个了不起的起步。
- en: Relative Color Syntax
  id: totrans-split-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 相对颜色语法
- en: Relative Color Syntax is a new way to define colors in CSS that allows you do
    so while referring to another color. You can, for instance, lighten or darken
    an existing color by a certain amount. You can take a color variable, adjust the
    saturation, and assign the new color to a second variable. Relative Color Syntax
    can be especially powerful when creating a design system.
  id: totrans-split-84
  prefs: []
  type: TYPE_NORMAL
  zh: 相对颜色语法是一种在 CSS 中定义颜色的新方式，允许您在参考其他颜色的同时进行定义。例如，您可以通过一定的量轻化或深化现有的颜色。您可以接收一个颜色变量，调整饱和度，并将新颜色分配给第二个变量。相对颜色语法在创建设计系统时特别强大。
- en: '![a still from the WWDC session teach how relative color syntax works](img/bb7b6328dfb8e9ab3eeb7c0512272d37.png)'
  id: totrans-split-85
  prefs: []
  type: TYPE_IMG
  zh: '![从 WWDC 会话中教授相对颜色语法如何工作的静态图](img/bb7b6328dfb8e9ab3eeb7c0512272d37.png)'
- en: Learn more about Relative Color Syntax by watching *[What’s new in CSS](https://developer.apple.com/videos/play/wwdc2023/10121/?time=623)*
    from WWDC23\.
  id: totrans-split-86
  prefs: []
  type: TYPE_NORMAL
  zh: 通过观看 *[CSS 的新功能](https://developer.apple.com/videos/play/wwdc2023/10121/?time=623)*，了解更多关于相对颜色语法的信息，来自
    WWDC23。
- en: Safari 16.4 was the first browser to ship support, in March 2023\. Chrome 119
    and Edge 119 shipped support in Oct and Nov 2023\. Currently, none of the implementations
    have support for using `currentcolor` with Relative Color Syntax.
  id: totrans-split-87
  prefs: []
  type: TYPE_NORMAL
  zh: Safari 16.4 是第一个在 2023 年 3 月支持的浏览器。Chrome 119 和 Edge 119 则在 2023 年 10 月和 11
    月推出了支持。目前，这些实现都不支持使用 `currentcolor` 与相对颜色语法。
- en: The Relative Color Syntax focus area for Interop 2024 doesn’t test overall support
    of Relative Color Syntax. It’s narrowly focused on whether or not `currentcolor`
    is supported, and includes tests of out-of-gamut behavior — checking to see what
    happens on displays that don’t have support for P3 color. Inclusion in Interop
    2024 will help these final bits get done.
  id: totrans-split-88
  prefs: []
  type: TYPE_NORMAL
  zh: 相对颜色语法在 Interop 2024 的关注区域并不是测试相对颜色语法的整体支持情况。它着重于是否支持 `currentcolor`，并包括对超出色域行为的测试
    — 检查在不支持 P3 色域的显示器上会发生什么。加入到 Interop 2024 将有助于完成这些最后的细节。
- en: requestVideoFrameCallback
  id: totrans-split-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: requestVideoFrameCallback
- en: The `<video>` element provides powerful functionality for putting video on the
    web. But often, developers want and need to do more. The [`HTMLVideoElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement)
    interface provides special properties and methods for manipulating video objects
    in JavaScript. And one of those methods is `requestVideoFrameCallback()`. It lets
    you perform per-video-frame operations on video in an efficient manner — operations
    like video processing or analysis, painting to canvas, and synchronization with
    audio sources.
  id: totrans-split-90
  prefs: []
  type: TYPE_NORMAL
  zh: '`<video>` 元素为在网页上放置视频提供了强大的功能。但是，开发者通常希望并需要做更多。[`HTMLVideoElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement)
    接口为在 JavaScript 中操作视频对象提供了特殊的属性和方法。其中一个方法是 `requestVideoFrameCallback()`。它允许您以高效的方式对视频进行每帧操作
    — 例如视频处理或分析、绘制到画布以及与音频源同步。'
- en: '[Supported](https://caniuse.com/mdn-api_htmlvideoelement_requestvideoframecallback)
    since Chrome 83 and Safari 15.4, inclusion in Interop 2024 will help browsers
    complete and polish our implementations.'
  id: totrans-split-91
  prefs: []
  type: TYPE_NORMAL
  zh: '[支持情况](https://caniuse.com/mdn-api_htmlvideoelement_requestvideoframecallback)
    从 Chrome 83 和 Safari 15.4 开始，加入到 Interop 2024 将有助于浏览器完成和优化我们的实现。'
- en: Scrollbar styling
  id: totrans-split-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 滚动条样式
- en: 'The scrollbar styling focus area includes two CSS properties that can be used
    to style scrollbars. The [`scrollbar-width`](https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-width)
    property provides three values: `auto`, `thin`, and `none`. The `auto` value is
    the default width; `thin` provides a thinner scrollbar; and `none` hides the scrollbar
    while still allowing content to scroll. Firefox 64 [implemented](https://caniuse.com/mdn-css_properties_scrollbar-width)
    support in December 2018, and it just shipped in Chrome 121 and Edge 121.'
  id: totrans-split-93
  prefs: []
  type: TYPE_NORMAL
  zh: 滚动条样式的关注区域包括两个用于样式化滚动条的 CSS 属性。[`scrollbar-width`](https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-width)
    属性提供三个值：`auto`、`thin` 和 `none`。`auto` 是默认宽度；`thin` 提供更细的滚动条；`none` 隐藏滚动条但仍允许内容滚动。Firefox
    64 在 2018 年 12 月实现了支持，并且刚刚在 Chrome 121 和 Edge 121 中推出。
- en: 'The [`scrollbar-gutter`](https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-gutter)
    property lets you reserve space for the scrollbar, so the layout is the same whether
    or not a scrollbar is present. The `scrollbar-gutter: stable` rule lets you tell
    the browser to reserve space for a scrollbar, even when a scrollbar isn’t there.
    This can prevent layout shifts from happening between states where scrollbars
    are needed or not needed. It [shipped](https://caniuse.com/mdn-css_properties_scrollbar-gutter)
    in Chrome 94, Edge 94 and Firefox 97, in 2021–22.'
  id: totrans-split-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scrollbar-gutter`](https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-gutter)
    属性允许您保留滚动条的空间，因此无论是否存在滚动条，布局都保持一致。 `scrollbar-gutter: stable` 规则允许您告诉浏览器为滚动条保留空间，即使没有滚动条。这可以防止在需要或不需要滚动条的状态之间发生布局变化。它在2021-2022年Chrome
    94、Edge 94和Firefox 97中推出。'
- en: Safari has the most work to do to complete this Focus Area. Chrome and Firefox
    already pass 100% of the tests. Ironically, it was [Safari who first provided](https://webkit.org/blog/363/styling-scrollbars/)
    the ability to style scrollbars with nine pseudo-elements, `::-webkit-scrollbar-*`,
    [back in 2009](https://caniuse.com/?search=%3A%3A-webkit-scrollbar). However that
    approach to styling scrollbars never became an official CSS web standard. The
    CSS Working Group instead [opted](https://drafts.csswg.org/css-scrollbars/#out-of-scope)
    for a far simpler approach.
  id: totrans-split-95
  prefs: []
  type: TYPE_NORMAL
  zh: Safari 需要完成此焦点区域的大部分工作。Chrome 和Firefox 已经通过了所有测试。具有讽刺意味的是，是[Safari首次提供了](https://webkit.org/blog/363/styling-scrollbars/)使用九个伪元素
    `::-webkit-scrollbar-*` 来样式化滚动条，[早在2009年](https://caniuse.com/?search=%3A%3A-webkit-scrollbar)。然而，这种样式化滚动条的方法从未成为官方CSS
    Web标准。CSS工作组反而[选择了](https://drafts.csswg.org/css-scrollbars/#out-of-scope)一种更简单的方法。
- en: '@starting-style and transition-behavior'
  id: totrans-split-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[@starting-style](https://developer.mozilla.org/en-US/docs/Web/CSS/@starting-style)
    和 transition-behavior'
- en: This Focus Area brings attention to two new features for controlling animation.
    [Both](https://caniuse.com/mdn-css_at-rules_starting-style) [shipped](https://caniuse.com/mdn-css_properties_transition-behavior)
    in Chrome 117 and Edge 177 in Sept 2023.
  id: totrans-split-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这个焦点区域关注两个新功能，用于控制动画。[两者](https://caniuse.com/mdn-css_at-rules_starting-style)
    在2023年9月Chrome 117和Edge 177中推出。
- en: The [`@starting-style`](https://developer.mozilla.org/en-US/docs/Web/CSS/@starting-style)
    rule in CSS lets you define starting values for a particular element. This is
    needed when the element is about to go through a transition. It also provides
    a way for transitioning in or out of `display:none`.
  id: totrans-split-98
  prefs: []
  type: TYPE_NORMAL
  zh: CSS中的 [`@starting-style`](https://developer.mozilla.org/en-US/docs/Web/CSS/@starting-style)
    规则允许您为特定元素定义起始值。当元素即将进行过渡时，这是必需的。它还提供了在`display:none`中进行过渡的方法。
- en: '[PRE3]'
  id: totrans-split-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In the above example, the `background-color` will transition from transparent
    to green when the element is appended to the document.
  id: totrans-split-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，当元素附加到文档时，`background-color` 将从透明过渡到绿色。
- en: Previously, only animations could animate [discretely-animatable](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_animated_properties#discrete)
    properties. The [`transition-behavior`](https://developer.mozilla.org/en-US/docs/Web/CSS/transition-behavior)
    property in CSS expands that capability to CSS transitions, paving the way for
    transitioning the `display` property when showing or hiding elements.
  id: totrans-split-101
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，只有动画可以对[可离散动画化](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_animated_properties#discrete)
    属性进行动画处理。CSS中的 [`transition-behavior`](https://developer.mozilla.org/en-US/docs/Web/CSS/transition-behavior)
    属性扩展了CSS过渡的能力，为显示或隐藏元素时过渡 `display` 属性铺平了道路。
- en: Text Directionality
  id: totrans-split-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文本方向性
- en: 'The direction in which text flows is a vital aspect of typesetting on the web.
    Some languages flow from left-to-right, while others flow from [right-to-left](https://www.w3.org/International/questions/qa-scripts).
    One of the many bits of technology supporting [text direction](https://www.w3.org/International/articlelist#direction)
    is the [`dir` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/dir).
    It lets you specifically mark any HTML element with the direction: `left`, `right`,
    or `auto` — where `auto` asks the browser to guess from the first letter. The
    interaction of directionality and shadow trees was not well-defined until recently.
    Now that it’s been addressed at a standards level, adding it to Interop 2024 helps
    us ensure implementations align as well.'
  id: totrans-split-103
  prefs: []
  type: TYPE_NORMAL
  zh: 文本流向是网络排版中至关重要的一环。一些语言是从左至右流的，而另一些是从 [右至左](https://www.w3.org/International/questions/qa-scripts)。其中许多支持文本流向的技术之一是`dir`属性[](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/dir)。它允许你专门标记任何
    HTML 元素的方向：`左`，`右`或 `自动` ——其中 `自动` 会让浏览器猜测第一个字母。方向性和阴影树之间的互动直到最近才得到明确解决。现在，经过标准化的解决后，将它添加到
    INTEROP 2024 的工作将帮助我们确保实现也能得到调整。
- en: 'text-wrap: balance'
  id: totrans-split-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 'text-wrap: balance'
- en: Web designers have long wished for a way to prevent very short or one-word lines
    of text — often known as widows or orphans. Since the advent of responsive web
    design and the lack of control over the width of columns, this desire has gotten
    even more challenging. The [`text-wrap`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-wrap)
    property provides you with multiple options for telling the browser how to wrap
    text with different methods for calculating line breaks for specific use cases.
  id: totrans-split-105
  prefs: []
  type: TYPE_NORMAL
  zh: 网络设计师长期以来一直希望找到一种方法来防止非常短或只有一个单词的文本行——经常被称为“寡妇”或“独子”。随着响应式网络设计的出现和对列宽的缺乏控制，这一愿望变得更加困难。`text-wrap`
    属性为在不同方法中自定义处理特定用例的文本失线提供了多种选项。
- en: 'The `text-wrap: balance` rule is a great solution for headlines. It balances
    a few lines of text so that each line has about the same amount of text as the
    others. It [shipped](https://caniuse.com/css-text-wrap-balance) in Chrome 114
    and Firefox 121, and is implemented in Safari Technology Preview.'
  id: totrans-split-106
  prefs: []
  type: TYPE_NORMAL
  zh: '`text-wrap: balance` 规则是为标题提供了一个优秀的解决方案。它可以平衡几行文本，使每一行的文本长度大致相同。它在 Chrome 114
    和 Firefox 121 中[发布](https://caniuse.com/css-text-wrap-balance)，并在 Safari 技术预览版中实现。'
- en: Interop 2024 also includes tests of how `text-wrap-mode`, `text-wrap-style`,
    and [`white-space-collapse`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space-collapse)
    behave. The CSS Working Group recently changed to how these longhands interact
    with each other, so support is currently uneven between browsers. Interop 2024
    will help ensure all browser engines update to the latest web standards.
  id: totrans-split-107
  prefs: []
  type: TYPE_NORMAL
  zh: INTEROP 2024 包括了有关 `text-wrap-mode`，`text-wrap-style` 和`white-space-collapse`
    行为的测试。CSS 工作组最近更改了这些较长属性之间的交互方式，因此浏览器之间的支持存在不均。INTEROP 2024 将帮助确保所有浏览器引擎更新到最新
    web 标准。
- en: URL
  id: totrans-split-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: URL
- en: URLs are one of the most fundamental parts of the web. Without them, the web
    would not exist. But like many things invented very early in the history of the
    web, support has yet to be fully interoperable. To improve this, the WHATWG wrote
    the [URL Living Standard](https://url.spec.whatwg.org/) packed with details on
    exactly how URLs should work. The tests supporting this web standard were a focus
    area for Interop 2023, improving the pass rate from 77% to 85%. To ensure interoperability,
    the work in this area will continue in 2024.
  id: totrans-split-109
  prefs: []
  type: TYPE_NORMAL
  zh: URL 是网络中最基本的组成部分之一。没有它们，网络将不存在。但就像许多在互联网早期发明的东西一样，其支持还未完全实现互操作性。为了改进这一情况，WHATWG
    写出了[URL 活动标准](https://url.spec.whatwg.org/)，详细介绍了 URL 应该如何运作。支持这一 web 标准的测试是INTEROP
    2023 的关注重点，通过改进使通过率从 77% 提高到 85%。为了确保互操作性，这个领域的工作将在 2024 年继续进行。
- en: Safari is proud to lead the pack, passing 99.7% of the tests. Improvements in
    other browsers will help ensure websites work correctly everywhere.
  id: totrans-split-110
  prefs: []
  type: TYPE_NORMAL
  zh: Safari 非常自豪地领先，通过了 99.7% 的测试。其他浏览器的改进将帮助确保网站在任何地方都能正常工作。
- en: The 2024 Investigation projects
  id: totrans-split-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2024 年的调查与项目
- en: Interop 2024 also includes three investigation areas. These are “homework projects”
    for the Interop team to work on. All three this year are about writing and making
    it possible to run more tests — Accessibility Testing, Mobile Testing, and WebAssembly
    Testing. The Mobile Testing investigation project aims to complete the infrastructure
    needed at WPT to be able to test browsers on mobile operating systems, potentially
    to include those scores on the Interop project dashboard in the future.
  id: totrans-split-112
  prefs: []
  type: TYPE_NORMAL
  zh: 互操作性2024还包括三个调研领域。这些是互操作性团队需要开展的“家庭作业项目”。今年的所有三个项目都涉及编写并使其可能在更多测试中运行 —— 包括可访问性测试、移动测试和WebAssembly测试。移动测试调研项目旨在完成WPT所需的基础设施，以便能够在移动操作系统上测试浏览器，并有可能将这些分数包括在未来的互操作性项目仪表板上。
- en: While two of the three investigations are projects continuing from last year,
    they all are starting 2024 at zero percent done. Each team involved will set new
    goals for this year, and the dashboard will report progress on those goals.
  id: totrans-split-113
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然三个调研项目中有两个是去年继续的项目，但它们在2024年都从零开始。每个涉及的团队将为今年设定新目标，并且仪表板将报告这些目标的进展情况。
- en: Track the progress
  id: totrans-split-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 跟踪进展
- en: Keep up with the progress of Interop 2024 throughout the year, on the [Interop
    2024 dashboard](https://wpt.fyi/interop-2024).
  id: totrans-split-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在整个2024年期间，随时了解互操作性2024的进展情况，请访问[互操作性2024仪表板](https://wpt.fyi/interop-2024)。
- en: Our Commitment
  id: totrans-split-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的承诺
- en: We continue to believe that interoperability is one of the fundamental pillars
    that makes the web such a success. Our efforts in Interop 2022 and 2023 demonstrate
    how deeply we care about the web. We are excited to again collaborate with our
    colleagues in seizing this opportunity help the web work better for everyone.
  id: totrans-split-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们继续相信互操作性是使网络取得如此成功的基本支柱之一。我们在2022年和2023年的互操作性工作展示了我们对网络的深切关注。我们很高兴能再次与同事们合作，抓住这个机会，帮助网络更好地服务每一个人。
