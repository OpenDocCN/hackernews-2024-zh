- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-29 13:21:43'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-29 13:21:43
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Rust Bytes: The Future is Rusty: 2023 Survey Reveals Widespread Adoption'
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Rust Bytes：未来是锈蚀的：2023年调查揭示广泛采用情况
- en: 来源：[https://weeklyrust.substack.com/p/rust-bytes-the-future-is-rusty-2023](https://weeklyrust.substack.com/p/rust-bytes-the-future-is-rusty-2023)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://weeklyrust.substack.com/p/rust-bytes-the-future-is-rusty-2023](https://weeklyrust.substack.com/p/rust-bytes-the-future-is-rusty-2023)
- en: '*Image: Learn rust crab mascot*'
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*图片：学习rust螃蟹吉祥物*'
- en: Hello Rustacean! Welcome to another edition of the Rust Bytes newsletter. In
    this issue, we'll shine a spotlight on an amazing Rust project, present our spot-the-bug
    challenge, and share some incredible links of the week.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 你好，Rustacean！欢迎来到另一期Rust Bytes通讯。在本期中，我们将聚焦一款令人惊叹的Rust项目，提出我们的发现错误挑战，并分享本周一些不可思议的链接。
- en: Welcome to Issue 11!
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎阅读第11期！
- en: '**What do you call a Rust programmer who loves concurrency?**'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**你如何称呼一个热爱并发的Rust程序员？**'
- en: A multi-threaded menace.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 多线程威胁。
- en: '**2023 Annual Rust Survey Results** are out. Here are the key insights:'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**2023年度Rust调查结果**已出炉。以下是主要见解：'
- en: 93% of the respondents self-identify as Rust users. Of those who used Rust in
    2023, 49% did so on a daily (or nearly daily) basis.
  id: totrans-split-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 93%的受访者自认为是Rust用户。在2023年使用Rust的人中，49%几乎每天都在使用。
- en: 31% of those who did not identify as Rust users cited the perception of difficulty
    as the primary reason for not having used it.
  id: totrans-split-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 31%的非Rust用户认为其难度是不使用它的主要原因。
- en: Of the former Rust users who participated in the 2023 survey, 31% stopped using
    Rust due to preferring another language and 24% cited difficulty as the primary
    reason for giving up.
  id: totrans-split-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在2023年调查中参与的前Rust用户中，31%因更喜欢其他语言而停止使用Rust，24%因难度而放弃。
- en: Amongst the IDEs used for Rust development, Visual Studio Code still seems to
    be the most popular option, with RustRover (which was released last year) also
    gaining some traction.
  id: totrans-split-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在用于Rust开发的IDE中，Visual Studio Code仍然似乎是最受欢迎的选择，而去年发布的RustRover也开始受到一些关注。
- en: 79% of the people reported that Rust helped their company achieve its goals.
  id: totrans-split-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 79%的人报告说Rust帮助他们的公司实现了目标。
- en: 9,374 people shared their main worries for the future of Rust and 43% were concerned
    about Rust becoming too complex.
  id: totrans-split-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 9,374人分享了他们对Rust未来的主要担忧，其中43%担心Rust变得过于复杂。
- en: Check out 2023 [Annual Rust Survey Results](https://blog.rust-lang.org/2024/02/19/2023-Rust-Annual-Survey-2023-results.html)
    for more details.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 查看2023年度[Rust调查结果](https://blog.rust-lang.org/2024/02/19/2023-Rust-Annual-Survey-2023-results.html)以获取更多详细信息。
- en: 'Lifetime Trickery:'
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 生命周期技巧：
- en: Identify why the code fails to compile and suggest a way to fix it.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 辨析代码编译失败的原因，并提出修复方法。
- en: Want to share your solution and be featured in our upcoming newsletter? Share
    your solution in the comments below, and to be included in the upcoming issue
    of the newsletter.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 想要分享您的解决方案并在我们即将发布的通讯中亮相吗？请在下面的评论中分享您的解决方案，以便包含在即将发布的通讯中。
- en: '**clearcheck** is designed to make assertion statements as clear and concise
    as possible. It allows chaining multiple assertions together for a fluent and
    intuitive syntax, leading to more self-documenting test cases.'
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**clearcheck**旨在使断言语句尽可能清晰简洁。它允许多个断言链在一起，形成流畅直观的语法，从而使测试用例更具自描述性。'
- en: 'Features:'
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 特点：
- en: 'Fluent API: Chain assertions for a natural and readable experience.'
  id: totrans-split-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 流畅API：链式断言，实现自然和可读的体验。
- en: 'Extensive assertions: Variety of assertions covering common validation needs.'
  id: totrans-split-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 广泛的断言：涵盖常见验证需求的多种断言。
- en: 'Customizable: Extend with your own assertions for specific domain requirements.'
  id: totrans-split-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可定制：根据特定领域要求扩展您自己的断言。
- en: 'Type-safe: Built with Rust''s type system for reliable and expressive assertions.'
  id: totrans-split-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类型安全：使用Rust的类型系统构建可靠和表达丰富的断言。
- en: 'Custom assertions: Craft assertions tailored to your exact needs, ensuring
    comprehensive validations for various data structures.'
  id: totrans-split-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义断言：为您的确切需求制定断言，确保各种数据结构的全面验证。
- en: The project is maintained by Sarthak Makhija and is open-source on [GitHub](https://github.com/SarthakMakhija/clearcheck).
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目由Sarthak Makhija维护，并在[GitHub](https://github.com/SarthakMakhija/clearcheck)上开源。
- en: '**Michael Lohr** wrote about [“Embedded Rust in Production ..?, A review after
    using Rust on embedded in production for over a year”](https://blog.lohr.dev/embedded-rust)'
  id: totrans-split-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Michael Lohr**撰写了关于[“嵌入式Rust在生产中..？使用Rust在嵌入式中超过一年后的评估”](https://blog.lohr.dev/embedded-rust)'
- en: Building on previous efforts, the Rust Foundation released its [“Second Security
    Initiative Report Details Rust Security Advancements”](https://foundation.rust-lang.org/news/second-security-initiative-report-details-rust-security-advancements/)
    Report, highlighting progress in securing the language.
  id: totrans-split-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在之前的努力基础上，Rust Foundation 发布了其 [“第二个安全倡议报告详细说明 Rust 安全进展”](https://foundation.rust-lang.org/news/second-security-initiative-report-details-rust-security-advancements/)
    报告，突出了语言安全性方面的进展。
- en: Sebastian Martinez, in his article ["Why You Should Consider Rewriting Your
    Legacy System in Rust,"](https://www.wyeworks.com/blog/2024/02/20/why-you-should-consider-rewriting-your-legacy-system-in-rust/)
    explores the compelling reasons to breathe new life into aging software by harnessing
    the power of Rust.
  id: totrans-split-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Sebastian Martinez 在他的文章 ["为什么应该考虑用 Rust 重写您的传统系统"](https://www.wyeworks.com/blog/2024/02/20/why-you-should-consider-rewriting-your-legacy-system-in-rust/)
    中探讨了通过利用 Rust 的强大功能为老旧软件注入新生命的令人信服的理由。
- en: '["Prodzilla: From Zero to Prod with Rust and Shuttle"](https://codingupastorm.dev/about/)
    by Jordan Andrews details the development of Prodzilla, a synthetic monitoring
    tool built in Rust. It highlights Prodzilla''s unique features like testing complex
    user flows with YAML e.t.c.'
  id: totrans-split-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Jordan Andrews 的文章 ["Prodzilla: 从零到 Prod 使用 Rust 和 Shuttle"](https://codingupastorm.dev/about/)
    详细描述了 Prodzilla 的开发过程，这是一个用 Rust 构建的合成监控工具。它突出了 Prodzilla 的独特功能，例如使用 YAML 测试复杂用户流程等。'
- en: '**[](https://arighi.blogspot.com/2024/02/writing-scheduler-for-linux-in-rust.html)**["Writing
    a scheduler for Linux in Rust that runs in user-space"](https://arighi.blogspot.com/2024/02/writing-scheduler-for-linux-in-rust.html),
    the arighi''s blog details the development of scx_rustland, a Linux scheduler
    written in Rust for user-space.'
  id: totrans-split-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**[用 Rust 在 Linux 中编写用户空间调度器](https://arighi.blogspot.com/2024/02/writing-scheduler-for-linux-in-rust.html)**，arighi
    的博客详细介绍了 scx_rustland 的开发过程，这是一个用 Rust 为用户空间编写的 Linux 调度器。'
- en: This blog post, written by Jakub Beránek, Jack Huey, and Paul Lenz, announces
    the [Rust Project's participation in Google Summer of Code (GSoC) 2024](https://blog.rust-lang.org/2024/02/21/Rust-participates-in-GSoC-2024.html).
  id: totrans-split-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这篇博客文章，由 Jakub Beránek、Jack Huey 和 Paul Lenz 撰写，宣布了 [Rust 项目参与 Google 夏季编程活动
    (GSoC) 2024](https://blog.rust-lang.org/2024/02/21/Rust-participates-in-GSoC-2024.html)。
- en: Kasper Hermansen argues in his article [“Building services in rust”](https://blog.kasperhermansen.com/posts/building-business-services-in-rust/)
    that Rust is ready for building business services.
  id: totrans-split-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Kasper Hermansen 在他的文章 ["使用 Rust 构建服务"](https://blog.kasperhermansen.com/posts/building-business-services-in-rust/)
    中认为，Rust 已经准备好用于构建业务服务。
- en: Author Joshua Mo explores [8 productivity-boosting tools for Rust development,
    including cargo plugins, testing frameworks, debuggers, and performance profilers.](https://www.shuttle.rs/blog/2024/02/15/best-rust-tooling)
  id: totrans-split-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作者 Joshua Mo 探索了 [8 个提升 Rust 开发效率的工具，包括 cargo 插件、测试框架、调试器和性能分析器。](https://www.shuttle.rs/blog/2024/02/15/best-rust-tooling)
- en: RustConf 2024, an annual gathering for the Rust programming language community,
    [will be held in Montreal, Canada from September 10-13](https://foundation.rust-lang.org/news/save-the-date-rustconf-2024-september-10-13/).
  id: totrans-split-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: RustConf 2024，是 Rust 编程语言社区的年度聚会，将于 9 月 10 至 13 日在加拿大蒙特利尔举行，[请参见此处](https://foundation.rust-lang.org/news/save-the-date-rustconf-2024-september-10-13/)。
- en: '[How can Rust be so fast in the TechEmpower Web Framework Benchmarks?](https://kerkour.com/rust-fast-techempower-web-framework-benchmarks)'
  id: totrans-split-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Rust 在 TechEmpower Web 框架基准测试中如何如此快速？](https://kerkour.com/rust-fast-techempower-web-framework-benchmarks)'
- en: '[PRE0]'
  id: totrans-split-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To support the newsletter:'
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
  zh: 为了支持新闻简报：
- en: That's all for now, Rustaceans! Until next week, have a productive week ahead.
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
  zh: 暂时就这些，Rustaceans！下周再见，祝你们有一个高效的一周。
