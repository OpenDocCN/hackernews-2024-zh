- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-29 13:21:43'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: 'Rust Bytes: The Future is Rusty: 2023 Survey Reveals Widespread Adoption'
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://weeklyrust.substack.com/p/rust-bytes-the-future-is-rusty-2023](https://weeklyrust.substack.com/p/rust-bytes-the-future-is-rusty-2023)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Image: Learn rust crab mascot*'
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
- en: Hello Rustacean! Welcome to another edition of the Rust Bytes newsletter. In
    this issue, we'll shine a spotlight on an amazing Rust project, present our spot-the-bug
    challenge, and share some incredible links of the week.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
- en: Welcome to Issue 11!
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
- en: '**What do you call a Rust programmer who loves concurrency?**'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: A multi-threaded menace.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
- en: '**2023 Annual Rust Survey Results** are out. Here are the key insights:'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
- en: 93% of the respondents self-identify as Rust users. Of those who used Rust in
    2023, 49% did so on a daily (or nearly daily) basis.
  id: totrans-split-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 31% of those who did not identify as Rust users cited the perception of difficulty
    as the primary reason for not having used it.
  id: totrans-split-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Of the former Rust users who participated in the 2023 survey, 31% stopped using
    Rust due to preferring another language and 24% cited difficulty as the primary
    reason for giving up.
  id: totrans-split-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amongst the IDEs used for Rust development, Visual Studio Code still seems to
    be the most popular option, with RustRover (which was released last year) also
    gaining some traction.
  id: totrans-split-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 79% of the people reported that Rust helped their company achieve its goals.
  id: totrans-split-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 9,374 people shared their main worries for the future of Rust and 43% were concerned
    about Rust becoming too complex.
  id: totrans-split-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Check out 2023 [Annual Rust Survey Results](https://blog.rust-lang.org/2024/02/19/2023-Rust-Annual-Survey-2023-results.html)
    for more details.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
- en: 'Lifetime Trickery:'
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
- en: Identify why the code fails to compile and suggest a way to fix it.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
- en: Want to share your solution and be featured in our upcoming newsletter? Share
    your solution in the comments below, and to be included in the upcoming issue
    of the newsletter.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
- en: '**clearcheck** is designed to make assertion statements as clear and concise
    as possible. It allows chaining multiple assertions together for a fluent and
    intuitive syntax, leading to more self-documenting test cases.'
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
- en: 'Features:'
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
- en: 'Fluent API: Chain assertions for a natural and readable experience.'
  id: totrans-split-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Extensive assertions: Variety of assertions covering common validation needs.'
  id: totrans-split-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Customizable: Extend with your own assertions for specific domain requirements.'
  id: totrans-split-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Type-safe: Built with Rust''s type system for reliable and expressive assertions.'
  id: totrans-split-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Custom assertions: Craft assertions tailored to your exact needs, ensuring
    comprehensive validations for various data structures.'
  id: totrans-split-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The project is maintained by Sarthak Makhija and is open-source on [GitHub](https://github.com/SarthakMakhija/clearcheck).
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
- en: '**Michael Lohr** wrote about [“Embedded Rust in Production ..?, A review after
    using Rust on embedded in production for over a year”](https://blog.lohr.dev/embedded-rust)'
  id: totrans-split-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Building on previous efforts, the Rust Foundation released its [“Second Security
    Initiative Report Details Rust Security Advancements”](https://foundation.rust-lang.org/news/second-security-initiative-report-details-rust-security-advancements/)
    Report, highlighting progress in securing the language.
  id: totrans-split-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Sebastian Martinez, in his article ["Why You Should Consider Rewriting Your
    Legacy System in Rust,"](https://www.wyeworks.com/blog/2024/02/20/why-you-should-consider-rewriting-your-legacy-system-in-rust/)
    explores the compelling reasons to breathe new life into aging software by harnessing
    the power of Rust.
  id: totrans-split-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '["Prodzilla: From Zero to Prod with Rust and Shuttle"](https://codingupastorm.dev/about/)
    by Jordan Andrews details the development of Prodzilla, a synthetic monitoring
    tool built in Rust. It highlights Prodzilla''s unique features like testing complex
    user flows with YAML e.t.c.'
  id: totrans-split-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**[](https://arighi.blogspot.com/2024/02/writing-scheduler-for-linux-in-rust.html)**["Writing
    a scheduler for Linux in Rust that runs in user-space"](https://arighi.blogspot.com/2024/02/writing-scheduler-for-linux-in-rust.html),
    the arighi''s blog details the development of scx_rustland, a Linux scheduler
    written in Rust for user-space.'
  id: totrans-split-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This blog post, written by Jakub Beránek, Jack Huey, and Paul Lenz, announces
    the [Rust Project's participation in Google Summer of Code (GSoC) 2024](https://blog.rust-lang.org/2024/02/21/Rust-participates-in-GSoC-2024.html).
  id: totrans-split-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Kasper Hermansen argues in his article [“Building services in rust”](https://blog.kasperhermansen.com/posts/building-business-services-in-rust/)
    that Rust is ready for building business services.
  id: totrans-split-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Author Joshua Mo explores [8 productivity-boosting tools for Rust development,
    including cargo plugins, testing frameworks, debuggers, and performance profilers.](https://www.shuttle.rs/blog/2024/02/15/best-rust-tooling)
  id: totrans-split-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: RustConf 2024, an annual gathering for the Rust programming language community,
    [will be held in Montreal, Canada from September 10-13](https://foundation.rust-lang.org/news/save-the-date-rustconf-2024-september-10-13/).
  id: totrans-split-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[How can Rust be so fast in the TechEmpower Web Framework Benchmarks?](https://kerkour.com/rust-fast-techempower-web-framework-benchmarks)'
  id: totrans-split-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-split-40
  prefs: []
  type: TYPE_PRE
- en: 'To support the newsletter:'
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
- en: That's all for now, Rustaceans! Until next week, have a productive week ahead.
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
