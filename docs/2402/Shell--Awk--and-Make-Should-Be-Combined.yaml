- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-29 13:23:03'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: '日期: 2024-05-29 13:23:03'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Shell, Awk, and Make Should Be Combined
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应该整合 Shell, Awk 和 Make
- en: 来源：[https://www.oilshell.org/blog/2016/11/13.html](https://www.oilshell.org/blog/2016/11/13.html)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.oilshell.org/blog/2016/11/13.html](https://www.oilshell.org/blog/2016/11/13.html)
- en: '| [blog](/blog/) | [oilshell.org](/)'
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: '| [博客](/blog/) | [oilshell.org](/)'
- en: Shell, Awk, and Make Should Be Combined
  id: totrans-split-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应该整合 Shell, Awk 和 Make
- en: '2016-11-13'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: '2016-11-13'
- en: '[The shell](/cross-ref.html?tag=shell#shell) has been a part of Unix since
    its first release in 1971, while [Awk](/cross-ref.html?tag=awk#awk) and [Make](/cross-ref.html?tag=make#make)
    were additions to Unix, both released in 1977 and developed at Bell Labs.'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[Unix 的 shell](/cross-ref.html?tag=shell#shell)自从 1971 年初代发布以来，就一直是 Unix 的组成部分，而
    [awk](/cross-ref.html?tag=awk#awk) 和 [Make](/cross-ref.html?tag=make#make)则是后来添加到
    Unix 中的，两者都是在 1977 年发布，由贝尔实验室开发的。'
- en: 'These three tools were conceived as domain-specific languages with **distinct
    roles**:'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这三个工具最初作为专门领域语言设计，具有**明确的角色**：
- en: Shell is about sequential and parallel *composition of processes*, including
    pipelines.
  id: totrans-split-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Shell 关注于进程间的**顺序与并行 构造**，包括管道。
- en: Awk is about *streaming computation* over rows of data. It has regular expressions
    and associative arrays, which presaged Perl, Python, Ruby, JavaScript, and the
    like.
  id: totrans-split-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Awk 关注于**数据流计算**，在数据的行上进行计算。它具有正则表达式和关联数组，预示了 Perl、Python、Ruby、JavaScript 等语言的发展。
- en: Make is about *data-driven, incremental, and parallel computation*, also using
    Unix processes.
  id: totrans-split-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Make 关注于**数据驱动、增量和并行计算**，同样地，它使用 Unix 进程。
- en: 'Not only do they survive four decades later, they''re as popular as ever:'
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 时至今日，它们尽管经历了四十年，依然相当受欢迎：
- en: 'A major new feature of Windows 10 is that [it can run a 27-year-old program:
    bash](https://blogs.windows.com/buildingapps/2016/03/30/run-bash-on-ubuntu-on-windows/#o8Hjme8wQwqvj80U.97).
    This is apparently an improvement on the dev environment of an OS that has itself
    been around for three decades.'
  id: totrans-split-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 10 的一个重要新特性是能够运行 27 年前的程序：bash。这一改进显然对已经存在了三十年的操作系统的开发环境有所提升。
- en: Despite scores of "Make replacements" that exist, it's the most common build
    tool you'll encounter in a Unix environment. Makefile tutorials are still being
    written in 2016\. An excellent [book on GNU Make](https://www.amazon.com/GNU-Make-Book-Graham-Cumming/dp/1593276494)
    was published in 2015.
  id: totrans-split-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽管存在许许多多“Make 替换版本”，但在 Unix 环境中，它是最常见的构建工具。直到 2016 年，仍然还在编写 Makefile 教程。2015
    年，围绕 GNU Make 的经典书籍《GNU 建设艺术》问世。
- en: Awk is less popular due to the adoption of its successors, but it's still deeply
    embedded in the build processes of [Linux, FreeBSD](http://lists.landley.net/pipermail/toybox-landley.net/2016-July/008499.html),
    and other foundational software.
  id: totrans-split-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Awk 因其后继者的采用而不那么受欢迎，但仍然深深嵌入了 Linux、FreeBSD 和其他基础软件的构建过程中。
- en: 'The success of these tools has led to an common anti-pattern: they grew into
    [ALGOL-like languages](/cross-ref.html?tag=algol-like#algol-like) with a **quirky
    syntax** constrained by backward compatibility.'
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工具的成功导致了一个常见的反模式：它们发展成了像 ALGOL 类似的语言，**具有古怪的语法**，并由向后兼容性所约束。
- en: 'Tomorrow, I''ll show this with example code in three languages. For now, let
    me support this argument with some observations:'
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 明天，我将通过三种语言的示例代码展示这一点。在此期间，我将用一些观察来支持此观点：
- en: It's common to see all three languages in the **same source tree** (e.g. Linux,
    FreeBSD), which is a tax on holistic understanding.
  id: totrans-split-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 常常可以看到所有三个语言在 **同一源代码目录** 内共存（比如 Linux 和 FreeBSD），这在一定程度上增加了全面理解的难度。
- en: Not only are they in the same tree, but they're often **embedded** within each
    other. When you see `awk` in a `Makefile`, you're seeing **three** intertwined
    languages, because `make` is a **macro language** that passes command strings
    literally to `/bin/sh`.
  id: totrans-split-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不仅它们位于同一目录树内，而且它们经常**嵌入**在彼此中。当你在 Makefile 中看到 awk 时，实际上是**三个**交织的语言，因为 make
    是一个 **宏语言**，它直接将命令字符串传递给 `/bin/sh`。
- en: 'Quoting is difficult when composing two languages, let alone three. Here''s
    a sample from my `~/src` dir:'
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 组合两种语言时编码困难，更不用说三种语言了。这是我 `~/src` 文件夹中的一个示例：
- en: '[PRE0]'
  id: totrans-split-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Make and shell have unfortunate **syntactic conflicts**. For example: `$@`
    means the *output file* of a rule in Make, but it means the *arguments array*
    in shell.'
  id: totrans-split-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Make 和 Shell 可悲地存在着**语法冲突**。例如：在 Make 中，`$@` 表示规则的 *输出文件*，但在 Shell 中，它是 *参数数组*。
- en: Eighty percent of lines in a typical `Makefile` are **literally shell**, or
    variable assignments that are easily expressed in shell. It's easy to imagine
    extensions to shell syntax to support Make's semantics.
  id: totrans-split-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 典型的 `Makefile` 中，80% 的行都是**纯粹的 shell 代码**，或者是容易用 shell 表达的变量赋值。很容易想象扩展 shell
    语法以支持 Make 的语义。
- en: Make and shell both [simulate arrays with delimited strings](06.html), leading
    to quoting problems.
  id: totrans-split-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Make 和 shell 都是用分隔字符串来[模拟数组](06.html)，因此存在引用问题。
- en: 'As far as awk:'
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 至于 awk：
- en: '`bash` and `zsh` add **associative arrays** and **regex support** to shell,
    which makes them semantically close to `awk`.'
  id: totrans-split-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bash` 和 `zsh` 在 shell 中添加了**关联数组**和**正则表达式支持**，使它们在语义上与 `awk` 接近。'
- en: Awk only has floating point **arithmetic**, and bash only has integer arithmetic.
    It's easy to imagine a language with both.
  id: totrans-split-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Awk 只有浮点**算术**，而 bash 只有整数算术。很容易想象一种同时具有两者的语言。
- en: 'Awk and shell are similar in an interesting way: they lack **garbage collection**.
    This leads to arrays that can neither be nested nor returned from functions.'
  id: totrans-split-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Awk 和 shell 在一个有趣的方面是相似的：它们都缺少**垃圾回收**。这导致数组既不能嵌套也不能从函数中返回。
- en: 'What all three languages have in common:'
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这三种语言共同之处在于：
- en: Conclusion
  id: totrans-split-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: Despite their origins, the three languages are now more similar than different
    — at least semantically. We'll see tomorrow that their syntaxes are wildly and
    needlessly different.
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管它们的起源不同，但现在这三种语言在语义上更相似而不是不同的。明天我们会看到它们的语法是多么地狂野而又毫无必要地不同。
- en: And while I'm wary of discussing plans without code, I should say that I want
    `oil` to subsume `awk` and `make` as well. I expect that this theme will consume
    many more blog posts.
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我在没有代码的情况下讨论计划时总是很谨慎，但我想说我希望 `oil` 也能替代 `awk` 和 `make`。我预计这个主题将会占据更多的博客文章。
