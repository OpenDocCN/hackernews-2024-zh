- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-29 13:20:38'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-29 13:20:38
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Solene''% : Some OpenBSD features that aren''t widely known'
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Solene'%：一些并不广为人知的 OpenBSD 特性
- en: 来源：[https://dataswamp.org/~solene/2024-02-20-rarely-known-openbsd-features.html](https://dataswamp.org/~solene/2024-02-20-rarely-known-openbsd-features.html)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://dataswamp.org/~solene/2024-02-20-rarely-known-openbsd-features.html](https://dataswamp.org/~solene/2024-02-20-rarely-known-openbsd-features.html)
- en: 1\. Introduction [§](#_Introduction)
  id: totrans-split-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 介绍 [§](#_Introduction)
- en: In this blog post, you will learn about some OpenBSD features that can be useful,
    but not widespread.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本博客文章中，您将了解一些可能有用但不常见的 OpenBSD 功能。
- en: They often have a niche usage, but it's important to know they exist to prevent
    you from reinventing the wheel :)
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这些功能通常具有小众用途，但重要的是知道它们的存在，以免重复发明轮子 :)
- en: '[OpenBSD official project website](https://www.openbsd.org)'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[OpenBSD 官方项目网站](https://www.openbsd.org)'
- en: 2\. Features [§](#_Features)
  id: totrans-split-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 特性 [§](#_Features)
- en: The following list of features are not all OpenBSD specific as some can be found
    on other BSD systems. Most of the knowledge will not be useful to Linux users.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 下面列出的功能并非全部特定于 OpenBSD，因为一些功能也可以在其他 BSD 系统上找到。大多数知识对 Linux 用户来说并不实用。
- en: 2.1\. Secure level [§](#_Secure_level)
  id: totrans-split-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.1\. 安全级别 [§](#_Secure_level)
- en: The secure level is a sysctl named `kern.securelevel`, it has 4 different values
    from level -1 to level 2, and it's only possible to increase the level. By default,
    the system enters the secure level 1 when in multi-user (the default when booting
    a regular installation).
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 安全级别是一个名为 `kern.securelevel` 的 sysctl，它有4个不同的值，从级别 -1 到级别 2，只能增加级别。默认情况下，系统在多用户模式下进入安全级别
    1（正常安装时的默认模式）。
- en: 'It''s then possible to escalate to the last secure level (2), which will enable
    the following extra security:'
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然后可以升级到最后的安全级别（2），这将启用以下额外的安全措施：
- en: all raw disks are read-only, so it's not possible to try to make a change to
    the storage devices
  id: totrans-split-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有原始磁盘都是只读的，因此无法尝试对存储设备进行更改
- en: the time is almost lock, it's only possible to modify the clock slowly by small
    steps (maybe 1 second max every so often)
  id: totrans-split-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间几乎被锁定，只能通过小幅度的步骤慢慢调整时钟（可能是每隔一段时间最多调整1秒）
- en: the PF firewall rules can't be modified, flushed or altered
  id: totrans-split-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PF 防火墙规则不能被修改、清空或更改
- en: This feature is mostly useful for dedicated firewall with rules that rarely
    change. Preventing the time to change is really useful for remote logging as it
    allows being sure of "when" things happened, and you can be assured the past logs
    weren't modified.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这个功能对于专用防火墙特别有用，其规则很少改变。阻止时间改变对于远程日志记录非常有用，因为它确保了“事件发生的时间”，并且您可以确信过去的日志没有被修改。
- en: The default security level 1 already enable some extra security like "immutable"
    and "append-only" file flags can't be removed, these overlooked flags (that can
    be applied with chflags) can lock down files to prevent anyone from modifying
    them. The append-only flag is really useful for logs because you can't modify
    the content, but this doesn't prevent adding new content, history can't be modified
    this way.
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 默认安全级别1已经启用一些额外的安全功能，例如无法删除“不可变”和“仅追加”文件标志，这些被忽视的标志（可以使用 chflags 应用）可以锁定文件，防止任何人修改它们。仅追加标志对于日志非常有用，因为无法修改内容，但这并不阻止添加新内容，因此无法通过这种方式修改历史。
- en: '[OpenBSD manual pages: securelevel](https://man.openbsd.org/securelevel)'
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[OpenBSD 手册页面：securelevel](https://man.openbsd.org/securelevel)'
- en: '[OpenBSD manual pages: chflags](https://man.openbsd.org/chflags)'
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[OpenBSD 手册页面：chflags](https://man.openbsd.org/chflags)'
- en: This feature exists in other BSD systems.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这个功能也存在于其他 BSD 系统中。
- en: OpenBSD's memory allocator can be tweaked, system-wide or per command, to add
    extra checks. This could be either used for security reasons or to look for memory
    allocation related bugs in a program (this is VERY common...).
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: OpenBSD 的内存分配器可以进行调整，系统范围内或每个命令，以增加额外的检查。这可以用于安全原因或在程序中查找与内存分配相关的错误（这是非常常见的...）。
- en: 'There are two methods to apply the changes:'
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种方法可以应用这些更改：
- en: system-wide by using the sysctl `vm.malloc_conf`, either immediately with the
    sysctl command, or at boot in `/etc/sysctl.conf` (make sure you quote its value
    there, some characters such as `>` will create troubles otherwise, been there...)
  id: totrans-split-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过在 `/etc/sysctl.conf` 中使用 sysctl `vm.malloc_conf` 进行系统范围的设置（确保在那里引用其值，某些字符如
    `>` 否则会造成问题，已经遇到过...）
- en: on the command line by prepending `env MALLOC_OPTIONS="flags" program_to_run`
  id: totrans-split-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在命令行上，通过在运行程序之前加入 `env MALLOC_OPTIONS="flags"` 来设置
- en: The man page gives a list of flags to use as option, the easiest to use is `S`
    (for security checks). It is stated in the man page that a program misbehaving
    with any flag other than X is buggy, so it's not YOUR fault if you use malloc
    options and the program is crashing (except if you wrote the code ;-) ).
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: man 页面列出了一些选项作为选项使用的标志列表，最容易使用的是 `S`（用于安全检查）。在 man 页面中指出，一个程序如果除了 X 之外的任何标志都会导致其出现错误，因此如果您使用
    malloc 选项并且程序崩溃了，这不是您的错（除非您编写了代码;-)）。
- en: '[OpenBSD manual pages: malloc (search for MALLOC OPTIONS)](https://man.openbsd.org/malloc)'
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[OpenBSD 手册页面：malloc（搜索 MALLOC OPTIONS）](https://man.openbsd.org/malloc)'
- en: 2.3\. File flags [§](#_File_flags)
  id: totrans-split-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.3\. 文件标志 [§](#_文件标志)
- en: You are certainly used to files attributes like permissions or ownership, but
    on many file systems (including OpenBSD ffs), there are flags as well!
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: 您肯定习惯于文件属性，如权限或所有权，但在许多文件系统（包括 OpenBSD ffs）中，也存在标志！
- en: 'The file flags can be altered with the command `chflags`, there are a couple
    of flags available:'
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 `chflags` 命令更改文件的标志，有几个可用的标志：
- en: 'nodump: prevent the files from being saved by the command `dump` (except if
    you use a flag in dump to bypass this)'
  id: totrans-split-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: nodump：防止文件被 `dump` 命令保存（除非您使用 dump 中的标志来绕过此操作）
- en: 'sappnd: the file can only be used in writing append mode, only root can set
    / remove this flag'
  id: totrans-split-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: sappnd：文件只能以写入追加模式使用，只有 root 可以设置/移除此标志。
- en: 'schg: the file can not be change, it becomes immutable, only root can alter
    this flag'
  id: totrans-split-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: schg：文件不能更改，变为不可变，只有 root 可以更改此标志。
- en: 'uappnd: same as sappnd mode but the user can alter the flag'
  id: totrans-split-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: uappnd：与 sappnd 模式相同，但用户可以更改该标志。
- en: 'uchg: same as schg mode but the user can alter the flag'
  id: totrans-split-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: uchg：与 schg 模式相同，但用户可以更改该标志。
- en: As explained in the secure level section above, in the secure level 1 (default
    !), the flags sappnd and schg can't be removed, you would need to boot in single
    user mode to remove these flags.
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如上面的安全级别部分所述，在安全级别 1（默认情况下！），不能移除 sappnd 和 schg 标志，您需要在单用户模式下启动以移除这些标志。
- en: 'Tip: remove the flags on a file with `chflags 0 file [...]`'
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
  zh: 提示：使用 `chflags 0 file [...]` 在文件上移除标志。
- en: 'You can check the flags on files using `ls -ol`, this would look like this:'
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用 `ls -ol` 检查文件的标志，这看起来像这样：
- en: '[PRE0]'
  id: totrans-split-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[OpenBSD manual pages: chflags](https://man.openbsd.org/chflags)'
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[OpenBSD 手册页面：chflags](https://man.openbsd.org/chflags)'
- en: OpenBSD crontab format received a few neat additions over the last years.
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
  zh: 过去几年，OpenBSD crontab 格式增加了一些新功能。
- en: 'random number for time field: you can use `~` in a field instead of a number
    or `*` to generate a random value that will remain stable until the crontab is
    reloaded. Things like `~/5` work. You can force the random value within a range
    with `20~40` to get values between 20 and 40.'
  id: totrans-split-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间字段的随机数：您可以在字段中使用 `~` 而不是数字或 `*` 来生成一个随机值，该值在重新加载 crontab 之前会保持稳定。类似 `~/5`
    的事情也可以。您可以使用 `20~40` 强制在范围内获取随机值，以获取 20 到 40 的值。
- en: 'only send an email if the return code isn''t 0 for the cron job: add `-n` between
    the time and the command, like in `0 * * * * -n /bin/something`.'
  id: totrans-split-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅在 cron 作业的返回代码不为 0 时发送电子邮件：在时间和命令之间添加 `-n`，如 `0 * * * * -n /bin/something`。
- en: 'only run one instance of a job at a time: add `-s` between the time and the
    command, like in `* * * * * -s /bin/something`. This is incredibly useful for
    cron job that shouldn''t be running twice in parallel, if the job duration is
    longer than usual, you are ensured it will never start a new instance until the
    previous one is done.'
  id: totrans-split-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅运行一个作业实例：在时间和命令之间添加 `-s`，如 `* * * * * -s /bin/something`。对于不应同时运行两次的 cron 作业非常有用，如果作业持续时间长于通常时间，则确保在前一个实例完成之前不会启动新实例。
- en: 'no logging: add `-q` between the time and the command, like in `* * * * -q
    /bin/something`, the effect will be that this cron job will not be logged in `/var/cron/log`.'
  id: totrans-split-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无日志记录：在时间和命令之间添加 `-q`，如 `* * * * -q /bin/something`，效果是此 cron 作业将不会记录在 `/var/cron/log`
    中。
- en: It's possible to use a combination of flags like `-ns`. The random time is useful
    when you have multiple systems, and you don't want them to all run a command at
    the same time, like in a case they would trigger a huge I/O on a remote server.
    This was created to prevent the usual `0 * * * * sleep $(( $RANDOM % 3600 )) &&
    something` that would run a sleep command for a random time up to an hour before
    running a command.
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 `-ns` 等标志的组合。随机时间对于具有多个系统的情况非常有用，如果不希望它们同时在远程服务器上触发大量 I/O，则可以在某种情况下运行命令。这是为了防止通常运行
    `0 * * * * sleep $(( $RANDOM % 3600 )) && something` 的睡眠命令，在运行命令之前运行一个最多一个小时的随机时间。
- en: '[OpenBSD manual pages: crontab](https://man.openbsd.org/crontab.5)'
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[OpenBSD 手册页面：crontab](https://man.openbsd.org/crontab.5)'
- en: One cool feature on OpenBSD is the ability to easily create an installation
    media with pre-configured answers. This is done by injecting a specific file in
    the `bsd.rd` install kernel.
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
  zh: OpenBSD的一个很酷的功能是能够轻松创建带有预配置答案的安装媒体。这通过在`bsd.rd`安装内核中注入特定文件来实现。
- en: There is a simple tool named upobsd that was created by semarie@ to easily modify
    such bsd.rd file to include the autoinstall file, I forked the project to continue
    its maintenance.
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个名为upobsd的简单工具，是由semarie@创建的，用于轻松修改这样的bsd.rd文件，以包含autoinstall文件，我分叉了该项目以继续维护它。
- en: In addition to automatically installing OpenBSD with users, ssh configuration,
    sets to install etc... it's also possible to add a site.tgz archive along with
    the usual sets archives that includes files you want to add to the system, this
    can include a script to run at first boot to trigger some automation!
  id: totrans-split-51
  prefs: []
  type: TYPE_NORMAL
  zh: 除了自动安装OpenBSD与用户、ssh配置、要安装的集等...，还可以添加一个site.tgz归档文件，以及通常的集归档文件一起，其中包含您想要添加到系统的文件，这可以包括在首次启动时运行的脚本以触发一些自动化！
- en: These features are a must-have if you run OpenBSD in production, and you have
    many of them to manage, enrolling a new device to the fleet should be automated
    as possible.
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在生产环境中运行OpenBSD，并且有很多设备要管理，自动将新设备加入到设备群中应尽可能自动化。
- en: '[GitHub project page: upobsd](https://github.com/rapenne-s/upobsd)'
  id: totrans-split-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[GitHub 项目页面：upobsd](https://github.com/rapenne-s/upobsd)'
- en: '[OpenBSD manual pages: autoinstall](https://man.openbsd.org/autoinstall)'
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[OpenBSD 手册页面：autoinstall](https://man.openbsd.org/autoinstall)'
- en: 2.6\. apmd daemon hooks [§](#_apmd_daemon_hooks)
  id: totrans-split-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.6\. apmd守护程序挂钩 [§](#_apmd_daemon_hooks)
- en: Apmd is certainly running on most OpenBSD laptop and desktop around, but it
    has features that aren't related to its command line flags, so you may have missed
    them.
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
  zh: Apmd 在大多数运行OpenBSD的笔记本电脑和台式机上肯定正在运行，但它具有与其命令行标志无关的功能，因此您可能已经错过了它们。
- en: There are different file names that can contain a script to be run upon some
    event such as suspend, resume, hibernate etc...
  id: totrans-split-57
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的文件名可以包含在某些事件（如挂起、恢复、休眠等）发生时运行的脚本。
- en: A classic usage is to run `xlock` in one's X session on suspend, so the system
    will require a password on resume.
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在挂起时，在X会话中运行`xlock`是OpenBSD的一个经典用法，因此系统将在恢复时需要密码。
- en: '[Older blog post: xlock from apmd suspend script](https://dataswamp.org/~solene/2021-07-30-openbsd-xidle-xlock.html#_Resume_/_Suspend_case)'
  id: totrans-split-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[旧博客文章：从apmd挂起脚本到xlock](https://dataswamp.org/~solene/2021-07-30-openbsd-xidle-xlock.html#_Resume_/_Suspend_case)'
- en: 'The man page explains all, but basically this works like this for running a
    backup program when you connect your laptop to the power plug:'
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
  zh: 手册页面解释了所有内容，但基本上当您将笔记本连接到电源插座时运行备份程序，就像这样：
- en: '[PRE1]'
  id: totrans-split-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You need to write a regular script:'
  id: totrans-split-62
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要编写一个常规脚本：
- en: '[PRE2]'
  id: totrans-split-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Then, make it executable
  id: totrans-split-64
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，将其设为可执行。
- en: '[PRE3]'
  id: totrans-split-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The daemon apmd will automatically run this script when you connect a system
    back to AC power.
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
  zh: 当您将系统连接到交流电源时，守护程序apmd将自动运行此脚本。
- en: 'The method is the same for:'
  id: totrans-split-67
  prefs: []
  type: TYPE_NORMAL
  zh: 方法对以下情况相同：
- en: hibernate
  id: totrans-split-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 休眠
- en: resume
  id: totrans-split-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 恢复
- en: suspend
  id: totrans-split-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 暂停
- en: standby
  id: totrans-split-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 待机
- en: hibernate
  id: totrans-split-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 休眠
- en: powerup
  id: totrans-split-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: powerup
- en: powerdown
  id: totrans-split-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: powerdown
- en: This makes it very easy to schedule tasks on such events.
  id: totrans-split-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得在这些事件上安排任务非常容易。
- en: '[OpenBSD manual page: apmd (section FILES)](https://man.openbsd.org/apmd#FILES)'
  id: totrans-split-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[OpenBSD 手册页面：apmd（FILES部分）](https://man.openbsd.org/apmd#FILES)'
- en: 2.7\. Using hotplugd for hooks on devices events [§](#_Using_hotplugd_for_hooks_on_devices_events)
  id: totrans-split-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.7\. 使用hotplugd处理设备事件挂钩 [§](#_Using_hotplugd_for_hooks_on_devices_events)
- en: A bit similar to what apmd by running a script upon events, hotplugd is a service
    that allow running a script when a device is added / removed.
  id: totrans-split-78
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于apmd通过事件运行脚本的方式，hotplugd是一个服务，允许在添加/移除设备时运行脚本。
- en: A typical use is to automatically mount an USB memory stick when plugged in
    the system, or start cups daemon when powering on your USB printer.
  id: totrans-split-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在系统插入USB存储器时，自动挂载USB存储器是一个典型的用法，或者在打开USB打印机电源时启动cups守护程序。
- en: The script receives two parameters that represents the device class and device
    name, so you can use them in your script to know what was connected. The example
    provided in the man page is a good starting point.
  id: totrans-split-80
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本接收两个参数，代表设备类和设备名称，因此您可以在您的脚本中使用它们来了解连接了什么。手册页中提供的示例是一个很好的起点。
- en: The scripts aren't really straightforward to write, you need to make a precise
    list of hardware you expect and what to run for each, and don't forget to skip
    unknown hardware. Don't forget to make the scripts executable, otherwise it won't
    work.
  id: totrans-split-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这些脚本确实不容易编写，您需要制定一个期望的硬件精确列表以及每个硬件的运行内容，并且不要忘记跳过未知硬件。不要忘记将脚本设为可执行，否则它将无法工作。
- en: '[OpenBSD manual page: hotplugd](https://man.openbsd.org/hotplugd)'
  id: totrans-split-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[OpenBSD 手册页：hotplugd](https://man.openbsd.org/hotplugd)'
- en: 2.8\. Altroot [§](#_Altroot)
  id: totrans-split-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.8\. Altroot [§](#_Altroot)
- en: Finally, there is a feature that looks pretty cool. In the daily script, if
    an OpenBSD partition `/altroot/` exists in `/etc/fstab` and the daily script environment
    has a variable `ROOTBACKUP=1`, the root partition will be duplicated to it. This
    permit keeping an extra root partition in sync with the main root partition. Obviously,
    it's more useful if the altroot partition is on another drive. The duplication
    is done with `dd`. You can look at the exact code by checking the script `/etc/daily`.
  id: totrans-split-84
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，有一个看起来相当酷的功能。在每日脚本中，如果 OpenBSD 分区 `/altroot/` 存在于 `/etc/fstab` 中，并且每日脚本环境具有变量
    `ROOTBACKUP=1`，则根分区将被复制到此分区。这允许保持额外的根分区与主根分区同步。显然，如果 altroot 分区在另一个驱动器上，它会更有用。复制是通过
    `dd` 完成的。你可以通过检查脚本 `/etc/daily` 查看确切的代码。
- en: However, it's not clear how to boot from this partition if you didn't install
    a bootloader or created an EFI partition on the disk...
  id: totrans-split-85
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果你没有安装引导加载程序或在磁盘上创建 EFI 分区，如何从这个分区引导是不清楚的...
- en: '[OpenBSD manual pages: hier (hier stands for file system hierarchy)](https://man.openbsd.org/hier)'
  id: totrans-split-86
  prefs: []
  type: TYPE_NORMAL
  zh: '[OpenBSD 手册页：hier（hier 代表文件系统层次结构）](https://man.openbsd.org/hier)'
- en: '[OpenBSD manual pages: daily](https://man.openbsd.org/daily)'
  id: totrans-split-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[OpenBSD 手册页：daily](https://man.openbsd.org/daily)'
- en: '[OpenBSD FAQ: Root partition backup](https://www.openbsd.org/faq/faq14.html#altroot)'
  id: totrans-split-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[OpenBSD FAQ：根分区备份](https://www.openbsd.org/faq/faq14.html#altroot)'
- en: '2.9\. talk: local chat in the terminal [§](#_talk:_local_chat_in_the_terminal)'
  id: totrans-split-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.9\. talk：终端中的本地聊天 [§](#_talk:_local_chat_in_the_terminal)
- en: OpenBSD comes with a program named "talk", this creates a 1 to 1 chat with another
    user, either on the local system or a remote one (setup is more complicated).
    This is not asynchronous, the two users must be logged in the system to use `talk`.
  id: totrans-split-90
  prefs: []
  type: TYPE_NORMAL
  zh: OpenBSD 自带一个名为 "talk" 的程序，这个程序可以创建一个与另一个用户的一对一聊天，无论是在本地系统还是远程系统（设置更复杂）。这不是异步的，两个用户必须同时登录系统才能使用
    `talk`。
- en: This program isn't OpenBSD specific and can be used on Linux as well, but it's
    so fun, effective and easy to setup I wanted to write about it.
  id: totrans-split-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这个程序不仅限于 OpenBSD，并且可以在 Linux 上使用，但它非常有趣、高效且易于设置，我想写写它。
- en: 'The setup is easy:'
  id: totrans-split-92
  prefs: []
  type: TYPE_NORMAL
  zh: 安装很简单：
- en: '[PRE4]'
  id: totrans-split-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The communication happens on localhost on UDP ports 517 and 518, don't open
    them to the Internet! If you want to allow a remote system, use a VPN to encrypt
    the traffic and allow ports 517/518 only for the VPN.
  id: totrans-split-94
  prefs: []
  type: TYPE_NORMAL
  zh: 通信发生在本地主机的 UDP 端口 517 和 518 上，不要将它们开放到互联网！如果你想允许远程系统，使用 VPN 加密流量，并仅允许 VPN 的端口
    517/518。
- en: 'The usage is simple, if you want alice and bob to talk to each other:'
  id: totrans-split-95
  prefs: []
  type: TYPE_NORMAL
  zh: 使用很简单，如果你希望 alice 和 bob 互相交谈：
- en: alice type `talk bob`, and bob must be logged in as well
  id: totrans-split-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: alice 输入 `talk bob`，bob 也必须已经登录。
- en: bob receives a message in their terminal that alice wants to talk
  id: totrans-split-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: bob 在他们的终端收到消息，alice 想要交谈。
- en: bob type `talk alice`
  id: totrans-split-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: bob 输入 `talk alice`
- en: a terminal UI appears for both users, what they write will appear on the top
    half of the UI, and the messages from recipient will appear on the half bottom
  id: totrans-split-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为两个用户显示终端用户界面，他们写的内容将出现在界面的上半部分，并且接收者的消息将出现在下半部分。
- en: This is a bit archaic, but it works fine and comes with the base system. It
    does the job when you just want to speak to someone.
  id: totrans-split-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这有点古老，但是它很有效，并且随同基本系统提供。当你只想和某人交谈时，它可以胜任。
- en: 3\. Conclusion [§](#_Conclusion)
  id: totrans-split-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 结论 [§](#_Conclusion)
- en: There are interesting features on OpenBSD that I wanted to highlight a bit,
    maybe you will find them useful. If you know cool features that could be added
    to this list, please reach me!
  id: totrans-split-102
  prefs: []
  type: TYPE_NORMAL
  zh: OpenBSD 上有一些有趣的特性，我想稍作介绍，也许你会觉得它们有用。如果你知道可以添加到此列表的酷功能，请联系我！
