- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: Êú™ÂàÜÁ±ª'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:53:18'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Observable 2.0 | Observable
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Êù•Ê∫êÔºö[https://observablehq.com/blog/observable-2-0](https://observablehq.com/blog/observable-2-0)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Today we‚Äôre launching [Observable 2.0](https://observablehq.com/product) with
    a bold new vision: an open-source static site generator for building fast, beautiful
    data apps, dashboards, and reports.'
  prefs: []
  type: TYPE_NORMAL
- en: Our mission is to help teams communicate more effectively with data. Effective
    presentation of data is critical for deep insight, nuanced understanding, and
    informed decisions. Observable notebooks are great for ephemeral, *ad hoc* data
    exploration. But notebooks aren‚Äôt well-suited for polished dashboards and apps.
  prefs: []
  type: TYPE_NORMAL
- en: Enter [Observable Framework](https://observablehq.com/framework/).
  prefs: []
  type: TYPE_NORMAL
- en: 'With Framework, you can build the best data apps your team has ever seen. Framework
    combines the power of **JavaScript on the front-end** for interactive graphics,
    with **any language on the back-end** for data preparation and analysis. SQL,
    Python, R, Rust, Go‚Ä¶ you name it. It‚Äôs the polyglot programmer‚Äôs dream. Everything
    you need is at your fingertips: interactive charts and inputs, responsive grids,
    themes, dark mode, keyboard-friendly navigation, and more. And because it‚Äôs code,
    there‚Äôs no limit to customization!'
  prefs: []
  type: TYPE_NORMAL
- en: Framework is free and [open-source](https://github.com/observablehq/framework).
    Projects are just local files. Use your favorite editor, preview locally, check
    it all into git, write unit tests, add CI/CD, even work offline. You can host
    projects anywhere or deploy instantly to Observable to share them securely with
    your team.
  prefs: []
  type: TYPE_NORMAL
- en: 'Observable Framework solves the ‚Äúlast mile‚Äù problem of data apps: loading data.
    Conventional dashboards are slow because they run queries on view while the user
    waits; Framework‚Äôs data loaders run *on build* so that pages load instantly. And
    because data loaders run on your servers, you control privacy and security. If
    you‚Äôre ready to dive in, visit our [Getting started tutorial](https://observablehq.com/framework/getting-started),
    or open a terminal and run:'
  prefs: []
  type: TYPE_NORMAL
- en: npm init @observablehq
  prefs: []
  type: TYPE_NORMAL
- en: If you‚Äôd like to hear more about why we built Framework, please read on.
  prefs: []
  type: TYPE_NORMAL
- en: This moment ‚Äî Observable 2.0 ‚Äî reflects lessons learned over many years.
  prefs: []
  type: TYPE_NORMAL
- en: We believe the lightweight, collaborative nature of computational notebooks
    makes them ideal for exploring data and answering *ad hoc* questions. We founded
    Observable in 2016, pioneering a [reactive, web-first approach](https://medium.com/@mbostock/a-better-way-to-code-2b1d2876a3a0)
    to notebooks and seeking to make data visualization easier, more practicable,
    and more social. We dreamed that notebooks might be the ‚Äúone ring to rule them
    all‚Äù ‚Äî powering not just notes, but apps, dashboards, and reports.
  prefs: []
  type: TYPE_NORMAL
- en: 'Yet no single interface can excel at every task. As cool as reactive notebooks
    are, a notebook can‚Äôt compete with a custom web app in terms of user experience.
    Notebooks are constrained by:'
  prefs: []
  type: TYPE_NORMAL
- en: A single-column, narrow layout
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Low visual information density
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Always-visible editor chrome
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These same limitations make notebooks great for tinkering and learning ‚Äî the
    code is always at your fingertips, adjacent to the output ‚Äî but not so great for
    presentation. To fill that latter role, we need better data apps.
  prefs: []
  type: TYPE_NORMAL
- en: A good data app embodies an empirical perspective; it fosters a shared understanding.
    Whereas notebooks tend to be for individuals, data apps are more often for a team.
    And whereas notebooks tend to be transient byproducts of point-in-time exploration,
    data apps often sustain value over time as people return to see how things change.
  prefs: []
  type: TYPE_NORMAL
- en: 'The differences between notebooks and data apps extend to development. A notebook
    editor desires speed: jotting down thoughts, running a query, sketching a chart.
    A data app developer prioritizes correctness, performance, and maintainability:
    making careful, deliberate changes that others depend on, favoring code review
    and testing before publishing.'
  prefs: []
  type: TYPE_NORMAL
- en: 'We had three goals in mind when we set out to reimagine data app development:'
  prefs: []
  type: TYPE_NORMAL
- en: '**A better developer workflow** ‚Äî meeting the needs of developers'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**A better user experience** ‚Äî the ‚Äúproof is in the pudding‚Äù'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**A better data architecture** ‚Äî solving the ‚Äúlast mile‚Äù problem'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A better developer workflow **üë©‚Äçüíª**[](/blog/observable-2-0#a-better-developer-workflow)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Modern development is built on [files](https://stephango.com/file-over-app).
    Files have myriad strengths, but the strongest is interoperability. When every
    tool uses files, it‚Äôs far easier to incorporate a new tool ‚Äî and now Observable
    ‚Äî into your workflow.
  prefs: []
  type: TYPE_NORMAL
- en: This isn‚Äôt just about using your preferred text editor. Now you can bring your
    own source control and code review system, too. You can write unit tests and run
    linters. You can automate builds with continuous integration or deployment. You
    can work offline. You can self-host. You can generate or edit content programmatically,
    say to format code or to find-and-replace across files.
  prefs: []
  type: TYPE_NORMAL
- en: As we break new ground with Observable Framework, we‚Äôre further improving interoperability
    by adopting vanilla JavaScript syntax. And we‚Äôre deprecating require in favor
    of modern ES import. These changes make Observable easier to learn, and to share
    code with other applications. (We‚Äôll port these improvements back to Observable
    notebooks in the future.)
  prefs: []
  type: TYPE_NORMAL
- en: '**A better user experience üòç**[](/blog/observable-2-0#a-better-user-experience)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A toolmaker can‚Äôt care only about the developer experience ‚Äî what does the
    developer experience matter if the resulting app is not demonstrably better? The
    merit of a creative tool should be judged by the quality of its creations, not
    its process. Or: ‚Äúthe proof of the pudding is in the eating.‚Äù'
  prefs: []
  type: TYPE_NORMAL
- en: We believe that well-designed tools help developers build more efficiently by
    focusing their efforts on high-value work. We favor opinionated tools, with defaults
    and conveniences that foster a good user experience. We nudge you into [the pit
    of success](https://blog.codinghorror.com/falling-into-the-pit-of-success/).
  prefs: []
  type: TYPE_NORMAL
- en: Framework‚Äôs lightweight Markdown syntax ‚Äî with light and dark mode, thoughtful
    colors, responsive grids, and built-in navigation ‚Äî gives you beautiful pages
    from the start. It‚Äôs highly customizable if you need it, but it‚Äôs quick to get
    started with batteries included.
  prefs: []
  type: TYPE_NORMAL
- en: 'Most importantly, Framework‚Äôs data architecture practically forces your app
    to be *fast* because data is precomputed. Performance is critical for dashboards:
    users don‚Äôt like to wait, and dashboards only create value if users look at them.
    Slow dashboards waste time. (And you certainly don‚Äôt want your database and dashboard
    falling over under load!)'
  prefs: []
  type: TYPE_NORMAL
- en: A better data architecture[](/blog/observable-2-0#a-better-data-architecture)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Every data visualization requires data. Obviously. But less obviously, each
    data visualization requires highly-specific data prepared with that visualization
    in mind. In fact, most of the work of visualization isn‚Äôt choosing visual encodings
    or laying out axes or visualizing *per se* ‚Äî it‚Äôs preparing data. As I wrote [previously](https://observablehq.com/@mbostock/10-years-of-open-source-visualization),
  prefs: []
  type: TYPE_NORMAL
- en: working with data should be 80% of the work of visualization. Visualization
    is the end result of analysis ‚Äî the visible manifestation of data, to be seen,
    shared, and appreciated by experts and non-experts alike ‚Äî and as such it sometimes
    gets too much credit. To produce a visualization, one must first find data, clean
    it, transform, join, model, etc. Working with data is sometimes needlessly denigrated
    as ‚Äújanitorial‚Äù when it represents the critical step of understanding the data
    as it is, warts and all.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Given how much work goes into preparing data, it follows that developers want
  prefs: []
  type: TYPE_NORMAL
- en: to use any language (say Python or R or SQL),
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: to use any library (say NumPy or dplyr),
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: to use any data source (database, data warehouse, API, files, *etc*.), and
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: to crunch data ahead of time (offline)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: while still leveraging JavaScript in the browser for interactive graphics.
  prefs: []
  type: TYPE_NORMAL
- en: Framework‚Äôs data loaders solve this ‚Äúlast mile‚Äù problem by computing static
    data snapshots at build time. These snapshots can be highly-optimized (and aggregated
    and anonymized), minimizing the data you send to the client. And since a data
    loader is just a fancy way of generating a file on-demand (with clever caching
    and routing), loaders can be written in any language and use any library. This
    flexibility is not unlike [CGI](https://en.wikipedia.org/wiki/Common_Gateway_Interface)
    from 30 years ago, and [Unix pipes](https://en.wikipedia.org/wiki/Pipeline_(Unix)).
    And since data loaders run on your servers, viewers don‚Äôt need direct access to
    the underlying data sources, and your dashboards are more secure and robust.
  prefs: []
  type: TYPE_NORMAL
- en: The speed of modern data warehouses is astonishing. But far too often something
    is missing for new analysis ‚Äî some untapped data source, some not-yet-materialized
    view for a query to run at interactive speeds. Framework‚Äôs data loaders let you
    bypass these hurdles and produce a fast dashboard without ‚Äúheavy lifting‚Äù in your
    data warehouse. And once your analysis demonstrates value, you can shift work
    to your data warehouse and simplify your data loaders. Framework lets you build
    faster and quickly validate your ideas.
  prefs: []
  type: TYPE_NORMAL
- en: We believe Framework will change how you think about data, and effect a better
    user experience. And by securely hosting apps alongside notebooks, Observable
    now offers an end-to-end solution for data analysis and presentation.
  prefs: []
  type: TYPE_NORMAL
- en: We wouldn‚Äôt be here without the support, feedback, and encouragement from you
    ‚Äî our community. Thank you for using Observable notebooks, Observable Plot, and
    D3\. We‚Äôre thrilled to share Observable Framework with you now, and can‚Äôt wait
    to hear what you think.
  prefs: []
  type: TYPE_NORMAL
- en: To learn more about Framework, [read the docs](https://observablehq.com/framework/).
  prefs: []
  type: TYPE_NORMAL
- en: To share your questions or feedback, please [visit our forum](https://talk.observablehq.com/latest).
  prefs: []
  type: TYPE_NORMAL
