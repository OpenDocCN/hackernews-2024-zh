["```\n$ jq\njq - commandline JSON processor [version 1.6]\n\nUsage:    jq [options] <jq filter> [file...]\n    jq [options] --args <jq filter> [strings...]\n    jq [options] --jsonargs <jq filter> [JSON_TEXTS...]\n\njq is a tool for processing JSON inputs, applying the given filter to\nits JSON text inputs and producing the filter's results as JSON on\nstandard output.\n\nThe simplest filter is ., which copies jq's input to its output\nunmodified (except for formatting, but note that IEEE754 is used\nfor number representation internally, with all that that implies).\n\nFor more advanced filters see the jq(1) manpage (\"man jq\")\nand/or https://stedolan.github.io/jq\n\nExample:\n\n    $ echo '{\"foo\": 0}' | jq .\n    {\n        \"foo\": 0\n    }\n\nFor a listing of options, use jq --help. \n```", "```\n$ myapp\n$ myapp --help\n$ myapp -h \n```", "```\n$ myapp help\n$ myapp help subcommand\n$ myapp subcommand --help\n$ myapp subcommand -h \n```", "```\n$ git\nusage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone      Clone a repository into a new directory\n   init       Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add        Add file contents to the index\n   mv         Move or rename a file, a directory, or a symlink\n   reset      Reset current HEAD to the specified state\n   rm         Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect     Use binary search to find the commit that introduced a bug\n   grep       Print lines matching a pattern\n   log        Show commit logs\n   show       Show various types of objects\n   status     Show the working tree status\n… \n```", "```\n **$ heroku apps --help**\nlist your apps\n\n**USAGE**\n  $ heroku apps\n\n**OPTIONS**\n  -A, --all          include apps in all teams\n  -p, --personal     list apps in personal account when a default team is set\n  -s, --space=space  filter by space\n  -t, --team=team    team to use\n  --json             output in json format\n\n**EXAMPLES**\n  $ heroku apps\n  === My Apps\n  example\n  example2\n\n  === Collaborated Apps\n  theirapp   other@owner.name\n\n**COMMANDS**\n  apps:create     creates a new app\n  apps:destroy    permanently destroy an app\n  apps:errors     view app errors\n  apps:favorites  list favorited apps\n  apps:info       show detailed app information\n  apps:join       add yourself to a team app\n  apps:leave      remove yourself from a team app\n  apps:lock       prevent team members from joining an app\n  apps:open       open the app in a web browser\n  apps:rename     rename an app\n  apps:stacks     show the list of available stacks\n  apps:transfer   transfer applications to another user or team\n  apps:unlock     unlock an app so any team member can join \n\n```", "```\n$ heroku pss\n ›   Warning: pss is not a heroku command.\nDid you mean ps? [y/n]: \n```", "```\nNPM-LS(1)                                                            NPM-LS(1)\n\nNAME\n       npm-ls - List installed packages\n\nSYNOPSIS\n         npm ls [[<@scope>/]<pkg> ...]\n\n         aliases: list, la, ll\n\nDESCRIPTION\n       This command will print to stdout all the versions of packages that are\n       installed, as well as their dependencies, in a tree-structure.\n\n       ... \n```", "```\n$ git push\nEnumerating objects: 18, done.\nCounting objects: 100% (18/18), done.\nDelta compression using up to 8 threads\nCompressing objects: 100% (10/10), done.\nWriting objects: 100% (10/10), 2.09 KiB | 2.09 MiB/s, done.\nTotal 10 (delta 8), reused 0 (delta 0), pack-reused 0\nremote: Resolving deltas: 100% (8/8), completed with 8 local objects.\nTo github.com:replicate/replicate.git\n + 6c22c90...a2a5217 bfirsh/fix-delete -> bfirsh/fix-delete \n```", "```\n$ git status\nOn branch bfirsh/fix-delete\nYour branch is up to date with 'origin/bfirsh/fix-delete'.\n\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   cli/pkg/cli/rm.go\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\") \n```", "```\n-rw-r--r-- 1 root root     68 Aug 22 23:20 resolv.conf\nlrwxrwxrwx 1 root root     13 Mar 14 20:24 rmt -> /usr/sbin/rmt\ndrwxr-xr-x 4 root root   4.0K Jul 20 14:51 security\ndrwxr-xr-x 2 root root   4.0K Jul 20 14:53 selinux\n-rw-r----- 1 root shadow  501 Jul 20 14:44 shadow\n-rw-r--r-- 1 root root    116 Jul 20 14:43 shells\ndrwxr-xr-x 2 root root   4.0K Jul 20 14:57 skel\n-rw-r--r-- 1 root root      0 Jul 20 14:43 subgid\n-rw-r--r-- 1 root root      0 Jul 20 14:43 subuid \n```", "```\n$ yubikey-agent -setup\n🔐 The PIN is up to 8 numbers, letters, or symbols. Not just numbers!\n❌ The key will be lost if the PIN and PUK are locked after 3 incorrect tries.\n\nChoose a new PIN/PUK: \nRepeat the PIN/PUK: \n\n🧪 Retriculating splines …\n\n✅ Done! This YubiKey is secured and ready to go.\n🤏 When the YubiKey blinks, touch it to authorize the login.\n\n🔑 Here's your new shiny SSH public key:\necdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCEJ/\nUwlHnUFXgENO3ifPZd8zoSKMxESxxot4tMgvfXjmRp5G3BGrAnonncE7Aj11pn3SSYgEcrrn2sMyLGpVS0=\n\n💭 Remember: everything breaks, have a backup plan for when this YubiKey does. \n```", "```\n$ curl https://example.com/something.tar.gz | tar xvf - \n```", "```\nmycmd --foo=1 subcmd\nworks\n\n$ mycmd subcmd --foo=1\nunknown flag: --foo \n```", "```\n$ docker image pull ruby\nUsing default tag: latest\nlatest: Pulling from library/ruby\n6c33745f49b4: Pull complete \nef072fc32a84: Extracting [================================================>  ]  7.569MB/7.812MB\nc0afb8e68e0b: Download complete \nd599c07d28e6: Download complete \nf2ecc74db11a: Downloading [=======================>                           ]  89.11MB/192.3MB\n3568445c8bf2: Download complete \nb0efebc74f25: Downloading [===========================================>       ]  19.88MB/22.88MB\n9cb1ba6838a0: Download complete \n```", "```\n$ mycmd run echo \"hello world\" \n```", "```\n$ mycmd echo \"hello world\" \n```", "```\n$  docker-compose up\n…\n^CGracefully stopping... (press Ctrl+C again to force) \n```"]