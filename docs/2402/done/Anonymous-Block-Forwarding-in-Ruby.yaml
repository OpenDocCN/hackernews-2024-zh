- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '分类: 未分类'
- en: 'date: 2024-05-27 14:54:10'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '日期: 2024-05-27 14:54:10'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Anonymous Block Forwarding in Ruby
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ruby中的匿名块转发
- en: 来源：[https://www.writesoftwarewell.com/anonymous-block-forwarding-in-ruby/](https://www.writesoftwarewell.com/anonymous-block-forwarding-in-ruby/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.writesoftwarewell.com/anonymous-block-forwarding-in-ruby/](https://www.writesoftwarewell.com/anonymous-block-forwarding-in-ruby/)
- en: You probably have used (or at least heard about) the argument forwarding feature
    in Ruby, which was added in Ruby 2.7, that lets you forward all the arguments
    passed to a method, as they are, to another method, using the three dots `...`
    syntax.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能已经使用（或至少听说过）Ruby中的参数转发功能，该功能在Ruby 2.7中添加，可让您将传递给方法的所有参数原封不动地转发到另一个方法，使用三个点
    `...` 语法。
- en: '**This includes all positional, named, and even block arguments.**'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**这包括所有位置参数，命名参数，甚至块参数。**'
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Did you know that there''s a similar shorthand to forward a block anonymously?**
    I learned this very recently (yesterday!), and I love it.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**您知道吗，有一种类似的快捷方式可以匿名转发一个块吗？** 我最近才学会（昨天的事！），我很喜欢。'
- en: 'Notice the `perform` method in the following example:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 注意下面示例中的`perform`方法：
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Earlier, you''d have done something like:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，您可能会这样做：
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'But starting in Ruby 3.1, you can do this:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 但是在 Ruby 3.1 中，您可以这样做：
- en: '[PRE3]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Pretty cool, right? Also looks pretty nice, in my opinion. What do you think?
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 相当酷，对吧？在我看来，它看起来也相当不错。你觉得呢？
- en: 'If you like this syntax, and would like to enforce it via Rubocop ([Rails 8
    ships with a default Rubocop linter out of box](https://github.com/rails/rubocop-rails-omakase?ref=writesoftwarewell.com)),
    you can use the following Rule:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您喜欢这种语法，并想通过Rubocop来强制执行它（[Rails 8默认内置了Rubocop代码检查工具](https://github.com/rails/rubocop-rails-omakase?ref=writesoftwarewell.com)），您可以使用以下规则：
- en: '[PRE4]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'On the other hand, if you prefer the older explicit version, enforce it with
    this rule:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，如果您更喜欢旧版本的明确版本，请使用此规则来强制执行：
- en: '[PRE5]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: P.S. For an in-depth explanation, I suggest reading [this post](https://zverok.space/blog/2023-11-24-syntax-sugar4-argument-forwarding.html?ref=writesoftwarewell.com)
    from zverok. It goes into much more depth.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 附言：为了深入解释，我建议阅读[zverok的这篇文章](https://zverok.space/blog/2023-11-24-syntax-sugar4-argument-forwarding.html?ref=writesoftwarewell.com)。它涉及更深的内容。
- en: '* * *'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: That's a wrap. I hope you found this article helpful and you learned something
    new.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 就到这里吧。希望您觉得这篇文章有用，学到了新东西。
- en: As always, if you have any questions or feedback, didn't understand something,
    or found a mistake, please leave a comment below or [send me an email](mailto:akshay.khot@hey.com?ref=akshays-blog).
    I reply to all emails I get from developers, and I look forward to hearing from
    you.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如常地，如果您有任何问题或反馈，没有理解某些内容，或者发现了错误，请在下方留言或[给我发邮件](mailto:akshay.khot@hey.com?ref=akshays-blog)。我会回复所有来自开发者的邮件，并期待听到您的消息。
- en: If you'd like to receive future articles directly in your email, please [subscribe
    to my blog](#/portal/signup). If you're already a subscriber, thank you.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想直接在电子邮件中接收未来的文章，请[订阅我的博客](#/portal/signup)。如果您已经是订阅者，谢谢。
- en: Subscribe to get the new posts via email. Your email address is never sold or
    shared.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 订阅以通过电子邮件获取新文章。您的电子邮件地址永远不会被出售或分享。
