- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-29 13:26:13'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-29 13:26:13
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Announcing bpftop: Streamlining eBPF performance optimization | by Netflix
    Technology Blog | Netflix TechBlog'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 宣布发布 bpftop：简化 eBPF 性能优化 | Netflix 技术博客 | Netflix TechBlog
- en: 来源：[https://netflixtechblog.com/announcing-bpftop-streamlining-ebpf-performance-optimization-6a727c1ae2e5?gi=223d75ac1771](https://netflixtechblog.com/announcing-bpftop-streamlining-ebpf-performance-optimization-6a727c1ae2e5?gi=223d75ac1771)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://netflixtechblog.com/announcing-bpftop-streamlining-ebpf-performance-optimization-6a727c1ae2e5?gi=223d75ac1771](https://netflixtechblog.com/announcing-bpftop-streamlining-ebpf-performance-optimization-6a727c1ae2e5?gi=223d75ac1771)
- en: 'Announcing bpftop: Streamlining eBPF performance optimization'
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 宣布发布 bpftop：简化 eBPF 性能优化
- en: '*By* [*Jose Fernandez*](https://www.linkedin.com/in/josefernandezmn/)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '*作者* [*Jose Fernandez*](https://www.linkedin.com/in/josefernandezmn/)'
- en: Today, we are thrilled to announce the release of [bpftop](https://github.com/Netflix/bpftop),
    a command-line tool designed to streamline the performance optimization and monitoring
    of eBPF programs. As Netflix increasingly adopts eBPF [[1](/extending-vector-with-ebpf-to-inspect-host-and-container-performance-5da3af4c584b),
    [2](/how-netflix-uses-ebpf-flow-logs-at-scale-for-network-insight-e3ea997dca96)],
    applying the same rigor to these applications as we do to other managed services
    is imperative. Striking a balance between eBPF’s benefits and system load is crucial,
    ensuring it enhances rather than hinders our operational efficiency. This tool
    enables Netflix to embrace eBPF’s potential.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，我们很高兴地宣布发布 [bpftop](https://github.com/Netflix/bpftop)，这是一个旨在简化 eBPF 程序性能优化和监控的命令行工具。随着
    Netflix 越来越多地采用 eBPF [[1](/extending-vector-with-ebpf-to-inspect-host-and-container-performance-5da3af4c584b)，[2](/how-netflix-uses-ebpf-flow-logs-at-scale-for-network-insight-e3ea997dca96)]，对这些应用程序采取与其他托管服务相同的严格标准至关重要。在
    eBPF 的优点和系统负载之间取得平衡至关重要，确保它增强而不是妨碍我们的运营效率。这个工具使 Netflix 能够发挥 eBPF 的潜力。
- en: Introducing bpftop
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 推出 bpftop
- en: bpftop provides a dynamic real-time view of running eBPF programs. It displays
    the average execution runtime, events per second, and estimated total CPU % for
    each program. This tool minimizes overhead by enabling performance statistics
    only while it is active.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: bpftop 提供了正在运行的 eBPF 程序的动态实时视图。它显示了每个程序的平均执行时间、每秒事件数和估计的总 CPU 使用率。该工具通过仅在活动时启用性能统计来最小化开销。
- en: bpftop simplifies the performance optimization process for eBPF programs by
    enabling an efficient cycle of benchmarking, code refinement, and immediate feedback.
    Without bpftop, optimization efforts would require manual calculations, adding
    unnecessary complexity to the process. With bpftop, users can quickly establish
    a baseline, implement improvements, and verify enhancements, streamlining the
    process.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: bpftop 通过实现高效的基准测试、代码改进和即时反馈的循环，简化了 eBPF 程序的性能优化过程。没有 bpftop，优化工作将需要手动计算，增加了不必要的复杂性。有了
    bpftop，用户可以快速建立基线、实施改进并验证增强功能，从而简化流程。
- en: A standout feature of this tool is its ability to display the statistics in
    time series graphs. This approach can uncover patterns and trends that could be
    missed otherwise.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 该工具的一个显著特点是能够以时间序列图形式显示统计数据。这种方法可以发现可能被忽略的模式和趋势。
- en: How it works
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理
- en: bpftop uses the [BPF_ENABLE_STATS](https://elixir.bootlin.com/linux/v6.6.16/source/include/uapi/linux/bpf.h#L792)
    syscall command to enable global eBPF runtime statistics gathering, which is disabled
    by default to reduce performance overhead. It collects these statistics every
    second, calculating the average runtime, events per second, and estimated CPU
    utilization for each eBPF program within that sample period. This information
    is displayed in a top-like tabular format or a time series graph over a 10s moving
    window. Once bpftop terminates, it turns off the statistics-gathering function.
    The tool is written in Rust, leveraging the [libbpf-rs](https://github.com/libbpf/libbpf-rs)
    and [ratatui](https://github.com/ratatui-org/ratatui) crates.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: bpftop 使用 [BPF_ENABLE_STATS](https://elixir.bootlin.com/linux/v6.6.16/source/include/uapi/linux/bpf.h#L792)
    系统调用命令来启用全局 eBPF 运行时统计信息收集，默认情况下禁用以减少性能开销。它每秒收集这些统计数据，计算每个 eBPF 程序的平均运行时间、每秒事件数和估计的
    CPU 利用率。这些信息以类似 top 的表格式或在 10s 移动窗口上的时间序列图形式显示。一旦 bpftop 终止，它将关闭统计信息收集功能。该工具是用
    Rust 编写的，利用了 [libbpf-rs](https://github.com/libbpf/libbpf-rs) 和 [ratatui](https://github.com/ratatui-org/ratatui)
    crate。
- en: Getting started
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 入门指南
- en: Visit the project’s [GitHub page](https://github.com/Netflix/bpftop) to learn
    more about using the tool. We’ve open-sourced bpftop under the Apache 2 license
    and look forward to contributions from the community.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 访问该项目的 [GitHub 页面](https://github.com/Netflix/bpftop) 了解更多关于使用该工具的信息。我们已将 bpftop
    在 Apache 2 许可下开源，并期待社区的贡献。
