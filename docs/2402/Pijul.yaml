- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 15:03:54'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: Pijul
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://pijul.org/](https://pijul.org/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Pijul is a free and open source (GPL2) **distributed version control system**.
    Its distinctive feature is to be based on a **theory of patches**, while still
    being fast and scalable. This makes it easy to learn and use, without any compromise
    on power or features.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
- en: Why?
  id: totrans-split-7
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Commutation
  id: totrans-split-8
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: In Pijul, independent changes can be applied in any order without changing the
    result or the version's identifier. This makes Pijul significantly simpler than
    workflows using `git rebase` or `hg transplant`. Pijul has a branch-like feature
    called "channels", but these are not as important as in other systems. For example,
    so-called *feature branches* are often just changes in Pijul. Keeping your history
    clean is the default.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: Merge correctness
  id: totrans-split-10
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Pijul guarantees a number of strong properties on merges. The most important
    one is that the **order** between lines is always preserved. This is unlike 3-way
    merge, which may sometimes shuffle lines around. When the order is unknown (for
    example in the case of concurrent edits), this is a *conflict*, which contrasts
    with systems with "automatic" or "no conflicts" merges.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
- en: First-class conflicts
  id: totrans-split-12
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: In Pijul, conflicts are not modelled as a "failure to merge", but rather as
    the standard case. Specifically, conflicts happen between two changes, and are
    solved by one change. The resolution change solves the conflict between the same
    two changes, no matter if other changes have been made concurrently. Once solved,
    conflicts never come back.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
- en: Partial clones
  id: totrans-split-14
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: 'Commutation makes it possible to clone only a small subset of a repository:
    indeed, one can only apply the changes related to that subset. Working on a partial
    clone produces changes that can readily be sent to the large repository.'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
- en: Where to find it?
  id: totrans-split-16
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
