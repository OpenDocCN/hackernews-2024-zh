- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:57:26'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024年05月27日 14:57:26
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: The Pleasure of Pattern - by Kent Beck
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 《模式的乐趣》- 作者：肯特·贝克
- en: 来源：[https://tidyfirst.substack.com/p/the-pleasure-of-pattern](https://tidyfirst.substack.com/p/the-pleasure-of-pattern)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://tidyfirst.substack.com/p/the-pleasure-of-pattern](https://tidyfirst.substack.com/p/the-pleasure-of-pattern)
- en: First published 2010\. I stand by this observation although I’d love to learn
    more about the neuro-chemical mechanisms that might support it.
  id: totrans-split-6
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 首次发表于2010年。尽管我很愿意了解更多可能支持这一观察的神经化学机制。
- en: 'Studying poker has helped me crack a long-standing (maybe 20-year-old) puzzle
    for me: why are so many programmers musicians? I’ve sang and played guitar and
    various other stringed instruments since I was 8 and I started programming at
    13, so I’ve lived this dual life for a long time, but I’ve never understood it.
    I’ve heard explanations like “music is mathematical and programming is mathematical”,
    but I was never satisfied with them because they didn’t match my experience. I
    don’t think “mathlich” when I’m programming. Here are the three threads–programming,
    music, and poker–and how they came together for me.'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 学习扑克帮助我解开了一个长期困扰我的难题：为什么那么多程序员也是音乐家？我从8岁开始唱歌、弹吉他和其他各种弦乐器，13岁开始编程，这样双重生活持续了很长时间，但我一直不理解其中的关系。有人解释说“音乐是数学的，编程也是数学的”，但这些解释不能完全符合我的经验。在编程时，我并不会想到“数学”。以下是我个人的三个线索——编程、音乐和扑克——以及它们如何在我的生活中交汇。
- en: 'One of the transformative experiences of my young life came in high school
    when Mr. Burishkin (hi Dave! [ed: RIP]) got mad at our algebra class (this was
    fairly common) and assigned us all 40 trig identities in the book. Usually we’d
    get half or a third of the exercises in a given set. Here was a big pile of work
    I couldn’t get out of easily.'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我年轻时的一次深刻经历发生在高中，当时布里什金先生（嗨，戴夫！[注：已故]）对我们的代数课有些生气（这种情况很常见），然后分配了书上的所有40个三角恒等式给我们。通常情况下，我们只需完成一半或者三分之一的练习。但这次，我面对一大堆工作，不太容易放弃。
- en: For once I did the right thing and decided I would just plow through the whole
    stack. The first few were hard. I had to sweat to figure out how solve them. Each
    one posed unique challenges. At this rate the assignment was going to take me
    hours. Somewhere around half way through the assignment, though, a door opened
    in my mind. I’d look at a problem and see it in terms of the problems I’d already
    solved–I can split this in two, transform part 1 into this and part 2 into that
    and I’m done. I blew through the rest of the assignment in minutes, eager to solve
    more.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这一次，我做了正确的事情，决定直接解决整个堆栈。最初的几个问题很难。我不得不努力想出解决方法。每个问题都提出了独特的挑战。以这种速度继续下去，这项任务可能需要我几个小时。然而，在完成了大约一半的任务后，我的思维突然开阔了。我看着一个问题，将其视为我已经解决过的问题的一部分——我可以把它分成两部分，将第一部分转化为这个，第二部分转化为那个，然后问题就解决了。我很快地完成了剩下的任务，渴望着解决更多问题。
- en: Not only could I solve the problems quickly but I enjoyed the process. Every
    time I transformed the chaos of the original problem into a pattern I knew how
    to handle, it was intensely satisfying.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我不仅能快速解决问题，而且享受这个过程。每当我将原始问题的混乱转化为我知道如何处理的模式时，都会感到极度满足。
- en: I have the same feeling of satisfaction with many programming-related tasks–when
    I see a big refactoring in terms of a succession of smaller refactorings, when
    I see a big task in terms of independently verifiable sub-tasks, when I see a
    big feature in terms of a succession of features each of which delivers value–at
    all these times I feel good.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多与编程相关的任务中，我也有同样的满足感——当我将一个大的重构看作一系列较小的重构时，当我将一个大任务看作一系列独立可验证的子任务时，当我将一个大特性看作一系列每个都带来价值的特性时——在这些时刻，我都感觉良好。
- en: For thirty years I’ve played off and on with my musical partner Curtis Wright.
    We play American folk music. While I’ve enjoyed playing with many people, Curtis
    and I share a deeper level of musical communication than I’ve experienced with
    anyone else.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 三十年来，我一直与我的音乐伙伴柯蒂斯·赖特断断续续地演奏。我们演奏美国民间音乐。虽然我享受与许多人的合作，但我与柯蒂斯之间有一种比我与其他人更深层次的音乐交流。
- en: We don’t plan song endings. We end every song differently every time. Here’s
    how it works. When we’re really “on”, I will hear him play some interesting phrase
    somewhere in the middle of a song and something will click in my mind. There’s
    no explicit communication at that moment though–no nod, no eye contact, nothing.
    When we get to the end of the song, I will play that phrase as a tag and he will
    too, in perfect time. It is the most exhilarating feeling because we’re so completely
    at risk. If we chose different phrases to play, it would sound terrible and we’d
    look like fools. When we re-invent the ending and pull it off, though, it’s absolutely
    electric, both to play and to hear.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不计划歌曲的结束。我们每次都以不同的方式结束每一首歌。操作如下。当我们真正“进入状态”时，我会听到他在一首歌的中间演奏一些有趣的乐句，而我的大脑中会有一些东西点击。尽管那时没有明确的沟通——没有点头，没有眼神接触，没有任何东西。当我们到达歌曲的结尾时，我会演奏那个乐句作为标签，他也会在完美的时间里演奏。这是最令人振奋的感觉，因为我们是如此完全处于风险之中。如果我们选择了不同的乐句演奏，听起来会很糟糕，我们看起来像傻瓜。然而，当我们重新发明结尾并成功地实现它时，这绝对是兴奋的，无论是演奏还是听。
- en: This is the most extreme example I have of matching patterns in music, but music
    is full of patterns–what makes a phrase, what makes a chord, what rhythm or rhythms
    are going on, what style should this piece be played in, backing up an unfamiliar
    tune by ear, and on and on. I enjoy music because I enjoy those moments of discovering
    the patterns in a piece. When I see a pattern, I feel satisfied. Woodshedding
    (practicing physical skills) is necessary to be able to take advantage of patterns
    when I see them, but I don’t enjoy it the way some people do. Experiencing music,
    for me, is experiencing patterns.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我在音乐中找到的最极端的匹配模式的一个例子，但音乐充满了模式——是什么造就了一个乐句，是什么造就了一个和弦，有什么节奏或节奏在进行中，这首曲子应该以什么风格演奏，在听不懂的曲调时，通过耳朵支持，等等。我喜欢音乐，因为我喜欢在一首曲子中发现模式的那些时刻。当我看到一个模式时，我感到满足。当我看到它们时，锻炼（练习物理技能）是必要的，以便能够利用它们，但我不像一些人那样享受它。对我来说，体验音乐就是体验模式。
- en: When I started studying poker I didn’t have any particular expectations, I was
    just interested. One of the basic problems in poker is having a more accurate
    belief about your opponent’s hand than they have about your hand. Their patterns
    of betting give you clues. At some point you say, “He must have just gotten a
    second queen,” because how he is playing doesn’t make sense otherwise. When I’ve
    guessed right, I noticed that I have a moment of the same kind of emotional pattern
    matching satisfaction that I have when I’m playing music or programming. That’s
    when I made the connection–this feeling is familiar, it happens when I program
    *and* when I play music.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 当我开始学习扑克时，我没有任何特别的期望，我只是感兴趣。扑克中的一个基本问题是对手的手牌比你更准确地认知。他们的下注模式给你提示。在某个时候，你会说，“他一定是刚刚得到了第二个皇后”，因为他的玩法否则就毫无意义。当我猜对时，我注意到我有一种与我在玩音乐或编程时相同的情感模式匹配满足感的时刻。那时我意识到——这种感觉很熟悉，它在我编程*和*演奏音乐时都会发生。
- en: 'There’s my answer: talent for music and programming occur together because
    accomplishment in each relies on enjoying seeing patterns. See a pattern, feel
    good, look for more patterns.'
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我的答案：音乐和编程的天赋是一起出现的，因为在每一个成就中，都依赖于享受看到模式。看到模式，感觉良好，寻找更多模式。
- en: The bigger the stakes and the bigger the pattern, the greater the satisfaction.
    I won’t play poker for much money because I’m not any good at it. However, I experience
    more satisfaction when I see big patterns in programs (what some people call “architecture”)
    or big patterns in music (the so-called “long phrase”).
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 赌注越大，模式越大，满足感越大。我不会因为我不擅长扑克而玩很多钱。然而，当我看到程序中的大模式（有些人称之为“架构”）或音乐中的大模式（所谓的“长乐句”）时，我会感到更多的满足感。
- en: I suspect that my chaotic early life left me with a brain wired to crave moments
    of order and feel good when I find them. That and the innate ability to see patterns
    led me to activities where I got frequent mental rewards. I’ve just identified
    this connection, so I haven’t done any background studies into the neuro-science
    of pattern matching. From my experience I would guess that the same kind of dopamine
    release that accompanies other pleasurable activities happens in my brain when
    I match a pattern, musical or programmatical. I’d also like to see an fMRI to
    understand the neural activation patterns at such times and see if programming,
    music, and poker all really have similar physical neurostructures.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我怀疑我混乱的早期生活让我的大脑渴望秩序并在找到时感到愉悦。这种天赋与看到模式的能力使我参与到那些能给予我频繁精神奖励的活动中。我刚刚发现了这种联系，所以我还没有对模式匹配的神经科学做过任何背景研究。根据我的经验，我猜测在我匹配音乐或编程模式时，与其他令人愉悦的活动伴随的多巴胺释放是一样的。我也想看看fMRI，以了解这些时刻的神经激活模式，并看看编程、音乐和扑克是否真的有类似的神经结构。
- en: My daughter Lindsey is also a pattern matcher, but she matches patterns of human
    behavior. She has a good sense of what people are thinking or feeling based on
    cues that are totally invisible to me. I wonder if there are any studies correlating
    skill at reading people with skill at music. Are psychologists musicians the way
    programmers are musicians, or are musical and programming pattern matching similar
    in a way that musical and social pattern matching aren’t?
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我的女儿琳赛也是一个模式匹配者，但她匹配的是人类行为的模式。她能准确感知到人们的思维或情感，这些对我来说完全是看不见的线索。我不禁想知道是否有任何研究关联了人类行为阅读能力和音乐技能。心理学家是否像程序员一样是音乐家，或者音乐和编程的模式匹配方式是否和社交模式匹配方式有所相似呢？
- en: Another question this brings up for me is the evolutionary psychology of this
    kind of pattern matching. What is the evolutionary advantage of being able to
    match abstract patterns? Assuming it increases evolutionary fitness, what is the
    cost of it that kept it from becoming universal (I suppose my kids could provide
    a long list in answer to this question)?
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这给我带来的另一个问题是这种模式匹配的进化心理学。能够匹配抽象模式的进化优势是什么？假设这增加了进化适应性，那么阻止其普及的成本是什么（我想我的孩子们可能会就这个问题列出一个长长的清单）？
