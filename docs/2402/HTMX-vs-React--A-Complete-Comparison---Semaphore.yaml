- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 15:04:30'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 15:04:30
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'HTMX vs React: A Complete Comparison - Semaphore'
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HTMX vs React：完整比较 - Semaphore
- en: 来源：[https://semaphoreci.com/blog/htmx-react](https://semaphoreci.com/blog/htmx-react)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://semaphoreci.com/blog/htmx-react](https://semaphoreci.com/blog/htmx-react)
- en: The ultimate goal of HTMX is to provide modern browser interactivity directly
    within HTML, without the need for JavaScript. Although relatively new, with its
    initial release in late 2020, this frontend library has quickly caught the attention
    of the IT web community.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: HTMX的终极目标是在HTML中直接提供现代浏览器交互性，无需JavaScript。尽管相对较新，HTMX于2020年末首次发布后很快引起了IT网络社区的关注。
- en: With 2nd place in the [2023 JavaScript Rising Stars](https://risingstars.js.org/2023/en#section-framework) “Front-end
    Frameworks” category (right behind React), a spot in the GitHub Accelerator, and
    over 20k stars on GitHub, HTMX is rapidly gaining popularity. Why is there so
    much excitement around it? Is it here to dethrone React? Let’s find it out!
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在[2023 JavaScript Rising Stars](https://risingstars.js.org/2023/en#section-framework)“前端框架”类别中排名第二（仅次于React），并获得GitHub加速器的位置以及在GitHub上超过20k星标，HTMX正在迅速赢得人气。为什么会引起这么多关注？它是否有可能颠覆React？让我们一探究竟！
- en: In this HTMX vs React guide, you will discover why we came to HTMX, what it
    is, what features it offers, and how it compares to React in terms of performance,
    community, functionality, and more.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇HTMX与React的指南中，您将了解我们为什么选择HTMX，它是什么，提供了哪些特性，并从性能、社区、功能等方面与React进行比较。
- en: HTMX vs React in Short
  id: totrans-split-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTMX vs React 简介
- en: 'Take a look at the summary table below to jump right into the HTMX vs React
    comparison:'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 请查看下面的总结表格，直接进行HTMX与React的比较：
- en: '|  | **HTMX** | **React** |'
  id: totrans-split-11
  prefs: []
  type: TYPE_TB
  zh: '|  | **HTMX** | **React** |'
- en: '| --- | --- | --- |'
  id: totrans-split-12
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Developed by | Big Sky Software | Meta |'
  id: totrans-split-13
  prefs: []
  type: TYPE_TB
  zh: '| 开发者 | Big Sky Software | Meta |'
- en: '| Open source | ✅ | ✅ |'
  id: totrans-split-14
  prefs: []
  type: TYPE_TB
  zh: '| 开源 | ✅ | ✅ |'
- en: '| GitHub stars | 29k+ | 218k+ |'
  id: totrans-split-15
  prefs: []
  type: TYPE_TB
  zh: '| GitHub 星标 | 29k+ | 218k+ |'
- en: '| Weight | 2.9 kB | 6.4 kB |'
  id: totrans-split-16
  prefs: []
  type: TYPE_TB
  zh: '| 体积 | 2.9 kB | 6.4 kB |'
- en: '| Syntax | Based on HTML, with custom attributes | Based on JSX, an extended
    version of JavaScript |'
  id: totrans-split-17
  prefs: []
  type: TYPE_TB
  zh: '| 语法 | 基于HTML，带有自定义属性 | 基于JSX，是JavaScript的扩展版本 |'
- en: '| Goal | Add modern interactivity features directly in HTML | Provide a component-based,
    full-featured UI JavaScript library |'
  id: totrans-split-18
  prefs: []
  type: TYPE_TB
  zh: '| 目标 | 直接在HTML中添加现代交互特性 | 提供基于组件的全功能UI JavaScript库 |'
- en: '| Learning curve | Gentle | Steep |'
  id: totrans-split-19
  prefs: []
  type: TYPE_TB
  zh: '| 学习曲线 | 缓和 | 陡峭 |'
- en: '| Features | AJAX requesting and some other minor features | Composability,
    one-way data binding, state management, hooks, and many others |'
  id: totrans-split-20
  prefs: []
  type: TYPE_TB
  zh: '| 特性 | AJAX请求和一些其他次要功能 | 可组合性、单向数据绑定、状态管理、钩子等诸多功能 |'
- en: '| Performance | Great | Good, especially on large-scale apps or complex web
    applications |'
  id: totrans-split-21
  prefs: []
  type: TYPE_TB
  zh: '| 性能 | 优秀 | 良好，在大规模应用或复杂Web应用中尤为突出 |'
- en: '| Integration | Embeddable into existing HTML pages | Embeddable into existing
    HTML pages, but mainly used on JavaScript-based projects |'
  id: totrans-split-22
  prefs: []
  type: TYPE_TB
  zh: '| 整合 | 可嵌入到现有HTML页面中 | 可嵌入到现有HTML页面中，但主要用于基于JavaScript的项目 |'
- en: '| Community | Small, but growing | The largest on the market |'
  id: totrans-split-23
  prefs: []
  type: TYPE_TB
  zh: '| 社区 | 小型但正在增长 | 市场上最大的社区 |'
- en: '| Ecosystem | Small | Very rich |'
  id: totrans-split-24
  prefs: []
  type: TYPE_TB
  zh: '| 生态系统 | 小型 | 非常丰富 |'
- en: 'How We Got to React: From jQuery to Modern Web Frameworks'
  id: totrans-split-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们如何走到React：从jQuery到现代Web框架
- en: In the early days of web development, developers relied on jQuery to deal with
    AJAX requests, DOM manipulation, and event handling. Over time, online applications
    evolved and became more modern, structured, and scalable. This is when frameworks
    and libraries such as Angular, React, and Vue made the difference.
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在Web开发的早期阶段，开发人员依赖于jQuery来处理AJAX请求、DOM操作和事件处理。随着时间的推移，在线应用程序变得更加现代化、结构化和可扩展。这就是Angular、React和Vue等框架和库产生影响的时刻。
- en: React introduced a component-based architecture, changing web development forever.
    Its declarative approach to UI and one-way data flow simplifies web development,
    promoting reusability and maintainability. These aspects have made React the go-to
    solution for building dynamic, responsive, and interactive web applications.
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: React引入了基于组件的架构，彻底改变了Web开发。其声明式UI和单向数据流的方法简化了Web开发，促进了可重用性和可维护性。这些特点使React成为构建动态、响应式和交互式Web应用的首选解决方案。
- en: 'How We Got to HTMX: From Web Frameworks to a More Modern HTML'
  id: totrans-split-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们如何走到HTMX：从Web框架到更现代的HTML
- en: While web frameworks like React, Vue, and Angular are great for building structured
    web applications, their complexity can represent a huge overhead for developers
    seeking simplicity. This is where HTMX comes into play!
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管像React、Vue和Angular这样的Web框架非常适合构建结构化的Web应用程序，但其复杂性可能对寻求简单性的开发人员构成巨大的负担。这就是HTMX发挥作用的地方！
- en: HTMX is a lightweight solution for modern interactivity as in React, but with
    simple integration and no overhead as in jQuery. It extends HTML with custom attributes,
    enabling AJAX requests without the need for JavaScript code. The idea behind HTMX
    is to keep things simple, allowing developers to wander into the magic of the
    Web without abandoning familiar HTML.
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: HTMX是一种现代交互的轻量级解决方案，类似于React，但集成简单，没有jQuery的开销。它通过自定义属性扩展HTML，使得可以不用JavaScript代码即可进行AJAX请求。HTMX的理念在于保持简单，使开发者能够在不放弃熟悉的HTML的情况下探索Web的魔力。
- en: HTMX serves as a streamlined and flexible alternative in a universe dominated
    by more complex frontend frameworks. Learn more in the section below.
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: HTMX作为一个简化且灵活的选择，在由更复杂前端框架主导的宇宙中显得格外耀眼。在下面的章节中了解更多。
- en: 'HTMX: A New, Modern Approach to Interactivity'
  id: totrans-split-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTMX：交互的新现代方法
- en: '[HTMX](https://htmx.org/) is a lightweight, dependency-free, extendable JavaScript
    frontend library to access modern browser features directly from HTML. In detail,
    it allows you to deal with [AJAX requests](https://developer.mozilla.org/en-US/docs/Glossary/AJAX), [CSS
    Transitions](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions), [WebSockets](https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API),
    and [Server Sent Events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events) directly
    in HTML code.'
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[HTMX](https://htmx.org/)是一个轻量级、无依赖、可扩展的JavaScript前端库，可直接从HTML中访问现代浏览器功能。详细来说，它允许您直接在HTML代码中处理[AJAX请求](https://developer.mozilla.org/en-US/docs/Glossary/AJAX)、[CSS过渡](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions)、[WebSockets](https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API)和[服务器发送事件](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events)。'
- en: The library gives you access to most of those features just by setting special
    HTML attributes, without having to write a single line of JavaScript. This way,
    HTMX brings HTML to the next level, making it a full-fledged hypertext.
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
  zh: 该库通过设置特殊的HTML属性，即可让您访问大多数这些功能，而无需编写一行JavaScript代码。这样，HTMX将HTML带入了一个新的层次，使其成为一个完整的超文本。
- en: Let’s now see what the library has to offer through some HTMX examples.
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们通过一些HTMX示例来看看这个库提供了什么。
- en: AJAX Request Triggers
  id: totrans-split-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AJAX请求触发器
- en: 'The main concept behind HTMX is the ability to send AJAX requests directly
    from HTML. That is possible thanks to the following attributes:'
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
  zh: HTMX背后的主要概念是能够直接从HTML发送AJAX请求。这得益于以下属性：
- en: '[`hx-get`](https://htmx.org/attributes/hx-get/): Issues a `GET` request to
    the given URL.'
  id: totrans-split-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`hx-get`](https://htmx.org/attributes/hx-get/)：向指定URL发送`GET`请求。'
- en: '[`hx-post`](https://htmx.org/attributes/hx-post/): Issues a `POST` request
    to the given URL.'
  id: totrans-split-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`hx-post`](https://htmx.org/attributes/hx-post/)：向指定URL发送`POST`请求。'
- en: '[`hx-put`](https://htmx.org/attributes/hx-put/): Issues a `PUT` request to
    the given URL.'
  id: totrans-split-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`hx-put`](https://htmx.org/attributes/hx-put/)：向指定URL发送`PUT`请求。'
- en: '[`hx-patch`](https://htmx.org/attributes/hx-patch/): Issues a `PATCH` request
    to the given URL.'
  id: totrans-split-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`hx-patch`](https://htmx.org/attributes/hx-patch/)：向指定URL发送`PATCH`请求。'
- en: '[`hx-delete`](https://htmx.org/attributes/hx-delete/): Issues a `DELETE` request
    to the given URL.'
  id: totrans-split-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`hx-delete`](https://htmx.org/attributes/hx-delete/)：向指定URL发送`DELETE`请求。'
- en: When the HTML element with one of those HTMX attributes is triggered, an AJAX
    request of the specified type to the given URL will be made. By default, elements
    are triggered by the [“natural” event](https://htmx.org/docs/#triggers) (e.g., `change` for `<input>`, `<textarea>`,
    and `<select>`, `submit` for `<form>`, `click` for everything else). You can customize
    this behavior with the attribute [`hx-trigger`](https://htmx.org/attributes/hx-trigger/).
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
  zh: 当触发具有HTMX属性之一的HTML元素时，将发起到指定URL的指定类型的AJAX请求。默认情况下，元素由[“自然”事件](https://htmx.org/docs/#triggers)（例如`<input>`、`<textarea>`和`<select>`的`change`，`<form>`的`submit`，其他所有元素的`click`）触发。您可以通过属性[`hx-trigger`](https://htmx.org/attributes/hx-trigger/)自定义此行为。
- en: 'Now, consider the HTMX example below:'
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，考虑下面的HTMX示例：
- en: '[PRE0]'
  id: totrans-split-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This tells the browser:'
  id: totrans-split-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这告诉浏览器：
- en: “When a user clicks on the `<div>`, send a `GET` request to the `/users` endpoint
    and render the response into the `<div>`“
  id: totrans-split-47
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “当用户点击`<div>`时，向`/users`端点发送`GET`请求，并将响应渲染到`<div>`中”
- en: Note that for this mechanism to work, the `/users` endpoint should return raw
    HTML.
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，为了使此机制生效，`/users`端点应返回原始HTML。
- en: Query Parameters and Body Data
  id: totrans-split-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查询参数和主体数据
- en: 'The way HTMX sets query parameters and body data depends on the type of HTTP
    request:'
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
  zh: HTMX设置查询参数和主体数据的方式取决于HTTP请求的类型：
- en: '**`GET` requests**: By default, `hx-get` does not automatically include any
    query parameters in the AJAX request. To set query parameters, specify them in
    the URL passed to `hx-get`. Otherwise, override the HTMX default behavior with
    the [`hx-params`](https://htmx.org/attributes/hx-params/)attribute.'
  id: totrans-split-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**`GET`请求**：默认情况下，`hx-get`不会自动将任何查询参数包含在AJAX请求中。要设置查询参数，请在传递给`hx-get`的URL中指定它们。否则，可以使用[`hx-params`](https://htmx.org/attributes/hx-params/)属性覆盖HTMX的默认行为。'
- en: '**Non-`GET` requests**: When an element is a `<form>`, the body of the AJAX
    request will include the values of all its inputs, using their `name` attribute
    as the parameter name. When it is not a `<form>`, the body will involve the values
    of all inputs in the nearest enclosing `<form>`. Otherwise, if the element has
    a `value` attribute, that will be used in the body. To add the values of other
    elements to the body, use the [`hx-include`](https://htmx.org/attributes/hx-include/) attribute
    with a CSS selector of all the elements whose values you want to include in the
    body of the request. Then, you can employ the `hx-params` attribute to filter
    out some body parameters. You can also write a custom [`htmx:configRequest`](https://htmx.org/events/#htmx:configRequest) event
    handler to programmatically modify the body definition logic.'
  id: totrans-split-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**非`GET`请求**：当元素是一个`<form>`时，AJAX请求的正文将包括所有输入的值，使用它们的`name`属性作为参数名。当它不是一个`<form>`时，正文将涉及最近的包围`<form>`中所有输入的值。否则，如果元素有一个`value`属性，那将用于正文。要将其他元素的值添加到正文中，请使用带有要包含在请求正文中的所有元素的CSS选择器的[`hx-include`](https://htmx.org/attributes/hx-include/)属性。然后，您可以使用`hx-params`属性来过滤一些正文参数。您还可以编写一个自定义的[`htmx:configRequest`](https://htmx.org/events/#htmx:configRequest)事件处理程序来以编程方式修改正文定义逻辑。'
- en: AJAX Result Handling
  id: totrans-split-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AJAX结果处理
- en: 'As mentioned earlier, HTMX replaces the inner HTML of the element that triggered
    the AJAX request with the HTML content returned by the server. You can customize
    this behavior using the [`hx-swap`](https://htmx.org/attributes/hx-swap/) and [`hx-target`](https://htmx.org/attributes/hx-target/) attributes:'
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面提到的，HTMX会用服务器返回的HTML内容替换触发AJAX请求的元素的内部HTML。您可以使用[`hx-swap`](https://htmx.org/attributes/hx-swap/)和[`hx-target`](https://htmx.org/attributes/hx-target/)属性自定义此行为：
- en: '`hx-swap` defines what to do with the HTML returned by the server, accepting
    one of the following auto-explicative values: `innerHTML` (default), `outerHTML`, `beforebegin`, `afterbegin`, `beforeend`, `afterend`, `delete`, `none`.'
  id: totrans-split-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hx-swap`定义了如何处理服务器返回的HTML，接受以下自解释值之一：`innerHTML`（默认）、`outerHTML`、`beforebegin`、`afterbegin`、`beforeend`、`afterend`、`delete`、`none`。'
- en: '`hx-target` accepts a CSS selector and instructs HTMX to apply the swap logic
    to the selected element.'
  id: totrans-split-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hx-target`接受CSS选择器，并指示HTMX将交换逻辑应用于所选元素。'
- en: 'Now, take a look at the HTMX snippet below:'
  id: totrans-split-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，看一下下面的HTMX片段：
- en: '[PRE1]'
  id: totrans-split-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This tells the browser:'
  id: totrans-split-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这告诉浏览器：
- en: “When a user clicks the `<button>` node, perform a `POST` request to the `/tasks` endpoint
    and append the HTML returned by the server to the `.todo-list` element”
  id: totrans-split-60
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “当用户点击`<button>`节点时，执行到`/tasks`端点的`POST`请求，并将服务器返回的HTML附加到`.todo-list`元素上”
- en: Awesome! You just explored the basics of HTMX and the fundamentals of how it
    works. Keep in mind that these are just some of the features supported by the
    library. For more information, [explore the documentation](https://htmx.org/docs/).
  id: totrans-split-61
  prefs: []
  type: TYPE_NORMAL
  zh: 很棒！您刚刚探索了HTMX的基础知识和其工作原理的基础。请记住，这些只是该库支持的部分功能。欲了解更多信息，请[查阅文档](https://htmx.org/docs/)。
- en: 'HTMX vs React: Comparing the Two Web Technologies'
  id: totrans-split-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTMX vs React：比较这两种Web技术
- en: Now that you know what HTMX is and how it works, let’s look at how it compares
    against React, the reigning king of frontend web development libraries. This section
    will explore the essential aspects to consider when determining which is better
    between HTMX and React.
  id: totrans-split-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您知道HTMX是什么以及它如何工作，让我们看看它与React的比较，React作为前端Web开发库的现任之王。本节将探讨确定HTMX和React哪个更好时需要考虑的关键方面。
- en: Time to dig into the HTMX vs React comparison!
  id: totrans-split-64
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候深入了解HTMX与React的比较了！
- en: Approach
  id: totrans-split-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 方法
- en: '**HTMX:** It extends HTML, providing the ability to interact with the server
    directly in markup. It prioritizes simplicity, conciseness, and readability:'
  id: totrans-split-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HTMX**：它扩展HTML，提供了在标记中直接与服务器交互的能力。它优先考虑简单性、简洁性和可读性：'
- en: '[PRE2]'
  id: totrans-split-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**React:** A full-featured JavaScript library for building user interfaces
    based on reusable components written in [JSX](https://react.dev/learn/writing-markup-with-jsx):'
  id: totrans-split-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**React**：一个基于可重用组件的JSX编写的用户界面构建的全功能JavaScript库：'
- en: '[PRE3]'
  id: totrans-split-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Learning Curve
  id: totrans-split-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 学习曲线
- en: '**HTMX**: With its HTML-based syntax and approach, HTMX offers a smooth learning
    curve. Developers already familiar with traditional web development can master
    it in a few days, while newcomers can start using it from day zero.'
  id: totrans-split-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HTMX**：由于其基于 HTML 的语法和方法，HTMX 提供了平滑的学习曲线。对于已经熟悉传统网页开发的开发人员，他们可以在几天内掌握它，而新手则可以从零开始使用它。'
- en: '**React**: Because of its unique approach to web development, React has a steep
    learning curve. Before building your first React application, you need to understand
    the concepts of SPA ([Single Page Application](https://en.wikipedia.org/wiki/Single-page_application)),
    Virtual DOM, JSX, state management, props, re-renders, and more. This may overwhelm
    some beginners.'
  id: totrans-split-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**React**：由于其独特的网页开发方法，React 具有陡峭的学习曲线。在构建第一个 React 应用程序之前，您需要了解 SPA（[单页面应用](https://en.wikipedia.org/wiki/Single-page_application)）的概念，虚拟
    DOM，JSX，状态管理，props，重新渲染等等。这可能会让一些初学者感到不知所措。'
- en: Features
  id: totrans-split-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 特性
- en: '**HTMX**: The core concept behind the library can be summarized as enabling
    AJAX calls in HTML without the need for JavaScript code. While other cool features
    could be mentioned, that pretty much sums up what HTMX has to offer.'
  id: totrans-split-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HTMX**：该库背后的核心概念可以概括为在 HTML 中实现 AJAX 调用，而无需 JavaScript 代码。虽然还有其他很酷的功能，但这基本上概括了
    HTMX 提供的内容。'
- en: '**React:** Some of the features that have made React so popular are its component-based
    architecture based on code reuse, JSX syntax for easy UI development, robust state
    management, [hooks](https://react.dev/reference/react/hooks), support for both
    client- and server-side rendering, efficient Virtual DOM, CSS-in-JS support, and
    more.'
  id: totrans-split-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**React**：使 React 如此受欢迎的一些功能包括基于组件的架构，支持代码重用，采用 JSX 语法进行轻松的 UI 开发，强大的状态管理，[hooks](https://react.dev/reference/react/hooks)
    支持，同时支持客户端和服务器端渲染，高效的虚拟 DOM，CSS-in-JS 支持等等。'
- en: Performance
  id: totrans-split-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 性能
- en: '**HTMX**: Its lightweight, dependency-free nature means that web pages that
    rely on HTMX will have fast initial page loading and reduced client-side processing.
    In general, HTMX performs well when it comes to applications with simple interactions.'
  id: totrans-split-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HTMX**：其轻量级且无依赖的特性意味着依赖于 HTMX 的网页将具有快速的初始页面加载和减少的客户端处理。总体而言，在处理简单交互的应用程序时，HTMX
    的表现非常出色。'
- en: '**React**: SPA applications built in React usually contain a lot of JavaScript.
    That results in higher network utilization and client-side rendering times. However,
    the virtual DOM and efficient reconciliation algorithm allow React to swiftly
    update the UI, making it suitable for large-scale applications.'
  id: totrans-split-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**React**：使用 React 构建的 SPA 应用通常包含大量 JavaScript。这导致网络利用率和客户端渲染时间增加。然而，虚拟 DOM
    和高效的协调算法使 React 能够迅速更新 UI，使其适用于大规模应用程序。'
- en: Integration
  id: totrans-split-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 集成
- en: '**HTMX**: It can be embedded in any HTML web page. HTMX integrates natively
    with backend technologies that can return raw HTML content, such as Node.js, Django,
    Laravel, Spring Boot, Flask, and others.'
  id: totrans-split-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HTMX**：它可以嵌入到任何 HTML 网页中。HTMX 与可以返回原始 HTML 内容的后端技术（如 Node.js、Django、Laravel、Spring
    Boot、Flask 等）本地集成。'
- en: '**React**: As a frontend library, not a framework, it is technically possible
    to integrate it into any existing sites. At the same time, integrating React may
    require additional configuration, especially in frontend projects not built around
    JavaScript.'
  id: totrans-split-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**React**：作为一个前端库而不是框架，技术上可以将其集成到任何现有网站中。同时，集成 React 可能需要额外的配置，特别是在非围绕 JavaScript
    构建的前端项目中。'
- en: Note that HTMX and React can coexist in the same project. This means that you
    can have a web page that uses both React and HTMX in different sections of the
    page, and even React components that rely on HTMX attributes.
  id: totrans-split-82
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，HTMX 和 React 可以在同一个项目中共存。这意味着您可以在页面的不同部分同时使用 React 和 HTMX，并且甚至可以有依赖于 HTMX
    属性的 React 组件。
- en: Use Cases
  id: totrans-split-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用案例
- en: '**HTMX**: Best suited for projects that require simple, modern, and dynamic
    interactivity. HTMX is a lightweight and efficient option when you do not need
    all the advanced features of a full frontend framework. It is also ideal for backend
    developers who want to serve interactive HTML pages without having to write dedicated
    client-side JavaScript logic.'
  id: totrans-split-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HTMX**：最适合需要简单、现代和动态交互的项目。HTMX 是一个轻量且高效的选择，适用于不需要完整前端框架的高级功能的项目。对于希望提供交互式
    HTML 页面但不想编写专门的客户端 JavaScript 逻辑的后端开发人员而言，它也是理想选择。'
- en: '**React**: ****Best suited for developing single-page applications and complex
    web applications that need to provide a rich user experience and/or deal with
    complex state. It is also a great option for large teams who want to reuse UI
    components across multiple projects.'
  id: totrans-split-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**React**：最适合开发需要提供丰富用户体验和/或处理复杂状态的单页应用和复杂Web应用。对于希望在多个项目中重复使用UI组件的大型团队也是一个很好的选择。'
- en: Migrating from React to HTMX is possible and can lead to a [67% smaller codebase](https://htmx.org/essays/a-real-world-react-to-htmx-port/).
    However, that is recommended only when you do not need all the features that make
    React so popular, such as advanced state management.
  id: totrans-split-86
  prefs: []
  type: TYPE_NORMAL
  zh: 从React迁移到HTMX是可能的，并且可以使代码库减少[67% smaller codebase](https://htmx.org/essays/a-real-world-react-to-htmx-port/)。然而，仅建议在您不需要使React如此受欢迎的所有功能（如高级状态管理）时才这样做。
- en: '**HTMX**: With the first release in late 2020, you cannot expect HTMX to be
    as popular as React. So, you will not find many guides, tutorials, and walkthrough
    videos about it. Nevertheless, the project has already reached more than [29k
    starts on GitHub](https://github.com/bigskysoftware/htmx) and there is a lot of
    buzz around it.'
  id: totrans-split-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HTMX**：2020年底首次发布，您不能指望HTMX像React那样受欢迎。因此，关于它的指南、教程和操作视频并不多。尽管如此，该项目已经在GitHub上获得了超过[29k
    starts on GitHub](https://github.com/bigskysoftware/htmx)，并且引起了很大的关注。'
- en: '**React**: With millions of developers worldwide and over [218k stars on GitHub](https://github.com/facebook/react),
    React is the undisputed heavyweight champion of web development libraries. According
    to a [Statista survey](https://www.statista.com/statistics/1124699/worldwide-developer-survey-most-used-frameworks-web/),
    React is by far the most used frontend web library, with a market share of over
    40%. No wonder, there are hundreds of thousands of tutorials, articles, and videos
    dedicated to React.'
  id: totrans-split-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**React**：拥有数百万全球开发人员和超过[218k stars on GitHub](https://github.com/facebook/react)的React是无可争议的前端开发库冠军。根据[Statista调查](https://www.statista.com/statistics/1124699/worldwide-developer-survey-most-used-frameworks-web/)，React是目前全球使用最广泛的前端库，市场份额超过40%。因此，有数十万篇教程、文章和视频专门介绍React。'
- en: Ecosystem
  id: totrans-split-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 生态系统
- en: '**HTMX**: While the library is extensible, the project is relatively new and
    there are not many HTMX libraries and utilities available. As of this writing,
    the [`htmx` tag on npm](https://www.npmjs.com/search?q=keywords:htmx) counts only
    35 packages.'
  id: totrans-split-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HTMX**：虽然该库是可扩展的，但项目相对较新，可用的HTMX库和实用程序并不多。截至本文撰写时，[htmx tag on npm](https://www.npmjs.com/search?q=keywords:htmx)仅计数35个包。'
- en: '**React**: The [`react`](https://www.npmjs.com/search?q=keywords%3Areact) tag
    on npm alone counts over 6,000 libraries. This is just one of the React-related
    tags, and you can find dozens of thousands of other libraries compatible with
    it.'
  id: totrans-split-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**React**：仅在npm上就有超过6,000个与之相关的库。这只是React相关标签之一，您可以找到成千上万其他兼容库。'
- en: Which Frontend Library Should You Choose Between HTMX and React?
  id: totrans-split-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在HTMX和React之间选择前端库时，您应该选哪一个？
- en: As always when comparing two technologies, there is no real winner in absolute
    terms. HTMX and React are both excellent frontend web development libraries, and
    the choice of one over the other depends on the requirements and goals of your
    project.
  id: totrans-split-93
  prefs: []
  type: TYPE_NORMAL
  zh: 和比较两种技术总是没有绝对的赢家一样。HTMX和React都是优秀的前端开发库，选择其中一个取决于项目的需求和目标。
- en: When creating web applications that require state management, offer complex
    functionality, and need reusable components, then React is a more suitable option.
    When building sites with simple interactivity and no particular advanced features,
    HTMX might be a better solution.
  id: totrans-split-94
  prefs: []
  type: TYPE_NORMAL
  zh: 当创建需要状态管理、提供复杂功能并需要可重复使用组件的Web应用时，React是更合适的选择。而构建具有简单交互性和无特别高级功能的网站时，HTMX可能是更好的解决方案。
- en: To help you make an informed decision between HTMX and React, let’s look at
    the pros and cons of both libraries!
  id: totrans-split-95
  prefs: []
  type: TYPE_NORMAL
  zh: 要帮助您在HTMX和React之间做出明智的决定，请让我们看看这两个库的优缺点！
- en: 'HTMX: Pros and Cons'
  id: totrans-split-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: HTMX：优缺点
- en: '**👍 Pros**:'
  id: totrans-split-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**👍 优点**：'
- en: Simple and intuitive HTML-based syntax.
  id: totrans-split-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单直观的基于HTML的语法。
- en: AJAX requests and DOM updates with just a couple of HTML attributes.
  id: totrans-split-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只需几个HTML属性即可完成AJAX请求和DOM更新。
- en: Dynamic interactivity directly in HTML with no JavaScript.
  id: totrans-split-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 直接在HTML中实现动态交互，无需JavaScript。
- en: Easily integrates into existing HTML web pages.
  id: totrans-split-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可轻松集成到现有的HTML网页中。
- en: Lightweight library that weighs only a few kB.
  id: totrans-split-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轻量级库，仅几KB。
- en: '**👎 Cons**:'
  id: totrans-split-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**👎 缺点**：'
- en: Needs backend UI endpoints that return raw HTML and are therefore more tied
    with the frontend.
  id: totrans-split-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要返回原始HTML的后端UI端点，因此更多地与前端绑定。
- en: Still relatively new.
  id: totrans-split-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仍然相对较新。
- en: 'React: Pros and Cons'
  id: totrans-split-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: React：优缺点
- en: '**👍 Pros**:'
  id: totrans-split-107
  prefs: []
  type: TYPE_NORMAL
  zh: '**👍 优点**：'
- en: Structuring UI with reusable components written in JSX.
  id: totrans-split-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用JSX编写的可重用组件来构建UI。
- en: Complex state management and support for many other useful features.
  id: totrans-split-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复杂的状态管理和支持许多其他有用的功能。
- en: The most used frontend web library in the world.
  id: totrans-split-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全球使用最广泛的前端Web库。
- en: Developed and maintained by Meta.
  id: totrans-split-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由Meta开发和维护。
- en: Unopinionated on the backend.
  id: totrans-split-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对后端无明确意见。
- en: '**👎 Cons**:'
  id: totrans-split-113
  prefs: []
  type: TYPE_NORMAL
  zh: '**👎 缺点**：'
- en: Not so easy to learn and master.
  id: totrans-split-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习和掌握并不容易。
- en: Difficult to integrate into non-JavaScript-based projects.
  id: totrans-split-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 难以集成到非基于JavaScript的项目中。
- en: Conclusion
  id: totrans-split-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: In this article HTMX vs React, you learned what HTMX is, how it works, and how
    it competes against React. HTMX enables modern HTML interactivity without the
    complexities introduced by full-fledged web frameworks. Although its future is
    bright, HTMX is not here to replace React. To better understand where HTMX shines,
    take a look at the list of [HTMX examples](https://htmx.org/examples/) from the
    official site.
  id: totrans-split-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文《HTMX vs React》中，您了解了HTMX是什么，它如何工作以及它与React的竞争关系。HTMX能够提供现代HTML交互性，而不引入完整的Web框架所带来的复杂性。尽管它的未来一片光明，但HTMX并不打算取代React。要更好地理解HTMX的优势所在，请查看官方网站上的[HTMX示例](https://htmx.org/examples/)列表。
- en: Quite the opposite, the two libraries can coexist and target different use cases.
    As learned here, React is ideal for web applications with a rich user experience
    and complex functionality, while HTMX is better for web pages with simpler interactivity
    needs.
  id: totrans-split-118
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，这两个库可以共存并针对不同的使用场景。正如在这里所学到的，React 非常适合具有丰富用户体验和复杂功能的 Web 应用程序，而HTMX则更适合需要简单交互的网页。
