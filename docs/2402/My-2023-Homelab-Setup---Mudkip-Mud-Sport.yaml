- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:31:10'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: My 2023 Homelab Setup | Mudkip Mud Sport
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://mudkip.me/2024/01/31/My-2023-Homelab-Setup/#Gaming-and-AI-Experiments](https://mudkip.me/2024/01/31/My-2023-Homelab-Setup/#Gaming-and-AI-Experiments)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Homelab, Illustrated By DALL·E](img/41a77b7b45e61da53bbf7b677109c210.png)'
  id: totrans-split-6
  prefs: []
  type: TYPE_IMG
- en: Homelab is a place where you can store all your family’s data, self-host applications
    and services, locally stream media, and experiment with various technologies.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
- en: A Homelab can start with low-power devices such as a Raspberry Pi, or with hacking
    your router to install open-source firmware and run custom applications. It can
    also involve easy-to-use consumer NAS solutions like Synology. Alternatively,
    you might find yourself overwhelmed by used data center hardware.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
- en: Throughout 2023, I have been tinkering with my home network and computing setup,
    which has been both fun and rewarding.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: Hardware
  id: totrans-split-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Various devices operate continuously at my home. Some were shelved last year,
    but there are a few newcomers worth mentioning.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
- en: The router “Rotom,” which I use for my home’s internet, is an [iKoolCore R1](https://www.ikoolcore.com/products/ikoolcore-r1-pro).
    This compact device is powered by a Celeron N5105 processor and is equipped with
    8GB of RAM, a 128GB SSD, and four 2.5GbE Ethernet ports. It runs [Proxmox VE](https://www.proxmox.com/en/proxmox-virtual-environment/overview),
    hosting an [OpenWRT](https://openwrt.org/) VM as my primary firewall, and a Debian
    VM for several networking applications.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
- en: This summer, I noticed that the SSD became read-only on several occasions due
    to overheating. Fortunately, the manufacturer offers an R1 Pro upgrade kit. This
    kit replaces the case with a heatsink that directly contacts the NVMe SSD, effectively
    mitigating the overheating issue. Additionally, it includes a PWM fan, which keeps
    this compact computer silent in my closet.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
- en: '![My Network Cabinet in Augest 2023](img/deef92ffc94b82233e910658781f1aa9.png)'
  id: totrans-split-14
  prefs: []
  type: TYPE_IMG
- en: I have a 15U network cabinet situated in the corner of my living room. At the
    bottom lies a [Santak](https://www.santak.com/) TG-BOX 850 UPS, safeguarding the
    devices within the cabinet. Positioned in the middle is my NAS, acquired in 2020
    – a [Synology DS1621+](https://www.synology.com/en-us/products/DS1621+) equipped
    with six 8TB HGST drives and 12GB of ECC RAM. It’s set up in a RAID-6 configuration,
    providing a total storage capacity of 32TB.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
- en: At the top of the cabinet is the Homelab server “Porygon,” which I assembled
    in 2023\. Inspired by [Tao of Mac](https://taoofmac.com/space/blog/2023/02/18/1845),
    it’s built around an [ASRock DeskMeet B660](https://www.asrock.com/nettop/Intel/DeskMeet%20B660%20Series/)
    box. The configuration includes an Intel Core i7 12700 CPU, 128GB of DDR4 RAM,
    two NVMe SSDs (a WD SN770 2TB and an older Samsung 970 Evo Plus 1TB), and a Geforce
    RTX 3060 GPU.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
- en: The DeskMeet B660 also runs Proxmox VE. The integrated Iris Xe GPU is dedicated
    to a [Fedora Workstation](https://fedoraproject.org/workstation/) VM for transcoding
    videos and offering a remote desktop. The RTX 3060 switches between a Windows
    VM, which I use for game streaming, and a Debian VM for doing AI experiments.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
- en: However, I’ve encountered heat issues with the “Porygon” server inside the network
    cabinet. The CPU, cooled by a [Noctua NH-L9i-17xx](https://noctua.at/en/nh-l9i-17xx),
    can quickly reach 100°C during moderately intensive tasks. The SSD, even with
    a heatsink, often heats up to 70°C. To address this, I implemented two solutions.
    Firstly, I replaced the PSU fan with a [Noctua NF-A12](https://noctua.at/en/nf-a12x25-pwm),
    which reduced the CPU temperature by 15°C, both at idle and under load, at the
    cost of [injuring both my hands](https://indieweb.social/@mudkip/111661590832909428).
    Secondly, I installed a dedicated cabinet fan controlled by a Xiaomi Smart Plug.
    When the SSD temperature hits 70°C, Home Assistant activates the fan, which turns
    off once the temperature drops below 65°C. Ultimately, I’m quite content with
    the new Homelab server. It’s usually quiet and energy-efficient, yet it can be
    exceptionally powerful when needed.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
- en: Applications and Services
  id: totrans-split-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In my Homelab, I run a wide array of applications, catering to various needs.
    This includes network applications that ensure connectivity for my devices at
    home and allow me to access my home network remotely. I also use note-taking apps,
    read-later services, home automation systems, media management services, file
    synchronization programs, RSS readers, as well as a git server complemented by
    CI/CD pipelines. Moreover, I have dashboards in place to navigate and monitor
    all these applications efficiently. It’s fair to say that a significant portion
    of my digital life depends on these machines, which are entirely under my control
    at home.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
- en: '![Homepage Dashboard and my Applications](img/94f9d90f7d9381dccc6d44ec93e1806e.png)'
  id: totrans-split-21
  prefs: []
  type: TYPE_IMG
- en: On my router “Rotom”
  id: totrans-split-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: On the compact yet capable machine, I have set up two virtual machines and one
    LXC container to manage various services and applications.
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
- en: One VM operates as my primary router OS, running OpenWRT. I’ve configured it
    with passthrough for three NIC ports. The WAN port connects to the modem provided
    by my ISP, while the LAN ports, in conjunction with the VM net port, establish
    a bridged LAN network. The majority of OpenWRT’s [configuration](https://mudkip.me/2023/04/09/Project-Update-2023-Q1/#Home-Projects)
    revolves around DHCP settings and firewall rules.
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition to the routing functions, “Rotom” hosts several other programs:'
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
- en: '**[Jellyfin](https://github.com/jellyfin/jellyfin)**: This serves as my secondary
    media center. I’m contemplating a switch from Plex to Jellyfin since it is fully
    open-source and doesn’t depend on a remote server.'
  id: totrans-split-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[frpc](https://github.com/fatedier/frp)**: This is for exposing certain services,
    like an SSH service that enables me to connect back to my home network. It’s useful
    because I have a CG-NAT IPv4 network. If I encounter a lack of IPv6 support in
    an external Wi-Fi network, I rely on frp to access my home network.'
  id: totrans-split-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[cloudflared](https://github.com/cloudflare/cloudflared)**: This acts as
    an alternative method for exposing services via Cloudflare Tunnels.'
  id: totrans-split-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[cloudflare-ddns](https://github.com/timothymiller/cloudflare-ddns)**: A
    dynamic DNS service that maintains an AAAA record, facilitating direct IPv6 connections
    back to my home.'
  id: totrans-split-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[traefik](https://github.com/traefik/traefik)**: This reverse proxy manages
    services not running on “Porygon.” I’ll detail the services running on the Homelab
    PC separately.'
  id: totrans-split-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jellyfin operates within an LXC container, with the Intel iGPU passed through
    for video transcoding. The remaining services are housed in Docker containers
    running on a Debian VM. The Debian VM also functions as a *side router* for my
    Homelab PC and devices such as the Apple TV and Sonos One.
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
- en: On my Synology NAS “Uxie”
  id: totrans-split-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As my storage center, I need my NAS to be as robust as possible, so I haven’t
    installed too many applications on it.
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition to standard NAS services like SMB, NFS, and File Station, the applications
    I use include:'
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
- en: '**[Synology Photos](https://www.synology.com/en-global/dsm/feature/photos)**:
    Backs up the photos of my family. I’m considering switching to an open-source
    solution like Immich, but the last time I tried, Immich didn’t integrate well
    with the iCloud Photo Library.'
  id: totrans-split-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[qBittorrent](https://github.com/qbittorrent/qBittorrent)** and **[VueTorrent](https://github.com/VueTorrent/VueTorrent)**:
    Mostly used to download *Linux ISOs*.'
  id: totrans-split-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[aria2](https://github.com/aria2/aria2)**: Another tool for downloading *Linux
    ISOs*.'
  id: totrans-split-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Forgejo](https://codeberg.org/forgejo/forgejo)**: A self-hosted Git server;
    it’s lightweight and a community fork of Gitea.'
  id: totrans-split-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Sonatype Nexus Repository](https://www.sonatype.com/products/sonatype-nexus-oss-download)**:
    My private package manager for Docker and npm, and also a cache proxy for [docker.io](http://docker.io)
    and [ghcr.io](http://ghcr.io) to ensure all my applications can start without
    an internet connection.'
  id: totrans-split-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[MinIO](https://github.com/minio/minio)**: An S3-like object storage service
    for my other applications.'
  id: totrans-split-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Navidrome](https://github.com/navidrome/navidrome)**: A lightweight music
    manager compatible with the Subsonic API.'
  id: totrans-split-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Sonarr](https://github.com/Sonarr/Sonarr)**: An automatic media manager
    for anime and TV shows.'
  id: totrans-split-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Radarr](https://github.com/Radarr/Radarr)**: An automatic media manager
    for movies.'
  id: totrans-split-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Bazarr](https://github.com/morpheus65535/bazarr)**: A subtitle downloader
    for content in Sonarr and Radarr.'
  id: totrans-split-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apart from first-party Synology apps, all third-party programs are running in
    Docker containers.
  id: totrans-split-45
  prefs: []
  type: TYPE_NORMAL
- en: A Home Kubernetes Cluster in “Porygon”
  id: totrans-split-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I’ve migrated the [k3s](https://github.com/k3s-io/k3s) control plane and worker
    VMs from Frost Canyon NUC “Comet” to my new Homelab PC. Most of my applications
    are running in this k3s cluster because it’s easy to maintain, upgrade, and recover.
    Building this has also been a great way to learn.
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s a list of applications running in this cluster:'
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
- en: '**[Memos](https://github.com/usememos/memos)**: My primary note-taking app
    for capturing my thoughts and ideas. I also developed the iOS and Android client
    titled “[Moe Memos](https://memos.moe/).”'
  id: totrans-split-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Miniflux](https://github.com/miniflux/v2)**: My RSS reader. It supports
    the Fever and Google Reader API and can be connected to various RSS clients.'
  id: totrans-split-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Vaultwarden](https://github.com/dani-garcia/vaultwarden)**: An unofficial
    server written in Rust for the open-source password manager Bitwarden. It’s more
    lightweight than the official server.'
  id: totrans-split-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Wallabag](https://github.com/wallabag/wallabag)**: My link manager and “read
    later” app.'
  id: totrans-split-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[MicroBin](https://github.com/szabodanika/microbin)**: A text and file-sharing
    application for when I’m transferring things without Universal Clipboard.'
  id: totrans-split-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[NocoDB](https://github.com/nocodb/nocodb)**: An AirTable-like smart spreadsheet.
    I use it for personal project management and to track games and movies.'
  id: totrans-split-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Komga](https://github.com/gotson/komga)**: My manga library. It supports
    OPDS clients like Panels and Mihon.'
  id: totrans-split-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Paperless-ngx](https://github.com/paperless-ngx/paperless-ngx)**: A document
    management system for organizing scanned documents.'
  id: totrans-split-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Stirling PDF](https://github.com/Stirling-Tools/Stirling-PDF)**: An all-in-one
    PDF toolkit.'
  id: totrans-split-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Audiobookshelf](https://github.com/advplyr/audiobookshelf)**: I use it as
    an automatic podcast downloader.'
  id: totrans-split-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Photoview](https://github.com/photoview/photoview)**: I use it to manage
    collected pictures *not* in my photo library, such as CD and Blu-ray booklets.'
  id: totrans-split-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Prowlarr](https://github.com/Prowlarr/Prowlarr)** backed by **[FlareSolverr](https://github.com/FlareSolverr/FlareSolverr)**:
    An indexer manager for Sonarr/Radarr.'
  id: totrans-split-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[YoutubeDL-Material](https://github.com/Tzahi12345/YoutubeDL-Material)**:
    Downloads videos from YouTube via [yt-dlp](https://github.com/yt-dlp/yt-dlp).'
  id: totrans-split-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[draw.io](https://github.com/jgraph/drawio)**: The most powerful diagramming
    tool.'
  id: totrans-split-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Kimai](https://github.com/kimai/kimai)**: A self-hosted time tracker.'
  id: totrans-split-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Firefly III](https://github.com/firefly-iii/firefly-iii)**: A self-hosted
    finance manager. I haven’t used it much yet.'
  id: totrans-split-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Node-RED](https://github.com/node-red/node-red)** and **[n8n](https://github.com/n8n-io/n8n)**:
    Powerful automation tools, but I haven’t used them much yet.'
  id: totrans-split-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Woodpecker CI](https://github.com/woodpecker-ci/woodpecker)**: A Kubernetes
    native continuous integration solution.'
  id: totrans-split-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The manifest of my Kubernetes cluster is managed in a Git repository and is
    automatically deployed via a GitOps tool named [Flux CD](https://github.com/fluxcd/flux2).
    When I push changes to the repository, such as adding a new application or upgrading
    Docker images, the deployment occurs within a few minutes.
  id: totrans-split-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我的Kubernetes集群的清单由Git存储库管理，并通过名为[Flux CD](https://github.com/fluxcd/flux2)的GitOps工具自动部署。当我推送更改到存储库时，比如添加新的应用程序或升级Docker镜像时，部署会在几分钟内完成。
- en: Recently, I discovered a powerful tool named [Renovate Bot](https://github.com/renovatebot/renovate).
    It scans my Kubernetes manifest repository every few hours to identify which Helm
    releases or container image tags require upgrades and then creates pull requests
    in Forgejo, similar to how Dependabot operates on GitHub.
  id: totrans-split-68
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，我发现了一个强大的工具，名为[Renovate Bot](https://github.com/renovatebot/renovate)。它每隔几个小时扫描我的Kubernetes清单存储库，以确定哪些Helm发布或容器镜像标签需要升级，然后在Forgejo中创建拉取请求，类似于Dependabot在GitHub上的操作方式。
- en: In addition to the applications I’m running, my setup includes the [Ingress
    NGINX Controller](https://github.com/kubernetes/ingress-nginx), [MetalLB](https://github.com/metallb/metallb),
    and [cert-manager](https://github.com/cert-manager/cert-manager) to facilitate
    service access and manage certificates. The data for these applications is stored
    on [Longhorn](https://github.com/longhorn/longhorn) volumes, which are replicated
    across all three worker VMs and two SSDs. I’ve also integrated [Kube Prometheus
    Stack](https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack)
    and [Grafana Loki](https://github.com/grafana/loki) to monitor the cluster and
    review pod logs.
  id: totrans-split-69
  prefs: []
  type: TYPE_NORMAL
  zh: 除了我正在运行的应用程序之外，我的设置还包括[Ingress NGINX Controller](https://github.com/kubernetes/ingress-nginx)、[MetalLB](https://github.com/metallb/metallb)和[cert-manager](https://github.com/cert-manager/cert-manager)以便促进服务访问和管理证书。这些应用程序的数据存储在[Longhorn](https://github.com/longhorn/longhorn)卷上，这些卷在所有三个工作VM和两个SSD上都有备份。我还集成了[Kube
    Prometheus Stack](https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack)和[Grafana
    Loki](https://github.com/grafana/loki)来监视集群并查看pod日志。
- en: Another tool I use in parallel with `kubectl` for managing resources in the
    cluster is [Portainer](https://github.com/portainer/portainer). I’ve also configured
    Portainer environments to manage Docker Compose stacks on my NAS, router, and
    several cloud servers. For convenient navigation through all the apps in my Homelab,
    I utilize a highly customizable dashboard named [Homepage](https://github.com/gethomepage/homepage).
    It seamlessly integrates with Kubernetes and is capable of discovering services
    based on Ingress annotations.
  id: totrans-split-70
  prefs: []
  type: TYPE_NORMAL
  zh: 除了用于管理集群中资源的`kubectl`之外，我还使用了另一个工具[Portainer](https://github.com/portainer/portainer)。我还配置了Portainer环境来管理我的NAS、路由器和一些云服务器上的Docker
    Compose堆栈。为了方便浏览我Homelab中的所有应用程序，我使用了一个高度可定制的仪表板，名为[Homepage](https://github.com/gethomepage/homepage)。它能与Kubernetes无缝集成，并且能够基于Ingress注释发现服务。
- en: All k3s nodes operate under Ubuntu 22.04, and I’ve configured the [system-upgrade-controller](https://github.com/rancher/system-upgrade-controller)
    to automatically update k3s and apt.
  id: totrans-split-71
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的k3s节点都在Ubuntu 22.04下运行，我已经配置了[system-upgrade-controller](https://github.com/rancher/system-upgrade-controller)来自动更新k3s和apt。
- en: Remote Development and Desktop
  id: totrans-split-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 远程开发和桌面
- en: Like my Kubernetes cluster, The Fedora Workstation VM “comet-core” is also migrated
    from the Frost Canyon NUC. The Intel Iris Xe iGPU is passed through it. I use
    it mostly as a remote development server, and when I need GUI applications, I
    can access the [GNOME desktop](https://www.gnome.org/) with RDP via [xrdp](https://github.com/neutrinolabs/xrdp)
    and [xorgxrdp](https://github.com/neutrinolabs/xorgxrdp).
  id: totrans-split-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我的Kubernetes集群一样，Fedora工作站VM “comet-core”也是从Frost Canyon NUC迁移而来的。Intel Iris
    Xe iGPU被直通给它。我主要将其用作远程开发服务器，需要GUI应用程序时，我可以通过[xrdp](https://github.com/neutrinolabs/xrdp)和[xorgxrdp](https://github.com/neutrinolabs/xorgxrdp)以RDP方式访问[GNOME桌面](https://www.gnome.org/)。
- en: 'Notable applications running in this VM contains:'
  id: totrans-split-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这个VM中运行着一些值得注意的应用程序：
- en: '**[Plex](https://www.plex.tv/)**: My primary media library. I have lifetime
    Plex Pass and I still prefer Plex for a variety of unique features. But I’m kinda
    worried about Plex’s [future](https://techcrunch.com/2023/01/05/streamer-plex-finally-ready-to-launch-a-tv-and-movie-rentals-marketplace/)
    and its [troublesome handling of privacy](https://www.techhive.com/article/2157803/plex-discover-together-privacy-concerns.html).
    Maybe I’ll switch to Jellyfin some day.'
  id: totrans-split-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[code-server](https://github.com/coder/code-server)**: A web development
    environment. However, I often develop on this VM via the [Remote Development](https://code.visualstudio.com/docs/remote/remote-overview)
    feature in Visual Studio Code.'
  id: totrans-split-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[calibre](https://calibre-ebook.com)** and **[calibre-web](https://github.com/janeczku/calibre-web)**:
    My book library. I also use calibre to DeDRM and convert digital books I bought.'
  id: totrans-split-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Handbrake](https://handbrake.fr/)**: I use it to transcode videos from my
    Blu-ray collection to H.265 with Intel Quick Sync.'
  id: totrans-split-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gaming and AI Experiments
  id: totrans-split-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Having a dedicated GPU has significantly justified upgrading my Homelab PC.
    I’ve set up a Windows VM “Porygon-Z” and a Debian VM “Porygon2,” both configured
    to utilize the RTX 3060 GPU. However, only one VM can be powered on at a time
    since GPU passthrough is restricted to a single VM.
  id: totrans-split-80
  prefs: []
  type: TYPE_NORMAL
- en: In the Debian VM, I’ve been experimenting with a few smaller LLM apps such as
    [Ollama](https://ollama.ai/) and [ChatGLM-6B](https://github.com/THUDM/ChatGLM-6B/blob/main/README_en.md),
    as well as creating art with the [Stable Diffusion web UI](https://github.com/AUTOMATIC1111/stable-diffusion-webui).
    I’ve also explored vector databases such as [Chroma](https://github.com/chroma-core/chroma).
  id: totrans-split-81
  prefs: []
  type: TYPE_NORMAL
- en: On the Windows VM, I’ve installed [Sunshine](https://github.com/LizardByte/Sunshine),
    primarily to stream games from PC Game Pass, and titles that are either unsupported
    or don’t perform well on the Steam Deck, to my handheld console with [Moonlight](https://moonlight-stream.org/).
    The ability to play games at 1080p 60fps with the highest settings on a handheld
    device was a dream I never thought would be possible until now.
  id: totrans-split-82
  prefs: []
  type: TYPE_NORMAL
- en: Other VMs and LXC Containers
  id: totrans-split-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Last but not least, I’d like to highlight more applications.
  id: totrans-split-84
  prefs: []
  type: TYPE_NORMAL
- en: '[Nextcloud](https://nextcloud.com/) serves as my file synchronization server.
    It used to perform poorly, particularly when syncing a large number of small files.
    However, with recent upgrades to both Nextcloud versions and my hardware, its
    performance has significantly improved, offering super-fast file transfers. I’ve
    set up Nextcloud with [Nextcloud AIO](https://github.com/nextcloud/all-in-one)
    in an LXC container on “Porygon.” Beyond file syncing, Nextcloud also manages
    my calendar and tasks through CalDAV and syncs browser bookmarks using [Floccus](https://floccus.org/).'
  id: totrans-split-85
  prefs: []
  type: TYPE_NORMAL
- en: '[Home Assistant OS](https://www.home-assistant.io/) orchestrates all my IoT
    devices and bridges them to HomeKit. For devices that don’t natively support HomeKit,
    I can access them through [hass-xiaomi-miot](https://github.com/al-one/hass-xiaomi-miot).
    Home Assistant also automates various tasks, such as controlling the network cabinet
    fan I mentioned earlier and activating the Aqara M1S night light when someone
    enters the living room at night.'
  id: totrans-split-86
  prefs: []
  type: TYPE_NORMAL
- en: Backups
  id: totrans-split-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I loosely adhere to the 3-2-1 backup strategy for safeguarding my data. My NAS
    serves as the primary backup target for various devices, including my family’s
    iMac via Time Machine and two Proxmox VE devices using a [Proxmox Backup Server](https://www.proxmox.com/en/proxmox-backup-server/overview)
    [VM](https://www.synology.com/en-global/dsm/feature/virtual_machine_manager).
    Additionally, my older Synology DS916+ NAS, which has been operational for 8 years,
    secures the data from my main NAS through [rsync](https://kb.synology.com/en-us/DSM/help/DSM/AdminCenter/application_backupserv_sharedfoldersync?version=7)
    and [Hyper Backup](https://www.synology.com/en-global/dsm/feature/hyper_backup).
  id: totrans-split-88
  prefs: []
  type: TYPE_NORMAL
- en: For offsite backup, I utilize [Backblaze B2](https://www.backblaze.com/cloud-storage)
    and OneDrive. Backblaze B2 houses backups from Hyper Backup, [restic](https://github.com/restic/restic),
    Longhorn, and [Arq](https://www.arqbackup.com/), while selected folders from my
    NAS are one-way synced to OneDrive using [Cloud Sync](https://www.synology.com/en-global/dsm/feature/cloud_sync).
    I’ve opted not to have a remote backup for my media library due to the storage
    costs, considering that most of the content can be reacquired by re-ripping physical
    media or re-downloading.
  id: totrans-split-89
  prefs: []
  type: TYPE_NORMAL
- en: Homelab in 2024
  id: totrans-split-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: That’s all for my 2023 Homelab setup. I’m very satisfied with my current setup,
    and there are a few areas I’d like to explore.
  id: totrans-split-91
  prefs: []
  type: TYPE_NORMAL
- en: Currently, I only have Gigabit Ethernet, even though I have a few 2.5GbE devices.
    Perhaps I should add a few 2.5GbE switches to access my data faster.
  id: totrans-split-92
  prefs: []
  type: TYPE_NORMAL
- en: I’d like to make the most of my devices. I’m considering reconfiguring my Frost
    Canyon NUC as a backup device in case one or two pieces of hardware in my Homelab
    fail. It happened before with the Noctua CPU fan, and I lost access to “Porygon”
    for a few days. I also have a spare [Raspberry Pi 4](https://www.raspberrypi.com/products/raspberry-pi-4-model-b/)
    and a [Zero 2 W](https://www.raspberrypi.com/products/raspberry-pi-zero-2-w/),
    but I haven’t figured out how to utilize them effectively.
  id: totrans-split-93
  prefs: []
  type: TYPE_NORMAL
- en: I’m also interested in open-source NAS solutions such as [mergerfs](https://github.com/trapexit/mergerfs),
    [SnapRAID](https://github.com/amadvance/snapraid), and [openmediavault](https://github.com/openmediavault/openmediavault),
    but I’m not yet motivated to build one. I’m looking into VLAN setup as well, although
    I don’t think I really need it yet.
  id: totrans-split-94
  prefs: []
  type: TYPE_NORMAL
- en: Overall, I have enjoyed my Homelab journey and am looking forward to more building
    and learning. I hope you enjoyed reading this post, and if you have any suggestions
    or ideas, please reach out to me on [Mastodon](https://indieweb.social/@mudkip).
  id: totrans-split-95
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，我享受了我的Homelab之旅，并期待更多的建设和学习。希望您喜欢阅读本篇文章，如果您有任何建议或想法，请在[Mastodon](https://indieweb.social/@mudkip)上联系我。
