["```\nimport { createClient } from '@libsql/client';\n\nconst db = createClient({\n  url: 'file:sqlite.db',\n});\n\nawait db.batch([\n  'CREATE TABLE IF NOT EXISTS my_table(var integer)',\n  'INSERT INTO my_table (var) values (1)',\n  'SELECT * FROM my_table',\n]); \n```", "```\n$ file sqlite.db\nsqlite.db: SQLite 3.x database, last written using SQLite version 3044000, file counter 1, database pages 2, cookie 0x1, schema 4, UTF-8, version-valid-for 1\n\n$ sqlite3 sqlite.db \".schema\"\nCREATE TABLE my_table(var integer); \n```", "```\nconst db = createClient({\n  url: 'file:sqlite-enc.db',\n  encryptionKey: process.env.ENCRYPTION_KEY,\n}); \n```", "```\n$ file sqlite-enc.db\nsqlite-enc.db: data\n\n$ sqlite3 sqlite-enc.db \".schema\"\nError: file is not a database \n```", "```\nconst db = createClient({\n  url: 'file:sqlite-enc.db',\n  encryptionKey: process.env.ENCRYPTION_KEY,\n});\n\nawait db.execute('SELECT * FROM my_table'); \n```"]