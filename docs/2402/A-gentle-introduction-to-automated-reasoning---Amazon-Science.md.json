["```\nbool f(unsigned int x, unsigned int y) {\n   return (x+y == y+x);\n}\n```", "```\n#include<stdio.h>\n#include<stdbool.h>\n#include<limits.h>\n\nbool f(unsigned int x, unsigned int y) {\n   return (x+y == y+x);\n}\n\nvoid main() {\n   for (unsigned int x=0;1;x++) {\n      for (unsigned int y=0;1;y++) {\n         if (!f(x,y)) printf(\"Error!\\n\");\n         if (y==UINT_MAX) break;\n      }\n      if (x==UINT_MAX) break;\n   }\n}\n```", "```\nvoid g(int x, int y) {\n   if (y > 0)\n      while (x > y)\n         x = x - y;\n}\n```", "```\ndef g(x, y):\n   assert isinstance(x, int) and isinstance(y, int)\n   if y > 0:\n      while x > y:\n         x = x - y\n```", "```\nbool f(unsigned int x, unsigned int y) {\n   return (x + y == y + x);\n}\n```", "```\nvoid g(int x, int y) {\n   if (y > 0)\n      while (x > y)\n         x = x - y;\n}\n```", "```\nvoid g2(int x, int y) {\n   while (x > y)\n      x = x - y;\n}\n```", "```\nvoid h() {\n   if terminates(h) while(1){}\n}\n```"]