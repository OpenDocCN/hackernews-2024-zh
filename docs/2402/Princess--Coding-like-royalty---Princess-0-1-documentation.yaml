- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 14:42:07'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:42:07
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Princess: Coding like royalty — Princess 0.1 documentation'
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Princess：如皇族般编程 — Princess 0.1 文档
- en: 来源：[https://princess.sh/](https://princess.sh/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://princess.sh/](https://princess.sh/)
- en: 'Princess: Coding like royalty'
  id: totrans-split-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Princess：如皇族般编程
- en: Warning
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Do note that this language is in the early alpha stages. Not everything mentioned
    in this documentation is already implemented. The syntax might change at any point,
    proceed with caution!
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这种语言处于早期 alpha 阶段。此文档中提到的并非所有功能都已实现。语法可能随时更改，请谨慎操作！
- en: Do note that this documentation will not explain what an if statement or a for
    loop is, some basic knowledge on programming is expected.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，此文档不会解释什么是 if 语句或 for 循环，需要一些基本的编程知识。
- en: The standard library in Princess is essentially implemented in such a way that
    it was possible to write the compiler in it. If you want to contribute by adding
    more useful functions please go ahead and do so!
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: Princess 中的标准库实质上是以这样一种方式实现的，以至于可以用它来编写编译器。如果你想通过添加更多有用的函数来做贡献，请继续！
- en: Features
  id: totrans-split-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 特性
- en: Familar and logical syntax
  id: totrans-split-12
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 熟悉且逻辑清晰的语法
- en: Statically typed with structural typing
  id: totrans-split-13
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结构化类型的静态类型化
- en: Run any code at compile time
  id: totrans-split-14
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在编译时运行任何代码
- en: Support for automatic memory management with references
  id: totrans-split-15
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持使用引用进行自动内存管理
- en: Copy constructors and destructors
  id: totrans-split-16
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拷贝构造函数和析构函数
- en: Operator overloading
  id: totrans-split-17
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运算符重载
- en: Polymorphic functions and types
  id: totrans-split-18
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多态函数和类型
- en: Uniform function call syntax
  id: totrans-split-19
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 统一函数调用语法
- en: Cleanup using defer
  id: totrans-split-20
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 defer 进行清理
- en: Implicit converter functions
  id: totrans-split-21
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐式转换函数
- en: Full runtime and compile time reflection
  id: totrans-split-22
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完整的运行时和编译时反射
- en: FFI and interop with C, Access to the C standard library
  id: totrans-split-23
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: FFI 和与 C 的互操作，访问 C 标准库
- en: Debug symbols with GDB
  id: totrans-split-24
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 带有 GDB 的调试符号
- en: LLVM as Backend
  id: totrans-split-25
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: LLVM 作为后端
- en: Incremental compilation (WIP)
  id: totrans-split-26
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增量编译（WIP）
- en: VSCode extension with autocompletion (WIP)
  id: totrans-split-27
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: VSCode 插件与自动完成（WIP）
- en: '[PRE0]'
  id: totrans-split-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
