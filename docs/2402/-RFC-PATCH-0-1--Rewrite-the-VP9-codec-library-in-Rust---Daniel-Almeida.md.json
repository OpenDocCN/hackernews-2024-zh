["```\nFrom: Daniel Almeida <daniel.almeida@collabora.com>\nTo: wedsonaf@gmail.com, ojeda@kernel.org, mchehab@kernel.org,\n\thverkuil@xs4all.nl\nCc: Daniel Almeida <daniel.almeida@collabora.com>,\n\trust-for-linux@vger.kernel.org, linux-kernel@vger.kernel.org,\n\tlinux-media@vger.kernel.org, kernel@collabora.com\nSubject: [RFC PATCH 0/1] Rewrite the VP9 codec library in Rust\nDate: Tue, 27 Feb 2024 18:51:44 -0300\t[thread overview]\nMessage-ID: <20240227215146.46487-1-daniel.almeida@collabora.com> (raw)\n\nHi everyone,\n\nThis patch ports the VP9 library written by Andrzej into Rust as a\nproof-of-concept. This is so that we can evaluate the Rust in V4L2 initiative\nwith source code in hand.\n\nIt converts rkvdec and hantro to use the Rust version of the library. These two\nwere chosen merely because that's the hardware I currently own. Fluster scores\nremain the same when using either the Rust or C version. Please test this.\n\nMuch has been spoken at various occasions about drivers and I feel that the\nconsensus is to wait for now. This is why I am proposing a different approach:\nporting our codec libraries to Rust.\n\nIMHO, these components can benefit greatly from Rust, as they implement\ncomplicated algorithms that also happen to process data received from userspace\nthrough V4L2 controls. These algorithms use the data received from userspace in\norder to index into a lot of arrays and thus benefit from Rust's memory safety.\n\nThe first thing about the code is that it does not include any layer of\nbindings. This was pointed out as a blocker several times due to the need of\nkeeping them in sync with the C code.\n\nThe Rust code here also offers a C API for C drivers.This C API is\nautomatically generated by cbindgen and I have provided instructions on how to\ndo so. We can even use functions from both the C and Rust libraries at the same\ntime since the ABI is the same.\n\nThe above can come in handy because it means that we can convert a given\ncodebase piece by piece if need be. C drivers will work as usual through the C\nAPI and any new Rust driver will get to benefit from a native Rust interface.\n\nPlease take note that most of the code is *not* in the media tree, so I do not\nsee how this can further stress our subsystem. I take responsibility for\nmaintaining stuff in rust/kernel/media and honestly, this library will not need\nany further updates for the same reason we have never touched its C\ncounterpart.\n\nI hope to convince the community that this is a feasible way to slowly\nexperiment with Rust code without tying us up too much to it.\n\nLastly, please note that this code is just a proof of concept, we can settle on\na proper patch - with all that entails - if it is well received.\n\nThose with hardware can follow the steps below to test this patch:\n\na) enable Rust (https://www.kernel.org/doc/html/latest/rust/quick-start.html).\nMake sure CONFIG_RUST=y.\n\nb) enable one of the converted drivers (CONFIG_VIDEO_HANTRO or\nCONFIG_VIDEO_ROCKCHIP_VDEC). This will select V4L2_VP9_RS.\n\nc) download the Fluster tool (https://github.com/fluendo/fluster)\n\nd) download the VP9 test suite from libvpx (fluster.py download VP9-TEST-VECTORS)\n\ne) make sure you have a recent version of GStreamer (`gst-inspect-1.0\nv4l2codecs` must not be empty) \n\nf) run the test suite (fluster.py run -d GStreamer-VP9-V4L2SL-Gst1.0 -ts VP9-TEST-VECTORS)\n\ng) results should be the same both with and without this patch\n\n-- Daniel\n\nApplies on top of:\n\ncommit d9c1fae3e5b225f2e45e0bca519f9a2967cd1062\nAuthor: Alice Ryhl <aliceryhl@google.com>\nDate:   Fri Feb 9 11:18:22 2024 +0000\n\n    rust: file: add abstraction for `poll_table`\n\nFor those looking for a branch instead:\n\nhttps://gitlab.collabora.com/dwlsalmeida/for-upstream/-/tree/vp9-rs?ref_type=heads\n\nDaniel Almeida (1):\n  v4l2-core: rewrite the VP9 library in Rust\n\n drivers/media/platform/verisilicon/Kconfig    |    2 +-\n .../platform/verisilicon/hantro_g2_vp9_dec.c  |   38 +-\n .../media/platform/verisilicon/hantro_hw.h    |    8 +-\n drivers/media/v4l2-core/Kconfig               |    4 +\n drivers/staging/media/rkvdec/Kconfig          |    2 +-\n drivers/staging/media/rkvdec/rkvdec-vp9.c     |   52 +-\n include/media/v4l2-vp9-rs.h                   |   97 +\n rust/bindings/bindings_helper.h               |    1 +\n rust/kernel/lib.rs                            |    2 +\n rust/kernel/media.rs                          |    5 +\n rust/kernel/media/v4l2_core.rs                |    6 +\n rust/kernel/media/v4l2_core/cbindgen.toml     |   26 +\n rust/kernel/media/v4l2_core/vp9.rs            | 1999 +++++++++++++++++\n 13 files changed, 2192 insertions(+), 50 deletions(-)\n create mode 100644 include/media/v4l2-vp9-rs.h\n create mode 100644 rust/kernel/media.rs\n create mode 100644 rust/kernel/media/v4l2_core.rs\n create mode 100644 rust/kernel/media/v4l2_core/cbindgen.toml\n create mode 100644 rust/kernel/media/v4l2_core/vp9.rs\n\n-- \n2.43.0\n\n```", "```\nnext             reply  other threads:[~2024-02-27 21:55 UTC|newest]\n\nThread overview: 10+ messages / expand[flat|nested]  mbox.gz  Atom feed  top\n2024-02-27 21:51 [Daniel Almeida [this message]](#t)\n2024-02-27 21:51 ` [RFC PATCH 1/1] v4l2-core: rewrite the VP9 library in Rust Daniel Almeida\n2024-02-28 14:13   ` Alice Ryhl\n2024-02-28 17:59     ` Daniel Almeida\n2024-03-07 19:08 ` [RFC PATCH v2 0/2] Rewrite parts of rkvdec driver and the VP9 codec \" Daniel Almeida\n2024-03-07 19:08   ` [RFC PATCH v2 1/2] v4l2-core: rewrite the VP9 \" Daniel Almeida\n2024-03-07 19:08   ` [RFC PATCH v2 2/2] media: rkvdec: rewrite parts of the driver \" Daniel Almeida\n2024-03-07 20:56     ` Nicolas Dufresne\n2024-03-07 21:45       ` Daniel Almeida\n2024-03-07 20:04   ` [RFC PATCH v2 0/2] Rewrite parts of rkvdec driver and the VP9 codec library \" Deborah Brouwer\n\n```", "```\nReply instructions:\n\nYou may reply publicly to this message via plain-text email\nusing any one of the following methods:\n\n* Save the following mbox file, import it into your mail client,\n  and reply-to-all from there: mbox\n\n  Avoid top-posting and favor interleaved quoting:\n  https://en.wikipedia.org/wiki/Posting_style#Interleaved_style\n\n* Reply using the --to, --cc, and --in-reply-to\n  switches of git-send-email(1):\n\n  git send-email \\\n    --in-reply-to=20240227215146.46487-1-daniel.almeida@collabora.com \\\n    --to=daniel.almeida@collabora.com \\\n    --cc=hverkuil@xs4all.nl \\\n    --cc=kernel@collabora.com \\\n    --cc=linux-kernel@vger.kernel.org \\\n    --cc=linux-media@vger.kernel.org \\\n    --cc=mchehab@kernel.org \\\n    --cc=ojeda@kernel.org \\\n    --cc=rust-for-linux@vger.kernel.org \\\n    --cc=wedsonaf@gmail.com \\\n    /path/to/YOUR_REPLY\n\n  https://kernel.org/pub/software/scm/git/docs/git-send-email.html\n\n* If your mail client supports setting the In-Reply-To header\n  via mailto: links, try the mailto: link\n\n```", "```\nThis is a public inbox, see mirroring instructions\nfor how to clone and mirror all data and code used for this inbox;\nas well as URLs for NNTP newsgroup(s).\n```"]