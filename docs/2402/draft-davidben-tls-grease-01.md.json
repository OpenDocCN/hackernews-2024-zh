["```\nNetwork Working Group                                        D. Benjamin\nInternet-Draft                                                    Google\nIntended status: Informational                         September 2, 2016\nExpires: March 6, 2017\n\n                  Applying GREASE to TLS Extensibility\n                      draft-davidben-tls-grease-01\n\nAbstract\n\n   This document describes GREASE (Generate Random Extensions And\n   Sustain Extensibility), a mechanism to prevent extensibility failures\n   in the TLS ecosystem.  It reserves a set of TLS protocol values that\n   may be advertised by clients to ensure servers correctly handle\n   unknown values.\n\nStatus of This Memo\n\n   This Internet-Draft is submitted in full conformance with the\n   provisions of BCP 78 and BCP 79.\n\n   Internet-Drafts are working documents of the Internet Engineering\n   Task Force (IETF).  Note that other groups may also distribute\n   working documents as Internet-Drafts.  The list of current Internet-\n   Drafts is at http://datatracker.ietf.org/drafts/current/.\n\n   Internet-Drafts are draft documents valid for a maximum of six months\n   and may be updated, replaced, or obsoleted by other documents at any\n   time.  It is inappropriate to use Internet-Drafts as reference\n   material or to cite them other than as \"work in progress.\"\n\n   This Internet-Draft will expire on March 6, 2017.\n\nCopyright Notice\n\n   Copyright (c) 2016 IETF Trust and the persons identified as the\n   document authors.  All rights reserved.\n\n   This document is subject to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication of this document.  Please review these documents\n   carefully, as they describe your rights and restrictions with respect\n   to this document.  Code Components extracted from this document must\n   include Simplified BSD License text as described in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty as\n   described in the Simplified BSD License.\n\nBenjamin                  Expires March 6, 2017                 [Page 1]\n```", "```\n Internet-Draft    Applying GREASE to TLS Extensibility    September 2016\n\nTable of Contents\n\n   [1](#section-1).  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   [2](#page-2)\n     [1.1](#section-1.1).  Requirements Language . . . . . . . . . . . . . . . . . .   [2](#page-2)\n   [2](#section-2).  GREASE Values . . . . . . . . . . . . . . . . . . . . . . . .   [3](#page-3)\n   [3](#section-3).  Client Behavior . . . . . . . . . . . . . . . . . . . . . . .   [3](#page-3)\n   [4](#section-4).  Server Behavior . . . . . . . . . . . . . . . . . . . . . . .   [4](#page-4)\n   [5](#section-5).  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   [4](#page-4)\n   [6](#section-6).  Security Considerations . . . . . . . . . . . . . . . . . . .   [7](#page-7)\n   [7](#section-7).  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .   [7](#page-7)\n   [8](#section-8).  Normative References  . . . . . . . . . . . . . . . . . . . .   [8](#page-8)\n   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   [8](#page-8)\n\n[1](#section-1).  Introduction\n\n   The TLS protocol [[RFC5246](/doc/html/rfc5246 \"\"The Transport Layer Security (TLS) Protocol Version 1.2\"\")] includes several points of extensibility,\n   including the list of cipher suites and the list of extensions.  The\n   values in these lists identify implementation capabilities.  TLS\n   follows a model where clients advertise capabilities and servers\n   select them.  It is required that servers ignore unknown values so\n   that new capabilities may be introduced to the ecosystem while\n   maintaining interoperability.\n\n   However, bugs may cause a server to reject unknown values.  These\n   broken servers will interoperate with existing clients, so the\n   mistake may spread through the ecosystem unnoticed.  Later, when new\n   values are defined, updated clients will discover that the\n   metaphorical joint in the protocol has rusted shut and that the new\n   values cannot be deployed without interoperability failures.\n\n   To avoid this problem, this document reserves some currently unused\n   values for clients to advertise at random.  Correct server\n   implementations will ignore these values and interoperate.  Servers\n   that do not tolerate unknown values will fail to interoperate with\n   existing clients, revealing the mistake before it is widespread.\n   This document reserves such values in the TLS cipher suite,\n   extension, named group [[RFC4492](/doc/html/rfc4492 \"\"Elliptic Curve Cryptography (ECC) Cipher Suites for Transport Layer Security (TLS)\"\")], and ALPN [[RFC7301](/doc/html/rfc7301 \"\"Transport Layer Security (TLS) Application-Layer Protocol Negotiation Extension\"\")] registries.\n\n   In keeping with the rusted joint metaphor, this technique is named\n   GREASE (Generate Random Extensions And Sustain Extensibility).\n\n[1.1](#section-1.1).  Requirements Language\n\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC 2119](/doc/html/rfc2119) [[RFC2119](/doc/html/rfc2119 \"\"Key words for use in RFCs to Indicate Requirement Levels\"\")].\n\nBenjamin                  Expires March 6, 2017                 [Page 2]\n```", "```\n Internet-Draft    Applying GREASE to TLS Extensibility    September 2016\n\n[2](#section-2).  GREASE Values\n\n   This document reserves a number of TLS protocol values, referred to\n   as GREASE values.  These values were allocated sparsely to discourage\n   server implementations from conditioning on them.  For convenience,\n   they were also chosen so all types share a number scheme with a\n   consistent pattern while avoiding collisions with any existing\n   applicable registries in TLS.\n\n   The following values are reserved as GREASE cipher suite values:\n\n      {Values TBD}\n\n   The following values are reserved as both GREASE extension values and\n   GREASE named group values:\n\n      {Values TBD}\n\n   [[TODO: Depending on which of this or TLS 1.3 happens first, also\n   reserve SignatureScheme values.  (The same number scheme will work\n   fine there too.)]]\n\n   Note that these correspond to the reserved cipher suites when treated\n   as big-endian 16-bit integers.\n\n   Finally, this document reserves all ALPN identifiers beginning with\n   the prefix \"ignore/\".  This corresponds to the seven-octet prefix:\n   0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x2f.\n\n[3](#section-3).  Client Behavior\n\n   When sending a ClientHello, a client which implements GREASE behaves\n   as follows:\n\n   o  A client MAY select one or more random GREASE cipher suite values\n      and advertise them in the ClientHello.cipher_suites field.\n\n   o  A client MAY select one or more random GREASE named group values\n      and advertise them in the supported_groups extension, if sent.\n\n   o  A client MAY select one or more random GREASE extension values and\n      advertise corresponding extensions with varying length and\n      contents in the ClientHello.extensions field.\n\n   o  A client MAY select one or more random GREASE ALPN identifiers and\n      advertise them in the application_layer_protocol_negotiation\n      extension, if sent.\n\nBenjamin                  Expires March 6, 2017                 [Page 3]\n```", "```\n Internet-Draft    Applying GREASE to TLS Extensibility    September 2016\n\n   Clients SHOULD balance diversity in GREASE advertisements with\n   determinism.  For example, a client which randomly varies GREASE\n   value positions for each connection may only fail against a broken\n   server with some probability.  This risks the failure being masked by\n   automatic retries.  A client which positions GREASE values\n   deterministically over a period of time (such as a single software\n   release) stresses fewer cases but is more likely to detect bugs from\n   those cases.\n\n   Clients MUST reject GREASE values when negotiated by the server.\n   When processing a ServerHello containing a GREASE value in the\n   ServerHello.cipher_suite or ServerHello.extensions fields, the client\n   MUST fail the connection.  When processing an ECParameters structure\n   with a GREASE value in the ECParameter.namedcurve field, the client\n   MUST fail the connection.\n\n   Note that this requires no special processing on the client.  Clients\n   are already required to reject unknown values selected by the server.\n\n[4](#section-4).  Server Behavior\n\n   Servers MUST NOT treat GREASE values differently from any unknown\n   value.  Servers MUST NOT negotiate any GREASE value when offered in a\n   ClientHello.  Servers MUST correctly ignore unknown values in a\n   ClientHello and attempt to negotiate with one of the remaining\n   parameters.\n\n   Note that these requirements are restatements or corollaries of\n   existing server requirements in TLS.\n\n[5](#section-5).  IANA Considerations\n\n   This document updates the TLS Cipher Suite Registry, available from\n   <[https://www.iana.org/assignments/tls-parameters](https://www.iana.org/assignments/tls-parameters)>:\n\nBenjamin                  Expires March 6, 2017                 [Page 4]\n```", "```\n Internet-Draft    Applying GREASE to TLS Extensibility    September 2016\n\n      +-------------------+-------------+---------+-----------------+\n      |       Value       | Description | DTLS-OK |    Reference    |\n      +-------------------+-------------+---------+-----------------+\n      | {TBD} {0x0A,0x0A} |   Reserved  |    Y    | (this document) |\n      | {TBD} {0x1A,0x1A} |   Reserved  |    Y    | (this document) |\n      | {TBD} {0x2A,0x2A} |   Reserved  |    Y    | (this document) |\n      | {TBD} {0x3A,0x3A} |   Reserved  |    Y    | (this document) |\n      | {TBD} {0x4A,0x4A} |   Reserved  |    Y    | (this document) |\n      | {TBD} {0x5A,0x5A} |   Reserved  |    Y    | (this document) |\n      | {TBD} {0x6A,0x6A} |   Reserved  |    Y    | (this document) |\n      | {TBD} {0x7A,0x7A} |   Reserved  |    Y    | (this document) |\n      | {TBD} {0x8A,0x8A} |   Reserved  |    Y    | (this document) |\n      | {TBD} {0x9A,0x9A} |   Reserved  |    Y    | (this document) |\n      | {TBD} {0xAA,0xAA} |   Reserved  |    Y    | (this document) |\n      | {TBD} {0xBA,0xBA} |   Reserved  |    Y    | (this document) |\n      | {TBD} {0xCA,0xCA} |   Reserved  |    Y    | (this document) |\n      | {TBD} {0xDA,0xDA} |   Reserved  |    Y    | (this document) |\n      | {TBD} {0xEA,0xEA} |   Reserved  |    Y    | (this document) |\n      | {TBD} {0xFA,0xFA} |   Reserved  |    Y    | (this document) |\n      +-------------------+-------------+---------+-----------------+\n\n                Additions to the TLS Cipher Suite Registry\n\n   The cipher suite numbers listed in the first column are numbers used\n   for cipher suite interoperability testing and it's suggested that\n   IANA use these values for assignment.\n\n   This document updates the Supported Groups Registry, available from\n   <[https://www.iana.org/assignments/tls-parameters](https://www.iana.org/assignments/tls-parameters)>:\n\nBenjamin                  Expires March 6, 2017                 [Page 5]\n```", "```\n Internet-Draft    Applying GREASE to TLS Extensibility    September 2016\n\n         +-------------+-------------+---------+-----------------+\n         |    Value    | Description | DTLS-OK |    Reference    |\n         +-------------+-------------+---------+-----------------+\n         |  {TBD} 2570 |   Reserved  |    Y    | (this document) |\n         |  {TBD} 6682 |   Reserved  |    Y    | (this document) |\n         | {TBD} 10794 |   Reserved  |    Y    | (this document) |\n         | {TBD} 14906 |   Reserved  |    Y    | (this document) |\n         | {TBD} 19018 |   Reserved  |    Y    | (this document) |\n         | {TBD} 23130 |   Reserved  |    Y    | (this document) |\n         | {TBD} 27242 |   Reserved  |    Y    | (this document) |\n         | {TBD} 31354 |   Reserved  |    Y    | (this document) |\n         | {TBD} 35466 |   Reserved  |    Y    | (this document) |\n         | {TBD} 39578 |   Reserved  |    Y    | (this document) |\n         | {TBD} 43690 |   Reserved  |    Y    | (this document) |\n         | {TBD} 47802 |   Reserved  |    Y    | (this document) |\n         | {TBD} 51914 |   Reserved  |    Y    | (this document) |\n         | {TBD} 56026 |   Reserved  |    Y    | (this document) |\n         | {TBD} 60138 |   Reserved  |    Y    | (this document) |\n         | {TBD} 64250 |   Reserved  |    Y    | (this document) |\n         +-------------+-------------+---------+-----------------+\n\n                Additions to the Supported Groups Registry\n\n   The named group numbers listed in the first column are numbers used\n   for cipher suite interoperability testing and it's suggested that\n   IANA use these values for assignment.\n\n   This document updates the ExtensionType Values registry, available\n   from <[https://www.iana.org/assignments/tls-extensiontype-values](https://www.iana.org/assignments/tls-extensiontype-values)>:\n\nBenjamin                  Expires March 6, 2017                 [Page 6]\n```", "```\n Internet-Draft    Applying GREASE to TLS Extensibility    September 2016\n\n            +-------------+----------------+-----------------+\n            |    Value    | Extension name |    Reference    |\n            +-------------+----------------+-----------------+\n            |  {TBD} 2570 |    Reserved    | (this document) |\n            |  {TBD} 6682 |    Reserved    | (this document) |\n            | {TBD} 10794 |    Reserved    | (this document) |\n            | {TBD} 14906 |    Reserved    | (this document) |\n            | {TBD} 19018 |    Reserved    | (this document) |\n            | {TBD} 23130 |    Reserved    | (this document) |\n            | {TBD} 27242 |    Reserved    | (this document) |\n            | {TBD} 31354 |    Reserved    | (this document) |\n            | {TBD} 35466 |    Reserved    | (this document) |\n            | {TBD} 39578 |    Reserved    | (this document) |\n            | {TBD} 43690 |    Reserved    | (this document) |\n            | {TBD} 47802 |    Reserved    | (this document) |\n            | {TBD} 51914 |    Reserved    | (this document) |\n            | {TBD} 56026 |    Reserved    | (this document) |\n            | {TBD} 60138 |    Reserved    | (this document) |\n            | {TBD} 64250 |    Reserved    | (this document) |\n            +-------------+----------------+-----------------+\n\n              Additions to the ExtensionType Values registry\n\n   The extension numbers listed in the first column are numbers used for\n   cipher suite interoperability testing and it's suggested that IANA\n   use these values for assignment.\n\n   [[TODO: How do I write IANA instructions to reserve all ALPN\n   identifiers that begin with \"ignore/\"?  Perhaps it would be better to\n   reserve a concrete handful of identifiers instead.]]\n\n[6](#section-6).  Security Considerations\n\n   GREASE values may not be negotiated, so they do not directly impact\n   the security of TLS connections.\n\n   Historically, when interoperability problems arise in deploying new\n   TLS features, implementations have used a fallback retry on error\n   with the feature disabled.  This allows an active attacker to\n   silently disable the new feature.  By preventing a class of such\n   interoperability problems, GREASE reduces the need for this kind of\n   fallback.\n\n[7](#section-7).  Acknowledgements\n\n   The author would like to thank Adam Langley, Nick Harper, and Steven\n   Valdez for their feedback and suggestions.  In addition, the rusted\n   joint metaphor is originally due to Adam Langley.\n\nBenjamin                  Expires March 6, 2017                 [Page 7]\n```", "```\n Internet-Draft    Applying GREASE to TLS Extensibility    September 2016\n\n[8](#section-8).  Normative References\n\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement Levels\", [BCP 14](/doc/html/bcp14), [RFC 2119](/doc/html/rfc2119),\n              DOI 10.17487/RFC2119, March 1997,\n              <[http://www.rfc-editor.org/info/rfc2119](http://www.rfc-editor.org/info/rfc2119)>.\n\n   [RFC4492]  Blake-Wilson, S., Bolyard, N., Gupta, V., Hawk, C., and B.\n              Moeller, \"Elliptic Curve Cryptography (ECC) Cipher Suites\n              for Transport Layer Security (TLS)\", [RFC 4492](/doc/html/rfc4492),\n              DOI 10.17487/RFC4492, May 2006,\n              <[http://www.rfc-editor.org/info/rfc4492](http://www.rfc-editor.org/info/rfc4492)>.\n\n   [RFC5246]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n              (TLS) Protocol Version 1.2\", [RFC 5246](/doc/html/rfc5246),\n              DOI 10.17487/RFC5246, August 2008,\n              <[http://www.rfc-editor.org/info/rfc5246](http://www.rfc-editor.org/info/rfc5246)>.\n\n   [RFC7301]  Friedl, S., Popov, A., Langley, A., and E. Stephan,\n              \"Transport Layer Security (TLS) Application-Layer Protocol\n              Negotiation Extension\", [RFC 7301](/doc/html/rfc7301), DOI 10.17487/RFC7301,\n              July 2014, <[http://www.rfc-editor.org/info/rfc7301](http://www.rfc-editor.org/info/rfc7301)>.\n\nAuthor's Address\n\n   David Benjamin\n   Google\n   355 Main St\n   Cambridge, MA  02142\n   USA\n\n   Email: davidben@google.com\n\nBenjamin                  Expires March 6, 2017                 [Page 8] \n```"]