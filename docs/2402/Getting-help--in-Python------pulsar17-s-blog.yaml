- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-29 13:24:34'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Getting help [in Python] 🧙 - pulsar17's blog
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://pulsar17.me/2024/02/ongettinghelp](https://pulsar17.me/2024/02/ongettinghelp)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Context
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: While I was travelling in the Delhi Metro for [PyDelhi](https://pydelhi.org)'s
    February meetup, I was thinking about what I could present. For some time I have
    had this idea of looking into how the `sleep()` function in Python is implemented.
    So I thought I would present about `sleep()`, show a bit of `strace` on the side...
  prefs: []
  type: TYPE_NORMAL
- en: 'I just couldn''t remember where `sleep()` function would come from. Was it
    a built-in? Did I need to import a module? I opened the Python REPL to explore:'
  prefs: []
  type: TYPE_NORMAL
- en: 'I tried the following things:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Of course, the correct version is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: But at that time, I couldn't remember! I knew there was a `sleep()` because
    I had already used it in the past. (Haven't we all 😉)
  prefs: []
  type: TYPE_NORMAL
- en: Calling for `help()`
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Python has a built-in `help()` function, which in my opinion is an underused
    part of Python. I often use it first instead of searching the web.
  prefs: []
  type: TYPE_NORMAL
- en: 'It is used something like:'
  prefs: []
  type: TYPE_NORMAL
- en: 'You pass in the object you want the help on. It works on modules as well if
    you''ve imported them:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'or you could go *meta* 😀 with:'
  prefs: []
  type: TYPE_NORMAL
- en: Finally getting `help()`
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'I then desperately tried:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: then just
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: That is something! I ignored it of course and tried a few different combinations.
    I seemed to have missed though that my prompt had changed from `>>>` to `help>`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: After some time I realized the difference in the prompt and read the above message
    more carefully.
  prefs: []
  type: TYPE_NORMAL
- en: I was now curious about the `"topics"` in that message.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'If you now type a topic:'
  prefs: []
  type: TYPE_NORMAL
- en: you get some useful things (*... indicates clipped output*)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Amazing! 💯
  prefs: []
  type: TYPE_NORMAL
- en: I knew then what I had to talk about. It was not `sleep()` but `help()` and
    this beautiful help subsystem inside Python which I didn't even know existed.
  prefs: []
  type: TYPE_NORMAL
- en: Why even
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I later realized that this is the same documentation that can be found on the
    [official Python docs](https://docs.python.org/3/library/stdtypes.html#typesmapping)
    right inside my terminal!
  prefs: []
  type: TYPE_NORMAL
- en: This was important for me then as I had no internet access while on the Metro.
    It would be the same if I was on a flight, and having this information right there
    - offline - is extremely empowering!
  prefs: []
  type: TYPE_NORMAL
- en: I invite the reader to try this interactive help, there are some other interesting
    things as well which I did not cover, I also hope that this *discovery* proves
    useful to you.
  prefs: []
  type: TYPE_NORMAL
