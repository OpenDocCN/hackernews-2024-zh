- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:41:05'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:41:05'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: copywriting - Should error messages apologize? - User Experience Stack Exchange
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: copywriting - 应该为错误消息道歉吗？ - 用户体验Stack Exchange
- en: 来源：[https://ux.stackexchange.com/questions/31359/should-error-messages-apologize](https://ux.stackexchange.com/questions/31359/should-error-messages-apologize)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://ux.stackexchange.com/questions/31359/should-error-messages-apologize](https://ux.stackexchange.com/questions/31359/should-error-messages-apologize)
- en: Perhaps rationale is not the best way to go when it comes to error messages.
    If we follow a universal logic, yes, we shouldn't apologize for something that
    isn't our fault.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 当谈到错误信息时，理性可能不是最好的选择。如果我们遵循一种普遍的逻辑，是的，我们不应该为不是我们的错而道歉。
- en: However, we should always put in value the user-centered approach with the end
    purpose of making the user feel comfortable no matter what. In this regard, an
    apologetic approach is the best solution.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们应始终重视以用户为中心的方法，最终目的是让用户无论何时都感到舒适。在这方面，道歉的方式是最好的解决方案。
- en: 'Think of what the user feels in that moment:'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下用户在那一刻的感受：
- en: '"Damn, I am not allowed to use this feature!"'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: '"该死，我不能使用这个功能！"'
- en: An error is a crucial moment when you can easily lose a visitor, that is why
    you must treat the situation very carefully, thinking of all the cognitive and
    psychological implications. This is what truly matters, not everyday life logic.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 错误是一个关键时刻，你很容易失去一个访问者，所以你必须非常小心地处理这种情况，考虑到所有认知和心理的影响。这才是真正重要的，而不是日常生活的逻辑。
- en: Either if it's his fault or not, when encountering an error, the user will feel
    frustrated. When you feel frustrated, you want someone's apology. Yes, you blame
    everyone and everything around you, but yourself.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 无论是不是他的错，当遇到错误时，用户会感到沮丧。当你感到沮丧时，你想要某人的道歉。是的，你会责备周围的每个人和每件事，但不包括你自己。
- en: 'It''s childish, but I admit it happened to me too. When an application failed
    me (because of my mistake) and apologized, it really put a smile on my face and
    made me think:'
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这很幼稚，但我承认这也发生在我身上。当一个应用程序失败了（因为我的错误）并且道歉时，这确实让我笑了，并让我想：
- en: '"Fine, I forgive you. I know you didn''t do anything wrong, anyway."'
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: '"好吧，我原谅你了。我知道你并没有做错什么。"'
- en: 'If you aim at all costs for a certain political corectness and you do not want
    to apologize for something that isn''t your fault, consider a more neutral tone,
    like:'
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不惜一切代价追求某种政治正确性，并且不想为不是你的错而道歉，可以考虑更加中立的语调，比如：
- en: '"**Unfortunately**, you do not have permission to access this feature."'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: '"**不幸地**，您无权访问此功能。"'
- en: 'I find the word "unfortunately" crucial. Otherwise, it would sound like an
    incrimination, which will chase away the frustrated user in a second:'
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我觉得“不幸地”这个词很关键。否则，它会听起来像是一种指责，这会让沮丧的用户立刻离开：
- en: '"You do not have permission to access this feature." (add an exclamation mark
    and you won''t see that user again)'
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: '"您无权访问此功能！"（加个感叹号，你会立刻失去那个用户）'
- en: 'I find the whole message too formal somehow (it''s true, it depends on the
    context of your app). I would go for something short and funny that delivers the
    message in a non-robotic fashion. It sounds simple, but it''s very difficult to
    come up with such texts, unles you are trained that way, so as to avoid further
    dilemma like this one:'
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我觉得整个信息太正式了些（没错，这取决于你的应用场景）。我会选择一些简短而有趣的内容，以非机器化的方式传达信息。听起来很简单，但要想出这样的文本并不容易，除非你接受过专门的训练，以避免像这种困境一样的情况：
- en: You should also provide a possible explanation for the error and some ways to
    recover from it. This will reduce the user's frustration so much!
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 你还应该为错误提供可能的解释以及一些恢复方式。这将大大减少用户的沮丧！
- en: '[The 4 H’s of Writing Error Messages](http://uxmas.com/2012/the-4-hs-of-writing-error-messages)'
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[写错误消息的四个H](http://uxmas.com/2012/the-4-hs-of-writing-error-messages)'
