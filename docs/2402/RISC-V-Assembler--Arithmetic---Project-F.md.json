["```\nli t0, 2 li t1, 42 li t2, -1 li t3, 0x100000 li t4, 4100 li t5, 0xFACE \n```", "```\nadd  rd, rs1, rs2  # rd = rs1 + rs2 addi rd, rs, imm   # rd = rs + imm \n```", "```\nli  t0, 2       # t0 =  2 li  t1, 46      # t1 = 46 li  t2, 10      # t2 = 10  add t3, t0, t0  # t3 =  2 +  2 =  4 add t4, t0, t1  # t4 =  2 + 46 = 48 add t4, t4, t2  # t4 = 48 + 10 = 58  ; t4 is a source and the destination \n```", "```\nli   t0, 48       # t0 = 48  addi t1, t0,   1  # t1 = 48 + 1  = 49  ; increment addi t2, t0,  -1  # t2 = 48 - 1  = 47  ; decrement  addi t3, t0,  12  # t3 = 48 + 12 = 60 addi t4, t0, -12  # t4 = 48 - 12 = 36 addi t4, t4,  32  # t4 = 36 + 32 = 68  ; t4 is a source and destination \n```", "```\nmv  rd, rs  # rd = rs nop         # no operation \n```", "```\n# these two examples generate the same machine code mv   t0, t1     # t0 = t1 addi t0, t1, 0  # t0 = t1 + 0 \n```", "```\nsub rd, rs1, rs2  # rd = rs1 - rs2 neg rd, rs        # rd = -rs (pseudoinstruction) \n```", "```\nli  t0, 2       # t0 =  2 li  t1, 46      # t1 = 46 li  t2, 10      # t2 = 10  sub t3, t1, t0  # t3 = 46 -  2 = 44 sub t4, t0, t2  # t4 =  2 - 10 = -8  # these two examples generate the same machine code neg t5, t0      # t5 = -2 sub t6, x0, t0  # t6 = 0 - 2 = -2  ; The x0 register is always zero \n```", "```\nlui rd, imm      # rd = imm << 12 \n```", "```\nlui t0, 1       # t0 = 1 << 12 = 0x1000 = 4096 lui t1, 3       # t1 = 3 << 12 = 0x3000 = 12288 lui t2, 0x100   # t2 = 0x100 << 12 = 0x100000 = 1048576 \n```", "```\nlui t0, 0x100000  # 21-bit value is out of range! lui t1, -1        # negative value is out of range! \n```", "```\nli t0, 2 li t1, 42 li t2, -1 li t3, 0x100000 li t4, 4100 li t5, 0xFACE \n```", "```\naddi t0, x0, 2 addi t1, x0, 42 addi t2, x0, -1 \n```", "```\nlui  t4, 0x1 addi t4, t4, 4 \n```", "```\nlui  t5, 0x10 addi t5, t5, -1330 \n```"]