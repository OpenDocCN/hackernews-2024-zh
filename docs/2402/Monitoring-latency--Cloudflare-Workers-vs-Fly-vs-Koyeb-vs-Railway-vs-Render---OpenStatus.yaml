- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: '类别: 未分类'
- en: 'date: 2024-05-27 14:59:42'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: '日期: 2024-05-27 14:59:42'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Monitoring latency: Cloudflare Workers vs Fly vs Koyeb vs Railway vs Render
    | OpenStatus'
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '监控延迟: Cloudflare Workers vs Fly vs Koyeb vs Railway vs Render | OpenStatus'
- en: 来源：[https://www.openstatus.dev/blog/monitoring-latency-cf-workers-fly-koyeb-raylway-render](https://www.openstatus.dev/blog/monitoring-latency-cf-workers-fly-koyeb-raylway-render)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.openstatus.dev/blog/monitoring-latency-cf-workers-fly-koyeb-raylway-render](https://www.openstatus.dev/blog/monitoring-latency-cf-workers-fly-koyeb-raylway-render)
- en: ⚠️ We are using the default settings for each provider and conducting datacenter
    to datacenter requests. A real-world application's results are going to be different.
    ⚠️
  id: totrans-split-6
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: ⚠️ 我们使用每个提供商的默认设置，并进行数据中心到数据中心的请求。真实世界的应用程序结果将会有所不同。⚠️
- en: You want to know which cloud providers offer the lowest latency?
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 想知道哪家云服务提供商的延迟最低？
- en: In this post, I compare the latency of [Cloudflare Workers](#cloudflare-workers),
    [Fly](#flyio), [Koyeb](#koyeb), [Railway](#railway) and [Render](#render) using
    [OpenStatus](https://www.openstatus.dev).
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我使用 [OpenStatus](https://www.openstatus.dev) 比较了 [Cloudflare Workers](#cloudflare-workers),
    [Fly](#flyio), [Koyeb](#koyeb), [Railway](#railway) 和 [Render](#render) 的延迟。
- en: I deployed the application on the cheapest or free tier offered by each provider.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我在每个提供商提供的最便宜或免费的层次部署了应用程序。
- en: For this test, I used a basic [Hono](https://hono.dev) server that returns a
    simple text response.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了这个测试，我使用了一个基本的 [Hono](https://hono.dev) 服务器，返回一个简单的文本响应。
- en: '[PRE0]'
  id: totrans-split-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You can find the code [here](https://github.com/openstatusHQ/status-code), it’s
    open source 😉.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[这里](https://github.com/openstatusHQ/status-code)找到代码，它是开源的 😉。
- en: OpenStatus monitored our endpoint every **10 minutes** from **6 locations**
    located in Amsterdam, Ashburn, Hong Kong, Johannesburg, Sao Paulo and Sydney.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: OpenStatus 每 **10 分钟**从位于阿姆斯特丹、亚伯汗、香港、约翰内斯堡、圣保罗和悉尼的 **6 个位置** 监控我们的端点。
- en: It's a good way to test our own product and improve it.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这是测试我们自己产品并改进它的好方法。
- en: Let's analyze the data from the past two weeks.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分析过去两周的数据。
- en: Cloudflare workers[](#cloudflare-workers)
  id: totrans-split-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Cloudflare workers[](#cloudflare-workers)
- en: Cloudflare Workers is a serverless platform by Cloudflare. It lets you build
    new applications using JavaScript/Typescript. You can deploy up to 100 worker
    scripts for free, running on more than 275 network locations.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: Cloudflare Workers 是由 Cloudflare 提供的无服务器平台。它允许您使用 JavaScript/TypeScript 构建新应用程序。您可以免费部署超过
    275 个网络位置上的 100 个 worker 脚本。
- en: Latency metrics[](#latency-metrics)
  id: totrans-split-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Latency metrics[](#latency-metrics)
- en: Timing metrics[](#timing-metrics)
  id: totrans-split-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Timing metrics[](#timing-metrics)
- en: '| Region | DNS (ms) | Connection (ms) | TLS Handshake (ms) | TTFB (ms) | Transfert
    (ms) |'
  id: totrans-split-20
  prefs: []
  type: TYPE_TB
  zh: '| 区域 | DNS (ms) | 连接 (ms) | TLS 握手 (ms) | TTFB (ms) | 传输 (ms) |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-split-21
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| AMS | 17 | 2 | 17 | 27 | 0 |'
  id: totrans-split-22
  prefs: []
  type: TYPE_TB
  zh: '| AMS | 17 | 2 | 17 | 27 | 0 |'
- en: '| GRU | 38 | 2 | 13 | 28 | 0 |'
  id: totrans-split-23
  prefs: []
  type: TYPE_TB
  zh: '| GRU | 38 | 2 | 13 | 28 | 0 |'
- en: '| HKG | 19 | 2 | 13 | 29 | 0 |'
  id: totrans-split-24
  prefs: []
  type: TYPE_TB
  zh: '| HKG | 19 | 2 | 13 | 29 | 0 |'
- en: '| IAD | 24 | 1 | 14 | 30 | 0 |'
  id: totrans-split-25
  prefs: []
  type: TYPE_TB
  zh: '| IAD | 24 | 1 | 14 | 30 | 0 |'
- en: '| JNB | 123 | 168 | 182 | 185 | 0 |'
  id: totrans-split-26
  prefs: []
  type: TYPE_TB
  zh: '| JNB | 123 | 168 | 182 | 185 | 0 |'
- en: '| SYD | 51 | 1 | 11 | 25 | 0 |'
  id: totrans-split-27
  prefs: []
  type: TYPE_TB
  zh: '| SYD | 51 | 1 | 11 | 25 | 0 |'
- en: I can notice that Johannesburg's latency is about ten times higher than that
    of the other monitors.
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以注意到，约翰内斯堡的延迟大约是其他监视器的十倍。
- en: From the Cloudflare request I can get the location of the workers that handle
    the request, with `Cf-ray` in the headers response.
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 Cloudflare 请求，我可以获取处理请求的 worker 的位置，在响应头中使用 `Cf-ray`。
- en: '| Checker region | Workers region | number of request |'
  id: totrans-split-30
  prefs: []
  type: TYPE_TB
  zh: '| 检查区域 | 工作区域 | 请求次数 |'
- en: '| --- | --- | --- |'
  id: totrans-split-31
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| HKG | HKG | 1831 |'
  id: totrans-split-32
  prefs: []
  type: TYPE_TB
  zh: '| HKG | HKG | 1831 |'
- en: '| SYD | SYD | 1831 |'
  id: totrans-split-33
  prefs: []
  type: TYPE_TB
  zh: '| SYD | SYD | 1831 |'
- en: '| AMS | AMS | 1831 |'
  id: totrans-split-34
  prefs: []
  type: TYPE_TB
  zh: '| AMS | AMS | 1831 |'
- en: '| IAD | IAD | 1831 |'
  id: totrans-split-35
  prefs: []
  type: TYPE_TB
  zh: '| IAD | IAD | 1831 |'
- en: '| GRU | GRU | 1791 |'
  id: totrans-split-36
  prefs: []
  type: TYPE_TB
  zh: '| GRU | GRU | 1791 |'
- en: '| GRU | GIG | 40 |'
  id: totrans-split-37
  prefs: []
  type: TYPE_TB
  zh: '| GRU | GIG | 40 |'
- en: '| JNB | AMS | 741 |'
  id: totrans-split-38
  prefs: []
  type: TYPE_TB
  zh: '| JNB | AMS | 741 |'
- en: '| JNB | MUC | 4 |'
  id: totrans-split-39
  prefs: []
  type: TYPE_TB
  zh: '| JNB | MUC | 4 |'
- en: '| JNB | HKG | 5 |'
  id: totrans-split-40
  prefs: []
  type: TYPE_TB
  zh: '| JNB | HKG | 5 |'
- en: '| JNB | SIN | 6 |'
  id: totrans-split-41
  prefs: []
  type: TYPE_TB
  zh: '| JNB | SIN | 6 |'
- en: '| JNB | NRT | 8 |'
  id: totrans-split-42
  prefs: []
  type: TYPE_TB
  zh: '| JNB | NRT | 8 |'
- en: '| JNB | EWR | 10 |'
  id: totrans-split-43
  prefs: []
  type: TYPE_TB
  zh: '| JNB | EWR | 10 |'
- en: '| JNB | CDG | 82 |'
  id: totrans-split-44
  prefs: []
  type: TYPE_TB
  zh: '| JNB | CDG | 82 |'
- en: '| JNB | FRA | 276 |'
  id: totrans-split-45
  prefs: []
  type: TYPE_TB
  zh: '| JNB | FRA | 276 |'
- en: '| JNB | LHR | 699 |'
  id: totrans-split-46
  prefs: []
  type: TYPE_TB
  zh: '| JNB | LHR | 699 |'
- en: '| JNB | AMS | 741 |'
  id: totrans-split-47
  prefs: []
  type: TYPE_TB
  zh: '| JNB | AMS | 741 |'
- en: I can see all the request from JNB is never routed to a nearby data-center.
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以看到从 JNB 发出的所有请求从未路由到附近的数据中心。
- en: Apart from the strange routing error in Johannesburg, Cloudflare workers are
    fast worldwide.
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
  zh: 除了约翰内斯堡的奇怪路由错误外，Cloudflare 的 workers 在全球范围内速度很快。
- en: I have not experienced any cold start issues.
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我没有经历过任何冷启动问题。
- en: Fly.io[](#flyio)
  id: totrans-split-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Fly.io[](#flyio)
- en: Fly.io simplifies deploying and running server-side applications globally. Developers
    can deploy their applications near users worldwide for low latency and high performance.
    It uses a lightweight Firecracker VM to easily deploy Docker images.
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
  zh: Fly.io 简化了全球范围内部署和运行服务器端应用程序。开发者可以在全球用户附近部署其应用程序，以实现低延迟和高性能。它使用轻量级的 Firecracker
    VM 来轻松部署 Docker 镜像。
- en: Latency metrics[](#latency-metrics-1)
  id: totrans-split-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 延迟指标[](#延迟指标-1)
- en: Timing metrics[](#timing-metrics-1)
  id: totrans-split-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 时间指标[](#时间指标-1)
- en: '| Region | DNS (ms) | Connection (ms) | TLS Handshake (ms) | TTFB (ms) | Transfert
    (ms) |'
  id: totrans-split-55
  prefs: []
  type: TYPE_TB
  zh: '| 地区 | DNS（毫秒） | 连接（毫秒） | TLS 握手（毫秒） | TTFB（毫秒） | 传输（毫秒） |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-split-56
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| AMS | 6 | 1 | 8 | 1469 | 0 |'
  id: totrans-split-57
  prefs: []
  type: TYPE_TB
  zh: '| AMS | 6 | 1 | 8 | 1469 | 0 |'
- en: '| GRU | 5 | 0 | 4 | 1431 | 0 |'
  id: totrans-split-58
  prefs: []
  type: TYPE_TB
  zh: '| GRU | 5 | 0 | 4 | 1431 | 0 |'
- en: '| HKG | 4 | 0 | 5 | 1473 | 0 |'
  id: totrans-split-59
  prefs: []
  type: TYPE_TB
  zh: '| HKG | 4 | 0 | 5 | 1473 | 0 |'
- en: '| IAD | 3 | 0 | 5 | 1470 | 0 |'
  id: totrans-split-60
  prefs: []
  type: TYPE_TB
  zh: '| IAD | 3 | 0 | 5 | 1470 | 0 |'
- en: '| JNB | 24 | 0 | 5 | 1423 | 0 |'
  id: totrans-split-61
  prefs: []
  type: TYPE_TB
  zh: '| JNB | 24 | 0 | 5 | 1423 | 0 |'
- en: '| SYD | 3 | 0 | 3 | 1489 | 0 |'
  id: totrans-split-62
  prefs: []
  type: TYPE_TB
  zh: '| SYD | 3 | 0 | 3 | 1489 | 0 |'
- en: The DNS is fast, our checker is attempting to connect to a region in the same
    data center, but our machine's cold start is slowing us down, leading to the high
    TTFB.
  id: totrans-split-63
  prefs: []
  type: TYPE_NORMAL
  zh: DNS 很快，我们的检测器正尝试连接同一数据中心的地区，但我们的机器冷启动使我们变慢，导致 TTFB 高。
- en: 'Here’s our config for Fly.io:'
  id: totrans-split-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们在 Fly.io 上的配置：
- en: '[PRE1]'
  id: totrans-split-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The primary region of our server is Amsterdam, and the fly instances is getting
    paused after a period of inactivity.
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们服务器的主要地区是阿姆斯特丹，fly 实例在一段不活动时间后会被暂停。
- en: The machine starts slowly, as indicated by the logs showing a start time of
    `1.513643778s.`
  id: totrans-split-67
  prefs: []
  type: TYPE_NORMAL
  zh: 机器启动缓慢，日志显示启动时间为 `1.513643778s`。
- en: '[PRE2]'
  id: totrans-split-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: OpenStatus Prod metrics[](#openstatus-prod-metrics)
  id: totrans-split-69
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: OpenStatus 生产指标[](#openstatus-生产指标)
- en: If you update your fly.toml file to include the following, you can get the zero
    cold start and achieve a better latency.
  id: totrans-split-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您更新您的 fly.toml 文件以包含以下内容，则可以实现零冷启动并实现更好的延迟。
- en: '[PRE3]'
  id: totrans-split-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This is our data for our production server deploy on Fly.io.
  id: totrans-split-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们在 Fly.io 上部署的生产服务器数据。
- en: We use Fly.io in production, and the machine never sleeps, yielding much better
    results.
  id: totrans-split-73
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们在生产中使用 Fly.io，并且机器从不休眠，效果更好。
- en: Koyeb[](#koyeb)
  id: totrans-split-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Koyeb[](#koyeb)
- en: Koyeb is a developer-friendly serverless platform that allows for global app
    deployment without the need for operations, servers, or infrastructure management.
    Koyeb offers a free Starter plan that includes one Web Service, one Database service.
    The platform focuses on ease of deployment and scalability for developers
  id: totrans-split-75
  prefs: []
  type: TYPE_NORMAL
  zh: Koyeb 是一个开发者友好的无服务器平台，允许全球应用部署，无需运维、服务器或基础设施管理。Koyeb 提供免费的入门计划，包括一个 Web 服务、一个数据库服务。该平台专注于开发者的部署简易性和可扩展性。
- en: Latency metrics[](#latency-metrics-2)
  id: totrans-split-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 延迟指标[](#延迟指标-2)
- en: Timing metrics[](#timing-metrics-2)
  id: totrans-split-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 时间指标[](#时间指标-2)
- en: '| Region | DNS (ms) | Connection (ms) | TLS Handshake (ms) | TTFB (ms) | Transfert
    (ms) |'
  id: totrans-split-78
  prefs: []
  type: TYPE_TB
  zh: '| 地区 | DNS（毫秒） | 连接（毫秒） | TLS 握手（毫秒） | TTFB（毫秒） | 传输（毫秒） |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-split-79
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| AMS | 50 | 2 | 17 | 107 | 0 |'
  id: totrans-split-80
  prefs: []
  type: TYPE_TB
  zh: '| AMS | 50 | 2 | 17 | 107 | 0 |'
- en: '| GRU | 139 | 65 | 75 | 407 | 0 |'
  id: totrans-split-81
  prefs: []
  type: TYPE_TB
  zh: '| GRU | 139 | 65 | 75 | 407 | 0 |'
- en: '| HKG | 48 | 2 | 13 | 321 | 0 |'
  id: totrans-split-82
  prefs: []
  type: TYPE_TB
  zh: '| HKG | 48 | 2 | 13 | 321 | 0 |'
- en: '| IAD | 35 | 1 | 12 | 129 | 0 |'
  id: totrans-split-83
  prefs: []
  type: TYPE_TB
  zh: '| IAD | 35 | 1 | 12 | 129 | 0 |'
- en: '| JNB | 298 | 1 | 11 | 720 | 0 |'
  id: totrans-split-84
  prefs: []
  type: TYPE_TB
  zh: '| JNB | 298 | 1 | 11 | 720 | 0 |'
- en: '| SYD | 97 | 1 | 10 | 711 | 0 |'
  id: totrans-split-85
  prefs: []
  type: TYPE_TB
  zh: '| SYD | 97 | 1 | 10 | 711 | 0 |'
- en: 'The request headers show that none of our requests are cached. They contain
    `cf-cache-status: dynamic`. Cloudflare handles the Koyeb edge layer. [https://www.koyeb.com/blog/building-a-multi-region-service-mesh-with-kuma-envoy-anycast-bgp-and-mtls](https://www.koyeb.com/blog/building-a-multi-region-service-mesh-with-kuma-envoy-anycast-bgp-and-mtls)'
  id: totrans-split-86
  prefs: []
  type: TYPE_NORMAL
  zh: '请求头显示我们的请求均未缓存。它们包含 `cf-cache-status: dynamic`。Cloudflare 处理 Koyeb 边缘层。[https://www.koyeb.com/blog/building-a-multi-region-service-mesh-with-kuma-envoy-anycast-bgp-and-mtls](https://www.koyeb.com/blog/building-a-multi-region-service-mesh-with-kuma-envoy-anycast-bgp-and-mtls)'
- en: 'Our requests follow this route:'
  id: totrans-split-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的请求遵循以下路线：
- en: '[PRE4]'
  id: totrans-split-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Let’s see where did we hit the cf workers
  id: totrans-split-89
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看我们命中了 cf workers 的地方
- en: '| Checker region | Workers region | number of request |'
  id: totrans-split-90
  prefs: []
  type: TYPE_TB
  zh: '| 检测地区 | Workers 地区 | 请求数量 |'
- en: '| --- | --- | --- |'
  id: totrans-split-91
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| AMS | AMS | 1866 |'
  id: totrans-split-92
  prefs: []
  type: TYPE_TB
  zh: '| AMS | AMS | 1866 |'
- en: '| GRU | GRU | 504 |'
  id: totrans-split-93
  prefs: []
  type: TYPE_TB
  zh: '| GRU | GRU | 504 |'
- en: '| GRU | IAD | 38 |'
  id: totrans-split-94
  prefs: []
  type: TYPE_TB
  zh: '| GRU | IAD | 38 |'
- en: '| GRU | MIA | 688 |'
  id: totrans-split-95
  prefs: []
  type: TYPE_TB
  zh: '| GRU | MIA | 688 |'
- en: '| GRU | EWR | 337 |'
  id: totrans-split-96
  prefs: []
  type: TYPE_TB
  zh: '| GRU | EWR | 337 |'
- en: '| GRU | CIG | 299 |'
  id: totrans-split-97
  prefs: []
  type: TYPE_TB
  zh: '| GRU | CIG | 299 |'
- en: '| HKG | HKG | 1866 |'
  id: totrans-split-98
  prefs: []
  type: TYPE_TB
  zh: '| HKG | HKG | 1866 |'
- en: '| IAD | IAD | 1866 |'
  id: totrans-split-99
  prefs: []
  type: TYPE_TB
  zh: '| IAD | IAD | 1866 |'
- en: '| JNB | JNB | 1861 |'
  id: totrans-split-100
  prefs: []
  type: TYPE_TB
  zh: '| JNB | JNB | 1861 |'
- en: '| JNB | AMS | 1 |'
  id: totrans-split-101
  prefs: []
  type: TYPE_TB
  zh: '| JNB | AMS | 1 |'
- en: '| SYD | SYD | 1866 |'
  id: totrans-split-102
  prefs: []
  type: TYPE_TB
  zh: '| SYD | SYD | 1866 |'
- en: 'Koyeb Global Load Balancer region we hit:'
  id: totrans-split-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们命中了 Koyeb 全局负载均衡器地区：
- en: '| Checker region | Koyeb Global Load Balancer | number of request |'
  id: totrans-split-104
  prefs: []
  type: TYPE_TB
  zh: '| 检测地区 | Koyeb 全局负载均衡器 | 请求数量 |'
- en: '| --- | --- | --- |'
  id: totrans-split-105
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| AMS | FRA1 | 1866 |'
  id: totrans-split-106
  prefs: []
  type: TYPE_TB
  zh: '| AMS | FRA1 | 1866 |'
- en: '| GRU | WAS1 | 1866 |'
  id: totrans-split-107
  prefs: []
  type: TYPE_TB
  zh: '| GRU | WAS1 | 1866 |'
- en: '| HKG | SIN1 | 1866 |'
  id: totrans-split-108
  prefs: []
  type: TYPE_TB
  zh: '| HKG | SIN1 | 1866 |'
- en: '| IAD | WAS1 | 1866 |'
  id: totrans-split-109
  prefs: []
  type: TYPE_TB
  zh: '| IAD | WAS1 | 1866 |'
- en: '| JNB | PAR1 | 4 |'
  id: totrans-split-110
  prefs: []
  type: TYPE_TB
  zh: '| JNB | PAR1 | 4 |'
- en: '| JNB | SIN1 | 1864 |'
  id: totrans-split-111
  prefs: []
  type: TYPE_TB
  zh: '| JNB | SIN1 | 1864 |'
- en: '| JNB | FRA1 | 1 |'
  id: totrans-split-112
  prefs: []
  type: TYPE_TB
  zh: '| JNB | FRA1 | 1 |'
- en: '| JNB | SIN1 | 1866 |'
  id: totrans-split-113
  prefs: []
  type: TYPE_TB
  zh: '| JNB | SIN1 | 1866 |'
- en: I have deployed our app in the Frankfurt data-center.
  id: totrans-split-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已在法兰克福数据中心部署了我们的应用。
- en: Railway[](#railway)
  id: totrans-split-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 铁路[](#railway)
- en: Railway is a cloud platform designed for building, shipping, and monitoring
    applications without the need for Platform Engineers. It simplifies the application
    development process by offering seamless deployment and monitoring capabilities.
  id: totrans-split-116
  prefs: []
  type: TYPE_NORMAL
  zh: 铁路是一个云平台，专为构建、部署和监控应用程序而设计，无需平台工程师。它通过提供无缝部署和监控能力简化了应用程序开发过程。
- en: Latency metrics[](#latency-metrics-3)
  id: totrans-split-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 延迟指标[](#latency-metrics-3)
- en: Timing metrics[](#timing-metrics-3)
  id: totrans-split-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 时间指标[](#timing-metrics-3)
- en: '| Region | DNS (ms) | Connection (ms) | TLS Handshake (ms) | TTFB (ms) | Transfert
    (ms) |'
  id: totrans-split-119
  prefs: []
  type: TYPE_TB
  zh: '| Region | DNS (ms) | Connection (ms) | TLS Handshake (ms) | TTFB (ms) | Transfert
    (ms) |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-split-120
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| AMS | 9 | 21 | 18 | 158 | 0 |'
  id: totrans-split-121
  prefs: []
  type: TYPE_TB
  zh: '| AMS | 9 | 21 | 18 | 158 | 0 |'
- en: '| GRU | 14 | 115 | 127 | 178 | 0 |'
  id: totrans-split-122
  prefs: []
  type: TYPE_TB
  zh: '| GRU | 14 | 115 | 127 | 178 | 0 |'
- en: '| HKG | 8 | 45 | 54 | 225 | 0 |'
  id: totrans-split-123
  prefs: []
  type: TYPE_TB
  zh: '| HKG | 8 | 45 | 54 | 225 | 0 |'
- en: '| IAD | 7 | 2 | 14 | 65 | 0 |'
  id: totrans-split-124
  prefs: []
  type: TYPE_TB
  zh: '| IAD | 7 | 2 | 14 | 65 | 0 |'
- en: '| JNB | 18 | 193 | 178 | 319 | 0 |'
  id: totrans-split-125
  prefs: []
  type: TYPE_TB
  zh: '| JNB | 18 | 193 | 178 | 319 | 0 |'
- en: '| SYD | 21 | 108 | 105 | 280 | 0 |'
  id: totrans-split-126
  prefs: []
  type: TYPE_TB
  zh: '| SYD | 21 | 108 | 105 | 280 | 0 |'
- en: The headers don't provide any information.
  id: totrans-split-127
  prefs: []
  type: TYPE_NORMAL
  zh: 标头不提供任何信息。
- en: Railway is using Google Cloud Platform. It’s the only service that does not
    allow us to pick a specific region on the free plan. Our test app will be located
    to `us-west1` Portland, Oregon. We can see that the latency is the lowest in IAD.
  id: totrans-split-128
  prefs: []
  type: TYPE_NORMAL
  zh: 铁路正在使用 Google Cloud Platform。它是唯一一个在免费计划中不允许我们选择特定区域的服务。我们的测试应用将位于 `us-west1`
    俄勒冈州波特兰市。我们可以看到 IAD 的延迟是最低的。
- en: By default our app did not scale down to 0\. It was always running. We don't
    have any cold start.
  id: totrans-split-129
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，我们的应用没有缩减到 0\. 它总是在运行。我们没有任何冷启动。
- en: Render[](#render)
  id: totrans-split-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 渲染[](#render)
- en: Render is a platform that simplifies deploying and scaling web applications
    and services. It offers features like automated SSL, automatic scaling, native
    support for popular frameworks, and one-click deployments from Git. The platform
    focuses on simplicity and developer productivity.
  id: totrans-split-131
  prefs: []
  type: TYPE_NORMAL
  zh: 渲染是一个平台，简化了部署和扩展 Web 应用程序和服务。它提供自动化 SSL、自动扩展、对流行框架的本地支持以及从 Git 进行一键部署的功能。该平台专注于简易性和开发者的生产力。
- en: Latency metrics[](#latency-metrics-4)
  id: totrans-split-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 延迟指标[](#latency-metrics-4)
- en: Timing metrics[](#timing-metrics-4)
  id: totrans-split-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 时间指标[](#timing-metrics-4)
- en: '| Region | DNS (ms) | Connection (ms) | TLS Handshake (ms) | TTFB (ms) | Transfert
    (ms) |'
  id: totrans-split-134
  prefs: []
  type: TYPE_TB
  zh: '| Region | DNS (ms) | Connection (ms) | TLS Handshake (ms) | TTFB (ms) | Transfert
    (ms) |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-split-135
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| AMS | 20 | 2 | 7 | 107 | 0 |'
  id: totrans-split-136
  prefs: []
  type: TYPE_TB
  zh: '| AMS | 20 | 2 | 7 | 107 | 0 |'
- en: '| GRU | 61 | 2 | 6 | 407 | 0 |'
  id: totrans-split-137
  prefs: []
  type: TYPE_TB
  zh: '| GRU | 61 | 2 | 6 | 407 | 0 |'
- en: '| HKG | 76 | 2 | 6 | 321 | 0 |'
  id: totrans-split-138
  prefs: []
  type: TYPE_TB
  zh: '| HKG | 76 | 2 | 6 | 321 | 0 |'
- en: '| IAD | 15 | 1 | 5 | 129 | 0 |'
  id: totrans-split-139
  prefs: []
  type: TYPE_TB
  zh: '| IAD | 15 | 1 | 5 | 129 | 0 |'
- en: '| JNB | 36 | 161 | 167 | 720 | 0 |'
  id: totrans-split-140
  prefs: []
  type: TYPE_TB
  zh: '| JNB | 36 | 161 | 167 | 720 | 0 |'
- en: '| SYD | 103 | 1 | 4 | 711 | 0 |'
  id: totrans-split-141
  prefs: []
  type: TYPE_TB
  zh: '| SYD | 103 | 1 | 4 | 711 | 0 |'
- en: The headers don't provide any information.
  id: totrans-split-142
  prefs: []
  type: TYPE_NORMAL
  zh: 标头不提供任何信息。
- en: I have deployed our app in the Frankfurt data-center.
  id: totrans-split-143
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已在法兰克福数据中心部署了我们的应用。
- en: According to the Render docs, the free tier will shut down the service after
    15 minutes of inactivity. However, our app is being accessed by a monitor every
    10 minutes. We should never scale down to 0.
  id: totrans-split-144
  prefs: []
  type: TYPE_NORMAL
  zh: 根据渲染文档，免费套餐在 15 分钟不活动后会关闭服务。然而，我们的应用每 10 分钟被监控访问一次。我们永远不应该缩减到 0。
- en: '[PRE5]'
  id: totrans-split-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: I think the failures are due to the cold start of our app. We have a default
    timeout of 30s and the render app takes up to 50s to start.We might have hit an
    inflection point between cold and warm.
  id: totrans-split-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为失败是由于我们应用的冷启动引起的。我们有一个默认的超时时间为 30 秒，而渲染应用程序需要最多 50 秒才能启动。我们可能已经达到了冷热启动之间的转折点。
- en: Conclusion[](#conclusion)
  id: totrans-split-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论[](#conclusion)
- en: 'Here are the results of our test:'
  id: totrans-split-148
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们测试的结果：
- en: '| Provider | Uptime | Fails Ping | Total Pings | AVG latency (ms) | P75 (ms)
    | P90 (ms) | P95 (ms) | P99 (ms) |'
  id: totrans-split-149
  prefs: []
  type: TYPE_TB
  zh: '| 提供商 | 正常运行时间 | Ping 失败 | 总 Ping 次数 | 平均延迟 (ms) | P75 (ms) | P90 (ms) | P95
    (ms) | P99 (ms) |'
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-split-150
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- | --- | --- |'
- en: '| CF Workers | 100 | 0 | 10,956 | 182 | 138 | 690 | 778 | 991 |'
  id: totrans-split-151
  prefs: []
  type: TYPE_TB
  zh: '| CF Workers | 100 | 0 | 10,956 | 182 | 138 | 690 | 778 | 991 |'
- en: '| Fly.io | 100 | 0 | 10,952 | 1,471 | 1,514 | 1,555 | 1,626 | 2,547 |'
  id: totrans-split-152
  prefs: []
  type: TYPE_TB
  zh: '| Fly.io | 100 | 0 | 10,952 | 1,471 | 1,514 | 1,555 | 1,626 | 2,547 |'
- en: '| Koyeb | 100 | 0 | 10,955 | 536 | 738 | 881 | 1,013 | 1,525 |'
  id: totrans-split-153
  prefs: []
  type: TYPE_TB
  zh: '| Koyeb | 100 | 0 | 10,955 | 536 | 738 | 881 | 1,013 | 1,525 |'
- en: '| Railway | 99.991 | 1 | 10,955 | 381 | 469 | 653 | 661 | 850 |'
  id: totrans-split-154
  prefs: []
  type: TYPE_TB
  zh: '| 铁路 | 99.991 | 1 | 10,955 | 381 | 469 | 653 | 661 | 850 |'
- en: '| Render | 99.89 | 12 | 10,946 | 451 | 447 | 591 | 707 | 902 |'
  id: totrans-split-155
  prefs: []
  type: TYPE_TB
  zh: '| Render | 99.89 | 12 | 10,946 | 451 | 447 | 591 | 707 | 902 |'
- en: If you value low latency, Cloudflare Workers are the best option for fast global
    performance without cold start issues. They deploy your app worldwide efficiently.
  id: totrans-split-156
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你注重低延迟，Cloudflare Workers 是快速全球性能的最佳选择，没有冷启动问题。它们能高效地将你的应用部署到全球各地。
- en: For multi-region deployment, check out Koyeb and Fly.io.
  id: totrans-split-157
  prefs: []
  type: TYPE_NORMAL
  zh: 对于多区域部署，请考虑 Koyeb 和 Fly.io。
- en: For specific region deployment, Railway and Render are good choices.
  id: totrans-split-158
  prefs: []
  type: TYPE_NORMAL
  zh: 对于特定区域的部署，Railway 和 Render 是不错的选择。
- en: Choosing a cloud provider involves considering not just latency but also user
    experience and pricing.
  id: totrans-split-159
  prefs: []
  type: TYPE_NORMAL
  zh: 选择云服务提供商不仅涉及延迟问题，还要考虑用户体验和定价。
- en: We use Fly.io in production and are satisfied with it.
  id: totrans-split-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在生产环境中使用 Fly.io，并对其感到满意。
- en: Vercel[](#vercel)
  id: totrans-split-161
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '[Vercel](#vercel)'
- en: I haven't included Vercel in this test. But we have a blog post comparing Vercel
    Serverless vs Edge vs Serverless. You can find it [here](https://www.openstatus.dev/blog/monitoring-latency-vercel-edge-vs-serverless).
  id: totrans-split-162
  prefs: []
  type: TYPE_NORMAL
  zh: 我没有在这次测试中包括 Vercel。但我们有一篇博客文章比较 Vercel 的无服务器与边缘与无服务器。你可以在[这里](https://www.openstatus.dev/blog/monitoring-latency-vercel-edge-vs-serverless)找到它。
- en: If you want to monitor your API or website, create an account on [OpenStatus](https://www.openstatus.dev/app/sign-up?ref=blog-monitoring).
  id: totrans-split-163
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想监控你的 API 或网站，请在[OpenStatus](https://www.openstatus.dev/app/sign-up?ref=blog-monitoring)上创建一个账户。
