- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-29 13:19:51'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-29 13:19:51'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Rye Grows With UV | Armin Ronacher's Thoughts and Writings
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Rye Grows With UV | 阿尔敏·罗纳赫尔的思考和著作
- en: 来源：[https://lucumr.pocoo.org/2024/2/15/rye-grows-with-uv/](https://lucumr.pocoo.org/2024/2/15/rye-grows-with-uv/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://lucumr.pocoo.org/2024/2/15/rye-grows-with-uv/](https://lucumr.pocoo.org/2024/2/15/rye-grows-with-uv/)
- en: Rye Grows With UV
  id: totrans-split-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Rye Grows With UV
- en: written on Thursday, February 15, 2024
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 2024年2月15日星期四撰写
- en: 'Two weeks ago I asked the question again about [What Rye should be](/2024/2/4/rye-a-vision/).
    There has been one thing that I have not publicly shared before and that is that
    ever since Rye exists I have also been talking to [Charlie Marsh](https://twitter.com/charliermarsh/)
    about Python packaging and Python tooling. It turns out that we had some shared
    ideas of what an ideal Python tooling landscape would look like. That has lead
    to some very interesting back and forths. To make a potentially very long story
    short: Together with Astral''s release of [uv](https://github.com/astral-sh/uv)
    they will [take stewardship of Rye](https://astral.sh/blog/uv). For the details
    read on.'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 两周前，我再次提出了关于 [Rye 应该是什么](/2024/2/4/rye-a-vision/) 的问题。有一件事我之前并未公开分享过，那就是自 Rye
    存在以来，我也一直在与 [查理·马歇尔](https://twitter.com/charliermarsh/) 探讨 Python 打包和 Python
    工具的问题。事实证明，我们对理想的 Python 工具生态有一些共同的想法。这导致了一些非常有趣的来回讨论。长话短说：与 Astral 发布的 [uv](https://github.com/astral-sh/uv)
    一起，他们将 [接手 Rye 的管理](https://astral.sh/blog/uv)。详情请继续阅读。
- en: For me Rye is an exciting test bed of what Python tooling can be. I have been
    using this test bed to run a of experiments over the last year. I learned a lot
    about what is missing in the ecosystem by building it and where the challenges
    are. What I enjoyed the most of working on it so far has been the feedback from
    various people on it. I wanted to explore what a “cargo for Python” is like and
    it's becoming ever more evident what that might look like. At the same time from
    the very start I was very clear in [questioning its existence](https://github.com/mitsuhiko/rye/discussions/6).
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 对我来说，Rye 是 Python 工具可能成为的一个激动人心的试验平台。在过去的一年里，我一直在这个试验平台上进行各种实验。通过构建它，我了解了生态系统中缺失的内容以及面临的挑战。到目前为止，我最享受的是来自各方人士的反馈。我想探索
    Python 版的 “cargo” 是什么样子，而越来越明显的是，它可能会是什么样子。与此同时，从一开始，我就对 [质疑它的存在](https://github.com/mitsuhiko/rye/discussions/6)
    非常明确。
- en: 'Since we were talking I was able to run an experiment which has been to put
    in Astral''s uv as replacement for pip-tools. If you are not familiar with it
    yet: uv today is a drop-in replacement for pip-tools and venv. The why is pretty
    clear: it''s much faster than pip-tools. Instead of taking 5 seconds to sync a
    virtualenv, it''s almost instant. It''s hard to overstate how impactful this is
    in terms of developer experience.'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 自从我们开始交流以来，我已经能够运行一个实验，即使用 Astral 的 uv 替换 pip-tools。如果你还不熟悉它：uv 今天是 pip-tools
    和 venv 的即插即用替代品。其原因非常明确：它比 pip-tools 快得多。它几乎可以瞬间同步一个虚拟环境，而不是花费 5 秒钟。在开发者体验方面，这对影响是巨大的，难以言表。
- en: For entirely unrelated reasons Rye today already picks some of Astral's tools
    to power other functionality. If you invoke rye fmt and rye check it behind the
    scenes uses Astral's ruff to do so. They are fast, sufficiently oppinonated and
    they do not require installing them into the virtualenv of the project. They are
    quickly becoming the obvious choice if you are used to excellent tooling from
    other ecosystems. So as it stands, three things that Rye does are either already
    picking Astral tools, or will soon default to doing so.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 由于完全无关的原因，Rye 今天已经开始使用一些 Astral 的工具来支持其他功能。如果你调用 rye fmt 和 rye check，它们在后台使用
    Astral 的 ruff 来执行。它们速度快，足够专业，并且不需要安装到项目的虚拟环境中。如果你习惯于其他生态系统中的优秀工具，它们很快就会成为明显的选择。因此，目前
    Rye 所做的三件事要么已经在选择 Astral 的工具，要么很快将默认选择它们。
- en: 'This led to a few conversations if it would make sense for Astral to continue
    the work on Rye and build it out into that “cargo for Python”. I''m very much
    convinced that there should be such a tool and that is something Charlie from
    Astral shares. Where we landed is a plan that looks like the following:'
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这导致了一些讨论，即 Astral 是否继续在 Rye 上工作，并将其发展成为 “Python 的 cargo”。我非常确信应该有这样一个工具，查理来自
    Astral 也持有同样观点。我们达成的计划看起来如下：
- en: Rye will continue to be a test bed for what Python tooling can be. We will move
    the project under Astral's stewardship with the desire to use it to further explore
    what a good UX can be and we will be quite liberal in trying different things.
    For instance now that the package installation process is blazing fast, I really
    want to see if we can remove the need of calling sync manually. There are also
    a lot of questions remaining like how to make the most of the [indygreg builds](https://github.com/indygreg/python-build-standalone/issues)
    or what lock files should look like in a Python world. I also want to go deep
    on exploring a multi-version Python import system.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: Rye 会继续作为 Python 工具的可能性的试验平台。我们将项目移交给 Astral 的管理，在这里我们有意愿进一步探索优质用户体验，并以非常自由的态度试验不同的事物。例如，现在安装过程非常快速，在看到是否可以移除手动调用
    sync 的需求后，我非常希望尝试这样做。还有许多问题遗留，比如说如何充分利用 [indygreg 构建](https://github.com/indygreg/python-build-standalone/issues)
    或 Python环境下锁文件的格式。我也想要深入探索多版本 Python导入系统的可能性。
- en: Rye will turn into a blessed breeding ground of different things. As the user
    experience becomes more obvious uv itself will turn from what it is today — low
    level plumbing — into that higher level tool with a clear migration path of folks
    using rye to that new uv.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: Rye 将成为一个不同事物的滋养地。随着用户体验变得明显，uv 将从其现在的低层接口转变为具有明确迁移路径的较高层次工具，用户从 Rye 到那个新 uv。
- en: 'To try Rye on top of uv today [install](https://rye-up.com/guide/installation/)
    or update to the latest version and enable the experimental uv support:'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如需在今天尝试使用 Rye 与 uv，可通过 [安装](https://rye-up.com/guide/installation/) 或更新至最新版本并启用实验性
    uv 支持来获取：
- en: '[PRE0]'
  id: totrans-split-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To learn more about uv and rye head over to GitHub:'
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 若要了解 more 关于 uv 和 Rye，可访问 GitHub 平台：
- en: 'You might have some more questions about this so I compiled a basic FAQ:'
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能还有更多问题，所以我整理了一个基本的常见问答：
- en: '**Why not make Rye the cargo for Python?**'
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**为什么不让 Rye 成为 Python 的货物？**'
- en: 'This in many ways might look like the obvious question. The answer is quite
    simple: Rye as it exists today is unlikely to be the final solution. For a start
    code wise it''s pretty brittle coming from it cobbling together various tools.
    It''s a duck-taped solution that was built to sketch up what can be, for my very
    own uses. It is however incredibly useful to play and explore possible solutions.'
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这在很多方面可能看起来像是一个显而易见的问题。答案很简单：今天的 Rye 不太可能是最终解决方案。从编码层面看，它较为脆弱，是通过拼凑不同的工具构建起来的。这是应急解决方案，用于快速展开设想，供我自己的用途。然而，它对于探索可能的解决方案极为有用。
- en: '**Will Rye retired for uv?**'
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**Rye 会退休给 uv 吗？**'
- en: Not today, but the desire is that these tools eventually converge into one.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这不会在今天发生，但我们的目标是这些工具最终能融合为一个。
- en: '**Will you continue to contribute and maintain Rye?**'
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**您会继续贡献并维护 Rye 吗？**'
- en: 'Short answer: yes. Long answer is that me contributing to my own tool has been
    a pretty spotty thing over the last year. There was in fact almost a multi month
    hiatus where the only changes to Rye were bumping Python versions and fixing minor
    issues and that not because it was perfect. The reason more was that I realized
    that Rye runs into fundamental issues that are really gnarly to resolve which
    can be quite frustrating to attack as a side project. So I want to continue to
    be involved in one way or another, but this is a project much larger than me and
    I do not have the motivation to give it enough of that push myself.'
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 简短回答：是的。详细回答是，我对自己工具的帮助在过去一年里有些波动。事实上，确实有一段几乎长达数月的休息期，期间 Rye 只有更新了 Python 版本并解决了小问题，并非因为其完美。实际上，问题更多是我意识到
    Rye 面临的根本问题难以解决，这可能会对作为侧项目进行干预造成挫败感。因此，我希望能够继续在某个方面参与，但这是个远超我个人范围的项目，我自己没有足够的动力赋予它足够的推动力。
- en: '**Will I join Astral?**'
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**我会加入 Astral 吗？**'
- en: No :-)
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**不会 :)**'
- en: '**Is there a song about Python packaging?**'
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**是否有关于 Python 包管理的歌曲？**'
- en: Thanks to AI there is.
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: 谢谢于 AI，现在有。
- en: This entry was tagged [announcement](/tags/announcement/), [python](/tags/python/)
    and [rye](/tags/rye/)
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 此条贴文包含标签：[公告](/tags/announcement/)，[python](/tags/python/) 和 [rye](/tags/rye/)
