["```\nconst  app  =  new  Hono();\napp.use(\"*\", logger());\n\napp.use(\"*\", poweredBy());\n\napp.get(\"/\", (c) => {\n return c.text(\n \"Just return the desired http status code, e.g. /404 ðŸ¤¯ \\nhttps://www.openstatus.dev\",\n );\n});\n```", "```\napp = 'statuscode'\nprimary_region = 'ams'\n\n[build]\n dockerfile = \"./Dockerfile\"\n\n[http_service]\n internal_port = 3000\n force_https = true\n auto_stop_machines = true\n auto_start_machines = true\n min_machines_running = 0\n processes = ['app']\n\n[[vm]]\n cpu_kind = 'shared'\n cpus = 1\n memory_mb = 256\n```", "```\n2024-02-14T11:24:16.107 proxy[286560ea703108] ams [info] Starting machine\n\n2024-02-14T11:24:16.322 app[286560ea703108] ams [info] [ 0.035736] PCI: Fatal: No config space access function found\n\n2024-02-14T11:24:16.533 app[286560ea703108] ams [info] INFO Starting init (commit: bfa79be)...\n\n2024-02-14T11:24:16.546 app[286560ea703108] ams [info] INFO Preparing to run: `/usr/local/bin/docker-entrypoint.sh bun start` as root\n\n2024-02-14T11:24:16.558 app[286560ea703108] ams [info] INFO [fly api proxy] listening at /.fly/api\n\n2024-02-14T11:24:16.565 app[286560ea703108] ams [info] 2024/02/14 11:24:16 listening on [fdaa:3:2ef:a7b:10c:3c9a:5b4:2]:22 (DNS: [fdaa::3]:53)\n\n2024-02-14T11:24:16.611 app[286560ea703108] ams [info] $ bun src/index.ts\n\n2024-02-14T11:24:16.618 runner[286560ea703108] ams [info] Machine started in 460ms\n\n2024-02-14T11:24:17.621 proxy[286560ea703108] ams [info] machine started in 1.513643778s\n\n2024-02-14T11:24:17.628 proxy[286560ea703108] ams [info] machine became reachable in 7.03669ms \n```", "```\n min_machines_running = 1 \n```", "```\nCf workers -> koyeb Global load balancer -> koyeb backend \n```", "```\nRender spins down a Free web service that goes 15 minutes without receiving inbound traffic. Render spins the service back up whenever it next receives a request to process. \n```"]