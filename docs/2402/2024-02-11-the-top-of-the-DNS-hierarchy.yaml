- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-29 13:22:21'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-29 13:22:21
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 2024-02-11 the top of the DNS hierarchy
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2024-02-11 DNS 层次结构的顶端
- en: 来源：[https://computer.rip/2024-02-11-the-top-of-the-DNS-hierarchy.html](https://computer.rip/2024-02-11-the-top-of-the-DNS-hierarchy.html)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://computer.rip/2024-02-11-the-top-of-the-DNS-hierarchy.html](https://computer.rip/2024-02-11-the-top-of-the-DNS-hierarchy.html)
- en: '>>> 2024-02-11 the top of the DNS hierarchy ([PDF](https://computer.rip/2024-02-11-the-top-of-the-DNS-hierarchy.pdf))'
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '>>> 2024-02-11 DNS 层次结构的顶端（[PDF](https://computer.rip/2024-02-11-the-top-of-the-DNS-hierarchy.pdf)）'
- en: In the past (in fact two years ago, proof I have been doing this for a while
    now!) I [wrote about](https://computer.rip/2022-01-16-peer-to-peer-but-mostly-the-main-peer.html)
    the "inconvenient truth" that structural aspects of the Internet make truly decentralized
    systems infeasible, due to the lack of a means to perform broadcast discovery.
    As a result, most distributed systems rely on a set of central, semi-static nodes
    to perform initial introductions.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去（事实上是两年前，证明我已经做了一段时间了！），我 [写过](https://computer.rip/2022-01-16-peer-to-peer-but-mostly-the-main-peer.html)
    关于互联网结构方面的“不便之实” ，这使得真正去中心化的系统不可行，因为缺乏进行广播发现的手段。因此，大多数分布式系统依赖于一组中央的、半静态的节点来执行初始介绍。
- en: For example, Bitcoin relies on a small list of volunteer-operated domain names
    that resolve to known-good full nodes. Tor similarly uses a small set of central
    "directory servers" that provide initial node lists. Both systems have these lists
    hardcoded into their clients; coincidentally, both have nine trusted, central
    hostnames.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，比特币依赖于一小部分志愿者运营的域名列表，这些域名解析为已知的良好的全节点。Tor 类似地使用一小组中央“目录服务器”，这些服务器提供初始节点列表。这两个系统都将这些列表硬编码到其客户端中；巧合的是，两者都有九个受信任的中央主机名。
- en: 'This sort of problem exists in basically all distributed systems that operate
    in environments where it is not possible to shout into the void and hope for a
    response. The internet, for good historic reasons, does not permit this kind of
    behavior. Here we should differentiate between distributed and decentralized,
    two terms I do not tend to select very carefully. Not all distributed systems
    are decentralized, indeed, many are not. One of the easiest and most practical
    ways to organize a distributed system is according to a hierarchy. This is a useful
    technique, so there are many examples, but a prominent and old one happens to
    also be part of the drivetrain mechanics of the internet: DNS, the domain name
    system.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这种问题基本上存在于所有在不可能向虚空大喊并期望得到回应的环境中运行的分布式系统中。出于良好的历史原因，互联网不允许这种行为。在这里，我们应该区分分布式和去中心化，这两个术语我通常不会非常精确地选择。并非所有的分布式系统都是去中心化的，实际上，许多系统都不是。组织分布式系统的最简单和最实用的方法之一是按照层次结构来组织。这是一种有用的技术，因此有许多例子，但一个著名而古老的例子恰好也是互联网的传动机械的一部分：DNS，域名系统。
- en: My reader base is expanding and so I will provide a very brief bit of background.
    Many know that DNS is responsible for translating human-readable names like "computer.rip"
    into the actual numerical addresses used by the internet protocol. Perhaps a bit
    fewer know that DNS, as a system, is fundamentally organized around the hierarchy
    of these names. To examine the process of resolving a DNS name, it is sometimes
    more intuitive to reverse the name, and instead of "computer.rip", discuss "rip.computer"
    [1].
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我的读者群正在扩大，因此我将提供一个非常简短的背景知识。很多人知道 DNS 负责将类似“computer.rip”这样的可读名称转换为互联网协议实际使用的数字地址。或许有一些人不太了解
    DNS 作为一个系统，基本上是围绕这些名称的层次结构组织的。为了考察解析 DNS 名称的过程，有时将名称颠倒过来，而不是“computer.rip”，讨论“rip.computer”[1]可能更直观。
- en: This name is hierarchical, it indicates that the record "computer" is within
    the zone "rip". "computer" is itself a zone and can contain yet more records,
    we tend to call these subdomains. But the term "subdomain" can be confusing as
    everything is a subdomain of something, even "rip" itself, which in a certain
    sense is a subdomain of the DNS root "." (which is why, of course, a stricter
    writing of the domain name computer.rip would be computer.rip., but as a culture
    we have rejected the trailing root dot).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这个名称是分
- en: Many of us probably know that each level of the DNS hierarchy has authoritative
    nameservers, operated typically by whoever controls the name (or their third-party
    DNS vendor). "rip" has authoritative DNS servers provided by a company called
    Rightside Group, a subsidiary of the operator of websites like eHow that went
    headfirst into the great DNS land grab and snapped up "rip" as a bit of land speculation,
    alongside such attractive properties as "lawyer" and "navy" and "republican" and
    "democrat", all of which I would like to own the "computer" subdomain of, but
    alas such dictionary words are usually already taken.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们中的许多人可能知道 DNS 层次结构的每个级别都有权威名称服务器，通常由控制该名称的人（或其第三方 DNS 供应商）操作。“rip”有一个由一个名为
    Rightside Group 的公司提供的权威 DNS 服务器，Rightside Group 是一家网站运营商的子公司，他们头顶着伟大的 DNS 土地争夺战，抢购了“rip”作为一种土地投机，同时还有诸如“lawyer”、“navy”、“republican”和“democrat”等具有吸引力的属性，我都想拥有“computer”子域名，但遗憾的是，这些词典词汇通常已经被占用了。
- en: '"computer.rip", of course, has authoritative nameservers operated by myself
    or my delegate. Unlike some people I know, I do not have any nostalgia for BIND,
    and so I pay a modest fee to a commercial DNS operator to do it for me. Some would
    be surprised that I pay for this; DNS is actually rather inexpensive to operate
    and authoritative name servers are almost universally available as a free perk
    from domain registrars and others. I just like to pay for this on the general
    feeling that companies that charge for a given service are probably more committed
    to its quality, and it really costs very little and changing it would take work.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，“computer.rip”具有由我或我的代表运营的权威域名服务器。与我认识的一些人不同，我对 BIND 没有任何怀旧之情，因此我支付一笔适度的费用给商业
    DNS 运营商来代劳。有些人可能会对我付费感到惊讶；DNS 实际上是非常廉价的，而且权威域名服务器几乎普遍可以从域名注册商和其他机构获得免费的附加服务。我只是喜欢付费，因为我总觉得收费的公司可能更专注于其质量，而且这实际上成本非常低，而且更改会带来一些工作。
- en: To the observant reader, this might leave an interesting question. If even the
    top-level domains are subdomains of a secret, seldom-seen root domain ".", who
    operates the authoritative name servers for that zone?
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对于善于观察的读者，这可能会留下一个有趣的问题。即使顶级域也是一个秘密的、很少见到的根域的子域，那么谁来运营该区域的权威域名服务器呢？
- en: And here we return to the matter of even distributed systems requiring central
    nodes. Bitcoin uses nine harcoded domain names for initial discovery of decentralized
    peers. DNS uses thirteen harcoded root servers to establish the top level of the
    hierarchy.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们回到了即使是分布式系统也需要中心节点的问题上。比特币使用九个硬编码的域名来初始发现分散的节点。DNS 使用十三个硬编码的根服务器来建立层次结构的顶级。
- en: These root servers are commonly referred to as a.root-servers.net through m.root-servers.net,
    and indeed those are their domain names, but remember that when we need to use
    those root servers we have no entrypoint into the DNS hierarchy and so are not
    capable of resolving names. The root servers are much more meaningfully identified
    by their IP addresses, which are "semi-harcoded" into recursive resolves in the
    form of what's often called a root hints file. You can [download a copy](https://www.internic.net/domain/named.root),
    it's a simple file in BIND zone format that BIND basically uses to bootstrap its
    cache.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这些根服务器通常被称为 a.root-servers.net 到 m.root-servers.net，事实上这些是它们的域名，但要记住，当我们需要使用这些根服务器时，我们没有进入
    DNS 层次结构的入口点，因此无法解析名称。根服务器更有意义的标识方式是它们的 IP 地址，这些 IP 地址被“半硬编码”到递归解析中，形式上常被称为根提示文件。你可以[下载一份副本](https://www.internic.net/domain/named.root)，这是一个
    BIND 区域格式的简单文件，BIND 基本上用它来启动其缓存。
- en: And yes, there are other DNS implementations too, a surprising number of them,
    even in wide use. But when talking about DNS history we can mostly stick to BIND.
    BIND used to stand for Berkeley Internet Name Domain, and it is an apt rule of
    thumb in computer history that anything with a reference to UC Berkeley in the
    name is probably structurally important to the modern technology industry.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，还有其他 DNS 实现，数量之多令人惊讶，甚至在广泛使用中也是如此。但是在谈论 DNS 历史时，我们大多数可以专注于 BIND。BIND 曾经是伯克利互联网名称域的缩写，这是一个很好的经验法则，即任何名称中提到
    UC 伯克利的内容可能在现代技术行业中具有结构性重要性。
- en: One of the things I wanted to get at, when I originally talked about central
    nodes in distributed systems, is the impact it has on trust and reliability. The
    TOR project is aware that the nine directory servers are an appealing target for
    attack or compromise, and technical measures have been taken to mitigate the possibility
    of malicious behavior. The Bitcoin project seems to mostly ignore that the DNS
    seeds exist, but of course the design of the Bitcoin system limits their compromise
    to certain types of attacks. In the case of DNS, much like most decentralized
    systems, there is a layer of long-lived caching for top-level domains that mitigates
    the impact of unavailability of the root servers, but still, in every one of these
    systems, there is the possibility of compromise or unavailability if the central
    nodes are attacked.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 当我最初谈到分布式系统中的中心节点时，我想要探讨的一个问题是它对信任和可靠性的影响。TOR 项目知道这九个目录服务器是攻击或 compromise 的吸引目标，并采取了技术措施来减轻恶意行为的可能性。比特币项目似乎大多忽略了
    DNS 种子的存在，但当然比特币系统的设计限制了它们受到某些类型的攻击。就像大多数分散式系统一样，在 DNS 的情况下，存在着长期缓存顶级域的层，可以减轻根服务器不可用的影响，但是在这些系统中的每一个中心节点都存在被攻击的可能性或不可用性。
- en: And so there is always a layer of policy. A trusted operator can never guarantee
    the trustworthiness of a central node (the node could be compromised, or the trusted
    operator could turn out to be the FBI), but it sure does help. Tor's directory
    servers are operated by the Tor project. Bitcoin's DNS seeds are operated by individuals
    with a long history of involvement in the project. DNS's root nodes are operated
    by a hodgepodge of companies and institutions that were important to the early
    internet.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，总是存在一层政策。一个受信任的运营商永远不能保证中心节点的可信度（节点可能被 compromise，或者受信任的运营商可能会被 FBI 找到），但这确实有帮助。Tor
    的目录服务器由 Tor 项目运营。比特币的 DNS 种子由长期参与该项目的个人运营。DNS 的根节点由一系列在早期互联网中至关重要的公司和机构运营。
- en: Verisign operates two, of course. A California university operates one, of course,
    but amusingly not Berkeley. Three are operated by various arms of US defense.
    Some internet industry associations, an NCC, another university, ICANN runs one
    of them themselves. It's pretty random, though, and just reflects a set of organizations
    prominently involved in the early internet.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，Verisign 运营两个。一个加州大学当然也运营一个，但有趣的是不是伯克利。有三个是由美国国防部的各个部门运营的。一些互联网行业协会，一个 NCC，另一个大学，ICANN
    自己运营其中一个。这相当随机，只是反映了一组在早期互联网中显著参与的组织。
- en: Some people, even some journalists I've come across, hear that there are 13
    name servers and picture 13 4U boxes with a lot of blinking lights in heavily
    fortified data centers. Admittedly this description was more or less accurate
    in the early days, and a couple of the smaller root server operators did have
    single machines until surprisingly recently. But today, all thirteen root server
    IP addresses are anycast groups.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一些人，甚至我遇到的一些记者，听说有 13 个名称服务器，并想象到有很多闪烁的灯在重重设防的数据中心中的 13 个 4U 箱。诚然，在早期，这种描述或多或少是准确的，一些较小的根服务器运营商直到最近才有单个机器。但是今天，所有十三个根服务器
    IP 地址都是任播组。
- en: 'Anycast is not a concept you run into every day, because it''s not really useful
    on local networks where multicast can be used. But it''s very important to the
    modern internet. The idea is this: an IP address (really a subnetwork) is advertised
    by multiple BGP nodes. Other BGP nodes can select the advertisement they like
    the best, typically based on lowest hop count. As a user, you connect to a single
    IP address, but based on the BGP-informed routing tables of internet service providers
    your traffic could be directed to any number of sites. You can think of it as
    a form of load balancing at the IP layer, but it also has the performance benefit
    of users mostly connecting to nearby nodes, so it''s widely used by CDNs for multiple
    reasons.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 任播是你每天都会遇到的概念，因为在可以使用组播的本地网络上它并不真正有用。但对于现代互联网来说，这非常重要。想法是这样的：一个 IP 地址（实际上是一个子网络）由多个
    BGP 节点广告。其他 BGP 节点可以选择他们最喜欢的广告，通常基于最低跳数。作为用户，你连接到一个单一的 IP 地址，但根据互联网服务提供商的 BGP
    信息路由表，你的流量可能被定向到任意数量的站点。你可以把它看作是 IP 层的一种负载均衡形式，但它也有性能上的好处，大多数用户连接到附近的节点，因此 CDNs
    广泛使用它有多个原因。
- en: For DNS, though, where we often have a bootstrapping problem to solve, anycast
    is extremely useful as a way to handle "special" IP addresses that are used directly.
    For authoritative DNS servers like 192.5.5.241 [2001:500:2f::f] [2] (root server
    F) or recursive resolvers like 8.8.8.8 [2001:4860:4860::8888] (Google public DNS),
    anycast is the secret that allows a "single" address to correspond to a distributed
    system of nodes.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 DNS 来说，虽然我们经常需要解决引导问题，但任播作为处理直接使用的“特殊”IP地址的一种方式非常有用。对于像 192.5.5.241 [2001:500:2f::f]（根服务器
    F）这样的权威 DNS 服务器或像 8.8.8.8 [2001:4860:4860::8888]（Google 公共 DNS）这样的递归解析器，任播是让“单一”地址对应到一个分布式节点系统的秘密。
- en: So there are thirteen DNS root servers in the sense that there are thirteen
    independently administered clusters of root servers (with the partial exception
    of A and J, both operated by Verisign, due to their acquisition of former A operator
    Network Solutions). Each of the thirteen root servers is, in practice, a fairly
    large number of anycast sites, sometimes over 100\. The root server operators
    don't share much information about their internal implementation, but one can
    assume that in most cases the anycast sites consist of multiple servers as well,
    fronted by some sort of redundant network appliance. There may only be thirteen
    of them, but each of the thirteen is quite robust. For example, the root servers
    typically place their anycast sites in major internet exchanges distributed across
    both geography and provider networks. This makes it unlikely that any small number
    of failures would seriously affect the number of available sites. Even if a root
    server were to experience a major failure due to some sort of administration problem,
    there are twelve more.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，有十三个 DNS 根服务器意味着有十三个独立管理的根服务器集群（部分例外是由于 Verisign 收购了前 A 运营商 Network Solutions
    的 A 和 J）。每个十三个根服务器在实践中都是相当大量的 anycast 站点，有时超过 100 个。根服务器运营商并不分享关于他们内部实现的大量信息，但可以假设在大多数情况下，anycast
    站点也包括多台服务器，由某种冗余网络设备担任前端。它们可能只有十三个，但每个十三个都相当强大。例如，根服务器通常将它们的 anycast 站点放置在分布在地理位置和提供商网络上的主要互联网交换点上。这使得任何小规模的故障都不太可能严重影响可用站点的数量。即使根服务器由于某种管理问题而经历了重大故障，也还有十二个。
- en: Why thirteen, you might ask? No good reason. The number of root servers basically
    grew until the answer to an NS request for "." hit the 512 byte limit on UDP DNS
    responses. Optimizations over time allowed this number to grow (actually using
    single letters to identify the servers was one of these optimizations, allowing
    the basic compression used in DNS responses to collapse the matching root-servers.net
    part). Of course IPv6 blew DNS response sizes completely out of the water, leading
    to the development of the EDNS extension that allows for much larger responses.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会问为什么是十三个？没有充分的理由。根服务器的数量基本上增长到一个 NS 请求“.”的答复达到了 UDP DNS 响应的 512 字节限制。随着时间的推移进行了优化（实际上使用单个字母来标识服务器就是这些优化之一，允许
    DNS 响应中使用的基本压缩来折叠匹配的 root-servers.net 部分）。当然，IPv6 彻底改变了 DNS 响应大小，导致开发了允许更大响应的
    EDNS 扩展。
- en: 13 is no longer the practical limit, but with how large some of the 13 are,
    no one sees a pressing need to add more. Besides, can you imagine the political
    considerations in our modern internet environment? The proposed operator would
    probably be Cloudflare or Google or Amazon or something and their motives would
    never be trusted. Incidentally, many of the anycast sites for root server F (operated
    by ISC) are Cloudflare data centers used under agreement.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 13 不再是实际限制，但由于其中一些的规模如此之大，没有人认为有迫切需要添加更多。此外，在我们现代互联网环境中，你能想象到政治考虑吗？提议的运营商可能会是
    Cloudflare、Google 或 Amazon 等等，他们的动机永远不会受到信任。顺便说一句，由 ISC 运营的根服务器 F 的许多 anycast
    站点都是在协议下使用的 Cloudflare 数据中心。
- en: We are, of course, currently trusting the motives of Verisign. You should never
    do this! But it's been that way for a long time, we're already committed. At least
    it isn't Network Solutions any more. I kind of miss when SRI was running DNS and
    military remote viewing.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们目前是信任 Verisign 的动机。你绝不应该这样做！但这已经持续了很长时间，我们已经承诺了。至少现在不再是 Network Solutions
    了。我有点怀念当 SRI 在运行 DNS 和军事远程查看时的情景。
- en: But still, there's something a little uncomfortable about the situation. Billions
    of internet hosts depend on thirteen "servers" to have any functional access to
    the internet.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: What if someone attacked them? Could they take the internet down? Wouldn't this
    cause a global crisis of a type seldom before seen? Should I be stockpiling DNS
    records alongside my canned water and iodine pills?
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: Wikipedia contains a great piece of comedic encyclopedia writing. In its article
    on the history of attacks on DNS root servers, it mentions the time, in 2012,
    that some-pastebin-user-claiming-to-be-Anonymous (one of the great internet security
    threats of that era) threatened to "shut the Internet down". "It may only last
    one hour, maybe more, maybe even a few days," the statement continues. "No matter
    what, it will be global. It will be known."
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: That's the end of the section. Some Wikipedia editor, no doubt familiar with
    the activities of Anonymous in 2012, apparently considered it self-evident that
    the attack never happened.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: Anonymous may not have put in the effort, but others have. There have been several
    apparent DDoS attacks on the root DNS servers. One, in 2007, was significant enough
    that four of the root servers suffered---but there were nine more, and no serious
    impact was felt by internet users. This attack, like most meaningful DDoS, originated
    with a botnet. It had its footprint primarily in Korea, but C2 in the United States.
    The motivation for the attack, and who launched it, remains unknown.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: There is a surprisingly large industry of "booters," commercial services that,
    for a fee, will DDoS a target of your choice. These tend to be operated by criminal
    groups with access to large botnets; the botnets are sometimes bought and sold
    and get their tasking from a network of resellers. It's a competitive industry.
    In the past, booters and botnet operators have sometimes been observed announcing
    a somewhat random target and taking it offline as, essentially, a sales demonstration.
    Since these demonstrations are a known behavior, any time a botnet targets something
    important for no discernible reason, analysts have a tendency to attribute it
    to a "show of force." I have little doubt that this is sometimes true, but as
    with the tendency to attribute monumental architecture to deity worship, it might
    be an overgeneralization of the motivations of botnet operators. Sometimes I wonder
    if they made a mistake, or maybe they were just a little drunk and a lot bored,
    who is to say?
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: The problem with this kind of attribution is evident in the case of the other
    significant attack on the DNS root servers, in 2015\. Once again, some root servers
    were impacted badly enough that they became unreliable, but other root servers
    held on and there was little or even no impact to the public. This attack, though,
    had some interesting properties.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: In the 2007 incident, the abnormal traffic to the root servers consisted of
    large, mostly-random DNS requests. This is basically the expected behavior of
    a DNS attack; using randomly generated hostnames in requests ensures that the
    responses won't be cached, making the DNS server exert more effort. Several major
    botnet clients have this "random subdomain request" functionality built in, normally
    used for attacks on specific authoritative DNS servers as a way to take the operator's
    website offline. Chinese security firm Qihoo 360, based on a large botnet honeypot
    they operate, reports that this type of DNS attack was very popular at the time.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: The 2015 attack was different, though! Wikipedia, like many other websites,
    describes the attack as "valid queries for a single undisclosed domain name and
    then a different domain the next day." In fact, the domain names were disclosed,
    by at least 2016\. The attack happened on two days. On the first day, all requests
    were for 336901.com. The second day, all requests were for 916yy.com.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: Contemporaneous reporting is remarkably confused on the topic of these domain
    names, perhaps because they were not widely known, perhaps because few reporters
    bothered to check up on them thoroughly. Many sources make it sound like they
    were random domain names perhaps operated by the attacker, one goes so far as
    to say that they were registered with fake identities.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 同时报道对这些域名的主题非常混乱，也许是因为它们不是广为人知的，也许是因为很少有记者彻底查证它们。许多来源使其听起来像是攻击者可能操作的随机域名，有些甚至称它们是用虚假身份注册的。
- en: Well, my Mandarin isn't great, and I think the language barrier is a big part
    of the confusion. No doubt another part is a Western lack of familiarity with
    Chinese internet culture. To an American in the security industry, 336901.com
    would probably look at first like the result of a DGA or domain generation algorithm.
    A randomly-generated domain used specifically to be evasive. In China, though,
    numeric names like this are quite popular. Qihoo 360 is, after all, domestically
    branded as just 360---360.cn.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，我的普通话不太好，我觉得语言障碍是混乱的重要原因之一。毫无疑问，另一个原因是西方人对中国互联网文化的不熟悉。对于安全行业的美国人来说，336901.com
    看起来可能一开始就像是由 DGA 或域名生成算法生成的结果。一个特意用来逃避的随机生成的域名。然而，在中国，像这样的数字名称非常流行。奇虎 360 毕竟是国内品牌，只被称为
    360---360.cn。
- en: As far as I can tell, both domains were pretty normal Chinese websites related
    to mobile games. It's difficult or maybe impossible to tell now, but it seems
    reasonable to speculate that they were operated by the same company. I would assume
    they were something of a gray market operation, as there's a huge intersection
    between "mobile games," "gambling," and "target of DDoS attacks." For a long time,
    perhaps still today in the right corners of the industry, it was pretty routine
    for gray-market gambling websites to pay booters to DDoS each other.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 据我所知，这两个域名都是与手机游戏相关的相当正常的中国网站。现在很难或者可能不可能确定，但似乎合理推测它们由同一家公司运营。我会假设它们是某种灰色市场运作，因为“手机游戏”、“赌博”和“遭受
    DDoS 攻击”之间存在着巨大的交集。很长一段时间，也许在这个行业的某些角落里今天仍然如此，灰色市场赌博网站之间互相支付 booter 进行 DDoS 攻击是相当常见的。
- en: 'In a 2016 presentation, security researchers from Verisign (Weinberg and Wessels)
    reported on their analysis of the attack based on traffic observed at Verisign
    root servers. They conclude that the traffic likely originated from multiple botnets
    or at least botnet clients with different configurations, since the attack traffic
    can be categorized into several apparently different types [3]. Based on command
    and control traffic from a source they don''t disclose (perhaps from a Verisign
    honeynet?), they link the attack to the common "BillGates" [4] botnet. Most interestingly,
    they conclude that it was probably not intended as an attack on the DNS root:
    the choice of fixed domain names just doesn''t make sense, and the traffic wasn''t
    targeted at all root servers.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在 2016 年的一次演示中，来自 Verisign 的安全研究人员（Weinberg 和 Wessels）根据在 Verisign 根服务器上观察到的流量对攻击进行了分析。他们得出的结论是，攻击流量很可能来自多个僵尸网络，或者至少来自具有不同配置的僵尸网络客户端，因为攻击流量可以被分类为几种明显不同的类型[3]。根据他们不透露的源头的命令和控制流量（也许是来自
    Verisign 蜜罐网络？），他们将攻击与常见的“BillGates”[4]僵尸网络联系起来。最有趣的是，他们得出的结论是，这可能不是针对 DNS 根的攻击：固定域名的选择毫无意义，而且流量根本不是针对所有根服务器的。
- en: 'Instead, they suspect it was just what it looks like: an attack on the two
    websites the packets queried for, that for some reason was directed at the root
    servers instead of the authoritative servers for that second-level domain. This
    isn''t a good strategy; the root servers are a far harder target than your average
    web hosting company''s authoritative servers. But perhaps it was a mistake? An
    experiment to see if the root server operators might mitigate the DDoS by dropping
    requests for those two domains, incidentally taking the websites offline?'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，他们怀疑这只是看起来像是的：针对两个网站的攻击，由于某种原因被指向了根服务器，而不是那个二级域名的权威服务器。这不是一个好策略；根服务器比一般的网络托管公司的权威服务器更难攻击。但也许这是一个错误？一个试验，看看根服务器操作员是否可以通过放弃对这两个域名的请求来缓解
    DDoS，顺便将网站下线？
- en: Remember that Qihoo 360 operates a large honeynet and was kind enough to publish
    a presentation on their analysis of root server attacks. Matching Verisign's conclusions,
    they link the attack to the BillGates botnet, and also note that they often observe
    multiple separate botnet C2 servers send tasks targeting the same domain names.
    This probably reflects the commercialized nature of modern botnets, with booters
    "subcontracting" operations to multiple botnet operators. It also handily explains
    Verisign's observation that the 2015 attack traffic seems to have come from more
    than one implementation a DNS DDoS.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，奇虎 360 经营着一个庞大的蜜罐网络，并且很好地发布了关于他们对根服务器攻击分析的演示文稿。与 Verisign 的结论相匹配，他们将攻击与 BillGates
    僵尸网络联系起来，并且还指出他们经常观察到多个独立的僵尸网络 C2 服务器发送任务，针对相同的域名。这可能反映了现代僵尸网络商业化的特性，即 booter
    将操作“分包”给多个僵尸网络运营商。这也很好地解释了 Verisign 的观察结果，即 2015 年的攻击流量似乎来自于多个实施了 DNS DDoS 的源。
- en: '360 reports that, on the first day, five different C2 servers tasked bots with
    attacking 336901.com. On the second day, three C2 servers tasked for 916yy.com.
    But they also have a much bigger revelation: throughout the time period of the
    attacks, they observed multiple tasks to attack 916yy.com using several different
    methods.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 360 报告说，在第一天，五个不同的 C2 服务器命令 bot 攻击 336901.com。第二天，三个 C2 服务器命令攻击 916yy.com。但他们还有一个更大
- en: 360 concludes that the 2015 DNS attack was most likely the result of a commodity
    DDoS operation that decided to experiment, directing traffic at the DNS roots
    instead of the authoritative server for the target to see what would happen. I
    doubt they thought they'd take down the root servers, but it seems totally reasonable
    that they might have wondered if the root server operators would filter DDoS traffic
    based on the domain name appearing in the requests.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 360的结论是，2015年的DNS攻击很可能是一次商品DDoS操作的结果，决定进行实验，将流量定向到DNS根服务器而不是目标的权威服务器，以查看会发生什么。我怀疑他们并没有想到他们会击倒根服务器，但他们可能想知道根服务器操作员是否会根据请求中出现的域名过滤DDoS流量。
- en: Intriguingly, they note that some of the traffic originated with a DNS attack
    tool that had significant similarities to BillGates but didn't produce quite the
    same packets. Likely we will never know, but a likely explanation is that some
    group modified the BillGates DNS attack module or implemented a new one based
    on the method used by BillGates.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，他们指出一些流量源自DNS攻击工具，与BillGates有显著的相似之处，但并没有产生完全相同的数据包。我们可能永远不会知道，但一个可能的解释是，一些团体修改了BillGates的DNS攻击模块，或者根据BillGates使用的方法实现了一个新的模块。
- en: Tracking botnets gets very confusing very fast, there are just so many different
    variants of any major botnet client! BillGates originated, for example, as a Linux
    botnet. It was distributed to servers, not only through SSH but through vulnerabilities
    in MySQL and ElasticSearch. It was unusual, for a time, in being a major botnet
    that skipped over the most common desktop operating system. But ports of BillGates
    to Windows were later observed, distributed through an Internet Explorer vulnerability---classic
    Windows. Why someone chose to port a Linux botnet to Windows instead of using
    one of the several popular Windows botnets (Conficker, for example) is a mystery.
    Perhaps they had spent a lot of time building out BillGates C2 infrastructure
    and, like any good IT operation, wanted to simplify their cloud footprint.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 追踪僵尸网络变得非常混乱，非常迅速，任何主要僵尸网络客户端都有许多不同的变种！例如，BillGates最初是一个Linux僵尸网络。它不仅通过SSH分发到服务器，还通过MySQL和ElasticSearch中的漏洞。它曾经不同寻常，因为它是一个跳过最常见的桌面操作系统的主要僵尸网络。但后来观察到将BillGates移植到Windows，通过Internet
    Explorer漏洞进行分发---典型的Windows。为什么有人选择将Linux僵尸网络移植到Windows，而不是使用几个流行的Windows僵尸网络之一（例如Conficker）是一个谜。也许他们花了很多时间建立BillGates
    C2基础设施，并且像任何良好的IT操作一样，希望简化他们的云足迹。
- en: High in the wizard's tower of the internet, thirteen elders are responsible
    for starting every recursive resolver on its own path to truth. There's a whole
    Neal Stephenson for Wired article there. But in practice it's a large and robust
    system. The extent of anycast routing used for the root DNS servers, to say nothing
    of CDNs, is one of those things that challenges are typical stacked view of the
    internet. Geographic load balancing is something we think of at high layers of
    the system, it's surprising to encounter it as a core part of a very low level
    process.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在互联网的巫师塔上，有十三位长者负责让每个递归解析器走上通向真理的道路。这里有一篇关于此的《连线》（Wired）专栏文章。但在实践中，这是一个庞大而强大的系统。用于根DNS服务器的任播路由的范围，更不用说CDN了，这些都挑战了我们对互联网的典型堆叠视图。地理负载平衡是我们在系统的高层中考虑到的东西，发现它作为非常低级别过程的核心部分是令人惊讶的。
- en: 'That''s why we need to keep our thinking flexible: computers are towers of
    abstraction, and complexity can be added at nearly any level, as needed or convenient.
    Seldom is this more apparent than it is in any process called "bootstrapping."
    Some seemingly simpler parts of the internet, like DNS, rely on a great deal of
    complexity within other parts of the system, like BGP.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么我们需要保持我们的思维灵活性：计算机是抽象的塔，几乎可以在任何层次上添加复杂性，根据需要或方便。很少有比称为“自举”的过程更能说明这一点的了。互联网中看似更简单的部分，如DNS，依赖于系统其他部分的复杂性，如BGP。
- en: Now I'm just complaining about pedagogical use of the OSI model again.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我只是在抱怨OSI模型的教学用途了。
- en: '[1] The fact that the DNS hierarchy is written from right-to-left while it''s
    routinely used in URIs that are otherwise read left-to-right is one of those quirks
    of computer history. Basically an endianness inconsistency. Like American date
    order, to strictly interpret a URI you have to stop and reverse your analysis
    part way through. There''s no particular reason that DNS is like that, there was
    just less consistency over most significant first/least significant first hierarchical
    ordering at the time and contemporaneous network protocols (consider the OSI stack)
    actually had a tendency towards least significant first.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] DNS层次结构是从右到左编写的，而它通常在以左到右读取的URI中使用，这是计算机历史的怪癖之一。基本上是一个端点一致性的不一致性。像美国的日期顺序一样，要严格解释URI，您必须在分析中途停下来并颠倒您的分析。DNS是这样的没有特殊原因，当时的最重要/最不重要的层次顺序不那么一致，而当代网络协议（考虑OSI堆栈）实际上倾向于最不重要的层次顺序。'
- en: '[2] The IPv4 addresses of the root servers are ages old and mostly just a matter
    of chance, but the IPv6 addresses were assigned more recently and allowed an opportunity
    for something more meaningful. Reflecting the long tradition of identifying the
    root servers by their letter, many root server operators use IPv6 addresses where
    the host part can be written as the single letter of the server (i.e. root server
    C at [2001:500:2::c]). Others chose a host part of "53," a gesture at the port
    number used for DNS (i.e. root server J, [2001:7fe::53]). Others seem more random,
    Verisign uses 2:30 for both of their root servers (i.e. root server A, [2001:503:ba3e::2:30]),
    so maybe that means something to them, or maybe it was just convenient. Amusingly,
    the only operator that went for what I would call an address pun is the Defense
    Information Systems Agency, which put root server G at [2001:500:12::d0d].'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] 根服务器的IPv4地址非常古老，大多数只是偶然的结果，但IPv6地址是最近分配的，并且提供了更有意义的机会。体现了根据根服务器的字母标识的长期传统，许多根服务器操作员使用IPv6地址，其中主机部分可以写成服务器的单个字母（即根服务器C，[2001:500:2::c]）。其他人选择了一个主机部分为“53”的地址，这是对用于DNS的端口号的一种表示（即根服务器J，[2001:7fe::53]）。其他人似乎更随机，凯瑞斯琳为他们的两个根服务器使用2:30（即根服务器A，[2001:503:ba3e::2:30]），所以也许对他们来说这意味着什么，或者也许只是方便而已。有趣的是，唯一一个我称之为地址双关语的运营商是国防信息系统局，他们将根服务器G放在了[2001:500:12::d0d]。'
- en: '[3] It really dates this story that there was some controversy around the source
    IPs of the attack, originating with none other than deceased security industry
    personality John McAfee. He angrily insisted that it was not plausible that the
    source IPs were spoofed. Of course botnets conducting DDoS attacks via DNS virtually
    always spoof the source IP, as there are few protections in place (at the time
    almost none at all) to prevent it. But John McAfee has always had a way of ginning
    up controversy where none was needed.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] 这个故事确实可以通过攻击的源IP产生了一些争议来确定其时间，攻击源IP起源于已故安全行业知名人士约翰·麦克菲。他愤怒地坚称攻击源IP不可能是伪造的。当然，通过DNS进行DDoS攻击的僵尸网络几乎总是伪造源IP，因为当时几乎没有（几乎没有）防范措施可以阻止它。但约翰·麦克菲总是有一种在不需要的地方制造争议的方式。'
- en: '[4] Botnets are often bought, modified, and sold. They tend to go by various
    names from different security researchers and different variants. I''m calling
    this one "BillGates" because that''s the funniest of the several names used for
    it.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[4] 僵尸网络经常被购买、修改和出售。它们往往有不同的安全研究人员和不同的变体名称。我称之为“BillGates”，因为这是用于它的几个名称中最滑稽的一个。'
