- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-27 14:49:11'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:49:11
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Mastering Programming - by Kent Beck
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 精通编程 - 作者肯特·贝克
- en: 来源：[https://tidyfirst.substack.com/p/mastering-programming](https://tidyfirst.substack.com/p/mastering-programming)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://tidyfirst.substack.com/p/mastering-programming](https://tidyfirst.substack.com/p/mastering-programming)
- en: FEBRUARY 5, 2016 · FACEBOOK
  id: totrans-split-6
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 2016年2月5日 · Facebook
- en: This was one of those posts that I threw together, thought nothing of, & then
    it blew up. Until recently this was my most-read post ever.
  id: totrans-split-7
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这是我匆忙写的一篇帖子，本来没怎么想，结果突然爆火了。直到最近这是我最受欢迎的帖子。
- en: By Arne Hückelheim - Own work, CC BY-SA 3.0, https://commons.wikimedia.org/w/index.php?curid=23003609
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 由Arne Hückelheim制作 - 自己的作品，CC BY-SA 3.0，https://commons.wikimedia.org/w/index.php?curid=23003609
- en: From years [decades] of watching master programmers, I have observed certain
    common patterns in their workflows. From years [decades] of coaching skilled journeyman
    programmers, I have observed the absence of those patterns. I have seen what a
    difference introducing the patterns can make.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，我观察到了大师程序员们的工作流中某些常见模式。多年来，我指导了熟练的学徒程序员，我注意到了这些模式的缺失。我见证了引入这些模式所能带来的巨大变化。
- en: Here are ways effective programmers get the most out of their precious 3e9 seconds
    on the planet.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是有效程序员在地球上宝贵的30亿秒中获得最大效益的方式。
- en: The theme here is scaling your brain. The journeyman learns to solve bigger
    problems by solving more problems at once. The master learns to solve even bigger
    problems than that by solving fewer problems at once. Part of the wisdom is subdividing
    so that integrating the separate solutions will be a smaller problem than just
    solving them together.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的主题是扩展你的大脑能力。学徒通过一次解决多个问题来解决更大的问题。大师则通过一次解决更少的问题来解决比那更大的问题。智慧的一部分是细分，以便集成单独的解决方案比仅仅解决它们更小的问题。
- en: '**Slicing**. Take a big project, cut it into thin slices, and rearrange the
    slices to suit your context. I can always slice projects finer and I can always
    find new permutations of the slices that meet different needs.'
  id: totrans-split-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**切片**。将一个大项目切成薄片，并重新排列这些片段以适应您的环境。我总是能够将项目切得更细，并且总能找到新的片段排列以满足不同的需求。'
- en: '**One thing at a time**. We’re so focused on efficiency that we reduce the
    number of feedback cycles in an attempt to reduce overhead. This leads to difficult
    debugging situations whose expected cost is greater than the cycle overhead we
    avoided.'
  id: totrans-split-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一次只做一件事**。我们如此专注于效率，以至于我们减少反馈周期的数量，试图减少开销。这导致了困难的调试情况，其预期成本大于我们避免的周期开销。'
- en: '**Make it run, make it right, make it fast**. (Example of One Thing at a Time,
    Slicing, and Easy Changes)'
  id: totrans-split-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**让它运行起来，让它正确，让它快起来**。 （一个事情一个事情地做，切片和简单的变更的示例）'
- en: '**Easy changes**. When faced with a hard change, first make it easy (warning,
    this may be hard), then make the easy change. (e.g. slicing, one thing at a time,
    concentration, isolation). Example of slicing.'
  id: totrans-split-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**简单的变更**。面对一个难以改变的变更时，先使其变得简单（警告，这可能很难），然后再进行简单的更改。（例如切片，一次只做一件事，专注，隔离）。切片的例子。'
- en: '**Concentration**. If you need to change several elements, first rearrange
    the code so the change only needs to happen in one element.'
  id: totrans-split-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**专注**。如果您需要更改几个元素，请先重新排列代码，以便只需在一个元素中进行更改。'
- en: '**Isolation**. If you only need to change a part of an element, extract that
    part so the whole subelement changes.'
  id: totrans-split-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**隔离**。如果您只需更改元素的一部分，请提取该部分，以便整个子元素都会更改。'
- en: '**Baseline Measurement**. Start projects by measuring the current state of
    the world. This goes against our engineering instincts to start fixing things,
    but when you measure the baseline you will actually know whether you are fixing
    things.'
  id: totrans-split-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基线测量**。通过测量世界的当前状态来开始项目。这与我们的工程直觉相反，即开始修复问题，但当您测量基线时，您实际上会知道是否在修复问题。'
- en: '**Call your shot**. Before you run code, predict out loud exactly what will
    happen.'
  id: totrans-split-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预言你的下一步**。在运行代码之前，大声预言将会发生什么。'
- en: '**Concrete hypotheses**. When the program is misbehaving, articulate exactly
    what you think is wrong before making a change. If you have two or more hypotheses,
    find a differential diagnosis.'
  id: totrans-split-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**具体的假设**。当程序运行出错时，明确陈述您认为出错的地方，然后再进行更改。如果您有两个或更多的假设，请进行差异诊断。'
- en: '**Remove extraneous detail**. When reporting a bug, find the shortest repro
    steps. When isolating a bug, find the shortest test case. When using a new API,
    start from the most basic example. “All that stuff can’t possibly matter,” is
    an expensive assumption when it’s wrong.'
  id: totrans-split-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**去除多余的细节**。在报告一个 bug 时，找到最短的重现步骤。在隔离一个 bug 时，找到最简短的测试案例。在使用一个新的 API 时，从最基本的例子开始。“所有那些东西肯定无关紧要”，这是一个昂贵的假设，当它是错误的时候。'
- en: '**Multiple scales**. Move between scales freely. Maybe this is a design problem,
    not a testing problem. Maybe it is a people problem, not a technology problem
    [cheating, this is always true].'
  id: totrans-split-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多重尺度**。自由地在不同尺度之间移动。也许这是一个设计问题，而不是一个测试问题。也许这是一个人员问题，而不是一个技术问题【作弊，这总是正确的】。'
- en: '**Symmetry**. Things that are almost the same can be divided into parts that
    are identical and parts that are clearly different.'
  id: totrans-split-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对称性**。几乎相同的事物可以分为相同的部分和明显不同的部分。'
- en: '**Aesthetics**. Beauty is a powerful gradient to climb. It is also a liberating
    gradient to flout (e.g. inlining a bunch of functions into one giant mess).'
  id: totrans-split-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**美学**。美是一个强大的梯度要攀登。它也是一个解放性的梯度要打破（例如将一堆函数内联成一个巨大的混乱）。'
- en: '**Rhythm**. Waiting until the right moment preserves energy and avoids clutter.
    Act with intensity when the time comes to act.'
  id: totrans-split-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**节奏**。等待合适的时刻可以保留能量并避免杂乱。当时机来临时，要以强烈的动作行动。'
- en: '**Tradeoffs**. All decisions are subject to tradeoffs. It’s more important
    to know what the decision depends on than it is to know which answer to pick today
    (or which answer you picked yesterday).'
  id: totrans-split-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**权衡**。所有决策都需要进行权衡。知道决策依赖于什么比知道今天选择哪个答案（或者昨天选择了哪个答案）更为重要。'
- en: '**Fun list**. When tangential ideas come, note them and get back to work quickly.
    Revisit this list when you’ve reached a stopping spot.'
  id: totrans-split-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**有趣清单**。当想到边角的想法时，记下它们并迅速回到工作中。当你达到一个停顿点时，重新审视这个清单。'
- en: '**Feed Ideas**. Ideas are like frightened little birds. If you scare them away
    they will stop coming around. When you have an idea, feed it a little. Invalidate
    it as quickly as you can, but from data not from a lack of self-esteem.'
  id: totrans-split-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**灌输想法**。想法就像受惊的小鸟一样。如果把它们吓跑了，它们就不会再来了。当你有一个想法时，给它一点食物。尽快地从数据而不是自尊心的缺失来无效化它。'
- en: '[80/15/5](https://www.facebook.com/notes/kent-beck/fresh-work-80155/1186004658099063).
    Spend 80% of your time on low-risk/reasonable-payoff work. Spend 15% of your time
    on related high-risk/high-payoff work. Spend 5% of your time on things that tickle
    you, regardless of payoff. Teach the next generation to do your 80% job. By the
    time someone is ready to take over, one of your 15% experiments (or, less frequently,
    one of your 5% experiments) will have paid off and will become your new 80%. Repeat.'
  id: totrans-split-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[80/15/5](https://www.facebook.com/notes/kent-beck/fresh-work-80155/1186004658099063)。花费80%的时间在低风险/合理回报的工作上。花费15%的时间在相关的高风险/高回报的工作上。花费5%的时间在你感兴趣的事情上，不管回报如何。教导下一代做你80%的工作。到某人准备接手时，你的15%实验（或者较少的情况下，你的5%实验）将会得到回报，并成为你的新80%工作。重复这个过程。'
- en: The flow in this outline seems to be from reducing risks by managing time and
    increasing learning to mindfully taking risks by using your whole brain and quickly
    triaging ideas.
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这个大纲中的流程似乎是通过管理时间来减少风险并增加学习，然后通过全脑使用并快速对想法进行分类来有意识地承担风险。
