- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-29 13:22:16'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-29 13:22:16'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Java virtual threads hit with pinning issue | InfoWorld
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Java虚拟线程遭遇“固定”问题 | InfoWorld
- en: 来源：[https://www.infoworld.com/article/3713220/java-virtual-threads-hit-with-pinning-issue.html](https://www.infoworld.com/article/3713220/java-virtual-threads-hit-with-pinning-issue.html)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.infoworld.com/article/3713220/java-virtual-threads-hit-with-pinning-issue.html](https://www.infoworld.com/article/3713220/java-virtual-threads-hit-with-pinning-issue.html)
- en: Java’s [virtual threads](https://www.infoworld.com/article/3678148/intro-to-virtual-threads-a-new-approach-to-java-concurrency.html),
    introduced in [JDK 21](https://www.infoworld.com/article/3689880/jdk-21-the-new-features-in-java-21.html)
    in September 2023 to make it easier to write and maintain concurrent applications,
    has suffered from a “pinning” issue that arises with synchronized methods or synchronized
    statements.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: Java的[virtual threads](https://www.infoworld.com/article/3678148/intro-to-virtual-threads-a-new-approach-to-java-concurrency.html)，于2023年9月在[JDK
    21](https://www.infoworld.com/article/3689880/jdk-21-the-new-features-in-java-21.html)中引入，旨在更轻松地编写和维护并发应用程序，但在同步方法或同步语句中出现了“固定”问题。
- en: Oracle [detailed the virtual thread pinning issue](https://inside.java/2024/02/21/quality-heads-up/)
    this week on the [Inside Java website](https://inside.java/). The two most common
    cases involve a virtual thread parking while in a synchronized method, and a virtual
    thread blocking when entering a synchronized method, because the object’s associated
    monitor is held by another thread. In both cases, the carrier or native thread
    is not released to do other other work. Virtual thread pinning could impact performance
    and scalability and potentially result in starvation and deadlock, according to
    the blog post.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: Oracle本周在[Inside Java网站](https://inside.java/)详细说明了虚拟线程固定问题。两种最常见的情况涉及虚拟线程在同步方法中停车，以及虚拟线程在进入同步方法时阻塞，因为对象的关联监视器被另一个线程持有。在这两种情况下，承载或本地线程未被释放以执行其他工作。虚拟线程固定可能会影响性能和可伸缩性，并潜在导致饥饿和死锁，根据该博客文章。
- en: New early access builds for [Java’s Project Loom](https://jdk.java.net/loom/)
    introduce changes to the object monitor implementation that do not pin in these
    two common cases. The Loom team is seeking help from users to test the reliability
    and performance of these updated object monitors with code that uses virtual threads
    and with libraries that are heavily synchronized. To report an issue, developers
    should use the [Loom mailing list](https://mail.openjdk.org/pipermail/loom-dev/).
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: Java的Project Loom的新早期访问版本引入了对对象监视器实现的更改，这两种常见情况下不再固定。Loom团队请求用户帮助测试使用虚拟线程和大量同步库的代码来评估这些更新的对象监视器的可靠性和性能。要报告问题，开发人员应使用[Loom邮件列表](https://mail.openjdk.org/pipermail/loom-dev/)。
- en: Project Loom is the OpenJDK project that develops JVM features and APIs to support
    lightweight concurrency. Previewed in [JDK 19](https://www.infoworld.com/article/3653331/jdk-19-the-new-features-in-java-19.html)
    and [JDK 20](https://www.infoworld.com/article/3676699/jdk-20-the-new-features-in-java-20.html),
    virtual threads are lightweight threads that dramatically reduce the effort of
    writing, maintaining, and observing high-throughput concurrent applications, according
    to Oracle. Despite the pinning issue, Oracle said virtual threads have been extremely
    well-received by the Java community and ecosystem.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: Project Loom是OpenJDK项目，旨在开发支持轻量级并发的JVM特性和API。根据Oracle的说法，在[JDK 19](https://www.infoworld.com/article/3653331/jdk-19-the-new-features-in-java-19.html)和[JDK
    20](https://www.infoworld.com/article/3676699/jdk-20-the-new-features-in-java-20.html)中预览，虚拟线程是轻量级线程，大大降低了编写、维护和观察高吞吐量并发应用程序的工作量。尽管存在固定问题，Oracle表示虚拟线程在Java社区和生态系统中受到了极大的欢迎。
- en: Copyright © 2024 IDG Communications, Inc.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 版权所有 © 2024 IDG Communications, Inc.
