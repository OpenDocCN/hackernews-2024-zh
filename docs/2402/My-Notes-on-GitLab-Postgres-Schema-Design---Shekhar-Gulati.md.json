["```\ncreate table exp_bs(id serial primary key, n bigint not null);\n\n```", "```\ninsert into exp_bs(n) select g.n from generate_series(1,10000000) as g(n);\n\n```", "```\nalter table exp_bs alter column id TYPE bigint;\n\n```", "```\nALTER TABLE\nTime: 10845.062 ms (00:10.845)\n\n```", "```\nalter sequence exp_bs_id_seq as bigint;\n\n```", "```\nALTER SEQUENCE\nTime: 4.505 ms\n\n```", "```\nCREATE SEQUENCE audit_events_id_seq\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n```", "```\nCREATE TABLE issues (\n    id integer NOT NULL,\n    title character varying,\n      project_id integer,\n    iid integer,\n    // rest of the columns removed\n)\n\n```", "```\nhttps://gitlab.com/shekhargulati123/sg/-/issues/1\nhttps://gitlab.com/shekhargulati123/sg2/-/issues/1\n\n```", "```\nCREATE UNIQUE INDEX index_issues_on_project_id_and_iid ON public.issues USING btree (project_id, iid);\n\n```", "```\nCREATE TABLE audit_events (\n    id bigint NOT NULL,\n    author_id integer NOT NULL,\n    entity_id integer NOT NULL,\n    entity_type character varying NOT NULL,\n    details text,\n    ip_address inet,\n    author_name text,\n    entity_path text,\n    target_details text,\n    created_at timestamp without time zone NOT NULL,\n    target_type text,\n    target_id bigint,\n    CONSTRAINT check_492aaa021d CHECK ((char_length(entity_path) <= 5500)),\n    CONSTRAINT check_83ff8406e2 CHECK ((char_length(author_name) <= 255)),\n    CONSTRAINT check_97a8c868e7 CHECK ((char_length(target_type) <= 255)),\n    CONSTRAINT check_d493ec90b5 CHECK ((char_length(target_details) <= 5500))\n)\nPARTITION BY RANGE (created_at);\n\n```", "```\ncreate table cv_exp (id bigint primary key, s varchar(200) default gen_random_uuid() not null);\ncreate index sidx on cv_exp (s);\n\n```", "```\ninsert into cv_exp(id) select g.n from generate_series(1,10000000) as g(n);\n\n```", "```\nalter table cv_exp alter column s type varchar(300);\n\n```", "```\nALTER TABLE\nTime: 37.460 ms\n\n```", "```\nalter table cv_exp alter column s type varchar(100);\n\n```", "```\nALTER TABLE\nTime: 35886.638 ms (00:35.887)\n\n```", "```\ncreate table text_exp (id bigint primary key, \ns text default gen_random_uuid() not null,\nCONSTRAINT check_15e644d856 CHECK ((char_length(s) <= 200)));\n\n```", "```\ninsert into text_exp(id) select g.n from generate_series(1,10000000) as g(n);\n\n```", "```\n alter table text_exp drop constraint check_15e644d856;\n\n```", "```\nalter table text_exp add constraint check_15e644d856 CHECK ((char_length(s) <= 100));\n\n```", "```\nALTER TABLE\nTime: 1870.250 ms (00:01.870)\n\n```", "```\nCREATE TABLE project_custom_attributes (\n    id integer NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL,\n    project_id integer NOT NULL,\n    key character varying NOT NULL,\n    value character varying NOT NULL\n);\n\n```", "```\nCREATE TABLE issues (\n    id integer NOT NULL,\n    title character varying,\n\n    created_at timestamp without time zone,\n    updated_at timestamp without time zone,\n\n    closed_at timestamp with time zone,\n    closed_by_id integer,\n);\n\n```", "```\nCREATE TABLE merge_request_metrics (\n    id integer NOT NULL,\n    latest_build_started_at timestamp without time zone,\n    latest_build_finished_at timestamp without time zone,\n    merged_at timestamp without time zone,\n    created_at timestamp without time zone NOT NULL,\n    updated_at timestamp without time zone NOT NULL,\n\n    latest_closed_at timestamp with time zone,\n    first_comment_at timestamp with time zone,\n    first_commit_at timestamp with time zone,\n    last_commit_at timestamp with time zone,\n    first_approved_at timestamp with time zone,\n    first_reassigned_at timestamp with time zone\n);\n\n```", "```\nALTER TABLE ONLY todos\n    ADD CONSTRAINT fk_rails_a27c483435 FOREIGN KEY (group_id) REFERENCES namespaces(id) ON DELETE CASCADE;\n\nALTER TABLE ONLY projects\n    ADD CONSTRAINT fk_projects_namespace_id FOREIGN KEY (namespace_id) REFERENCES namespaces(id) ON DELETE RESTRICT;\n\nALTER TABLE ONLY authentication_events\n    ADD CONSTRAINT fk_rails_b204656a54 FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL;\n\n```", "```\n  ERROR:  update or delete on table \"a\" violates foreign key constraint \"fk_a_id\" on table \"b\"\n  DETAIL:  Key (id)=(1) is still referenced from table \"b\".\n\n```", "```\nCREATE INDEX index_issues_on_title_trigram ON issues USING gin (title gin_trgm_ops);\nCREATE INDEX index_issues_on_description_trigram ON issues USING gin (description gin_trgm_ops);\n\n```", "```\ncreate table words(id serial primary key, word text not null);\n\n```", "```\n\\copy words(word) from '/Users/xxx/Aword.csv' CSV;\n\n```", "```\nselect count(*) from words;\n\n```", "```\n count\n-------\n 11616\n(1 row)\n\n```", "```\ncreate index id1 on words using btree (word);\n\n```", "```\nEXPLAIN select * from words where word like '%bul%';\n\n```", "```\n                        QUERY PLAN\n-----------------------------------------------------------\n Seq Scan on words  (cost=0.00..211.20 rows=1 width=14)\n   Filter: (word ~~ '%bul%'::text)\n(2 rows)\n\n```", "```\nCREATE EXTENSION pg_trgm;\n\n```", "```\ncreate index index_words_on_word_trigram ON words USING gin (word gin_trgm_ops);\n\n```", "```\nEXPLAIN select count(*) from words where word like '%bul%';\n\n```", "```\n                                             QUERY PLAN\n----------------------------------------------------------------------------------------------------\n Aggregate  (cost=16.02..16.03 rows=1 width=8)\n   ->  Bitmap Heap Scan on words  (cost=12.01..16.02 rows=1 width=0)\n         Recheck Cond: (word ~~ '%bul%'::text)\n         ->  Bitmap Index Scan on index_words_on_word_trigram  (cost=0.00..12.01 rows=1 width=0)\n               Index Cond: (word ~~ '%bul%'::text)\n(5 rows)\n\n```", "```\nCREATE TABLE error_tracking_error_events (\n    id bigint NOT NULL,\n    payload jsonb DEFAULT '{}'::jsonb NOT NULL,\n  // rest removed\n);\n\n```", "```\nCREATE TABLE operations_strategies (\n    id bigint NOT NULL,\n    feature_flag_id bigint NOT NULL,\n    name character varying(255) NOT NULL,\n    parameters jsonb DEFAULT '{}'::jsonb NOT NULL\n);\n\n```", "```\nCREATE TABLE packages_debian_file_metadata (\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL,\n    package_file_id bigint NOT NULL,\n    file_type smallint NOT NULL,\n    component text,\n    architecture text,\n    fields jsonb,\n);\n\n```", "```\nCREATE TABLE vulnerability_finding_evidences (\n    id bigint NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL,\n    vulnerability_occurrence_id bigint NOT NULL,\n    data jsonb DEFAULT '{}'::jsonb NOT NULL\n);\n\n```", "```\n  CREATE TABLE issues (\n      id integer NOT NULL,\n      title character varying,\n      author_id integer,\n      project_id integer,\n      created_at timestamp without time zone,\n      updated_at timestamp without time zone,\n      // removed remaining columns and constraints\n  );\n\n```", "```\n  CREATE TABLE audit_events (\n      id bigint NOT NULL,\n      author_id integer NOT NULL,\n      entity_id integer NOT NULL,\n      created_at timestamp without time zone NOT NULL,\n      // removed remaining columns and constraints\n  )\n\n```", "```\n  CREATE TABLE merge_requests_compliance_violations (\n      id bigint NOT NULL,\n      violating_user_id bigint NOT NULL,\n      merge_request_id bigint NOT NULL,\n      reason smallint NOT NULL,\n      severity_level smallint DEFAULT 0 NOT NULL\n  );\n\n```", "```\n  CREATE TABLE ci_builds (\n      status character varying,\n      finished_at timestamp without time zone,\n      trace text,\n\n        lock_version integer DEFAULT 0,\n\n        // removed columns\n      CONSTRAINT check_1e2fbd1b39 CHECK ((lock_version IS NOT NULL))\n  );\n\n```", "```\n  CREATE TABLE audit_events (\n      id bigint NOT NULL,\n      ip_address inet,\n    // other columns removed for clarity\n  );\n\n```", "```\n   create table e (id serial primary key, ip_addr inet not null);\n\n```", "```\n  insert into e(ip_addr) values ('192.168.1.255');\n\n```", "```\n  insert into e(ip_addr) values ('192.168.1.5/24');\n\n```", "```\n  select id, abbrev(ip_addr) from e;\n\n```", "```\n   id |     abbrev\n  ----+----------------\n    1 | 192.168.1.255\n    2 | 8.8.8.8\n    3 | 192.168.1.5/24\n  (3 rows)\n\n```", "```\n  insert into e(ip_addr) values ('192.168.1');\n\n```", "```\n  ERROR:  invalid input syntax for type inet: \"192.168.1\"\n  LINE 1: insert into e(ip_addr) values ('192.168.1');\n\n```", "```\n  select * from e where ip_addr << inet '192.168.1.1/24';\n\n```", "```\n   id |    ip_addr\n  ----+---------------\n    1 | 192.168.1.255\n  (1 row)\n\n```", "```\n  select * from e where ip_addr <<= inet '192.168.1.1/24';\n\n```", "```\n   id |    ip_addr\n  ----+----------------\n    1 | 192.168.1.255\n    3 | 192.168.1.5/24\n  (2 rows)\n\n```", "```\n  CREATE TABLE alert_management_alert_user_mentions (\n      id bigint NOT NULL,\n      alert_management_alert_id bigint NOT NULL,\n      note_id bigint,\n      mentioned_users_ids integer[],\n      mentioned_projects_ids integer[],\n      mentioned_groups_ids integer[]\n  );\n\n```", "```\n  CREATE TABLE dast_site_profiles (\n      id bigint NOT NULL,\n      excluded_urls text[] DEFAULT '{}'::text[] NOT NULL,\n  );\n  CREATE TABLE alert_management_alerts (\n    id bigint NOT NULL,\n    hosts text[] DEFAULT '{}'::text[] NOT NULL,\n  );\n  CREATE TABLE ci_pending_builds (\n      id bigint NOT NULL,\n      tag_ids integer[] DEFAULT '{}'::integer[],\n  );\n\n```"]