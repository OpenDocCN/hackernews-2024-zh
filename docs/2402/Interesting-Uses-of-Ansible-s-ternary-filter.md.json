["```\n- name: service-foo, use systemd module unless upstart is present, then use old service module\n  service:\n    state: restarted\n    enabled: yes\n    use: \"{{ (ansible_service_mgr == 'upstart') | ternary('service', 'systemd') }}\" \n```", "```\n- name: Validate configuration\n  become: true\n  become_user: \"{{ consul_user }}\"\n  ansible.builtin.command: >\n    {{ consul_binary }} validate {{ (ansible_verbosity == 0) | ternary(\"-quiet\", \"\") }}\n    {{ consul_config_path }}/config.json {{ consul_configd_path }}\n  changed_when: false \n```", "```\n- name: Validate configuration\n  become: true\n  become_user: \"{{ consul_user }}\"\n  ansible.builtin.command: >\n    {{ consul_binary }} validate {{ \"-quiet\" if ansible_verbosity == 0 }}\n    {{ consul_config_path }}/config.json {{ consul_configd_path }}\n  changed_when: false \n```", "```\n- name: \"{{ role_name }} | test_create_scheduler | test create scheduler\"\n  import_tasks: test_create_scheduler.yml\n\n- name: \"{{ role_name }} | test_create_scheduler | test idempotence of create scheduler\"\n  import_tasks: test_create_scheduler.yml\n  vars:\n    test_proxysql_scheduler_check_idempotence: true \n```", "```\n- name: \"{{ role_name }} | {{ current_test }} | check if create scheduler reported a change\"\n  assert:\n    that:\n      - \"status is {{ test_proxysql_scheduler_check_idempotence|ternary('not changed', 'changed') }}\" \n```", "```\n- name: \"{{ role_name }} | {{ current_test }} | are we performing a delete\"\n  set_fact:\n    test_delete: \"{{ current_test | regex_search('^test_delete') | ternary(true, false) }}\" \n```", "```\n- name: Install cassandra-driver\n  pip:\n    name: \"cassandra-driver{{ ansible_python_version.startswith('2.7') | ternary('==3.26.*', '') }}\" \n```", "```\n{{ (zabbix_web_ssl_cipher_suite is defined and zabbix_web_ssl_cipher_suite is not none) | ternary('', '# ') }}ssl_ciphers {{ zabbix_web_ssl_cipher_suite | default('') }} \n```", "```\n{{ \"HostKeyAlgorithms \" ~ ssh_host_key_algorithms|join(',') if ssh_host_key_algorithms else \"HostKeyAlgorithms\" | comment }} \n```", "```\n{{ ssh_host_key_algorithms | ternary(\"HostKeyAlgorithms \" ~ ssh_host_key_algorithms|join(','), \"HostKeyAlgorithms\" | comment) }} \n```"]