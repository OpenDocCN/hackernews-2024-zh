["```\nvoid cos(float* x, size_t n) {\n    constexpr float tp = 1\\. / (2\\. * M_PI);\n    for (size_t i = 0; i < n; i++) {\n        x = x * tp;\n        x = x - (float(.25) + std::floor(x + float(.25)));\n        x = x * (float(16.) * (std::abs(x) - float(.5)));\n        x = x + (float(.225) * x * (std::abs(x) - float(1.)));\n    }\n}\n```", "```\nvoid cos_avx(float* x, size_t n) {\n    const __m256 tp = _mm256_set1_ps(1\\. / (2\\. * M_PI));\n    const __m256 c0p25 = _mm256_set1_ps(0.25);\n    const __m256 c16 = _mm256_set1_ps(16.0);\n    const __m256 c0p5 = _mm256_set1_ps(0.5);\n    ...\n    for (size_t i = 0; i < n; i+=4) {\n        __m256 x = _mm256_loadu_ps(x + i);\n        x = _mm256_mul_ps(x, tp);\n        ...\n    }\n}\n\nvoid cos_neon(float* x, size_t n) {\n    const float32x4_t tp = vdupq_n_f32(1\\. / (2\\. * M_PI));\n    const float32x4_t c0p25 = vdupq_n_f32(0.25);\n    const float32x4_t c16 = vdupq_n_f32(16.0);\n    const float32x4_t c0p5 = vdupq_n_f32(0.5);\n    ...\n    for (size_t i = 0; i < n; i+=4) {\n        float32x4_t x = vld1q_f32(x + i);\n        x = vmulq_f32(x, tp);\n        ...\n    }\n}\n```", "```\nvoid cos_avx(float* x, size_t n) {\n    // Note that lanes pairs (0, 4), (1, 5), (2, 6), (3.7)\n    // hold identical values.\n    const __m256 c0 = _mm256_setr_ps(tp, 0.25, 16.0, 0.5, tp, 0.25, 16.0, 0.5);\n    ...\n    for (size_t i = 0; i < n; i+=4) {\n        ...\n    }\n}\n\nvoid cos_neon(float* x, size_t n) {\n    float c0A[4] = { tp, 0.25, 16.0, 0.5 };\n    const float32x4_t c0 = vld1q_f32(c0A);\n    ...\n    for (size_t i = 0; i < n; i+=4) {\n        ...\n    }\n}\n```", "```\nvoid cos_avx(float* x, size_t n) {\n    // Note that lanes pairs (0, 4), (1, 5), (2, 6), (3.7)\n    // hold identical values.\n    const __m256 c0 = _mm256_setr_ps(tp, 0.25, 16.0, 0.5, tp, 0.25, 16.0, 0.5);\n    ...\n    for (size_t i = 0; i < n; i+=4) {\n        __m256 x = _mm256_loadu_ps(x + i);\n        __m256 tp = _mm256_shuffle_ps(c0, c0, _MM_SHUFFLE(0, 0, 0, 0));\n        x = _mm256_mul_ps(x, tp);\n        ...\n    }\n}\n```", "```\nvoid cos_neon(float* x, size_t n) {\n    float c0A[4] = { tp, 0.25, 16.0, 0.5 };\n    const float32x4_t c0 = vld1q_f32(c0A);\n    ...\n    for (size_t i = 0; i < n; i+=4) {\n        float32x4_t x = vld1q_f32(x + i);\n        float32x4_t tp = vdupq_laneq_f32(c0, 0);\n        x = vmulq_f32(x, tp);\n        ...\n    }\n}\n```", "```\nfor (size_t i = 0; i < n; i+=4) {\n    float32x4_t x = vld1q_f32(x + i);\n    x = vmulq_f32(x, c0, 0);\n    ...\n}\n```"]