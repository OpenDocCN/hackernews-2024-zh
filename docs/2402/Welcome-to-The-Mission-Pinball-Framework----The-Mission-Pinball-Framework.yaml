- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:34:39'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Welcome to The Mission Pinball Framework! - The Mission Pinball Framework
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://missionpinball.org/](https://missionpinball.org/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[](https://github.com/missionpinball/mpf-docs/blob/main/docs/index.md "Edit
    this page")'
  prefs: []
  type: TYPE_NORMAL
- en: The Mission Pinball Framework (MPF)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Open source software for powering real pinball machines!*'
  prefs: []
  type: TYPE_NORMAL
- en: The **Mission Pinball Framework** (MPF) is a free Python-based pinball software
    framework that's used to run real pinball machines. It's compatible with virtually
    all modern pinball controllers and machines, and it's the most feature complete
    pinball software environment you'll find.
  prefs: []
  type: TYPE_NORMAL
- en: MPF is a complete pinball software package which runs on a computer inside your
    pinball machine. (It can run on Windows, Mac, Linux, or Raspberry Pi.) MPF controls
    all the electronics in the machine, including the lights, the solenoids (the things
    that make the balls move), the DMD if your machine has one, the LCD if your machine
    has one, the switches, and the motors. MPF uses simple configuration files to
    control the game logic, sounds, videos, effects, and everything else you need
    to create the rules for your game, including modes, multiballs, ball saves, scoring,
    and more.
  prefs: []
  type: TYPE_NORMAL
- en: MPF has been around since 2014, and it's been used to power hundreds of homebrew
    pinball machines and a few commercially-released ones. It's created by volunteers
    in their spare time.
  prefs: []
  type: TYPE_NORMAL
- en: Join in!
  prefs: []
  type: TYPE_NORMAL
- en: Features
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Works with many modern pinball control systems, including FAST Pinball, CobraPin,
    P3-ROC, and many more.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Runs on Windows, Mac, Linux, and Raspberry Pi.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Supports many types of pinball machines, including solid state, EM, and custom
    homebrew machines.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Built-in support for many types of pinball mechs, including flippers, pop bumpers,
    slingshots, drop targets, spinners, and more. (See the [complete list](mechs/).)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Supports many types of pinball displays, including DMDs, LCDs, segments, and
    mechanical score reels.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pinball logic built in for player management, game modes, multiballs, ball saves,
    tilt, shots, and more. (See the [complete list](game_logic/).)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build your game with simple configuration files. (But you can also mix in your
    own custom code too, use as much or little of the config files as you want.)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 100% open source and completely free to use.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See the [Features](start/features/) page for a complete list of features.
  prefs: []
  type: TYPE_NORMAL
- en: '[Installation Instructions](install/) [Read the Tutorial](tutorial/)'
  prefs: []
  type: TYPE_NORMAL
- en: Getting Started
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: What MPF is, how it works, how to install it, how to use it.
  prefs: []
  type: TYPE_NORMAL
- en: Hardware
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Pinball machines, control systems, and pinball mechs.
  prefs: []
  type: TYPE_NORMAL
- en: Game Programming
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: See the [Tools page](tools/) for links to several tools that help you work with
    MPF, including the [MPF Monitor](tools/monitor/), a visual utility that connects
    to a live running instance of MPF and shows you the stream of events, device state,
    player variables, etc.
  prefs: []
  type: TYPE_NORMAL
- en: Reference
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Projects built on MPF
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: About MPF
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Something missing or wrong? You can fix it!
  prefs: []
  type: TYPE_NORMAL
- en: This website is edited by people like you! Is something wrong or missing? Is
    something out of date, or can you explain it better?
  prefs: []
  type: TYPE_NORMAL
- en: Please help us! You can fix it yourself and be an official "open source" contributor!
  prefs: []
  type: TYPE_NORMAL
- en: It's easy! See our *[Beginner's guide to editing the docs](/about/help)*.
  prefs: []
  type: TYPE_NORMAL
- en: '<details class="tip"><summary>Page navigation via the keyboard: `<` `>`</summary>'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can navigate this site via the keyboard. There are two modes:'
  prefs: []
  type: TYPE_NORMAL
- en: 'General navigation, when *search* is not focused:'
  prefs: []
  type: TYPE_NORMAL
- en: '`F` , `S` , `/` : open search dialog'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`P` , `,` : go to previous page'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`N` , `.` : go to next page'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'While using the *search* function:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Down` , `Up` : select next / previous result'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Esc` , `Tab` : close search'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Enter` : go to highlighted page in the results</details>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
