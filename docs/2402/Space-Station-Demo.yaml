- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:35:53'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Space Station Demo
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://www.lexaloffle.com/bbs/?pid=94322#p](https://www.lexaloffle.com/bbs/?pid=94322#p)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Copy and paste the snippet below into your HTML.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: This cartridge''s settings do not allow embedded playback. A [Play at
    lexaloffle] link will be included instead.'
  prefs: []
  type: TYPE_NORMAL
- en: Here's a quick demo of a 6 degree of freedom 3D engine that I have been working
    on.
  prefs: []
  type: TYPE_NORMAL
- en: You can just explore a small space station in a Descent-like style.
  prefs: []
  type: TYPE_NORMAL
- en: '**Controls**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Z: Thrust'
  prefs: []
  type: TYPE_NORMAL
- en: 'Arrow Keys: Turn'
  prefs: []
  type: TYPE_NORMAL
- en: 'X+Arrows: Roll'
  prefs: []
  type: TYPE_NORMAL
- en: '**Notes**'
  prefs: []
  type: TYPE_NORMAL
- en: The map is stored in a **long** string and is generated from a Blender OBJ file.
    The station is as complex as I can make it before running out of compressed code
    space. To make something larger, I think I would have to switch to more of a 3D
    tile system with room building blocks that snap together.
  prefs: []
  type: TYPE_NORMAL
- en: The engine uses a simplified portal system paired with convex sectors to determine
    room visibility and draw order.
  prefs: []
  type: TYPE_NORMAL
- en: '**Thanks**'
  prefs: []
  type: TYPE_NORMAL
- en: Thanks to Fred72 for the polyfill code. ([https://www.lexaloffle.com/bbs/?tid=3393](https://www.lexaloffle.com/bbs/?tid=3393))
  prefs: []
  type: TYPE_NORMAL
- en: 'Updates: fixed some code that broke with version 2.5g'
  prefs: []
  type: TYPE_NORMAL
