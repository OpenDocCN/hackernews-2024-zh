- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-29 12:52:10'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: Ubuntu Generic vs. Low-Latency Linux Kernel Benchmarks For HPC & Desktop - Phoronix
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://www.phoronix.com/news/Ubuntu-Generic-LL-Kernel](https://www.phoronix.com/news/Ubuntu-Generic-LL-Kernel)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: With
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
- en: '[Ubuntu looking at applying their low-latency optimizations to their generic
    kernel builds](https://www.phoronix.com/news/Ubuntu-Low-Lat-Generic-Kernel)'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
- en: in order to eliminate maintaining their existing "lowlatency" kernel option,
    I decided to run some fresh benchmarks looking at the performance impact of their
    low-latency kernel against their "generic" default kernel used on Ubuntu Linux
    systems.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
- en: With it mostly being some Kconfig changes these days for their low-latency kernel
    build, they are looking at incorporating them into their generic kernel build.
    This would save on having to maintain the "lowlatency" kernel build with the additional
    build resources, QA/testing, and simplicity on the user side with more versatility
    out of the generic kernel build.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: '![AMD EPYC 8534P](img/4c3b2ede1c9b09691ee36165378cc4e4.png)'
  id: totrans-split-10
  prefs: []
  type: TYPE_IMG
- en: As part of weighing the change, Canonical kernel engineers have acknowledged
    this could cause some performance regressions particularly in the area of HPC.
    So with the current Linux 6.5-based kernel on Ubuntu 23.10 I ran benchmarks of
    their existing "generic" and "lowlatency" kernel builds.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
- en: This round of testing was on an AMD EPYC 8534P "Siena" 64-core server and simply
    running the same set of benchmarks in the same configuration on the default "generic"
    kernel against the same kernel version in its "lowlatency" form. HPC and other
    general workloads were the focus to see what the performance implications may
    be of using the low-latency kernel build.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
- en: Of
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
- en: '[148 benchmarks](https://openbenchmarking.org/result/2401290-NE-UBUNTUKER76&sgm=1&swl=1)'
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
- en: run on both kernel flavors, the generic kernel was faster by just 1%...
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
- en: Only in a handful of the 148 benchmarks was there a measurable difference in
    these HPC/workstation/desktop benchmarks. Most of the differences were within
    the Stress-NG kernel micro-benchmarks, which is to be expected. There were also
    some minor fluctuations within the video encoding and PostgreSQL database benchmarks,
    among others. Most of the time though that the generic kernel was faster tended
    to be by 4% or less.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
- en: See
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
- en: '[all of the benchmarks](https://openbenchmarking.org/result/2401290-NE-UBUNTUKER76&sgm=1&swl=1)'
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
- en: in full for those interested. It will be interesting to see what Canonical decides
    around the low-latency kernel version for the Ubuntu 24.04 LTS due out in April
    along with various other performance tuning/enhancements.
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
