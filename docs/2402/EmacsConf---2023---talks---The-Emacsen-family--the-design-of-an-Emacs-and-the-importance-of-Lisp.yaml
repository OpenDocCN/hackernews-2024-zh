- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-27 14:55:15'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:55:15
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: EmacsConf - 2023 - talks - The Emacsen family, the design of an Emacs and the
    importance of Lisp
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: EmacsConf - 2023 - talks - Emacsen家族，Emacs的设计及Lisp的重要性
- en: 来源：[https://emacsconf.org/2023/talks/emacsen/](https://emacsconf.org/2023/talks/emacsen/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://emacsconf.org/2023/talks/emacsen/](https://emacsconf.org/2023/talks/emacsen/)
- en: The Emacsen family, the design of an Emacs and the importance of Lisp
  id: totrans-split-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Emacsen家族，Emacs的设计及Lisp的重要性
- en: Fermin (he/him) - [https://codeberg.org/sasanidas](https://codeberg.org/sasanidas)
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: Fermin（他）- [https://codeberg.org/sasanidas](https://codeberg.org/sasanidas)
- en: 'Format: 19-min talk; Q&A: BigBlueButton conference room'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 格式：19分钟演讲；问答环节：BigBlueButton会议室
- en: 'Status: TO_INDEX_QA'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 状态：待索引及质询
- en: Talk
  id: totrans-split-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 演讲
- en: <https://media.emacsconf.org/2023/emacsconf-2023-emacsen--the-emacsen-family-the-design-of-an-emacs-and-the-importance-of-lisp--fermin--main.webm>
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: <https://media.emacsconf.org/2023/emacsconf-2023-emacsen--the-emacsen-family-the-design-of-an-emacs-and-the-importance-of-lisp--fermin--main.webm>
- en: captions="""<track label="English" kind="captions" srclang="en" src="/2023/captions/emacsconf-2023-emacsen--the-emacsen-family-the-design-of-an-emacs-and-the-importance-of-lisp--fermin--main.vtt"
    default="">"""<track kind="chapters" label="Chapters" src="/2023/captions/emacsconf-2023-emacsen--the-emacsen-family-the-design-of-an-emacs-and-the-importance-of-lisp--fermin--main--chapters.vtt">
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 字幕="""<track label="英文" kind="captions" srclang="en" src="/2023/captions/emacsconf-2023-emacsen--the-emacsen-family-the-design-of-an-emacs-and-the-importance-of-lisp--fermin--main.vtt"
    default="">"""<track kind="chapters" label="章节" src="/2023/captions/emacsconf-2023-emacsen--the-emacsen-family-the-design-of-an-emacs-and-the-importance-of-lisp--fermin--main--chapters.vtt">
- en: '*Your browser does not support the video tag. Please download the video instead.*'
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*您的浏览器不支持视频标签。请下载视频。*'
- en: '[PRE0]'
  id: totrans-split-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Duration: 18:28 minutes'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 持续时间：18分28秒
- en: Q&A
  id: totrans-split-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问答
- en: <https://media.emacsconf.org/2023/emacsconf-2023-emacsen--the-emacsen-family-the-design-of-an-emacs-and-the-importance-of-lisp--fermin--answers.webm>
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: <https://media.emacsconf.org/2023/emacsconf-2023-emacsen--the-emacsen-family-the-design-of-an-emacs-and-the-importance-of-lisp--fermin--answers.webm>
- en: captions="""<track label="English" kind="captions" srclang="en" src="/2023/captions/emacsconf-2023-emacsen--the-emacsen-family-the-design-of-an-emacs-and-the-importance-of-lisp--fermin--answers.vtt"
    default="">"""
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 字幕="""<track label="英文" kind="captions" srclang="en" src="/2023/captions/emacsconf-2023-emacsen--the-emacsen-family-the-design-of-an-emacs-and-the-importance-of-lisp--fermin--answers.vtt"
    default="">"""
- en: '*Your browser does not support the video tag. Please download the video instead.*'
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: '*您的浏览器不支持视频标签。请下载视频。*'
- en: 'Listen to just the audio:'
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 听音频：
- en: 'Duration: 1:08:14 minutes'
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 持续时间：1小时8分14秒
- en: Description
  id: totrans-split-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 描述
- en: '<details class="help"><summary>Help wanted: Q&A could be indexed with chapter
    markers</summary></details>'
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: <details class="help"><summary>求助：希望通过章节标记索引问答环节</summary></details>
- en: The Q&A session for this talk does not have chapter markers yet. Would you like
    to help? See [help with chapter markers](../../../help_with_chapter_markers/)
    for more details. You can use the vidid="emacsen-qanda" if adding the markers
    to this wiki page, or e-mail your chapter notes to [emacsconf-submit@gnu.org](mailto:emacsconf-submit@gnu.org).
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 关于此演讲的问答环节目前尚无章节标记。您愿意帮忙吗？请参阅[帮助添加章节标记](../../../help_with_chapter_markers/)以获取更多详细信息。如果您想在此Wiki页面上添加标记，请使用vidid="emacsen-qanda"，或将章节注释发送至[emacsconf-submit@gnu.org](mailto:emacsconf-submit@gnu.org)。
- en: (If you want to work on this and you think it might take you a while, you can
    reserve this task by editing the page and adding volunteer="your-name date" or
    by e-mailing [emacsconf-submit@gnu.org](mailto:emacsconf-submit@gnu.org).)
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: （如果您希望参与此工作，并且认为可能需要一段时间，请通过编辑页面并添加volunteer="your-name date"或通过发送电子邮件至[emacsconf-submit@gnu.org](mailto:emacsconf-submit@gnu.org)来预订此任务。）
- en: This talk is about the design of an Emacs the Emacsen editors, GNU Emacs, Emacs
    Lisp and the extensibility of GNU Emacs (and Lem as an example of Common Lisp).
    I want to focus the talk about the understand of the concept of Emacs but with
    concrete examples (GNU Emacs and Lem), also highlight some historical Emacsen
    and how the family of editors is doing today.
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这次演讲讨论了Emacs的设计，Emacsen编辑器，GNU Emacs，Emacs Lisp以及GNU Emacs的可扩展性（以Lem作为Common
    Lisp的例子）。我希望聚焦于解释Emacs概念，同时通过具体例子（GNU Emacs和Lem）来突出历史上的一些Emacsen以及目前编辑器家族的情况。
- en: 'About the speaker:'
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 关于演讲者：
- en: I'm Fermin MF, I'm a Software Engineer from Spain with interest in Emacsy editors.
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我是来自西班牙的软件工程师**Fermin MF**，对Emacs风格的编辑器很感兴趣。
- en: Discussion
  id: totrans-split-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 讨论
- en: Questions and answers
  id: totrans-split-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题和答案
- en: 'Q: How large is the LEM community? How big is the chance of it surviving long
    term?'
  id: totrans-split-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Q：LEM社区有多大？它长期生存的机会有多大？
- en: Q:Are there any Lisp machine capabilities you are trying to revive that GNU
    Emacs lacks?  The typed objects capability in the editor as an example.
  id: totrans-split-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Q: 你是否正在尝试恢复 GNU Emacs 缺少的任何 Lisp 机器功能？例如编辑器中的类型化对象功能。'
- en: 'Q: What about using Lem for things other than coding common lisp, dired magit
    "notes org mode dentoe org roam" emms pdf tools shell mode?'
  id: totrans-split-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Q: 除了编写 Common Lisp，是否可以使用 Lem 进行其他事情，如 dired magit "notes org mode dentoe
    org roam" emms pdf tools shell mode？'
- en: Q:What about using this in conjunction with Nyxt the common lisp; web browser
  id: totrans-split-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Q: 如果与 Nyxt 结合使用，例如 Common Lisp 网页浏览器，这有何影响？'
- en: 'Q: What is the license of LEM?'
  id: totrans-split-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Q: LEM 的许可证是什么？'
- en: 'Q: Big question, I realize, but: How far is LEM from being able to run Elisp
    libraries, e.g. imagine if Magit could "just work" in LEM?'
  id: totrans-split-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Q: 这个问题很大，我意识到，但：LEM 距离能够运行 Elisp 库有多远？比如 Magit 是否可以在 LEM 中“无缝工作”？'
- en: 'Q: How are LEM buffers designed? Similar to Emacs? TextGrid with Properties?
    Or something other? I just tried again to give Emacs more interactivity & am thinking
    if there is a possible display future for the Emacsen.'
  id: totrans-split-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Q: LEM 缓冲区的设计是怎样的？与 Emacs 类似吗？TextGrid 和属性？还是其他什么？我再次尝试让 Emacs 更具交互性，并思考 Emacsen
    的可能显示未来。'
- en: 'Q: What are the things or experances that lem gives you that are nicer than
    Emacs? or make you happy using both?'
  id: totrans-split-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Q: LEM 相比 Emacs，有哪些更好或更让你开心的体验？两者的使用体验有何不同？'
- en: 'Q: (Forgive me if you answered this already.)  Do you think Lem will continue
    to have a lot of Japanese documentation, or is there a chance it will move entirely
    to English?  (IMHO having much of the docs in Japanese will hold back the project.)'
  id: totrans-split-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Q: （如果你已经回答过，请原谅我。）你认为 Lem 将继续拥有大量日文文档，还是有可能完全转向英文？（在我看来，日文文档会阻碍项目的进展。）'
- en: Transcript
  id: totrans-split-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 记录
- en: '[[00:00:00.000]](#mainVideo-emacsen) Introduction'
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[[00:00:00.000]](#mainVideo-emacsen) 介绍'
- en: Hello, my name is Fermin. Today, I'm going to talk about the Emacsen family,
    the design of an Emacs, and the importance of Lisp. So we're going to talk about
    Lisp. I want to start from the end.
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
  zh: 你好，我叫 Fermin。今天，我要谈谈 Emacsen 家族的设计，一个 Emacs 的设计，以及 Lisp 的重要性。所以我们要谈论 Lisp。我想从最后开始。
- en: '[[00:00:17.000]](#mainVideo-emacsen) Why Lisp matters'
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
  zh: '[[00:00:17.000]](#mainVideo-emacsen) Lisp 为什么重要'
- en: 'The first question I want to ask is why I think Lisp matters. When I''m talking
    about Lisp here, I''m talking about the idea of Lisp, so the family of languages
    that are Lisp. But given that there''s no formal specification of Lisp, so the
    opinion might vary. I will expect that Lisp, most of the Lisp have these kind
    of features. The first one is homoiconic: the code is data, basically. They also
    have a REPL: read-eval-print loop. That is very powerful and can help in development.
    Also, I think a good Lisp should have a powerful macro system. I''m good with
    compile-time macros, but read-time is also interesting. There''s a lot of Lisp
    that you can choose. There''s the main three ones, of course, with Scheme, Common
    Lisp, and Clojure. Scheme by Guile, Common Lisp by Common Lisp, and Clojure by
    Clojure or ClojureScript.'
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我想首先问的问题是为什么我认为 Lisp 很重要。当我在这里谈论 Lisp 时，我指的是 Lisp 的理念，即 Lisp 家族的语言。但是由于 Lisp
    没有正式的规范，因此观点可能有所不同。我期望 Lisp，大部分的 Lisp 语言都具备这些特性。第一个特性是同像性：代码即数据。它们还拥有 REPL：读取-求值-输出循环。这非常强大，可以帮助开发。此外，我认为一个好的
    Lisp 应该有强大的宏系统。我擅长编译时宏，但读取时宏也很有趣。有很多种 Lisp 可供选择。当然，主要的三种是 Scheme、Common Lisp 和
    Clojure。Guile 支持 Scheme，Common Lisp 由 Common Lisp 支持，Clojure 由 Clojure 或 ClojureScript
    支持。
- en: '[[00:01:26.640]](#mainVideo-emacsen) Why Emacs Lisp was chosen'
  id: totrans-split-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[[00:01:26.640]](#mainVideo-emacsen) 为什么选择 Emacs Lisp'
- en: 'So let''s talk about Emacs Lisp. I didn''t mention Emacs Lisp. I''m going to
    talk about why Emacs Lisp was chosen for an Emacs editor. We''re going to explore
    this kind of design of the Emacs. And Emacs Lisp is the main language of it. Why?
    Given that there were a few alternatives at the time, why Emacs Lisp was chosen?
    So RMS, Richard Stallman, needed a Lisp, and there wasn''t one available at the
    time. Keep in mind, this was the early 80s. Stallman was writing at that point
    the GCC, I think, and he was writing the core components of what is going to become
    GNU. He needed an editor. He wanted Lisp. He wanted Emacs. So he wrote Emacs Lisp.
    So at that time, the functionality was more important than "perfection." What
    I mean [by] "perfection" is: we programmers sometimes like to make everything
    good or very, very good when sometimes, indeed, it''s more important that it works
    to do the task that it should. And it''s not a bad language. It''s not that bad.
    At that time, it was mostly nice. Today, it''s good enough, I think.'
  id: totrans-split-46
  prefs: []
  type: TYPE_NORMAL
  zh: 所以让我们谈谈 Emacs Lisp。我没有提到 Emacs Lisp。我要谈一下为什么 Emacs Lisp 被选择作为 Emacs 编辑器的语言。我们将探讨
    Emacs 的这种设计。而 Emacs Lisp 是其主要语言。为什么？考虑到当时有几种替代方案，为什么选择了 Emacs Lisp？所以 RMS，理查德·斯托曼，需要一种
    Lisp，但当时没有可用的。请记住，那是80年代初。斯托曼那时正在编写 GCC，我想，他正在编写即将成为 GNU 核心组件的部分。他需要一个编辑器。他想要
    Lisp。他想要 Emacs。于是他写了 Emacs Lisp。所以那时功能比“完美”更重要。我所说的“完美”是指：我们程序员有时候喜欢把一切都做得很好，甚至非常好，但有时候，重要的是它能够完成应该做的任务。并不是一个坏语言。并不是那么糟糕。那时，它大多是好的。今天，我认为它已经足够好了。
- en: '[[00:11:00.040]](#mainVideo-emacsen) to [do] day-to-day programming in a very
    good experience. This is not like--I want to clarify this because some people
    bring some exploratory projects. This is not that one. This is finished. Well,
    finished in the way that you can use it. It''s not, you know, have everything
    in place. So let''s continue. It''s written 100% in Common Lisp. I say this because
    Emacs is not 100% in Emacs Lisp. You have to modify the C code, I think, well,
    if you... You don''t have to, but if you want to change the internals, you do.
    I think that given that Lem does not care about the implementation of the language
    itself-- so for example, Lem doesn''t have to deal with how Common Lisp works,
    it just used the language, right? It''s on top of the language. You can say that.
    Emacs Lisp is Emacs and Emacs Lisp, so you have to, you have both in the same
    place, which is, well, it''s a double-edged sword, right? Then you have the both--similar
    to Emacs-- you have ncurses and SDL2 frontends. One is terminal-based and the
    other is graphical using the SDL2 library, which you can do a lot of crazy things.
    Of course, it''s meant to program games and stuff, but Lem uses, and it works
    fairly well. You can program games if you want. Not that you need to or anything,
    but we have Tetris. So there''s that. Also, separate front-end interface. So like
    I said, you have two, but you can create more. In the past, had an electron one,
    but it got abandoned for obvious reasons, I think. Sorry. This idea is taken from
    Neovim that had a lot of frontends. In fact, we don''t have that many, but not
    that many people we have two. That works fairly well. We have superb development
    experience thanks to SLIME. So we have Micro, which is a SLIME version for Lem,
    basically. SLIME is awesome and Micro is also awesome. We have a very strong development
    experience that we don''t have for a Lisp, which I think is very important. If
    you want someone to develop packages or to use your tool, your Emacs at least,
    you need to have a very good development experience, which enhance the extensions
    for the editor. So we have also Vim-like integration. This for me was mostly mandatory
    because I''m an evil-mode user, and I think it''s really good. Because evil-mode
    is very good and the VMode, which it''s called, even though it''s more like Vim
    mode, it''s called VMode. It''s written by Fukamachi-san and it''s really good.
    So yeah, that''s the thing that I think Lem brings to the table and that''s really
    interesting.'
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[[00:11:00.040]](#mainVideo-emacsen) 在每天的编程中非常好的体验。这不像--我想澄清这一点，因为有些人会带来一些探索性项目。这不是那个。这是完成的。嗯，完成的方式是你可以使用它。不是说，你知道，把一切都放在那里。所以让我们继续。它完全使用Common
    Lisp编写。我这么说是因为Emacs并不是完全使用Emacs Lisp。你必须修改C代码，我认为，嗯，如果你...你不必这样做，但是如果你想改变内部，你就得这样做。我认为，鉴于Lem不关心语言本身的实现--例如，Lem不必处理Common
    Lisp的工作原理，它只是使用语言，对吧？它是在语言之上的。你可以这么说。Emacs Lisp是Emacs和Emacs Lisp，所以你必须在同一个地方拥有两者，这，嗯，这是一个双刃剑，对吧？然后你有这两者--与Emacs类似--你有ncurses和SDL2前端。一个是基于终端的，另一个是使用SDL2库的图形化前端，你可以做很多疯狂的事情。当然，它的初衷是编程游戏和其他东西，但是Lem使用起来效果也不错。如果你愿意，你可以编程游戏。不是说你需要或者什么，但我们有俄罗斯方块。所以就是这样。还有，单独的前端界面。所以像我说的，你有两个，但你可以创建更多。过去，有一个electron的前端，但出于显而易见的原因，它被放弃了，我想。抱歉。这个想法是从Neovim借来的，它有很多前端。实际上，我们并没有那么多，但是没有那么多人，我们有两个。效果还不错。我们有SLIME提供了出色的开发体验。所以我们有Micro，这是Lem的一个SLIME版本，基本上是这样的。SLIME很棒，Micro也很棒。我们有非常强大的开发体验，这对于Lisp而言非常重要。如果你想要让别人开发包或者使用你的工具，至少你的Emacs，你需要有一个非常好的开发体验，这样才能增强编辑器的扩展功能。所以我们也有类似Vim的集成。对我来说，这基本上是强制性的，因为我是一个evil-mode的用户，我觉得这真的很好。因为evil-mode非常好，它被称为VMode，尽管更像是Vim模式，它叫VMode。它是由Fukamachi先生编写的，效果很好。所以，这就是我认为Lem带来的东西，这真的很有趣。'
- en: '[[00:14:03.080]](#mainVideo-emacsen) Similarities and differences'
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[[00:14:03.080]](#mainVideo-emacsen) 相似之处和差异'
- en: 'So I''m going to do a small demo of Lem, a Emacs example. First, the similarities,
    the nomenclature is very similar: modes, buffers, commands... The commands are
    very similar in nature. It was written with GNU Emacs in mind to mimic a lot of
    things. I think GNU Emacs is the best Emacs implementation in that way. So why
    not just take what is working, right? I have similar command, but flexible to
    add other default ones. It''s not like Emacs that you have Emacs commands. Lem
    has Emacs command by default, but you can easily change that with other default
    ones, right? It''s like, you can think of it like a major mode, right? Well, more
    like a global mode, sorry. That''s a global mode of Emacs commands, or something
    like that. In general, the feeling is really close. So you will tell that it''s
    really close to how both work, similar commands, and that shows. Differences,
    Common Lisp is not Emacs Lisp, it''s similar in the surface. So it uses `defun`,
    you know, have parentheses and yada, yada, but it''s not the same language, really,
    and sometimes you will find that the differences are substantial. The internals
    are completely different, of course, nothing, well, completely. They have a buffer
    implementation and other things, but in general, yeah, aside from that, it''s
    completely different. And it''s true that GNU Emacs has a better documentation
    tutorial. So GNU Emacs for me, I think it''s one of the best-documented software
    ever. We''re trying to go there, but we''re still not there.'
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我将做一个小演示 Lem，一个 Emacs 的例子。首先，相似之处，术语非常相似：模式，缓冲区，命令…… 命令的性质非常相似。它是为了模仿 GNU
    Emacs 而编写的，以模仿很多东西。我认为 GNU Emacs 在这方面是最好的 Emacs 实现。那么为什么不直接使用已经运作良好的东西呢？我有类似的命令，但是可以灵活添加其他默认命令。它不像
    Emacs 那样你有 Emacs 命令。Lem 默认有 Emacs 命令，但你可以轻松地将其更改为其他默认命令，对吧？这就像，你可以把它看作一个主模式，对吧？嗯，更像是一个全局模式，抱歉。那是
    Emacs 命令的全局模式，或者类似于那样的东西。总体上，感觉非常接近。所以你会发现它真的非常接近它们的工作方式，相似的命令，这是显示出来的。不同之处，Common
    Lisp 不是 Emacs Lisp，它在表面上是相似的。所以它使用 `defun`，你知道，有括号之类的，但它不是完全相同的语言，有时你会发现差异是实质性的。内部完全不同当然是不对的，有缓冲区实现和其他东西，但总的来说，是完全不同的。而且
    GNU Emacs 确实有更好的文档教程。对我来说，GNU Emacs 是有史以来文档最好的软件之一。我们也在努力追赶，但我们还没有达到那个水平。
- en: '[[00:15:49.600]](#mainVideo-emacsen) Demo'
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[[00:15:49.600]](#mainVideo-emacsen) 演示'
- en: Let's do the demo. So to open Lem, you compile it, and then you have it available,
    and you open Lem. As you can see, we have the temporary buffer. On the top left
    is the mode-- not mode, the beam, insert, normal, visual. This is the V mode,
    right? In the top right corner, we have fundamental, which is the major mode,
    then paredit, which is like the minor mode, but you know, this is like the paredit
    for Emacs. In the top left buffer, you have the current buffer. So let's open
    the... Emacs, we all know how to do this. This is a command, like explore this
    command, like `open-init-file`. This opens the init file, which is in this directory,
    in `~/.lem/init.lisp`. As you can see, this is very similar, right? You define
    a command, which is not interactive, and then you get the buffer, right? This
    is a... So my personal command... Let's go to the one that I just opened. Init
    file, right? So this is a command that I did, which is `find-file`. This is very
    similar to [??], but just `find-file`. As you can see, very similar. This is the
    way that you program in Lem. This is the major mode, which is Lisp, that we're
    seeing at the top, right? And we can connect if we `slime-self-connect`. This
    is the prompt. This is the REPL. So if we... Keep in mind that this is Common
    Lisp, so this has different things. So we have to go to the Lem package, which
    is very important. This has namespaces, right? It's not the same. And we can say,
    okay, `current-buffer`. We get the buffer. We can explore everything that is in
    it, right? We have all this stuff. This is... If you're familiar with SLIME or
    Sly, this is it. It's just that we can say, buffer, I think it's `buffer-name`.
    Yes. And we can take this, and then we'll give you the name. So as you can see,
    the development experience is really powerful. We can also `lisp-scratch`, which
    transform... basically apply the major mode of Lisp to the temporary buffer. This
    is very similar to Emacs. Let's go back to the theme. I think that's it. Thank
    you all very much for listening to me. I think I point out the Emacsen family
    is really interesting. Lisp is really good, and GNU Emacs is really good, and
    I think Lem is also pretty awesome. So thank you all very much. I'll be answering
    the question now. And happy hacking.
  id: totrans-split-51
  prefs: []
  type: TYPE_NORMAL
- en: 'Captioner: sachac'
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
- en: Q&A transcript (unedited)
  id: totrans-split-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Fermin, for the great talk. '
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
- en: 'People have questions, please post them on the pad or the IRC as well and we''ll
    take them up. '
  id: totrans-split-55
  prefs: []
  type: TYPE_NORMAL
- en: 'to answer questions. '
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s see. '
  id: totrans-split-57
  prefs: []
  type: TYPE_NORMAL
- en: 'Yep. '
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
- en: 'clarify anything or fix any URLs or such, you''re always welcome to do that
    either like on the Wiki page, or if you like email any of the organizers, they
    should be able to help with that as well. '
  id: totrans-split-59
  prefs: []
  type: TYPE_NORMAL
- en: 'Yeah, not a big deal really, if you look it up. '
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
- en: 'Yeah, that''s really better. '
  id: totrans-split-61
  prefs: []
  type: TYPE_NORMAL
- en: 'Thank you very much. '
  id: totrans-split-62
  prefs: []
  type: TYPE_NORMAL
- en: 'Checking, no questions. '
  id: totrans-split-63
  prefs: []
  type: TYPE_NORMAL
- en: 'Very good to be in touch. '
  id: totrans-split-64
  prefs: []
  type: TYPE_NORMAL
- en: 'button chat. '
  id: totrans-split-65
  prefs: []
  type: TYPE_NORMAL
- en: 'Is LEM an acronym? '
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
- en: 'I think it is, but I never remember. '
  id: totrans-split-67
  prefs: []
  type: TYPE_NORMAL
- en: 'The complete name is like something... '
  id: totrans-split-68
  prefs: []
  type: TYPE_NORMAL
- en: 'It''s also a circle, like, you know, a self-referencing, you know, recursive
    name. '
  id: totrans-split-69
  prefs: []
  type: TYPE_NORMAL
- en: 'I never remember it, sorry. '
  id: totrans-split-70
  prefs: []
  type: TYPE_NORMAL
- en: 'It''s like... '
  id: totrans-split-71
  prefs: []
  type: TYPE_NORMAL
- en: 'Yeah, someone... '
  id: totrans-split-72
  prefs: []
  type: TYPE_NORMAL
- en: 'Okay, someone asked about the DEM community, how big it is. '
  id: totrans-split-73
  prefs: []
  type: TYPE_NORMAL
- en: 'So I don''t remember, to answer the question, I don''t remember the acronym,
    but it is an acronym. '
  id: totrans-split-74
  prefs: []
  type: TYPE_NORMAL
- en: 'I just never... '
  id: totrans-split-75
  prefs: []
  type: TYPE_NORMAL
- en: 'And it''s not written anywhere, I think, or someone... '
  id: totrans-split-76
  prefs: []
  type: TYPE_NORMAL
- en: 'I never check it. '
  id: totrans-split-77
  prefs: []
  type: TYPE_NORMAL
- en: 'So I... '
  id: totrans-split-78
  prefs: []
  type: TYPE_NORMAL
- en: 'whole large, does Leia have a package manager? '
  id: totrans-split-79
  prefs: []
  type: TYPE_NORMAL
- en: 'We do have a package manager, funnily enough. '
  id: totrans-split-80
  prefs: []
  type: TYPE_NORMAL
- en: 'We use the QuickLisp infrastructure to get packages, so it''s very easy to
    install packages. '
  id: totrans-split-81
  prefs: []
  type: TYPE_NORMAL
- en: 'So basically, we don''t have a package manager as in Emacs, half a packet.l. '
  id: totrans-split-82
  prefs: []
  type: TYPE_NORMAL
- en: 'We''re using the same common list infrastructure to provide the different packages. '
  id: totrans-split-83
  prefs: []
  type: TYPE_NORMAL
- en: 'We also have a talk with the Ultralisp, which is like a, you know, QuickLisp
    is like, you can think quickly of Melpa. '
  id: totrans-split-84
  prefs: []
  type: TYPE_NORMAL
- en: 'Ultralisp is like a fast Melpa, very fast Melpa, that every, I think every
    day you can get a package from them. '
  id: totrans-split-85
  prefs: []
  type: TYPE_NORMAL
- en: 'And We have a tag system that you can submit a package and get a tag, and Theory
    can download those packages with the lem tag. '
  id: totrans-split-86
  prefs: []
  type: TYPE_NORMAL
- en: 'So the thing is, it''s not yet, it doesn''t have a user interface to install
    packages. '
  id: totrans-split-87
  prefs: []
  type: TYPE_NORMAL
- en: 'Still, it''s 2 external packages. '
  id: totrans-split-88
  prefs: []
  type: TYPE_NORMAL
- en: 'For now, imagine this is like the early Emacs, right? '
  id: totrans-split-89
  prefs: []
  type: TYPE_NORMAL
- en: 'Everything is going to the core for now, because we need that functionality. '
  id: totrans-split-90
  prefs: []
  type: TYPE_NORMAL
- en: 'In the future, we probably will split it up way more. '
  id: totrans-split-91
  prefs: []
  type: TYPE_NORMAL
- en: 'But let me first answer a question in the other part. '
  id: totrans-split-92
  prefs: []
  type: TYPE_NORMAL
- en: 'How large is the LEN community? '
  id: totrans-split-93
  prefs: []
  type: TYPE_NORMAL
- en: 'Hope it''s a chance of survival long term. '
  id: totrans-split-94
  prefs: []
  type: TYPE_NORMAL
- en: 'So we are a very small community, mostly because Sasaki-san, the main developers
    of the community, are from Japan and some of them, or most of them, don''t know
    English. '
  id: totrans-split-95
  prefs: []
  type: TYPE_NORMAL
- en: 'At the beginning, LEM was a very Japanese-centric tooling because barrier of
    language, most of the users are from Japan. '
  id: totrans-split-96
  prefs: []
  type: TYPE_NORMAL
- en: 'So different communities. '
  id: totrans-split-97
  prefs: []
  type: TYPE_NORMAL
- en: 'And also, I don''t know why, but the main maintainer, which is Asaki-san, very
    good guy and a very, very talented developer. '
  id: totrans-split-98
  prefs: []
  type: TYPE_NORMAL
- en: 'He doesn''t like to, you know, at first the project was all in Japanese, so
    he doesn''t care if someone uses the project or not. '
  id: totrans-split-99
  prefs: []
  type: TYPE_NORMAL
- en: 'He''s more focused on the, I guess, quality of the features of it. '
  id: totrans-split-100
  prefs: []
  type: TYPE_NORMAL
- en: 'So that creates a problem that doesn''t really mind the community. '
  id: totrans-split-101
  prefs: []
  type: TYPE_NORMAL
- en: 'So the community doesn''t mind in a good way. '
  id: totrans-split-102
  prefs: []
  type: TYPE_NORMAL
- en: 'It''s to focus more on technicality rather than the user, which I mean, I cannot
    blame him. '
  id: totrans-split-103
  prefs: []
  type: TYPE_NORMAL
- en: 'It''s very hard work to build an Emacs and editor from scratch. '
  id: totrans-split-104
  prefs: []
  type: TYPE_NORMAL
- en: 'It''s not a trivial task. '
  id: totrans-split-105
  prefs: []
  type: TYPE_NORMAL
- en: 'So yeah, we''re a very small community. '
  id: totrans-split-106
  prefs: []
  type: TYPE_NORMAL
- en: 'But I think the chance of survival is very good because LEM is written in ANSI
    Common Lisp, so it should be used in any... '
  id: totrans-split-107
  prefs: []
  type: TYPE_NORMAL
- en: 'Well, it works in a lot of Common Lisp implementation. '
  id: totrans-split-108
  prefs: []
  type: TYPE_NORMAL
- en: 'For people who don''t know, Common Lisp is a language that was standardized
    in the 94. '
  id: totrans-split-109
  prefs: []
  type: TYPE_NORMAL
- en: 'I explained that in the talk, but I''ll say it again. '
  id: totrans-split-110
  prefs: []
  type: TYPE_NORMAL
- en: 'So, if Common Lisp exists, in theory, LEM should also exist. '
  id: totrans-split-111
  prefs: []
  type: TYPE_NORMAL
- en: 'And also if nCursor doesn''t break or doesn''t stop to exist, which is even
    less likely. '
  id: totrans-split-112
  prefs: []
  type: TYPE_NORMAL
- en: 'So that''s the main idea. '
  id: totrans-split-113
  prefs: []
  type: TYPE_NORMAL
  zh: 那么这就是主要思想。
- en: 'And you can use LEM for very good Common Lisp development already. '
  id: totrans-split-114
  prefs: []
  type: TYPE_NORMAL
  zh: 而且你已经可以使用LEM进行非常好的Common Lisp开发了。
- en: 'If Common Lisp doesn''t change that much, it should disappear. '
  id: totrans-split-115
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Common Lisp没有太大变化，它应该会消失。
- en: 'We are not bound to any company or any... '
  id: totrans-split-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不受任何公司或任何...的约束。
- en: 'Even Sasaki-san, God forbid, disappears instantaneously. '
  id: totrans-split-117
  prefs: []
  type: TYPE_NORMAL
  zh: 即使是佐佐木先生，愿天堂没有，也会瞬间消失。
- en: 'There are a few people, me included, that know very well the code base and
    we can continue the development. '
  id: totrans-split-118
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个人，包括我在内，非常熟悉代码库，我们可以继续开发。
- en: 'So it''s not like 1, there''s no one-man project. '
  id: totrans-split-119
  prefs: []
  type: TYPE_NORMAL
  zh: 所以不像1，没有单人项目。
- en: 'Maybe a four-man project or 5, but not 1\. '
  id: totrans-split-120
  prefs: []
  type: TYPE_NORMAL
  zh: 可能是一个四人团队或5人，但不是1。
- en: 'Okay, I''ll answer the 1 in the chat, on the blue button. '
  id: totrans-split-121
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，我会在聊天中回答1，点击蓝色按钮。
- en: 'Is it best to learn Common Lisp before learning to use LEM? '
  id: totrans-split-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在学习LEM之前最好先学习Common Lisp吗？
- en: 'I think this is similar to Emacs and EmacLisp, right? '
  id: totrans-split-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为这与Emacs和EmacLisp类似，对吧？
- en: 'Should you use EmacLisp before using Emacs? '
  id: totrans-split-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用Emacs之前应该使用EmacLisp吗？
- en: 'Doesn''t make too much sense, right? '
  id: totrans-split-125
  prefs: []
  type: TYPE_NORMAL
  zh: 没有太多意义，对吧？
- en: 'You see Emacs and then you go learning Common Lisp. '
  id: totrans-split-126
  prefs: []
  type: TYPE_NORMAL
  zh: 你先看Emacs，然后再学习Common Lisp。
- en: 'I think it''s the same, sorry, EmacsLisp. '
  id: totrans-split-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我想它是相同的，抱歉，EmacsLisp。
- en: 'And it''s the same with LEM. '
  id: totrans-split-128
  prefs: []
  type: TYPE_NORMAL
  zh: 对于LEM也是一样。
- en: 'You can start using LEM with a non-common Lisp, which is fine. '
  id: totrans-split-129
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以开始使用LEM来编辑非Common Lisp，这也没问题。
- en: 'You can use it to edit your things. '
  id: totrans-split-130
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以用它来编辑你的东西。
- en: 'It''s like an editor. '
  id: totrans-split-131
  prefs: []
  type: TYPE_NORMAL
  zh: 就像一个编辑器。
- en: 'But like Emacs, LEM puts a lot of focus on extensibility. '
  id: totrans-split-132
  prefs: []
  type: TYPE_NORMAL
  zh: 但像Emacs一样，LEM也非常注重可扩展性。
- en: 'So it''s very probable that you will learn how to write Common Lisp. '
  id: totrans-split-133
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你很可能会学会如何编写Common Lisp。
- en: 'I have to say that a lot of people that use LEM, well, me and most of the people,
    come from Emacs. '
  id: totrans-split-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我必须说，很多使用LEM的人，包括我和大多数人，都来自Emacs。
- en: 'So if you come from Emacs and you know a little bit of Emac Lisp, Common Lisp
    is like an uncle or cousin distance that shares some similarities. '
  id: totrans-split-135
  prefs: []
  type: TYPE_NORMAL
  zh: 所以如果你来自Emacs并且对Emac Lisp有一点了解，Common Lisp就像一个远房叔叔或表亲，分享了一些相似之处。
- en: 'So you will... '
  id: totrans-split-136
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你会...
- en: 'Well, it''s not going to be that. '
  id: totrans-split-137
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，不会那样的。
- en: 'I can show... '
  id: totrans-split-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以展示...
- en: 'Sorry about that. '
  id: totrans-split-139
  prefs: []
  type: TYPE_NORMAL
  zh: 对此很抱歉。
- en: 'For example, I show that in the... '
  id: totrans-split-140
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我在...中展示了。
- en: 'I can show... '
  id: totrans-split-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以展示...
- en: 'So the... '
  id: totrans-split-142
  prefs: []
  type: TYPE_NORMAL
  zh: 所以...
- en: 'It''s not that different from Emacs regarding configuration. '
  id: totrans-split-143
  prefs: []
  type: TYPE_NORMAL
  zh: 就配置而言，它与Emacs并没有太大不同。
- en: 'So for example, this command doesn''t exist on LEM. '
  id: totrans-split-144
  prefs: []
  type: TYPE_NORMAL
  zh: 所以例如，这个命令在LEM上不存在。
- en: 'And Sasaki-san didn''t want to copy one-to-one the command from Emacs, the
    airgrip, the cursor grip command of Emacs. '
  id: totrans-split-145
  prefs: []
  type: TYPE_NORMAL
  zh: 佐佐木先生不想逐字复制Emacs的命令，空气抓握，Emacs的光标抓握命令。
- en: 'And I said, okay, then I''m going to implement it myself. '
  id: totrans-split-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我说，好的，那么我就自己来实现它。
- en: 'And it''s something like this, which is you will do something similar to Emacs,
    right? '
  id: totrans-split-147
  prefs: []
  type: TYPE_NORMAL
  zh: 而且像这样，你会做一些类似于Emacs的事情，对吧？
- en: 'This will be like things at point symbol or something like that. '
  id: totrans-split-148
  prefs: []
  type: TYPE_NORMAL
  zh: 这将是像点符号之类的东西。
- en: 'And then you have a prompt, very prompt for directory with Emacs would be something
    similar. '
  id: totrans-split-149
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你有一个提示，用Emacs的话会有类似的东西。
- en: 'And then you then launch grep with the command that you want. '
  id: totrans-split-150
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你可以用你想要的命令启动grep。
- en: 'This is not that far from Emacs, this, really. '
  id: totrans-split-151
  prefs: []
  type: TYPE_NORMAL
  zh: 这跟Emacs并没有那么远，真的。
- en: 'If you don''t know neither of those, you can still use LEM, though as with
    Emacs, extensibility will be, well, you couldn''t extend it if you don''t know
    combo disp. '
  id: totrans-split-152
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你两者都不知道，你仍然可以使用LEM，尽管与Emacs一样，可扩展性将会...，如果你不知道组合显示，你将无法扩展它。
- en: 'Should I answer the question on the etherpad writing it at the same time? '
  id: totrans-split-153
  prefs: []
  type: TYPE_NORMAL
  zh: 我应该同时在etherpad上写答案吗？
- en: 'You can just answer here on stream, Okay. '
  id: totrans-split-154
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以直接在直播中回答，好吗？
- en: 'Are there any Lisp machine capabilities you''re trying to provide that GNU
    image lacks? '
  id: totrans-split-155
  prefs: []
  type: TYPE_NORMAL
  zh: 有没有Lisp机器的能力，你正在尝试提供GNU镜像所缺少的？
- en: 'The type objects capability in the editor, as an example. '
  id: totrans-split-156
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个例子，编辑器中的类型对象能力。
- en: 'I mean, there were a few discussions about the Lisp machines and LEM and all
    the big projects that tries to get some capability of it. '
  id: totrans-split-157
  prefs: []
  type: TYPE_NORMAL
  zh: 我的意思是，有几次讨论关于Lisp机器和LEM以及所有试图获得一些能力的大项目。
- en: 'But we don''t really... '
  id: totrans-split-158
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们真的不...
- en: 'We try to improve the development experience for Common Lisp and for LEM, imitating
    a lot of things that the Lisp machine had. '
  id: totrans-split-159
  prefs: []
  type: TYPE_NORMAL
  zh: 我们试图改进Common Lisp和LEM的开发体验，模仿了Lisp机器的许多东西。
- en: 'I''m going to try to do a thing that I don''t know if it''s going to work. '
  id: totrans-split-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我打算尝试一件我不知道是否会成功的事情。
- en: 'So to explain this, let''s see. '
  id: totrans-split-161
  prefs: []
  type: TYPE_NORMAL
  zh: 所以要解释这个，让我们看看。
- en: 'I''m going to recompile them now live. '
  id: totrans-split-162
  prefs: []
  type: TYPE_NORMAL
  zh: 我现在要实时重新编译它们。
- en: 'Let''s see how it works. '
  id: totrans-split-163
  prefs: []
  type: TYPE_NORMAL
- en: 'And compiling the, yes, it doesn''t work. '
  id: totrans-split-164
  prefs: []
  type: TYPE_NORMAL
- en: 'OK. '
  id: totrans-split-165
  prefs: []
  type: TYPE_NORMAL
- en: 'What if I do? '
  id: totrans-split-166
  prefs: []
  type: TYPE_NORMAL
- en: 'No, it doesn''t work. '
  id: totrans-split-167
  prefs: []
  type: TYPE_NORMAL
- en: 'OK. '
  id: totrans-split-168
  prefs: []
  type: TYPE_NORMAL
- en: 'I was trying to compile the SDL2, but I do have the codebase modifier. '
  id: totrans-split-169
  prefs: []
  type: TYPE_NORMAL
- en: 'I should be able to compile this. '
  id: totrans-split-170
  prefs: []
  type: TYPE_NORMAL
- en: 'Oh, that was really bad. '
  id: totrans-split-171
  prefs: []
  type: TYPE_NORMAL
- en: 'What about example? '
  id: totrans-split-172
  prefs: []
  type: TYPE_NORMAL
- en: 'I have the code base, so let me check. '
  id: totrans-split-173
  prefs: []
  type: TYPE_NORMAL
- en: 'I''m going to do this. '
  id: totrans-split-174
  prefs: []
  type: TYPE_NORMAL
- en: 'Oh, yeah, I have this modified. '
  id: totrans-split-175
  prefs: []
  type: TYPE_NORMAL
- en: 'I stash this. '
  id: totrans-split-176
  prefs: []
  type: TYPE_NORMAL
- en: 'OK. '
  id: totrans-split-177
  prefs: []
  type: TYPE_NORMAL
- en: 'I have this modified. '
  id: totrans-split-178
  prefs: []
  type: TYPE_NORMAL
- en: 'Now it should work. '
  id: totrans-split-179
  prefs: []
  type: TYPE_NORMAL
- en: 'OK. '
  id: totrans-split-180
  prefs: []
  type: TYPE_NORMAL
- en: 'Sorry. '
  id: totrans-split-181
  prefs: []
  type: TYPE_NORMAL
- en: 'I was going to show the writing capabilities of it, similar to the Lisp machine
    of navigating of classes. '
  id: totrans-split-182
  prefs: []
  type: TYPE_NORMAL
- en: 'So the answer of that question is, not really. '
  id: totrans-split-183
  prefs: []
  type: TYPE_NORMAL
- en: 'We don''t try to emulate this machine, nor any like of that. '
  id: totrans-split-184
  prefs: []
  type: TYPE_NORMAL
- en: 'But yeah. '
  id: totrans-split-185
  prefs: []
  type: TYPE_NORMAL
- en: 'Let me, I''m going to try to, okay, now I''m back at them. '
  id: totrans-split-186
  prefs: []
  type: TYPE_NORMAL
- en: 'Okay. '
  id: totrans-split-187
  prefs: []
  type: TYPE_NORMAL
- en: 'So what about using them for things other than common, common, that markets? '
  id: totrans-split-188
  prefs: []
  type: TYPE_NORMAL
- en: 'Okay. '
  id: totrans-split-189
  prefs: []
  type: TYPE_NORMAL
- en: 'So yes, we do have, so I''m going to show the code base a little bit. '
  id: totrans-split-190
  prefs: []
  type: TYPE_NORMAL
- en: 'Like I said before, we don''t have yet too much external packages because of
    the size of the community. '
  id: totrans-split-191
  prefs: []
  type: TYPE_NORMAL
- en: 'I have a question. '
  id: totrans-split-192
  prefs: []
  type: TYPE_NORMAL
- en: 'Go ahead, you can write it, Michael. '
  id: totrans-split-193
  prefs: []
  type: TYPE_NORMAL
- en: 'Yeah. '
  id: totrans-split-194
  prefs: []
  type: TYPE_NORMAL
- en: 'So, yes, as you can see here, this is almost all, or 99% of the major modes
    we have. '
  id: totrans-split-195
  prefs: []
  type: TYPE_NORMAL
- en: 'We use the same terminology of SkinnyMemax in that way. '
  id: totrans-split-196
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, the C mode, if you go inside, you see that this is the fine major
    mode. '
  id: totrans-split-197
  prefs: []
  type: TYPE_NORMAL
- en: 'So in that regard, it''s very similar to Emacs. '
  id: totrans-split-198
  prefs: []
  type: TYPE_NORMAL
- en: 'And we have something called a JIT, which is like a maggot. '
  id: totrans-split-199
  prefs: []
  type: TYPE_NORMAL
- en: 'And you can edit files. '
  id: totrans-split-200
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use not only for common lists. '
  id: totrans-split-201
  prefs: []
  type: TYPE_NORMAL
- en: 'In my configuration, which is written, I will post that later, but if you go
    to my code burg you can see my configuration which is, which I do have. '
  id: totrans-split-202
  prefs: []
  type: TYPE_NORMAL
- en: 'So for example you can use it for a scheme. '
  id: totrans-split-203
  prefs: []
  type: TYPE_NORMAL
- en: 'We have a swank server. '
  id: totrans-split-204
  prefs: []
  type: TYPE_NORMAL
- en: 'This is the configuration to use it. '
  id: totrans-split-205
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use it for JavaScript because we have a native LSP client written in. '
  id: totrans-split-206
  prefs: []
  type: TYPE_NORMAL
- en: 'And we have Dired. '
  id: totrans-split-207
  prefs: []
  type: TYPE_NORMAL
- en: 'Yeah, this is Dired. '
  id: totrans-split-208
  prefs: []
  type: TYPE_NORMAL
- en: 'We have Dired indeed. '
  id: totrans-split-209
  prefs: []
  type: TYPE_NORMAL
- en: 'No, it''s not Dired, you know. '
  id: totrans-split-210
  prefs: []
  type: TYPE_NORMAL
- en: 'It''s called directory. '
  id: totrans-split-211
  prefs: []
  type: TYPE_NORMAL
- en: 'Sasaki-san, which is the main maintainer, doesn''t like to copy one-to-one
    Emacs names, but we are the same. '
  id: totrans-split-212
  prefs: []
  type: TYPE_NORMAL
- en: 'We also have projects, which is like projectile. '
  id: totrans-split-213
  prefs: []
  type: TYPE_NORMAL
- en: 'So, you know, they''re very similar but not the same. '
  id: totrans-split-214
  prefs: []
  type: TYPE_NORMAL
- en: 'We also have a VI configuration, as you can see. '
  id: totrans-split-215
  prefs: []
  type: TYPE_NORMAL
- en: 'I''m using the VI commands and stuff, and it''s very good. '
  id: totrans-split-216
  prefs: []
  type: TYPE_NORMAL
- en: 'I will say not as good as an evil because it still needs some polish, but it''s
    getting there. '
  id: totrans-split-217
  prefs: []
  type: TYPE_NORMAL
- en: 'So we can also program in JavaScript and a lot of LSP things, and Elixir, which
    was recently added by myself. '
  id: totrans-split-218
  prefs: []
  type: TYPE_NORMAL
- en: 'And yeah, it''s very fun to add new modes. '
  id: totrans-split-219
  prefs: []
  type: TYPE_NORMAL
- en: 'OK, what else next? '
  id: totrans-split-220
  prefs: []
  type: TYPE_NORMAL
- en: 'What about user-level things other than coding? '
  id: totrans-split-221
  prefs: []
  type: TYPE_NORMAL
- en: 'What about using this in conjunction with Nix? '
  id: totrans-split-222
  prefs: []
  type: TYPE_NORMAL
- en: 'Oh, so there''s a big, so like I said before, there were like an issue that
    3 main common list project were talking, some of the users. '
  id: totrans-split-223
  prefs: []
  type: TYPE_NORMAL
- en: 'So the 3 main projects are LEM, probably, Nixed, and then StamWM, the 3 main,
    well, 3 big, common list projects that are trying to emulate an Emacs experience
    in different fields. '
  id: totrans-split-224
  prefs: []
  type: TYPE_NORMAL
- en: '1 is Editor, the other 1 is Window Manager, and the 1 is the browser. '
  id: totrans-split-225
  prefs: []
  type: TYPE_NORMAL
- en: 'The problem is that the design of the 3 are very different. '
  id: totrans-split-226
  prefs: []
  type: TYPE_NORMAL
  zh: 问题在于这3个设计非常不同。
- en: 'So Nix is very focused on the browser. '
  id: totrans-split-227
  prefs: []
  type: TYPE_NORMAL
  zh: Nix非常专注于浏览器。
- en: 'You can connect to Nix. '
  id: totrans-split-228
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以连接到Nix。
- en: 'So given that they''re both a common list, you can connect to Nix from them
    and vice versa. '
  id: totrans-split-229
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，考虑到它们都是Common Lisp，你可以从它们中连接到Nix，反之亦然。
- en: 'And you can send commands and you can, so you have this kind of interoperability
    with both. '
  id: totrans-split-230
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以发送命令，你可以，所以你可以与两者都有这种互操作性。
- en: 'But no, you cannot combine both to have 1 LEMNIX. '
  id: totrans-split-231
  prefs: []
  type: TYPE_NORMAL
  zh: 但不，你不能结合两者来拥有一个LEMNIX。
- en: 'That would be very sick. '
  id: totrans-split-232
  prefs: []
  type: TYPE_NORMAL
  zh: 那真的很棒。
- en: 'I would love it. '
  id: totrans-split-233
  prefs: []
  type: TYPE_NORMAL
  zh: 我会喜欢它。
- en: 'But the effort is just too much. '
  id: totrans-split-234
  prefs: []
  type: TYPE_NORMAL
  zh: 但这种努力实在太多了。
- en: 'Keep in mind we are a very small community. '
  id: totrans-split-235
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住我们是一个非常小的社区。
- en: 'The LEM, like I said, we are like 345 developers that write packages and answer
    questions and stuff. '
  id: totrans-split-236
  prefs: []
  type: TYPE_NORMAL
  zh: 就像我说的，我们像345名开发者一样写包和回答问题等。
- en: 'Now we need users in that way to test things. '
  id: totrans-split-237
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要用户以这种方式来测试事物。
- en: 'So what is the license of LEM? '
  id: totrans-split-238
  prefs: []
  type: TYPE_NORMAL
  zh: 那么LEM的许可证是什么？
- en: 'The license of LEM is MAT. '
  id: totrans-split-239
  prefs: []
  type: TYPE_NORMAL
  zh: LEM的许可证是MAT。
- en: 'We have some components of all the various licenses, but the main 1 is MAT. '
  id: totrans-split-240
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一些各种许可证的组件，但主要的一个是MAT。
- en: 'I didn''t choose the license of it. '
  id: totrans-split-241
  prefs: []
  type: TYPE_NORMAL
  zh: 我没有选择它的许可证。
- en: 'I would highly prefer a more like GPL 1, but like I said I''m not a maintainer,
    so the license is MAT. '
  id: totrans-split-242
  prefs: []
  type: TYPE_NORMAL
  zh: 我会更喜欢像GPL 1这样的许可证，但是像我说的，我不是一个维护者，所以许可证是MAT。
- en: 'This question, I realize, how far is LEM from being able to remove a list libraries? '
  id: totrans-split-243
  prefs: []
  type: TYPE_NORMAL
  zh: 我意识到这个问题，LEM能够删除列表库有多远？
- en: 'OK, that''s a big question indeed. '
  id: totrans-split-244
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，这确实是一个很大的问题。
- en: 'And Funny enough, 2 years ago in the EmacsConf, I talk about this, not with
    LEM, but with Common Lisp and Emacs Lisp in general. '
  id: totrans-split-245
  prefs: []
  type: TYPE_NORMAL
  zh: 很有趣，两年前在EmacsConf上，我讨论了这个问题，不是与LEM一起，而是一般的Common Lisp和Emacs Lisp。
- en: 'So I''m not the only 1 thinking about this. '
  id: totrans-split-246
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我不是唯一一个考虑这个问题的人。
- en: 'In fact, I''m talking with someone that is trying to write like a Emacs Lisp
    interpreter to work with them. '
  id: totrans-split-247
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，我正在与一位试图编写像Emacs Lisp解释器的人交谈，以便与它们一起工作。
- en: 'The thing is that Emaclist libraries, so the API is just very different. '
  id: totrans-split-248
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，Emaclist库的API也非常不同。
- en: 'That''s the main problem. '
  id: totrans-split-249
  prefs: []
  type: TYPE_NORMAL
  zh: 这是主要问题。
- en: 'That''s really the problem. '
  id: totrans-split-250
  prefs: []
  type: TYPE_NORMAL
  zh: 那真的是问题所在。
- en: 'You can, so you can, let me see. '
  id: totrans-split-251
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以，所以你可以，让我看看。
- en: 'So, you can have an Emacs list buffer of LEM. '
  id: totrans-split-252
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，你可以有一个LEM的Emacs列表缓冲区。
- en: 'This is an Emacs list rebel. '
  id: totrans-split-253
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个Emacs列表反叛者。
- en: 'I wrote an LRSP client so you can connect to Emacs and send things and stuff. '
  id: totrans-split-254
  prefs: []
  type: TYPE_NORMAL
  zh: 我写了一个LRSP客户端，所以你可以连接到Emacs并发送东西和其他东西。
- en: 'So you''re friends that we share stuff. '
  id: totrans-split-255
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你是我们分享东西的朋友。
- en: 'But having a complete Emacless implementation with LEM and work with both API
    will be a huge work. '
  id: totrans-split-256
  prefs: []
  type: TYPE_NORMAL
  zh: 但是在LEM和两个API上都有一个完整的Emacless实现将是一个巨大的工作。
- en: 'Very like, it''s even if they share very similar thing, in fact, API in some
    places is very similar. '
  id: totrans-split-257
  prefs: []
  type: TYPE_NORMAL
  zh: 就像，即使它们在某些地方共享非常相似的东西，实际上，在某些地方的API也非常相似。
- en: 'Down the line infrastructure, so the code is, so it''s completely different. '
  id: totrans-split-258
  prefs: []
  type: TYPE_NORMAL
  zh: 通往基础设施，所以代码是，所以完全不同。
- en: 'It will be very hard. '
  id: totrans-split-259
  prefs: []
  type: TYPE_NORMAL
  zh: 这将是非常困难的。
- en: 'We do have a clone of maggot that works, more or less. '
  id: totrans-split-260
  prefs: []
  type: TYPE_NORMAL
  zh: 我们确实有一个可以工作的蛆虫克隆，多多少少。
- en: 'Well, it does work, but maggot''s just better. '
  id: totrans-split-261
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，它确实有效，但蛆虫只是更好。
- en: 'But it''s getting there. '
  id: totrans-split-262
  prefs: []
  type: TYPE_NORMAL
  zh: 但它正在变得越来越好。
- en: 'So like I said, we''re trying to, not to copy one-to-one, but to adapting each
    tool to LEM. '
  id: totrans-split-263
  prefs: []
  type: TYPE_NORMAL
  zh: 所以就像我说的，我们试图，不是一对一地复制，而是将每个工具适应LEM。
- en: 'How are LEM buffer designs similar to Emacs? '
  id: totrans-split-264
  prefs: []
  type: TYPE_NORMAL
  zh: LEM缓冲设计与Emacs相似吗？
- en: 'So yeah, that would be, so how a blend buffer design, similar to Emacs. '
  id: totrans-split-265
  prefs: []
  type: TYPE_NORMAL
  zh: 所以是的，那将是，那么混合缓冲设计，类似于Emacs。
- en: 'So similar in what way, actually with properties. '
  id: totrans-split-266
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，这些属性如何相似。
- en: 'I think that you''ve seen, so you do have like a font lock, different kind
    of properties, but it''s not exactly how Emac does it with overlays and stuff. '
  id: totrans-split-267
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为你见过，所以你确实有像字体锁定、不同种类的属性，但它不完全像Emacs那样使用叠加等东西。
- en: 'You can, so if you''re very interested, I don''t want to go too much deep into
    the, let me go to, I don''t want to go too much deep into the technicality of
    things now, but you can go. '
  id: totrans-split-268
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以，所以如果你非常感兴趣，我不想深入讨论，让我去，我不想现在太深入技术层面，但你可以去。
- en: 'So LEM is written 100% in Common Lisp. '
  id: totrans-split-269
  prefs: []
  type: TYPE_NORMAL
  zh: LEM完全使用Common Lisp编写。
- en: 'So if you know Common Lisp, you can go to buffer. '
  id: totrans-split-270
  prefs: []
  type: TYPE_NORMAL
  zh: 所以如果你知道Common Lisp，你可以去缓冲区。
- en: 'You can check all the codes here. '
  id: totrans-split-271
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这里检查所有代码。
- en: 'Always we have, we also have this, which is like StreamX. '
  id: totrans-split-272
  prefs: []
  type: TYPE_NORMAL
  zh: 我们总是有，我们也有这个，就像StreamX一样。
- en: 'Sorry to that, I don''t. '
  id: totrans-split-273
  prefs: []
  type: TYPE_NORMAL
  zh: 对不起，我不。
- en: 'But yeah, So you can see. '
  id: totrans-split-274
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，是的，你可以看到。
- en: 'So yeah, if you go to the code base, maybe some of you can check this problem. '
  id: totrans-split-275
  prefs: []
  type: TYPE_NORMAL
  zh: 所以是的，如果你去代码库，也许你们中的一些人可以检查这个问题。
- en: 'Well, not problem, but yeah. '
  id: totrans-split-276
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，没有问题，但是是的。
- en: 'That''s this Japanese comment. '
  id: totrans-split-277
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个日本的评论。
- en: 'You can see here why it''s very, you have to translate and stuff, which is
    sometimes a little bit annoying. '
  id: totrans-split-278
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到这里为什么它非常，你必须翻译和处理一些东西，有时候有点烦人。
- en: 'But yeah, some of them are in English. '
  id: totrans-split-279
  prefs: []
  type: TYPE_NORMAL
  zh: 但是是的，其中一些是英文。
- en: 'So this play is not the same. '
  id: totrans-split-280
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这场游戏不一样。
- en: 'So if you''re interested, you can go to the buffer and check it out for yourself. '
  id: totrans-split-281
  prefs: []
  type: TYPE_NORMAL
  zh: 所以如果你感兴趣，你可以去缓冲区自己查看。
- en: 'But I think it uses the overlay in a different way. '
  id: totrans-split-282
  prefs: []
  type: TYPE_NORMAL
  zh: 但我认为它以不同的方式使用覆盖层。
- en: 'So the implementation is different that way. '
  id: totrans-split-283
  prefs: []
  type: TYPE_NORMAL
  zh: 所以实现方式有所不同。
- en: 'Oh, experiences that I can show you? '
  id: totrans-split-284
  prefs: []
  type: TYPE_NORMAL
  zh: 哦，我可以向你展示的经历吗？
- en: 'Just like you show you. '
  id: totrans-split-285
  prefs: []
  type: TYPE_NORMAL
  zh: 就像你展示的那样。
- en: 'Any marks? '
  id: totrans-split-286
  prefs: []
  type: TYPE_NORMAL
  zh: 任何标志？
- en: 'Okay, very interesting question. '
  id: totrans-split-287
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，非常有趣的问题。
- en: 'What are the things... '
  id: totrans-split-288
  prefs: []
  type: TYPE_NORMAL
  zh: 有什么事情……
- en: 'So that''s interesting. '
  id: totrans-split-289
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这很有趣。
- en: 'Let me see. '
  id: totrans-split-290
  prefs: []
  type: TYPE_NORMAL
  zh: 让我看看。
- en: 'So forgive me, you answered this. '
  id: totrans-split-291
  prefs: []
  type: TYPE_NORMAL
  zh: 所以请原谅我，你已经回答了这个问题。
- en: 'I talked briefly in the talk about this, but basically I like Komaldisp, I
    have the mascot here. '
  id: totrans-split-292
  prefs: []
  type: TYPE_NORMAL
  zh: 我在演讲中简短地谈到了这个问题，但基本上我喜欢Komaldisp，我这里有吉祥物。
- en: 'think GmagLisp is a very good friend of Common Lisp in the way that Serious
    Software Analysis is a very good uncle. '
  id: totrans-split-293
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为GmagLisp在某种程度上是Common Lisp的好朋友，就像Serious Software Analysis是很好的叔叔。
- en: 'Let me answer first the 1. '
  id: totrans-split-294
  prefs: []
  type: TYPE_NORMAL
  zh: 让我首先回答第一个。
- en: 'So I like to extend it in Common Lisp. '
  id: totrans-split-295
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我喜欢在Common Lisp中扩展它。
- en: 'I like the Common Lisp libraries. '
  id: totrans-split-296
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢Common Lisp的库。
- en: 'And I think them have a better design in terms of its 1 language, which I think
    is a nice strength. '
  id: totrans-split-297
  prefs: []
  type: TYPE_NORMAL
  zh: 而且我认为它们在设计上有更好的一面，这是我认为是一个很好的优势。
- en: 'Like, 1 of the things that put me off when I was using Emacs, I love to extend
    the editor and to go inside and stuff. '
  id: totrans-split-298
  prefs: []
  type: TYPE_NORMAL
  zh: 就像当我使用Emacs时，有些事情让我印象深刻，我喜欢扩展编辑器并深入其中。
- en: 'And 1 of the things that I''m not a big fan of C. '
  id: totrans-split-299
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一件事，我不是C的大粉丝。
- en: 'If you''re a fan of C, you will be very pleasant with finding C stuff, but
    I don''t. '
  id: totrans-split-300
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是C的粉丝，你会很高兴找到C的东西，但我不是。
- en: 'So when I''m trying to hack an Emacs and go inside the things, I will control
    C code. '
  id: totrans-split-301
  prefs: []
  type: TYPE_NORMAL
  zh: 所以当我尝试黑客入侵Emacs并深入了解这些事情时，我会控制C代码。
- en: 'That''s not that interactive as the Emaclist 1, and that would be like a fuzzball
    for me. '
  id: totrans-split-302
  prefs: []
  type: TYPE_NORMAL
  zh: 那不像Emaclist 1那样交互，对我来说会像一团乱麻。
- en: 'I was always dreaming about that stuff, having like everything in 1 language. '
  id: totrans-split-303
  prefs: []
  type: TYPE_NORMAL
  zh: 我一直在梦想这些东西，拥有像一种语言中的一切一样。
- en: 'The thing that LEM does to me is like it allows me to extend the editor to
    modify also, to modify in Common Lisp. '
  id: totrans-split-304
  prefs: []
  type: TYPE_NORMAL
  zh: LEM对我来说的意义就是它允许我扩展编辑器，也可以在Common Lisp中修改。
- en: 'Also, I like the language and technology. '
  id: totrans-split-305
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我喜欢这种语言和技术。
- en: 'It''s a bold thing, right? '
  id: totrans-split-306
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个大胆的想法，对吧？
- en: 'It''s a world language that I love, and Emacs that I love. '
  id: totrans-split-307
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我喜欢的世界语言，以及我喜欢的Emacs。
- en: 'Emacs, I''m a big fan of, or a user of GNU Emacs. '
  id: totrans-split-308
  prefs: []
  type: TYPE_NORMAL
  zh: Emacs，我是一个大粉丝，或者说是GNU Emacs的用户。
- en: 'And LEM is like Emacs plus Common Lisp, but with a different design. '
  id: totrans-split-309
  prefs: []
  type: TYPE_NORMAL
  zh: LEM就像Emacs加上Common Lisp，但设计不同。
- en: 'I don''t want to, It''s not a clone. '
  id: totrans-split-310
  prefs: []
  type: TYPE_NORMAL
  zh: 我不想，这不是一个克隆。
- en: 'I want to get this very clear that LEM is not a clone of Emacs. '
  id: totrans-split-311
  prefs: []
  type: TYPE_NORMAL
  zh: 我想要非常清楚地表明LEM不是Emacs的克隆。
- en: 'The sign is very different in a lot of ways. '
  id: totrans-split-312
  prefs: []
  type: TYPE_NORMAL
  zh: 这个标志在很多方面都非常不同。
- en: 'But it''s very inspired, and that cannot be denied. '
  id: totrans-split-313
  prefs: []
  type: TYPE_NORMAL
  zh: 但这非常受启发，这是无法否认的。
- en: 'I think we''re like 15 minutes into the lunch break, but you''re welcome to
    continue answering questions. '
  id: totrans-split-314
  prefs: []
  type: TYPE_NORMAL
  zh: 我觉得我们午餐休息已经进行了大约15分钟，但你可以继续回答问题。
- en: 'But if anyone on the stream or folks want to go grab lunch, feel free to do
    that. '
  id: totrans-split-315
  prefs: []
  type: TYPE_NORMAL
  zh: 但是如果流媒体上的任何人或者大家想要去吃午餐，随时可以这样做。
- en: 'I''m probably going to do that as well. '
  id: totrans-split-316
  prefs: []
  type: TYPE_NORMAL
  zh: 我可能也会这样做。
- en: 'But yeah, we can either continue keeping this on the stream, or if people would
    like to come join here on BigBlueButton and talk to Fermin, like folks have already
    done that, yeah, you''re welcome to. '
  id: totrans-split-317
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，是的，我们可以继续保持这种方式，或者如果人们想来BigBlueButton与Fermin交谈，就像其他人已经做过的那样，是的，欢迎你。
- en: 'Thank you. '
  id: totrans-split-318
  prefs: []
  type: TYPE_NORMAL
  zh: 谢谢。
- en: 'Thank you, Vitaliy. '
  id: totrans-split-319
  prefs: []
  type: TYPE_NORMAL
  zh: 谢谢，Vitaliy。
- en: 'Cheers. '
  id: totrans-split-320
  prefs: []
  type: TYPE_NORMAL
  zh: Cheers.
- en: 'Cheers. '
  id: totrans-split-321
  prefs: []
  type: TYPE_NORMAL
  zh: Cheers.
- en: 'So finishing the answer to the question, I think LEM does tries to fix some
    Emacs problems, can we fix problems regarding the internal API, which makes sense,
    right? '
  id: totrans-split-322
  prefs: []
  type: TYPE_NORMAL
  zh: 回答问题后，我认为LEM确实试图修复一些Emacs的问题，我们可以修复与内部API相关的问题，这是有道理的，对吧？
- en: 'Emacs have like 40 years, which is a lot. '
  id: totrans-split-323
  prefs: []
  type: TYPE_NORMAL
  zh: Emacs已经有40年了，这是很长时间。
- en: 'And yeah, which is, that''s what makes me happy. '
  id: totrans-split-324
  prefs: []
  type: TYPE_NORMAL
  zh: 而且是的，这让我很开心。
- en: 'I use both now. '
  id: totrans-split-325
  prefs: []
  type: TYPE_NORMAL
  zh: 我现在两者都使用。
- en: 'I use Maggis and Emacs for some languages and then I use LEM for Common Lisp
    and other languages. '
  id: totrans-split-326
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用 Maggis 和 Emacs 处理一些语言，然后我使用 LEM 处理公共 LISP 和其他语言。
- en: 'You can also use LEM for EmacLisp, which makes LEM the second best editor for
    EmacLisp. '
  id: totrans-split-327
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用 LEM 处理 EmacLisp，这使得 LEM 成为第二好的 EmacLisp 编辑器。
- en: 'It was a funny thing to do. '
  id: totrans-split-328
  prefs: []
  type: TYPE_NORMAL
  zh: 那是一件有趣的事情。
- en: 'OK, so do you think LEM will continue to have a lot of Japanese documentation? '
  id: totrans-split-329
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，那么你认为 LEM 将继续有很多日文文档吗？
- en: 'So there''s not that many Japanese documentation, really. '
  id: totrans-split-330
  prefs: []
  type: TYPE_NORMAL
  zh: 所以真的没有那么多日文文档。
- en: 'So there''s a few comments here and there, but it''s not full. '
  id: totrans-split-331
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这里有一些评论，但并不完整。
- en: 'We have a web page with a lot of documentation in English. '
  id: totrans-split-332
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一个网页，上面有很多英文文档。
- en: 'So you can take a look at that. '
  id: totrans-split-333
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你可以看看那个。
- en: 'But we do have to improve the documentation and translate it to English. '
  id: totrans-split-334
  prefs: []
  type: TYPE_NORMAL
  zh: 但是我们确实需要改进文档并将其翻译成英文。
- en: 'Sasaki-san is up to it, but he just doesn''t feel that comfortable translating
    it himself. '
  id: totrans-split-335
  prefs: []
  type: TYPE_NORMAL
  zh: 佐佐木先生也参与了，但他觉得自己翻译起来并不太舒服。
- en: 'So yeah. '
  id: totrans-split-336
  prefs: []
  type: TYPE_NORMAL
  zh: 所以是的。
- en: 'Yeah, it''s neat that Wem even exists, because there''s always chatter on the
    Emacs mailing list to rewrite Emacs and some other language. '
  id: totrans-split-337
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，Wem 的存在很不错，因为在 Emacs 邮件列表上总是有关于重写 Emacs 和其他语言的讨论。
- en: 'And to see that it''s already to see that I mean, you have an implementation
    sitting there and, and the thing I was wondering while I was listening in on the,
    on the Q and A was do you have Dured? '
  id: totrans-split-338
  prefs: []
  type: TYPE_NORMAL
  zh: 并且看到它已经看到，我是说，你有一个实现坐在那里，我在听 Q 和 A 时想知道的事情是你有 Dured 吗？
- en: 'Do you have Maggot? '
  id: totrans-split-339
  prefs: []
  type: TYPE_NORMAL
  zh: 你有 Maggot 吗？
- en: 'And some, somebody else wrote that question into, into Etherpad. '
  id: totrans-split-340
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些，其他人把问题写入了 Etherpad 中。
- en: 'But I was happy to see that you have Dured or something like it implemented. '
  id: totrans-split-341
  prefs: []
  type: TYPE_NORMAL
  zh: 但我很高兴看到你已经实现了 Dured 或类似的东西。
- en: 'Because I think that''s like the, for me, that''s the most important thing
    in Emacs because that gets me around in my For me too. '
  id: totrans-split-342
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我认为这就像，对我来说，这是 Emacs 中最重要的事情，因为这让我能在我的这方面四处走动。
- en: 'so I may try it out sometime, but probably won''t be for like 3 or 6 months,
    because there''s always a backlog of other things to try out. '
  id: totrans-split-343
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我可能会尝试一下，但可能要等3到6个月，因为总是有其他事情要尝试的积压。
- en: 'And do you use, I think you have bookmarks and registers, I imagine, right? '
  id: totrans-split-344
  prefs: []
  type: TYPE_NORMAL
  zh: 而且你使用，我想你有书签和寄存器，对吧？
- en: 'because I don''t use it that much. '
  id: totrans-split-345
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我不太常用它。
- en: 'But I think you have something like that. '
  id: totrans-split-346
  prefs: []
  type: TYPE_NORMAL
  zh: 但我觉得你有类似的东西。
- en: 'I mean, I don''t. '
  id: totrans-split-347
  prefs: []
  type: TYPE_NORMAL
  zh: 我的意思是，我没有。
- en: 'There''s a few features that I don''t know about them because I don''t use
    it much. '
  id: totrans-split-348
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些功能我不知道它们，因为我不怎么使用它。
- en: 'Some features, I mean. '
  id: totrans-split-349
  prefs: []
  type: TYPE_NORMAL
  zh: 一些功能，我的意思是。
- en: 'But yeah, I think you have. '
  id: totrans-split-350
  prefs: []
  type: TYPE_NORMAL
  zh: 但是是的，我认为你有。
- en: 'Let me check. '
  id: totrans-split-351
  prefs: []
  type: TYPE_NORMAL
  zh: 让我查一下。
- en: 'We can check, probably. '
  id: totrans-split-352
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以检查，可能。
- en: 'Things in extensions, just directory. '
  id: totrans-split-353
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展中的东西，只是目录。
- en: 'VNXT. '
  id: totrans-split-354
  prefs: []
  type: TYPE_NORMAL
  zh: VNXT。
- en: 'Directory mode. '
  id: totrans-split-355
  prefs: []
  type: TYPE_NORMAL
  zh: 目录模式。
- en: 'So there is. '
  id: totrans-split-356
  prefs: []
  type: TYPE_NORMAL
  zh: 所以有。
- en: 'So this is the Tyrant''s friend. '
  id: totrans-split-357
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这是暴君的朋友。
- en: 'I won''t say clone. '
  id: totrans-split-358
  prefs: []
  type: TYPE_NORMAL
  zh: 我不会说克隆。
- en: 'Very inspired. '
  id: totrans-split-359
  prefs: []
  type: TYPE_NORMAL
  zh: 非常鼓舞人心。
- en: 'like org mode, so... '
  id: totrans-split-360
  prefs: []
  type: TYPE_NORMAL
  zh: 就像 org 模式一样，所以...
- en: 'EMMS... '
  id: totrans-split-361
  prefs: []
  type: TYPE_NORMAL
  zh: EMMS...
- en: 'Yes, so someone did some MMS. '
  id: totrans-split-362
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，有人做了一些 MMS。
- en: 'So not MMS, not much. '
  id: totrans-split-363
  prefs: []
  type: TYPE_NORMAL
  zh: 所以不是 MMS，不是很多。
- en: 'So package for LEM that is now in a pull request, I think. '
  id: totrans-split-364
  prefs: []
  type: TYPE_NORMAL
  zh: LEM 的包现在在一个拉请求中，我想。
- en: 'But yeah, no. '
  id: totrans-split-365
  prefs: []
  type: TYPE_NORMAL
  zh: 但是是的，没有。
- en: 'The thing is I don''t use R mode that much. '
  id: totrans-split-366
  prefs: []
  type: TYPE_NORMAL
  zh: 问题是我不怎么使用 R 模式。
- en: 'We don''t have a heavy R mode user to provide some major mode and stuff. '
  id: totrans-split-367
  prefs: []
  type: TYPE_NORMAL
  zh: 我们没有一个重型 R 模式用户来提供一些主要模式和其他东西。
- en: 'So we don''t have that implemented yet. '
  id: totrans-split-368
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们还没有实现那个。
- en: 'The thing is, my plans for, I do have plans for our mode. '
  id: totrans-split-369
  prefs: []
  type: TYPE_NORMAL
  zh: 问题是，我的计划是，我确实有我们模式的计划。
- en: 'They''re a little bit evil, but there''s plans for it. '
  id: totrans-split-370
  prefs: []
  type: TYPE_NORMAL
  zh: 他们有点邪恶，但是有计划。
- en: 'So I''m planning to use, so rewriting our mode is a big task that I don''t
    want to do. '
  id: totrans-split-371
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我计划使用，所以重写我们的模式是一项我不想做的重大任务。
- en: 'So I''m going to use Emacs for our mode in 2.11\. '
  id: totrans-split-372
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我打算在2.11版中使用 Emacs 作为我们的模式。
- en: 'I wrote a recipe, no, a remote procedural RPC that I''m using for the Red Bull
    and stuff. '
  id: totrans-split-373
  prefs: []
  type: TYPE_NORMAL
  zh: 我写了一个配方，不，我正在用于 Red Bull 和其他东西的远程过程 RPC。
- en: 'And I''m planning to have an Emacs Puppet to provide me the functionality for
    Org Mode. '
  id: totrans-split-374
  prefs: []
  type: TYPE_NORMAL
  zh: 我计划有一个 Emacs Puppet 为 Org Mode 提供功能。
- en: 'I like to note more than Org Roam just because I feel Org Mode is great and
    all, but if all my notes are in it, I kind of feel trapped by it. '
  id: totrans-split-375
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢记录比仅仅使用 Org Roam 更多，因为我觉得 Org Mode 很棒，但如果所有的笔记都在其中，我会感到有点被困住。
- en: 'I did the talk journaling in KOutline, and I like that package better for some
    things and it''s like if I want to put like the tags on PDF file names and so
    it''s like Yeah, it''s great and all but it''s also Is that part of the motivation
    of wanting to use lamb is so you feel less entrapped by emacs No, I will say I
    don''t no. '
  id: totrans-split-376
  prefs: []
  type: TYPE_NORMAL
  zh: 我在KOutline中做了讲话日志，我更喜欢那个软件包某些东西，这就像如果我想在PDF文件名上放标签一样，是的，这很棒，但这也是想要使用lamb的动机的一部分，所以你感觉在Emacs中不受限制，不，我会说我不会。
- en: 'To be fair. '
  id: totrans-split-377
  prefs: []
  type: TYPE_NORMAL
  zh: 公平地说。
- en: 'The thing is I don''t use Hormel that much. '
  id: totrans-split-378
  prefs: []
  type: TYPE_NORMAL
  zh: 问题是我不怎么使用霍尔默。
- en: 'That''s just the reality. '
  id: totrans-split-379
  prefs: []
  type: TYPE_NORMAL
  zh: 那只是现实。
- en: 'Org Mode for me is a very good markup language, but not that much really. '
  id: totrans-split-380
  prefs: []
  type: TYPE_NORMAL
  zh: 对我来说，Org Mode 是一种非常好的标记语言，但实际上并不是那么多。
- en: 'I know that Org Mode has a lot of people and it''s used by a lot of people. '
  id: totrans-split-381
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道Org Mode有很多人使用。
- en: 'And there''s very interesting packages. '
  id: totrans-split-382
  prefs: []
  type: TYPE_NORMAL
  zh: 有非常有趣的软件包。
- en: 'plain text versus latex then? '
  id: totrans-split-383
  prefs: []
  type: TYPE_NORMAL
  zh: 普通文本与latex，然后？
- en: 'functionality. '
  id: totrans-split-384
  prefs: []
  type: TYPE_NORMAL
  zh: 功能。
- en: 'I think if you take that away, you plain or mode versus Markdown, I don''t
    think there''s that much difference, if you take the Emacs functionality away. '
  id: totrans-split-385
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为如果你去掉它，你就是普通或模式与Markdown，如果你去掉Emacs功能，我不认为有太大区别。
- en: 'I like the Like, for instance, you have the double square brackets, which is
    simpler for me to look at, but. '
  id: totrans-split-386
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢喜欢，例如，你有双方括号，这对我来说更简单，但是。
- en: 'I mean, we don''t have yet a major mode of R mode, which will be quite trivial. '
  id: totrans-split-387
  prefs: []
  type: TYPE_NORMAL
  zh: 我的意思是，我们还没有R模式的主要模式，这将是相当琐碎的。
- en: 'Well, you know, a simple syntax highlights, you know, R mode in LEM, because
    no 1 wrote it. '
  id: totrans-split-388
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，你知道，简单的语法突出显示，你知道，在LEM中的R模式，因为没有1写它。
- en: 'I mean, that''s the way with this project, right? '
  id: totrans-split-389
  prefs: []
  type: TYPE_NORMAL
  zh: 我的意思是，这个项目的方式，对吧？
- en: 'If you need people to be motivated to do that. '
  id: totrans-split-390
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要人们受到激励去做那件事。
- en: 'And with LEM, someone asked about the Japanese. '
  id: totrans-split-391
  prefs: []
  type: TYPE_NORMAL
  zh: 而且用LEM，有人问日语的问题。
- en: 'I think they''re interested about that. '
  id: totrans-split-392
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为他们对此很感兴趣。
- en: 'LEM does have a thing, but that''s what I we''re using another big fan of... '
  id: totrans-split-393
  prefs: []
  type: TYPE_NORMAL
  zh: LEM确实有一个功能，但这是我另一个大粉丝正在使用的东西...
- en: 'I mean, I know that the main people that may use in the future LEM are EMACLIS
    people. '
  id: totrans-split-394
  prefs: []
  type: TYPE_NORMAL
  zh: 我的意思是，我知道未来可能使用LEM的主要人群是EMACLIS人。
- en: 'A lot of them. '
  id: totrans-split-395
  prefs: []
  type: TYPE_NORMAL
  zh: 很多。
- en: 'It''s very similar. '
  id: totrans-split-396
  prefs: []
  type: TYPE_NORMAL
  zh: 这非常相似。
- en: 'And Sasaki-san and the LEM community mainly uses Discord for chat and stuff. '
  id: totrans-split-397
  prefs: []
  type: TYPE_NORMAL
  zh: 佐佐木先生和LEM社区主要使用Discord进行聊天和其他事务。
- en: 'I mean, we do have matrix, and I should connect to it, by the way. '
  id: totrans-split-398
  prefs: []
  type: TYPE_NORMAL
  zh: 我的意思是，我们有Matrix，顺便说一下，我应该连接它。
- en: 'But we mainly use Discord, which I don''t think is a good thing. '
  id: totrans-split-399
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们主要使用的是Discord，我认为这不是一件好事。
- en: 'I mean, to have the main communication channels, Discord. '
  id: totrans-split-400
  prefs: []
  type: TYPE_NORMAL
  zh: 我的意思是，要有主要的通信渠道，Discord。
- en: 'Because, well, it''s Discord. '
  id: totrans-split-401
  prefs: []
  type: TYPE_NORMAL
  zh: 因为嗯，那是Discord。
- en: 'It''s a closed source application that is easy for some people, but for some
    people it''s a tailbreak. '
  id: totrans-split-402
  prefs: []
  type: TYPE_NORMAL
  zh: 它是一个封闭源应用程序，对于一些人来说很容易，但对于一些人来说是一个破绽。
- en: 'that very like free software. '
  id: totrans-split-403
  prefs: []
  type: TYPE_NORMAL
  zh: 非常像自由软件。
- en: 'popular, but as soon as you break out of that mold, all of a sudden it becomes
    a lot harder. '
  id: totrans-split-404
  prefs: []
  type: TYPE_NORMAL
  zh: 流行，但一旦你摆脱了那种模式，突然之间就变得更加困难。
- en: 'For instance, they don''t have... '
  id: totrans-split-405
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，他们没有...
- en: 'All the third-party clients are unofficial and according to their terms of
    service they can just can you. '
  id: totrans-split-406
  prefs: []
  type: TYPE_NORMAL
  zh: 所有第三方客户端都是非官方的，根据其服务条款，他们可以随时禁用你。
- en: 'Which is not a nice position to be in if you''re trying to use it and you wanted
    to be a moderator using some side tools that weren''t Discord. '
  id: totrans-split-407
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你试图使用它并且想要成为使用一些非Discord辅助工具的管理员，这不是一个好的位置。
- en: 'I don''t like Discord. '
  id: totrans-split-408
  prefs: []
  type: TYPE_NORMAL
  zh: 我不喜欢Discord。
- en: 'and the LEM. '
  id: totrans-split-409
  prefs: []
  type: TYPE_NORMAL
  zh: 和LEM。
- en: 'Do you have it published somewhere? '
  id: totrans-split-410
  prefs: []
  type: TYPE_NORMAL
  zh: 你有发布在某个地方吗？
- en: 'I''ll copy that in the chat. '
  id: totrans-split-411
  prefs: []
  type: TYPE_NORMAL
  zh: 我会在聊天中复制它。
- en: 'you do like the communication with other programs with Emacs because that''s
    interesting. '
  id: totrans-split-412
  prefs: []
  type: TYPE_NORMAL
  zh: 你喜欢与Emacs中的其他程序进行通信，因为那很有趣。
- en: 'I''m not writing it from scratch, not that much as a developer. '
  id: totrans-split-413
  prefs: []
  type: TYPE_NORMAL
  zh: 我不是从头开始编写它，作为开发者并不多。
- en: 'Maybe that''s the thing I can learn. '
  id: totrans-split-414
  prefs: []
  type: TYPE_NORMAL
  zh: 也许这是我可以学到的东西。
- en: 'yeah. '
  id: totrans-split-415
  prefs: []
  type: TYPE_NORMAL
  zh: 是啊。
- en: 'Yeah. '
  id: totrans-split-416
  prefs: []
  type: TYPE_NORMAL
  zh: 是的。
- en: 'If you want to, so I didn''t see this 1, this package for the RSP, which make
    is monthly automatically. '
  id: totrans-split-417
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要的话，所以我没有看到这个1，这个包为RSP，每月自动制作。
- en: 'integrate Org Mode? '
  id: totrans-split-418
  prefs: []
  type: TYPE_NORMAL
  zh: 集成Org Mode？
- en: 'Because Org Mode needs to work on. '
  id: totrans-split-419
  prefs: []
  type: TYPE_NORMAL
  zh: 因为Org Mode需要工作。
- en: 'Emacs puppet and to have like a clone buffer from the buffer that you do in
    LEM and then the command sent into the Emacs hidden buffer and then the changes
    go back to LEM to change the buffer of LEM. '
  id: totrans-split-420
  prefs: []
  type: TYPE_NORMAL
  zh: Emacs puppet和像LEM中所做的克隆缓冲区一样，然后将命令发送到Emacs隐藏缓冲区，然后更改返回到LEM以更改LEM的缓冲区。
- en: 'That''s my idea. '
  id: totrans-split-421
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我的想法。
- en: 'Would be interesting to see what comes from it. '
  id: totrans-split-422
  prefs: []
  type: TYPE_NORMAL
  zh: 很有意思看看它会带来什么。
- en: 'It''s not, you have to duplicate the information and stuff, which is, oh, by
    the way, I''m going to pass the Lemington, which is the name of the RSP clone. '
  id: totrans-split-423
  prefs: []
  type: TYPE_NORMAL
  zh: 这不是，你必须复制信息和一些东西，这是，哦，顺便说一句，我将通过Lemington传递，这是RSP克隆的名称。
- en: 'Sorry, the integration with Emacs, which is LEM with a mustache. '
  id: totrans-split-424
  prefs: []
  type: TYPE_NORMAL
  zh: 抱歉，与Emacs的集成，这是LEM与一个小胡子。
- en: 'thing, where it would open up a slave Emacs, because it was such a performance
    hog for retrieving all the emails. '
  id: totrans-split-425
  prefs: []
  type: TYPE_NORMAL
  zh: 的事情，它会打开一个从属的Emacs，因为检索所有电子邮件对性能有如此大的影响。
- en: 'right? '
  id: totrans-split-426
  prefs: []
  type: TYPE_NORMAL
  zh: 对吧？
- en: 'I can, in fact, I''m using that for, I''m already puppeting. '
  id: totrans-split-427
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以，实际上，我正在为此做配置。
- en: 'Well, not puppeting. '
  id: totrans-split-428
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，不是木偶。
- en: 'I''m already using Maggots. '
  id: totrans-split-429
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经在使用Maggots了。
- en: 'So I have this. '
  id: totrans-split-430
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我有这个。
- en: 'Actually, let me copy. '
  id: totrans-split-431
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，让我复制一下。
- en: 'I have this, which is usually a little bit, I''m launching the Emacs daemon
    and then I''m launching Leviton. '
  id: totrans-split-432
  prefs: []
  type: TYPE_NORMAL
  zh: 我有这个，通常只是一点点，我启动了Emacs守护进程，然后启动了Leviton。
- en: 'And then this is the kill and this is the status, which is basically saying,
    run this and this is this, which is run maggot in this file. '
  id: totrans-split-433
  prefs: []
  type: TYPE_NORMAL
  zh: 然后这是杀死，这是状态，基本上是说，运行这个，这是这个，运行maggot在这个文件中。
- en: 'If you put it side by side, you will check instantly that this is the buffer
    directory, LEM home, and then the current file. '
  id: totrans-split-434
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你把它放在一起，你会立即看到这是缓冲目录、LEM主目录，然后是当前文件。
- en: 'Because I''m launching it with the file. '
  id: totrans-split-435
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我是用文件启动它的。
- en: 'So buffer directory, which is the directory of the buffer. '
  id: totrans-split-436
  prefs: []
  type: TYPE_NORMAL
  zh: 所以缓冲目录，就是缓冲区的目录。
- en: 'So I''m already using maggot as a tool outside of LEM, because I really like
    maggot. '
  id: totrans-split-437
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我已经在LEM之外使用maggot作为工具，因为我真的很喜欢maggot。
- en: 'And this is very easy to check. '
  id: totrans-split-438
  prefs: []
  type: TYPE_NORMAL
  zh: 这很容易检查。
- en: 'Launch Emacs daemon. '
  id: totrans-split-439
  prefs: []
  type: TYPE_NORMAL
  zh: 启动Emacs守护进程。
- en: 'Okay. '
  id: totrans-split-440
  prefs: []
  type: TYPE_NORMAL
  zh: 好的。
- en: 'And then I go to local projects. '
  id: totrans-split-441
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我去本地项目。
- en: 'Let''s go to another 1 that is not LEM. '
  id: totrans-split-442
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们去另一个不是LEM的地方。
- en: 'in daemon mode so you don''t ever have to restart it or the images, I guess,
    that LEM has. '
  id: totrans-split-443
  prefs: []
  type: TYPE_NORMAL
  zh: 以守护进程模式运行，这样你就不必重新启动它或者像LEM那样的图像。
- en: 'I will call it, it doesn''t have like a demon mode, so you have control separately,
    but keep in mind that LEM, it''s a common list program. '
  id: totrans-split-444
  prefs: []
  type: TYPE_NORMAL
  zh: 我会称它为，它没有像守护进程模式那样的存在，所以你可以分别控制，但要记住LEM，它是一个常见的列表程序。
- en: 'So if you use slime or Sly, you can easily connect to them to hack on it. '
  id: totrans-split-445
  prefs: []
  type: TYPE_NORMAL
  zh: 所以如果你使用slime或Sly，你可以轻松连接到它们进行调试。
- en: 'like using it from another computer? '
  id: totrans-split-446
  prefs: []
  type: TYPE_NORMAL
  zh: 比如从另一台计算机使用它？
- en: 'I think the same computer, or maybe Sage, but yeah, it''s very... '
  id: totrans-split-447
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为是同一台电脑，或者也许是Sage，但是，是的，这很…
- en: 'if you were using the window... '
  id: totrans-split-448
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在使用窗口…
- en: 'I can''t remember the name of the window manager. '
  id: totrans-split-449
  prefs: []
  type: TYPE_NORMAL
  zh: 我记不得窗口管理器的名字了。
- en: 'Or if you were using... '
  id: totrans-split-450
  prefs: []
  type: TYPE_NORMAL
  zh: 或者如果你正在使用…
- en: 'What? '
  id: totrans-split-451
  prefs: []
  type: TYPE_NORMAL
  zh: 什么？
- en: 'Yeah, yeah. '
  id: totrans-split-452
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，是的。
- en: 'Or using like stump, calling it from like stump WM or how often do you use
    that REPL? '
  id: totrans-split-453
  prefs: []
  type: TYPE_NORMAL
  zh: 或者像使用stump一样，从stump WM中调用它，你经常使用那个REPL吗？
- en: 'I connect to a museum, some WM right now, and I use LEM to connect to it, but
    I was using Emacs before. '
  id: totrans-split-454
  prefs: []
  type: TYPE_NORMAL
  zh: 我连接到一个博物馆，现在一些WM，我使用LEM连接到它，但我之前使用的是Emacs。
- en: 'And you can use Sly or Slime to connect to LEM. '
  id: totrans-split-455
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用Sly或Slime连接到LEM。
- en: 'So the thing that is in Common List makes it this kind of already out-of-the-box
    connectivity between different... '
  id: totrans-split-456
  prefs: []
  type: TYPE_NORMAL
  zh: 所以Common List中的这个东西使得它成为一种已经开箱即用的连接方式，连接不同的…
- en: 'I''ve used that before. '
  id: totrans-split-457
  prefs: []
  type: TYPE_NORMAL
  zh: 我以前用过那个。
- en: 'I''ve also used, like right now I''m using Sway. '
  id: totrans-split-458
  prefs: []
  type: TYPE_NORMAL
  zh: 我也用过，就像现在我在使用Sway一样。
- en: 'I''ve used Xmonad, DWM. '
  id: totrans-split-459
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用过Xmonad，DWM。
- en: 'I can''t remember the name. '
  id: totrans-split-460
  prefs: []
  type: TYPE_NORMAL
  zh: 我记不得名字了。
- en: 'But it was like a few years ago. '
  id: totrans-split-461
  prefs: []
  type: TYPE_NORMAL
  zh: 但那是几年前的事了。
- en: 'I''ve been doing some DWM for like the last it''s that I was... '
  id: totrans-split-462
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经做了一些DWM，就像我之前做的那样…
- en: 'I don''t know. '
  id: totrans-split-463
  prefs: []
  type: TYPE_NORMAL
  zh: 我不知道。
- en: 'have some unique ideas that weren''t necessarily available on like EWM and
    XMLNAD. '
  id: totrans-split-464
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些在EWM和XMLNAD上并非必然可用的独特想法。
- en: 'But for example, I''ll change... '
  id: totrans-split-465
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我会改变…
- en: 'So I don''t have in this computer, but in my other computer, I change the mod
    line or bar, top bar, whatever, because the ThunderLVM doesn''t only update it
    when you click, or you do some events or happen 1 minute. '
  id: totrans-split-466
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我在这台电脑上没有，但在我的另一台电脑上，我改变了mod line或者bar，顶部栏，不管怎么说，因为ThunderLVM不只是在点击时更新它，或者你做一些事件或发生1分钟。
- en: 'So you can see here, this is not changing until I click. '
  id: totrans-split-467
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你可以看到这里，这不会改变，直到我点击。
- en: 'I have a quick question for Matthew. '
  id: totrans-split-468
  prefs: []
  type: TYPE_NORMAL
  zh: 我有一个关于Matthew的快速问题。
- en: 'So is your talk going to be posted or did you My talk was the K outline for
    journaling too late for it Sorry, so I came in and I just saw Bob Weiner answering
    questions So is your talk going to be on the page for your talk? '
  id: totrans-split-469
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你的演讲会被发布吗，还是你的演讲会K大纲太迟了，所以我来了，我只看到Bob Weiner在回答问题，所以你的演讲会在你的演讲页面上吗？
- en: 'I don''t because I had, I hosted it on Mega to give it to them, because when
    I emailed it, Download and watch it. '
  id: totrans-split-470
  prefs: []
  type: TYPE_NORMAL
  zh: 我没有因为我把它托管在Mega上给他们，因为当我发邮件时，下载和观看它。
- en: 'I''m probably going to post it on YouTube later. '
  id: totrans-split-471
  prefs: []
  type: TYPE_NORMAL
  zh: 我可能稍后会把它发布在YouTube上。
- en: 'I, I had my face record with it, but I never got it edited together in time
    onto the onto the ether pad or something or onto the wiki then then I can find
    it and check it out. '
  id: totrans-split-472
  prefs: []
  type: TYPE_NORMAL
  zh: 我，我把我的脸记录在那里，但我没时间把它编辑到Etherpad或者Wiki上，然后我就可以找到它并查看它。
- en: 'All right, thanks. '
  id: totrans-split-473
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，谢谢。
- en: 'Sorry to interrupt your time, Fermin, but I figure we''re heavily into the
    break anyways. '
  id: totrans-split-474
  prefs: []
  type: TYPE_NORMAL
  zh: 对不起打扰您的时间，Fermin，但我想我们已经严重超时了。
- en: 'FERMIN GENZIERIA-CHAPMANI about all that I mean I''m already doing blasphemy
    so I think that''s oh yeah notes so the thing is then as my point of view, and
    the point of view probably of Sasaki-san, just a moment, I think, is very focused
    on an IDE more than a node-taking editor. '
  id: totrans-split-475
  prefs: []
  type: TYPE_NORMAL
  zh: 对于所有这些，我是说我已经在做亵渎，所以我认为那是对的，是的，笔记，所以事情是那么的从我的观点来看，而且可能是Sasaki先生的观点，稍等，我认为，非常专注于比节点编辑器更多的IDE。
- en: 'More like an integrated development environment. '
  id: totrans-split-476
  prefs: []
  type: TYPE_NORMAL
  zh: 更像一个集成开发环境。
- en: 'So node is like a second thing. '
  id: totrans-split-477
  prefs: []
  type: TYPE_NORMAL
  zh: 所以节点就像第二件事一样。
- en: 'So not exactly the main focus. '
  id: totrans-split-478
  prefs: []
  type: TYPE_NORMAL
  zh: 所以不完全是主要关注点。
- en: 'And I know that Emacs does have a very strong community of Ormode users that
    use Emacs for Ormode, which is the killer feature, 1 of I''ll do a feature. '
  id: totrans-split-479
  prefs: []
  type: TYPE_NORMAL
  zh: 而且我知道Emacs确实有一个非常强大的Ormode用户社区，他们使用Emacs进行Ormode，这是其杀手功能之一，我会介绍一个特性。
- en: 'I''ll do a feature of Emacs. '
  id: totrans-split-480
  prefs: []
  type: TYPE_NORMAL
  zh: 我会介绍一下Emacs的一个特性。
- en: 'So I''m not the maintainer of porthole. '
  id: totrans-split-481
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我不是porthole的维护者。
- en: 'I''m sorry. '
  id: totrans-split-482
  prefs: []
  type: TYPE_NORMAL
  zh: 对不起。
- en: 'I did add it to so I don''t maintain the remote. '
  id: totrans-split-483
  prefs: []
  type: TYPE_NORMAL
  zh: 我确实添加了它，所以我不维护远程。
- en: 'I''m sorry, I''ll pothole the USB. '
  id: totrans-split-484
  prefs: []
  type: TYPE_NORMAL
  zh: 对不起，我会用USB贴片。
- en: 'I''m only using it on the Lamington. '
  id: totrans-split-485
  prefs: []
  type: TYPE_NORMAL
  zh: 我只在Lamington上使用它。
- en: 'I cannot change anything. '
  id: totrans-split-486
  prefs: []
  type: TYPE_NORMAL
  zh: 我不能改变任何东西。
- en: 'with your window manager? '
  id: totrans-split-487
  prefs: []
  type: TYPE_NORMAL
  zh: 你的窗口管理器是？
- en: 'I do have elsewhere. '
  id: totrans-split-488
  prefs: []
  type: TYPE_NORMAL
  zh: 我在别处也有。
- en: 'editor, which I think is really fun. '
  id: totrans-split-489
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑器，我认为这真的很有趣。
- en: 'The way I can write, so I wrote a few packages for Soundallium. '
  id: totrans-split-490
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以写的方法，所以我为Soundallium写了一些包。
- en: 'So 1 of them is Proton, which basically launches like a... '
  id: totrans-split-491
  prefs: []
  type: TYPE_NORMAL
  zh: 所以其中之一是Proton，它基本上启动像一个...
- en: 'So Proton is like this wine thing that Valve you have like a list of, let me
    check. '
  id: totrans-split-492
  prefs: []
  type: TYPE_NORMAL
  zh: 所以Proton就像这种Valve的葡萄酒一样，你有一个列表，让我查一下。
- en: 'No, we''re just, sorry. '
  id: totrans-split-493
  prefs: []
  type: TYPE_NORMAL
  zh: 不，我们只是，对不起。
- en: 'This, So these all games are bought by me. '
  id: totrans-split-494
  prefs: []
  type: TYPE_NORMAL
  zh: 这些，所以这些所有的游戏都是我买的。
- en: 'They''re not pirates in any way. '
  id: totrans-split-495
  prefs: []
  type: TYPE_NORMAL
  zh: 他们在任何方面都不是海盗。
- en: 'I can use this to to launch it. '
  id: totrans-split-496
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以用这个来启动它。
- en: 'I also contribute the Dmenu integration into StumwM. '
  id: totrans-split-497
  prefs: []
  type: TYPE_NORMAL
  zh: 我还为StumwM贡献了Dmenu集成。
- en: 'So I use Dmenu. '
  id: totrans-split-498
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我使用Dmenu。
- en: 'So like this, right? '
  id: totrans-split-499
  prefs: []
  type: TYPE_NORMAL
  zh: 就像这样，对吧？
- en: 'You don''t know how nice those things are until you start using those. '
  id: totrans-split-500
  prefs: []
  type: TYPE_NORMAL
  zh: 你不知道那些东西有多好，直到你开始使用它们。
- en: 'Also I was using RoFi, but... '
  id: totrans-split-501
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，我之前在使用RoFi，但是...
- en: 'mentioning is that also, being able to use D-Menu, but being able to just have
    keyboard oriented? '
  id: totrans-split-502
  prefs: []
  type: TYPE_NORMAL
  zh: 提到的还有，能够使用D-Menu，但只能使用键盘导向？
- en: 'Everything fuzzy search narrowed and No tabs no status bars like all of a sudden
    your mental model on how your computer operates goes through the roof and a lot
    of Emacs users Know what that is like Especially In conjunction with a window
    manager? '
  id: totrans-split-503
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的模糊搜索都被限制了，没有标签页，没有状态栏，就像你的电脑操作模型突然飞跃了，很多Emacs用户都知道这是什么样的，特别是与窗口管理器结合使用时？
- en: 'So for me, I tried the Emacs window manager, but it wasn''t for me. '
  id: totrans-split-504
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我来说，我尝试了Emacs窗口管理器，但对我来说并不适合。
- en: 'Having a single thread window manager is scary. '
  id: totrans-split-505
  prefs: []
  type: TYPE_NORMAL
  zh: 使用单线程窗口管理器有点可怕。
- en: 'And also games and some stuff wasn''t working correctly, which it makes sense
    in some regards, using Emacs for window manager. '
  id: totrans-split-506
  prefs: []
  type: TYPE_NORMAL
  zh: 也是游戏和一些东西在某些方面没有正常工作，使用Emacs作为窗口管理器是有道理的。
- en: 'Oh like it. '
  id: totrans-split-507
  prefs: []
  type: TYPE_NORMAL
  zh: 哦，像这样。
- en: 'It''s not as bad in practice because The paper cuts you don''t like to hit
    them every day So you make sure So you make sure your Emacs config is a lot nicer
    and doesn''t have those slowdowns. '
  id: totrans-split-508
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，情况并不那么糟糕，因为纸上的切口你不喜欢每天都被打到它们，所以你确保你的Emacs配置更加友好，没有这些减速。
- en: 'Or you avoid those things. '
  id: totrans-split-509
  prefs: []
  type: TYPE_NORMAL
  zh: 或者你避免这些东西。
- en: 'It forces you to make your Emacs config a lot more robust to speed. '
  id: totrans-split-510
  prefs: []
  type: TYPE_NORMAL
  zh: 它迫使你使你的Emacs配置更加健壮以提高速度。
- en: 'yeah. '
  id: totrans-split-511
  prefs: []
  type: TYPE_NORMAL
  zh: 是的。
- en: 'The thing, yeah, but still, I don''t know, but... '
  id: totrans-split-512
  prefs: []
  type: TYPE_NORMAL
  zh: 这件事，是的，但是，我不知道，但是...
- en: 'great. '
  id: totrans-split-513
  prefs: []
  type: TYPE_NORMAL
  zh: 很好。
- en: 'I''m not a person, like, I don''t want to have... '
  id: totrans-split-514
  prefs: []
  type: TYPE_NORMAL
  zh: 我不是一个人，像，我不想有...
- en: 'Not with LEM or Emacs. '
  id: totrans-split-515
  prefs: []
  type: TYPE_NORMAL
  zh: 不是用 LEM 或 Emacs。
- en: 'I like to have different programs. '
  id: totrans-split-516
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢有不同的程序。
- en: 'I don''t want to like, I never was in like Emacs or you know, only Emacs. '
  id: totrans-split-517
  prefs: []
  type: TYPE_NORMAL
  zh: 我不想像，我从来不用 Emacs 或者你知道，只用 Emacs。
- en: 'I really love Emacs, GNU Emacs, but only Emacs? '
  id: totrans-split-518
  prefs: []
  type: TYPE_NORMAL
  zh: 我真的喜欢 Emacs，GNU Emacs，但是只有 Emacs 吗？
- en: 'No, no, I like my browser, I like my, you know, my Windows Manager, my, you
    know, I wasn''t Emacs only. '
  id: totrans-split-519
  prefs: []
  type: TYPE_NORMAL
  zh: 不，不，我喜欢我的浏览器，我喜欢我的，你知道，我的窗口管理器，我的，你知道，我不是仅仅 Emacs。
- en: 'Emacs is my OS. '
  id: totrans-split-520
  prefs: []
  type: TYPE_NORMAL
  zh: Emacs 是我的操作系统。
- en: 'Some people are, which is good. '
  id: totrans-split-521
  prefs: []
  type: TYPE_NORMAL
  zh: 有些人是，这是好的。
- en: 'Different kind of a... '
  id: totrans-split-522
  prefs: []
  type: TYPE_NORMAL
  zh: 不同种类的...
- en: 'I have to say that I come from Vim, like a long time ago. '
  id: totrans-split-523
  prefs: []
  type: TYPE_NORMAL
  zh: 我必须说我很久以前来自 Vim。
- en: 'But I come from Vim, so I''m using Evil Mode. '
  id: totrans-split-524
  prefs: []
  type: TYPE_NORMAL
  zh: 但我来自 Vim，所以我正在使用 Evil Mode。
- en: 'And I maybe have this kind of a... '
  id: totrans-split-525
  prefs: []
  type: TYPE_NORMAL
  zh: 而且我可能有这种...
- en: 'Yeah. '
  id: totrans-split-526
  prefs: []
  type: TYPE_NORMAL
  zh: 是的。
- en: 'So regarding Summoner.vm, it''s... '
  id: totrans-split-527
  prefs: []
  type: TYPE_NORMAL
  zh: 所以关于 Summoner.vm，它是...
- en: 'I like it because it''s common Lisp, but it don''t have some, this, I removed
    this. '
  id: totrans-split-528
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢它因为它是 Common Lisp，但是它没有一些，这个，我删除了这个。
- en: 'So I''m using another model line because the model line is not great. '
  id: totrans-split-529
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我使用另一条模型线，因为模型线不太好。
- en: 'Everything else is a little bit weird because you have frames similar to Emacs. '
  id: totrans-split-530
  prefs: []
  type: TYPE_NORMAL
  zh: 其他一切都有点奇怪，因为你有类似 Emacs 的框架。
- en: 'You have a frame. '
  id: totrans-split-531
  prefs: []
  type: TYPE_NORMAL
  zh: 你有一个窗口。
- en: 'You have this window, and then there''s no nothing here. '
  id: totrans-split-532
  prefs: []
  type: TYPE_NORMAL
  zh: 你有这个窗口，然后这里什么都没有。
- en: 'That was definitely weird. '
  id: totrans-split-533
  prefs: []
  type: TYPE_NORMAL
  zh: 那绝对是奇怪的。
- en: 'It''s also nice to be able to just... '
  id: totrans-split-534
  prefs: []
  type: TYPE_NORMAL
  zh: 能够只是也很好...
- en: 'Can''t you put multiple windows? '
  id: totrans-split-535
  prefs: []
  type: TYPE_NORMAL
  zh: 你不能放多个窗口吗？
- en: 'Can''t you duplicate windows? '
  id: totrans-split-536
  prefs: []
  type: TYPE_NORMAL
  zh: 你不能复制窗口吗？
- en: 'Show the same window in 2 frames? '
  id: totrans-split-537
  prefs: []
  type: TYPE_NORMAL
  zh: 在两个框架中显示同一个窗口？
- en: 'NIGEL Never occurred to me that. '
  id: totrans-split-538
  prefs: []
  type: TYPE_NORMAL
  zh: 尼格尔从未想过。
- en: 'I don''t know. '
  id: totrans-split-539
  prefs: []
  type: TYPE_NORMAL
  zh: 我不知道。
- en: 'Never tried that, to be honest. '
  id: totrans-split-540
  prefs: []
  type: TYPE_NORMAL
  zh: 说实话，我从来没试过那个。
- en: 'Let me check. '
  id: totrans-split-541
  prefs: []
  type: TYPE_NORMAL
  zh: 让我检查。
- en: 'No idea. '
  id: totrans-split-542
  prefs: []
  type: TYPE_NORMAL
  zh: 没有主意。
- en: 'Item? '
  id: totrans-split-543
  prefs: []
  type: TYPE_NORMAL
  zh: 项目？
- en: 'I think so. '
  id: totrans-split-544
  prefs: []
  type: TYPE_NORMAL
  zh: 我想是的。
- en: 'Because when you try to, at least not in an easy way. '
  id: totrans-split-545
  prefs: []
  type: TYPE_NORMAL
  zh: 因为当你尝试时，至少不是一种简单的方式。
- en: 'When you try to, so if I try to put a window here, let me move it so it, and
    if I try to like, so it''s, yeah, no other window. '
  id: totrans-split-546
  prefs: []
  type: TYPE_NORMAL
  zh: 当你试图时，所以如果我试图在这里放一个窗口，让我移动它，所以它，如果我试图喜欢，所以它是，是的，没有其他窗口。
- en: 'discord or your browser? '
  id: totrans-split-547
  prefs: []
  type: TYPE_NORMAL
  zh: discord 还是你的浏览器？
- en: 'Could you open that in both your frames? '
  id: totrans-split-548
  prefs: []
  type: TYPE_NORMAL
  zh: 你能在两个框架中打开那个吗？
- en: 'at least I don''t know what configuration you''d have to do to get to be able
    to do that in XMONAD. '
  id: totrans-split-549
  prefs: []
  type: TYPE_NORMAL
  zh: 至少我不知道你需要做什么配置才能在 XMONAD 中做到这一点。
- en: 'I never tried. '
  id: totrans-split-550
  prefs: []
  type: TYPE_NORMAL
  zh: 我从未尝试过。
- en: 'Maybe you can? '
  id: totrans-split-551
  prefs: []
  type: TYPE_NORMAL
  zh: 也许你可以？
- en: 'No idea. '
  id: totrans-split-552
  prefs: []
  type: TYPE_NORMAL
  zh: 没主意。
- en: 'The interesting thing that I never use is that floating windows. '
  id: totrans-split-553
  prefs: []
  type: TYPE_NORMAL
  zh: 我从未使用过的有趣之处是浮动窗口。
- en: 'Never use floating windows, but normal windows. '
  id: totrans-split-554
  prefs: []
  type: TYPE_NORMAL
  zh: 从未使用浮动窗口，但是普通窗口。
- en: 'You know, not. '
  id: totrans-split-555
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道，不。
- en: 'And SoundWM does have a weird support for it. '
  id: totrans-split-556
  prefs: []
  type: TYPE_NORMAL
  zh: 而且 SoundWM 对此的支持确实有些奇怪。
- en: 'Now it works. '
  id: totrans-split-557
  prefs: []
  type: TYPE_NORMAL
  zh: 现在它工作了。
- en: 'But I don''t like it. '
  id: totrans-split-558
  prefs: []
  type: TYPE_NORMAL
  zh: 但我不喜欢它。
- en: 'For me, it was a little bit rough, the use of floating windows in SoundWM. '
  id: totrans-split-559
  prefs: []
  type: TYPE_NORMAL
  zh: 对我来说，在 SoundWM 中使用浮动窗口有点困难。
- en: 'I think they''re way better now. '
  id: totrans-split-560
  prefs: []
  type: TYPE_NORMAL
  zh: 我觉得现在它们好多了。
- en: 'I think, but yeah, I don''t use it so... '
  id: totrans-split-561
  prefs: []
  type: TYPE_NORMAL
  zh: 我想，但是是的，我不使用它所以...
- en: 'But there is. '
  id: totrans-split-562
  prefs: []
  type: TYPE_NORMAL
  zh: 但是有。
- en: 'like, Emacs doing everything, it''s like, you got like Emacs, you got shell,
    and then you got the gooey Wild West. '
  id: totrans-split-563
  prefs: []
  type: TYPE_NORMAL
  zh: 就像，Emacs 做所有事情，就像，你有 Emacs，你有 shell，然后你有 gooey Wild West。
- en: 'Yeah. '
  id: totrans-split-564
  prefs: []
  type: TYPE_NORMAL
  zh: 是的。
- en: 'Like, with Emacs, I know, I''ll generally get, oh, this is going to be configured
    in? '
  id: totrans-split-565
  prefs: []
  type: TYPE_NORMAL
  zh: 像，用 Emacs，我知道，我通常会得到，哦，这将在哪里配置？
- en: 'It''s either gonna be shell script, Python or Emacs. '
  id: totrans-split-566
  prefs: []
  type: TYPE_NORMAL
  zh: 它要么是 shell 脚本，Python 或 Emacs。
- en: 'Oh wait, no, it''s gonna be Emacs. '
  id: totrans-split-567
  prefs: []
  type: TYPE_NORMAL
  zh: 哦等等，不，它会是 Emacs。
- en: 'Variable''s gonna be written in SecQ, period. '
  id: totrans-split-568
  prefs: []
  type: TYPE_NORMAL
  zh: 变量将被写在 SecQ，句号。
- en: 'but I''d like to, for example, I had to do a, so the automatic installer for,
    for Debian base, Debian stuff for Linux for, for LEM. '
  id: totrans-split-569
  prefs: []
  type: TYPE_NORMAL
  zh: 但是我想，例如，我不得不做一个，所以自动安装程序，为 Debian 基础，为 Linux，为 LEM。
- en: 'I was thinking of doing in bash and I say, I don''t want to do it in Bash. '
  id: totrans-split-570
  prefs: []
  type: TYPE_NORMAL
  zh: 我在想着用 bash 做，我说，我不想用 Bash 做。
- en: 'So I just did it in SVC and Commodisp, which does have like a scripting feature. '
  id: totrans-split-571
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我只是在 SVC 和 Commodisp 中做了，它确实有一个脚本功能。
- en: 'You can put a script and it will create your own script. '
  id: totrans-split-572
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以放一个脚本，它会创建你自己的脚本。
- en: 'he did a talk on using Common Lisp as a replacement for a shell. '
  id: totrans-split-573
  prefs: []
  type: TYPE_NORMAL
  zh: 他做了一个关于使用 Common Lisp 替代 shell 的演讲。
- en: 'I know that he exists. '
  id: totrans-split-574
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道他存在。
- en: 'Next, I think it''s a main maintainer of Nix, I think he took it down. '
  id: totrans-split-575
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我认为它是 Nix 的主要维护者，我认为他把它撤下来了。
- en: 'yeah, he took it down. '
  id: totrans-split-576
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，他把它撤下来了。
- en: 'Machine. '
  id: totrans-split-577
  prefs: []
  type: TYPE_NORMAL
  zh: 机器。
- en: 'I think, somewhere. '
  id: totrans-split-578
  prefs: []
  type: TYPE_NORMAL
  zh: 我觉得，在某个地方。
- en: 'I remember reading that. '
  id: totrans-split-579
  prefs: []
  type: TYPE_NORMAL
  zh: 我记得读过那个。
- en: 'So also, I would like to keep separated things in that way to have shell and
    then Emacs or LEM. '
  id: totrans-split-580
  prefs: []
  type: TYPE_NORMAL
- en: 'Like for Emacs I use Viter. '
  id: totrans-split-581
  prefs: []
  type: TYPE_NORMAL
- en: 'I don''t like that it has different, you know. '
  id: totrans-split-582
  prefs: []
  type: TYPE_NORMAL
- en: 'I also don''t like my terminal not to be able to click URLs and I like I like
    my terminal to have history and you know to scroll position copy paste You can
    do some of that stuff, but you know how that stuff go on the killer ring I kind
    of view it as like an alternative to shell. '
  id: totrans-split-583
  prefs: []
  type: TYPE_NORMAL
- en: 'terminal, I only use it for navigate, remove stuff, so basic stuff. '
  id: totrans-split-584
  prefs: []
  type: TYPE_NORMAL
- en: 'When I have to like, I don''t know, edit something, just open the... '
  id: totrans-split-585
  prefs: []
  type: TYPE_NORMAL
- en: 'find my files. '
  id: totrans-split-586
  prefs: []
  type: TYPE_NORMAL
- en: 'I kind of wish I could do that That would be, I''m sure, nicer. '
  id: totrans-split-587
  prefs: []
  type: TYPE_NORMAL
- en: 'that, right? '
  id: totrans-split-588
  prefs: []
  type: TYPE_NORMAL
- en: 'But you have to configure all of them. '
  id: totrans-split-589
  prefs: []
  type: TYPE_NORMAL
- en: 'Beam users are very aware of those tools. '
  id: totrans-split-590
  prefs: []
  type: TYPE_NORMAL
- en: 'You know, having very good fuzzy finding of files and then all by the terminal. '
  id: totrans-split-591
  prefs: []
  type: TYPE_NORMAL
- en: 'I do have a friend who is a user of the Forbidden Editor, he''s good, that
    does have a lot of small, like fuzzy finding, and so complete commands, and call
    those images in the terminal, all sorts of crazy stuff. '
  id: totrans-split-592
  prefs: []
  type: TYPE_NORMAL
- en: 'That I think are not overkill, but I mean, if you want to use it, go ahead. '
  id: totrans-split-593
  prefs: []
  type: TYPE_NORMAL
- en: 'So yeah. '
  id: totrans-split-594
  prefs: []
  type: TYPE_NORMAL
- en: 'The thing is that, So trickling back a little bit to LEM, I think an interesting
    thought that I have about LEM and I can do Emacs. '
  id: totrans-split-595
  prefs: []
  type: TYPE_NORMAL
- en: 'Not now, because LEM is a very small, like literally people, at least developers
    and users, I don''t know, maybe 10 less. '
  id: totrans-split-596
  prefs: []
  type: TYPE_NORMAL
- en: 'But people may think, split the community, right? '
  id: totrans-split-597
  prefs: []
  type: TYPE_NORMAL
- en: 'That''s the main thing that should come to my mind, split the community, maybe
    you, because that''s true. '
  id: totrans-split-598
  prefs: []
  type: TYPE_NORMAL
- en: 'I mean, I''m not developing that much in Nui MacLisp because I''m developing
    them. '
  id: totrans-split-599
  prefs: []
  type: TYPE_NORMAL
- en: 'That''s not that I''m a force that you might think exists or anything, but
    you know, you''re splitting a very small community. '
  id: totrans-split-600
  prefs: []
  type: TYPE_NORMAL
- en: 'Not that LEM wants to do that or anything, or will be able to in any way, but
    you know what I mean. '
  id: totrans-split-601
  prefs: []
  type: TYPE_NORMAL
- en: 'I thought about that, And I think it''s an interesting concern. '
  id: totrans-split-602
  prefs: []
  type: TYPE_NORMAL
- en: 'But that concern also stops innovation in some way. '
  id: totrans-split-603
  prefs: []
  type: TYPE_NORMAL
- en: 'of how many EMAX talks are related to knowledge management and not all and
    like for instance denote and Orgrim don''t really work together all that well
    they split the community so to say I don''t think they make it weaker at all,
    though. '
  id: totrans-split-604
  prefs: []
  type: TYPE_NORMAL
- en: 'I think you were saying competition is good, but yeah, competition is good. '
  id: totrans-split-605
  prefs: []
  type: TYPE_NORMAL
- en: 'I want to put it in the... '
  id: totrans-split-606
  prefs: []
  type: TYPE_NORMAL
- en: 'But, you know, I''m doing the devil''s advocate this regard. '
  id: totrans-split-607
  prefs: []
  type: TYPE_NORMAL
- en: 'Like someone wants to like say something that maybe, you know, because some
    people still remember the Emacs versus X Emacs thing in the past, you know, that
    the split of the and That was good in some way but also bad in others like the
    compatibility was a little bit of a hell You know at the end Emacs failed, no
    Emacs But at that time it wasn''t that clear and some people like it wasn''t there. '
  id: totrans-split-608
  prefs: []
  type: TYPE_NORMAL
- en: 'And I can understand that kind of a feeling. '
  id: totrans-split-609
  prefs: []
  type: TYPE_NORMAL
- en: 'going Like you''re on a hill and you want to goes down and up. '
  id: totrans-split-610
  prefs: []
  type: TYPE_NORMAL
- en: 'It doesn''t mean that even if you know you''re going down, it doesn''t mean
    that it was a mistake. '
  id: totrans-split-611
  prefs: []
  type: TYPE_NORMAL
- en: 'interesting thing that I want to envision in the future, if I have time or
    someone wants to help me with, is I want them to have different language for extension,
    different Lisp for extension, not only common Lisp, but Scheme closure. '
  id: totrans-split-612
  prefs: []
  type: TYPE_NORMAL
- en: 'And maybe not EmacLisp probably, tried to add Guile support to, but Guile is
    not scheme. '
  id: totrans-split-613
  prefs: []
  type: TYPE_NORMAL
- en: 'Well, it''s kind of scheme, but it''s not all schemes, which is, you know,
    and it was just to replace EmacLisp with Gile. '
  id: totrans-split-614
  prefs: []
  type: TYPE_NORMAL
- en: 'You have 2 both. '
  id: totrans-split-615
  prefs: []
  type: TYPE_NORMAL
- en: 'It was similar in that way, but the thing is, Common Lisp does have a lot of
    interesting things. '
  id: totrans-split-616
  prefs: []
  type: TYPE_NORMAL
- en: 'So someone wrote a closure in Common Lisp. '
  id: totrans-split-617
  prefs: []
  type: TYPE_NORMAL
- en: 'Which is called Cloture. '
  id: totrans-split-618
  prefs: []
  type: TYPE_NORMAL
- en: 'Someone wrote, well it''s on the way but it''s getting there, a standard scheme
    in Common Lisp. '
  id: totrans-split-619
  prefs: []
  type: TYPE_NORMAL
- en: 'So to add support to LEM, will be as easy as import package, and you have,
    And if that language, which usually does, supports very well interaction between
    the host language and the language that tries to provide, you will mostly automatically
    have new language for the editor. '
  id: totrans-split-620
  prefs: []
  type: TYPE_NORMAL
- en: 'would be like using Next to scrape websites, download CSV bank statements,
    integrating with like password managers and or using... '
  id: totrans-split-621
  prefs: []
  type: TYPE_NORMAL
- en: 'yeah you could still do with yeah I other options would be Selenium, JavaScript,
    Next already gives you the REPL for that. '
  id: totrans-split-622
  prefs: []
  type: TYPE_NORMAL
- en: 'Or when you had that Ambryvar talk, when he, I don''t know if you watched it,
    but when you use a shell and a command takes takes a while It just automatically
    takes you back into your shell and says I''ll just let this run in the background
    or being able to more easily run commands in parallel. '
  id: totrans-split-623
  prefs: []
  type: TYPE_NORMAL
- en: 'he. '
  id: totrans-split-624
  prefs: []
  type: TYPE_NORMAL
- en: 'Because 1 was using the repl in place of the shell is 1 of the things in there
    was if, let''s say you were compiling a program, that takes a while. '
  id: totrans-split-625
  prefs: []
  type: TYPE_NORMAL
- en: 'If it took longer than like 3 seconds or something along those lines, it would
    kick you back into the shell and say, oh, we''re waiting for this program and
    then it had back reference support. '
  id: totrans-split-626
  prefs: []
  type: TYPE_NORMAL
- en: 'So you could say, Oh, app search for this program. '
  id: totrans-split-627
  prefs: []
  type: TYPE_NORMAL
- en: 'And then with the, with the shell, I, when I want to search, I''ll then grep
    through that list to narrow it down even further, but I do a whole new search. '
  id: totrans-split-628
  prefs: []
  type: TYPE_NORMAL
- en: 'It just says, oh, just grep through what I already searched. '
  id: totrans-split-629
  prefs: []
  type: TYPE_NORMAL
- en: 'Just grep through the results of the command that''s 3 commands ago. '
  id: totrans-split-630
  prefs: []
  type: TYPE_NORMAL
- en: 'in my compilation output, for the errors. '
  id: totrans-split-631
  prefs: []
  type: TYPE_NORMAL
- en: 'I was looking for it. '
  id: totrans-split-632
  prefs: []
  type: TYPE_NORMAL
- en: 'You know, the... '
  id: totrans-split-633
  prefs: []
  type: TYPE_NORMAL
- en: 'Yeah, I want to check the, No, this is not what I meant. '
  id: totrans-split-634
  prefs: []
  type: TYPE_NORMAL
- en: 'I cannot find the... '
  id: totrans-split-635
  prefs: []
  type: TYPE_NORMAL
- en: 'I was trying to find like a unit shell for interface with for common Lisp? '
  id: totrans-split-636
  prefs: []
  type: TYPE_NORMAL
- en: 'Is that the thing? '
  id: totrans-split-637
  prefs: []
  type: TYPE_NORMAL
- en: 'no longer website. '
  id: totrans-split-638
  prefs: []
  type: TYPE_NORMAL
- en: 'Website. '
  id: totrans-split-639
  prefs: []
  type: TYPE_NORMAL
- en: 'Maybe this 1. '
  id: totrans-split-640
  prefs: []
  type: TYPE_NORMAL
- en: 'I cannot find it. '
  id: totrans-split-641
  prefs: []
  type: TYPE_NORMAL
- en: 'it too. '
  id: totrans-split-642
  prefs: []
  type: TYPE_NORMAL
- en: 'CH. '
  id: totrans-split-643
  prefs: []
  type: TYPE_NORMAL
- en: 'Oh, I was looking at the clesh. '
  id: totrans-split-644
  prefs: []
  type: TYPE_NORMAL
- en: 'Clish, so the, let''s check for it. '
  id: totrans-split-645
  prefs: []
  type: TYPE_NORMAL
- en: 'The other 1 is shell and camel. '
  id: totrans-split-646
  prefs: []
  type: TYPE_NORMAL
- en: 'This 1. '
  id: totrans-split-647
  prefs: []
  type: TYPE_NORMAL
- en: 'Oh, interesting. '
  id: totrans-split-648
  prefs: []
  type: TYPE_NORMAL
- en: 'you use those disk images, LISP images, to have some of your common LISP utilities
    or programming libraries that you utilize in tandem with your REPL. '
  id: totrans-split-649
  prefs: []
  type: TYPE_NORMAL
- en: 'So you can easily pull up a more featureful or a REPL that has more tools in
    it than by default. '
  id: totrans-split-650
  prefs: []
  type: TYPE_NORMAL
- en: 'yeah, I mean, that will be, it will be fairly, no, no, easy. '
  id: totrans-split-651
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，我的意思是，那将会，它会相当，不，不容易。
- en: 'Well, easy, but not, But this can be integrated into LEM probably. '
  id: totrans-split-652
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，容易，但不是，但这可以集成到LEM中去。
- en: 'Very, you know, not that easy because you have to change the few things. '
  id: totrans-split-653
  prefs: []
  type: TYPE_NORMAL
  zh: 很难，你知道，因为你必须改变一些东西。
- en: 'But this can be, you know. '
  id: totrans-split-654
  prefs: []
  type: TYPE_NORMAL
  zh: 但这可能是，你知道的。
- en: 'Well, 1 of the things that was in the talk, 1 of the main ideas was, let''s
    just, rather than trying to make the shell closer to a REPL, let''s make a REPL
    closer to a shell, make it to where we can easily run Linux programs in it, and
    then use the rest of the REPL goodness, make it to where parentheses are easy
    to use, like paraedit, And then all of a sudden you have a nicer shell. '
  id: totrans-split-655
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，讲座中有一个主要思想是，与其试图使shell更接近REPL，不如使REPL更接近shell，使它可以轻松运行Linux程序，然后利用REPL的其余优点，使括号易于使用，例如paraedit，然后你会有一个更好的shell。
- en: 'Not really shell, but. '
  id: totrans-split-656
  prefs: []
  type: TYPE_NORMAL
  zh: 不是真的shell，但是。
- en: 'It''s Leo from the general track. '
  id: totrans-split-657
  prefs: []
  type: TYPE_NORMAL
  zh: 这是来自总体跟踪的Leo。
- en: 'We are about to go back live on the development track, so you can continue
    the discussion. '
  id: totrans-split-658
  prefs: []
  type: TYPE_NORMAL
  zh: 我们即将回到开发跟踪的现场直播中，所以你可以继续讨论。
- en: 'You know, we are recording everything and you seem to be having a great amount
    of fun to issue the need for lunch, at least for the people in the US. '
  id: totrans-split-659
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道，我们正在录制一切，你们似乎玩得很开心，需要午餐，至少对于美国的人来说。
- en: 'I just want to let you know, in 2 minutes'' time, we will be moving back to
    the rest of the talk for the afternoon, but feel free to stay in a room and keep
    discussing. '
  id: totrans-split-660
  prefs: []
  type: TYPE_NORMAL
  zh: 我只想告诉你，在2分钟后，我们将回到下午的其余讲座，但请随时留在房间里继续讨论。
- en: 'All right? '
  id: totrans-split-661
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧？
- en: 'so if you have your watch synchronized at 7 sharps, so in 2 minutes, it''ll
    cut off. '
  id: totrans-split-662
  prefs: []
  type: TYPE_NORMAL
  zh: 所以如果你的手表在7点整同步，那么在2分钟内它会自动关闭。
- en: 'Yeah. '
  id: totrans-split-663
  prefs: []
  type: TYPE_NORMAL
  zh: 是的。
- en: 'Interesting stuff indeed. '
  id: totrans-split-664
  prefs: []
  type: TYPE_NORMAL
  zh: 的确是有趣的事情。
- en: 'The 1 that''s in that webpage, the FOSDEM 1. '
  id: totrans-split-665
  prefs: []
  type: TYPE_NORMAL
  zh: 在那个网页上的1，FOSDEM 1。
- en: 'I in fact saw him live in the FOSDEM 2020. '
  id: totrans-split-666
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上我在FOSDEM 2020年看到了他现场。
- en: 'So we him is here in well here in Europe here in Brussels like 3 hours away
    or 2 hours away in plane from where I am. '
  id: totrans-split-667
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们他在这里在欧洲在这里在布鲁塞尔大概3个小时或者2小时的飞机离我所在的地方。
- en: 'with, you have some of they''re like, oh, I want to visit all the corners of
    the US in a couple of days. '
  id: totrans-split-668
  prefs: []
  type: TYPE_NORMAL
  zh: 你有些像，哦，我想在几天内访问美国的所有角落。
- en: 'And it''s like, No, US is the size of Europe. '
  id: totrans-split-669
  prefs: []
  type: TYPE_NORMAL
  zh: 而且就像，不，美国的大小是欧洲的大小。
- en: 'You don''t... '
  id: totrans-split-670
  prefs: []
  type: TYPE_NORMAL
  zh: 你不...
- en: 'It''s huge. '
  id: totrans-split-671
  prefs: []
  type: TYPE_NORMAL
  zh: 这是巨大的。
- en: 'And it''s like 6 hours different from coast to coast, something like that. '
  id: totrans-split-672
  prefs: []
  type: TYPE_NORMAL
  zh: 而且从海岸到海岸大概差6个小时，大概这样。
- en: 'on the freeway, on the best roads that you possibly can, not taking... '
  id: totrans-split-673
  prefs: []
  type: TYPE_NORMAL
  zh: 在高速公路上，选择可能的最佳道路，不采取...
- en: 'So the thing that I try to do also with LEM is to move my workflow from LEM
    to Emax, so for Emax to LEM, use it more. '
  id: totrans-split-674
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我也试图用LEM将我的工作流从LEM移动到Emax，所以从Emax到LEM，更多地使用它。
- en: 'And I hope to, we still have a long way to go in terms of usability, in terms
    of other things, because we need more power. '
  id: totrans-split-675
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望我们在可用性方面，以及其他方面还有很长的路要走，因为我们需要更多的动力。
- en: 'So This is also my attempt to do some publicity to the Blend project itself,
    to need to add more users, to be willing to try and to fail trying, because we
    still have some rough edges. '
  id: totrans-split-676
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这也是我尝试一些对Blend项目本身进行宣传的尝试，需要增加更多的用户，愿意尝试并在尝试中失败，因为我们仍然有一些粗糙的边缘。
- en: 'Yeah, just trying to do that, which is, and I apologize to the Emaclist community,
    which I''m part of, but I don''t want to like, disencourage the use of getting
    Emacs anyway. '
  id: totrans-split-677
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，只是试图做到这一点，这是我尝试做的事情，对于我所在的Emaclist社区，我很抱歉，但我不想阻止任何人获取Emacs。
- en: 'I think both are awesome. '
  id: totrans-split-678
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为两者都很棒。
- en: 'I want to anyone to get a real impression. '
  id: totrans-split-679
  prefs: []
  type: TYPE_NORMAL
  zh: 我想要任何人都能有一个真实的印象。
- en: 'you have a very powerful name. '
  id: totrans-split-680
  prefs: []
  type: TYPE_NORMAL
  zh: 你有一个非常有力的名字。
- en: 'about. '
  id: totrans-split-681
  prefs: []
  type: TYPE_NORMAL
  zh: 关于。
- en: 'I don''t personally, but I''m going to watch the EMMS talk. '
  id: totrans-split-682
  prefs: []
  type: TYPE_NORMAL
  zh: 我个人不，但我要看EMMS的讲座。
- en: 'That''s something that I don''t really use too much on my Emacs config. '
  id: totrans-split-683
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我在Emacs配置中并不常用的东西。
- en: 'So I''m going to let you go. '
  id: totrans-split-684
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我要让你离开。
- en: 'I''m going to maybe watch the garbage collector talk, which is interesting. '
  id: totrans-split-685
  prefs: []
  type: TYPE_NORMAL
  zh: 我可能会看一下垃圾收集器的讲座，这很有趣。
- en: 'So thank you all very much. '
  id: totrans-split-686
  prefs: []
  type: TYPE_NORMAL
  zh: 所有非常感谢你们。
- en: 'I''m gonna go. '
  id: totrans-split-687
  prefs: []
  type: TYPE_NORMAL
  zh: 我要去。
- en: 'Thanks for the questions and all that. '
  id: totrans-split-688
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢你们的问题和一切。
- en: 'I think I hope I answered correctly people sharing interesting talks. '
  id: totrans-split-689
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望我能正确回答人们分享的有趣讲座。
- en: 'the Emacs conf and to watch me. '
  id: totrans-split-690
  prefs: []
  type: TYPE_NORMAL
  zh: Emacs会议和观看我。
- en: 'So thank you all very much. '
  id: totrans-split-691
  prefs: []
  type: TYPE_NORMAL
  zh: 所以非常感谢你们所有人。
- en: I'm going to go do that.
  id: totrans-split-692
  prefs: []
  type: TYPE_NORMAL
  zh: 我要去做那件事。
- en: Questions or comments? Please e-mail [emacsconf-org-private@gnu.org](mailto:emacsconf-org-private@gnu.org?subject=Comment%20for%20EmacsConf%202023%20emacsen%3A%20The%20Emacsen%20family%2C%20the%20design%20of%20an%20Emacs%20and%20the%20importance%20of%20Lisp)
  id: totrans-split-693
  prefs: []
  type: TYPE_NORMAL
  zh: 问题或评论？请发邮件至[emacsconf-org-private@gnu.org](mailto:emacsconf-org-private@gnu.org?subject=Comment%20for%20EmacsConf%202023%20emacsen%3A%20The%20Emacsen%20family%2C%20the%20design%20of%20an%20Emacs%20and%20the%20importance%20of%20Lisp)
