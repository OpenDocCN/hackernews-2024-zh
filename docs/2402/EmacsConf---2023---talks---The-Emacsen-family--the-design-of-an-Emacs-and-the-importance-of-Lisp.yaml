- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:55:15'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: EmacsConf - 2023 - talks - The Emacsen family, the design of an Emacs and the
    importance of Lisp
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://emacsconf.org/2023/talks/emacsen/](https://emacsconf.org/2023/talks/emacsen/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The Emacsen family, the design of an Emacs and the importance of Lisp
  id: totrans-split-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Fermin (he/him) - [https://codeberg.org/sasanidas](https://codeberg.org/sasanidas)
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
- en: 'Format: 19-min talk; Q&A: BigBlueButton conference room'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
- en: 'Status: TO_INDEX_QA'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: Talk
  id: totrans-split-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <https://media.emacsconf.org/2023/emacsconf-2023-emacsen--the-emacsen-family-the-design-of-an-emacs-and-the-importance-of-lisp--fermin--main.webm>
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
- en: captions="""<track label="English" kind="captions" srclang="en" src="/2023/captions/emacsconf-2023-emacsen--the-emacsen-family-the-design-of-an-emacs-and-the-importance-of-lisp--fermin--main.vtt"
    default="">"""<track kind="chapters" label="Chapters" src="/2023/captions/emacsconf-2023-emacsen--the-emacsen-family-the-design-of-an-emacs-and-the-importance-of-lisp--fermin--main--chapters.vtt">
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
- en: '*Your browser does not support the video tag. Please download the video instead.*'
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-split-14
  prefs: []
  type: TYPE_PRE
- en: 'Duration: 18:28 minutes'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
- en: Q&A
  id: totrans-split-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <https://media.emacsconf.org/2023/emacsconf-2023-emacsen--the-emacsen-family-the-design-of-an-emacs-and-the-importance-of-lisp--fermin--answers.webm>
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
- en: captions="""<track label="English" kind="captions" srclang="en" src="/2023/captions/emacsconf-2023-emacsen--the-emacsen-family-the-design-of-an-emacs-and-the-importance-of-lisp--fermin--answers.vtt"
    default="">"""
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
- en: '*Your browser does not support the video tag. Please download the video instead.*'
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
- en: 'Listen to just the audio:'
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
- en: 'Duration: 1:08:14 minutes'
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
- en: Description
  id: totrans-split-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '<details class="help"><summary>Help wanted: Q&A could be indexed with chapter
    markers</summary></details>'
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
- en: The Q&A session for this talk does not have chapter markers yet. Would you like
    to help? See [help with chapter markers](../../../help_with_chapter_markers/)
    for more details. You can use the vidid="emacsen-qanda" if adding the markers
    to this wiki page, or e-mail your chapter notes to [emacsconf-submit@gnu.org](mailto:emacsconf-submit@gnu.org).
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
- en: (If you want to work on this and you think it might take you a while, you can
    reserve this task by editing the page and adding volunteer="your-name date" or
    by e-mailing [emacsconf-submit@gnu.org](mailto:emacsconf-submit@gnu.org).)
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
- en: This talk is about the design of an Emacs the Emacsen editors, GNU Emacs, Emacs
    Lisp and the extensibility of GNU Emacs (and Lem as an example of Common Lisp).
    I want to focus the talk about the understand of the concept of Emacs but with
    concrete examples (GNU Emacs and Lem), also highlight some historical Emacsen
    and how the family of editors is doing today.
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
- en: 'About the speaker:'
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
- en: I'm Fermin MF, I'm a Software Engineer from Spain with interest in Emacsy editors.
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  id: totrans-split-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Questions and answers
  id: totrans-split-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Q: How large is the LEM community? How big is the chance of it surviving long
    term?'
  id: totrans-split-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Q:Are there any Lisp machine capabilities you are trying to revive that GNU
    Emacs lacks?  The typed objects capability in the editor as an example.
  id: totrans-split-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Q: What about using Lem for things other than coding common lisp, dired magit
    "notes org mode dentoe org roam" emms pdf tools shell mode?'
  id: totrans-split-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Q:What about using this in conjunction with Nyxt the common lisp; web browser
  id: totrans-split-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Q: What is the license of LEM?'
  id: totrans-split-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Q: Big question, I realize, but: How far is LEM from being able to run Elisp
    libraries, e.g. imagine if Magit could "just work" in LEM?'
  id: totrans-split-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Q: How are LEM buffers designed? Similar to Emacs? TextGrid with Properties?
    Or something other? I just tried again to give Emacs more interactivity & am thinking
    if there is a possible display future for the Emacsen.'
  id: totrans-split-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Q: What are the things or experances that lem gives you that are nicer than
    Emacs? or make you happy using both?'
  id: totrans-split-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Q: (Forgive me if you answered this already.)  Do you think Lem will continue
    to have a lot of Japanese documentation, or is there a chance it will move entirely
    to English?  (IMHO having much of the docs in Japanese will hold back the project.)'
  id: totrans-split-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Transcript
  id: totrans-split-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[[00:00:00.000]](#mainVideo-emacsen) Introduction'
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
- en: Hello, my name is Fermin. Today, I'm going to talk about the Emacsen family,
    the design of an Emacs, and the importance of Lisp. So we're going to talk about
    Lisp. I want to start from the end.
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
- en: '[[00:00:17.000]](#mainVideo-emacsen) Why Lisp matters'
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
- en: 'The first question I want to ask is why I think Lisp matters. When I''m talking
    about Lisp here, I''m talking about the idea of Lisp, so the family of languages
    that are Lisp. But given that there''s no formal specification of Lisp, so the
    opinion might vary. I will expect that Lisp, most of the Lisp have these kind
    of features. The first one is homoiconic: the code is data, basically. They also
    have a REPL: read-eval-print loop. That is very powerful and can help in development.
    Also, I think a good Lisp should have a powerful macro system. I''m good with
    compile-time macros, but read-time is also interesting. There''s a lot of Lisp
    that you can choose. There''s the main three ones, of course, with Scheme, Common
    Lisp, and Clojure. Scheme by Guile, Common Lisp by Common Lisp, and Clojure by
    Clojure or ClojureScript.'
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
- en: '[[00:01:26.640]](#mainVideo-emacsen) Why Emacs Lisp was chosen'
  id: totrans-split-45
  prefs: []
  type: TYPE_NORMAL
- en: 'So let''s talk about Emacs Lisp. I didn''t mention Emacs Lisp. I''m going to
    talk about why Emacs Lisp was chosen for an Emacs editor. We''re going to explore
    this kind of design of the Emacs. And Emacs Lisp is the main language of it. Why?
    Given that there were a few alternatives at the time, why Emacs Lisp was chosen?
    So RMS, Richard Stallman, needed a Lisp, and there wasn''t one available at the
    time. Keep in mind, this was the early 80s. Stallman was writing at that point
    the GCC, I think, and he was writing the core components of what is going to become
    GNU. He needed an editor. He wanted Lisp. He wanted Emacs. So he wrote Emacs Lisp.
    So at that time, the functionality was more important than "perfection." What
    I mean [by] "perfection" is: we programmers sometimes like to make everything
    good or very, very good when sometimes, indeed, it''s more important that it works
    to do the task that it should. And it''s not a bad language. It''s not that bad.
    At that time, it was mostly nice. Today, it''s good enough, I think.'
  id: totrans-split-46
  prefs: []
  type: TYPE_NORMAL
- en: '[[00:11:00.040]](#mainVideo-emacsen) to [do] day-to-day programming in a very
    good experience. This is not like--I want to clarify this because some people
    bring some exploratory projects. This is not that one. This is finished. Well,
    finished in the way that you can use it. It''s not, you know, have everything
    in place. So let''s continue. It''s written 100% in Common Lisp. I say this because
    Emacs is not 100% in Emacs Lisp. You have to modify the C code, I think, well,
    if you... You don''t have to, but if you want to change the internals, you do.
    I think that given that Lem does not care about the implementation of the language
    itself-- so for example, Lem doesn''t have to deal with how Common Lisp works,
    it just used the language, right? It''s on top of the language. You can say that.
    Emacs Lisp is Emacs and Emacs Lisp, so you have to, you have both in the same
    place, which is, well, it''s a double-edged sword, right? Then you have the both--similar
    to Emacs-- you have ncurses and SDL2 frontends. One is terminal-based and the
    other is graphical using the SDL2 library, which you can do a lot of crazy things.
    Of course, it''s meant to program games and stuff, but Lem uses, and it works
    fairly well. You can program games if you want. Not that you need to or anything,
    but we have Tetris. So there''s that. Also, separate front-end interface. So like
    I said, you have two, but you can create more. In the past, had an electron one,
    but it got abandoned for obvious reasons, I think. Sorry. This idea is taken from
    Neovim that had a lot of frontends. In fact, we don''t have that many, but not
    that many people we have two. That works fairly well. We have superb development
    experience thanks to SLIME. So we have Micro, which is a SLIME version for Lem,
    basically. SLIME is awesome and Micro is also awesome. We have a very strong development
    experience that we don''t have for a Lisp, which I think is very important. If
    you want someone to develop packages or to use your tool, your Emacs at least,
    you need to have a very good development experience, which enhance the extensions
    for the editor. So we have also Vim-like integration. This for me was mostly mandatory
    because I''m an evil-mode user, and I think it''s really good. Because evil-mode
    is very good and the VMode, which it''s called, even though it''s more like Vim
    mode, it''s called VMode. It''s written by Fukamachi-san and it''s really good.
    So yeah, that''s the thing that I think Lem brings to the table and that''s really
    interesting.'
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
- en: '[[00:14:03.080]](#mainVideo-emacsen) Similarities and differences'
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
- en: 'So I''m going to do a small demo of Lem, a Emacs example. First, the similarities,
    the nomenclature is very similar: modes, buffers, commands... The commands are
    very similar in nature. It was written with GNU Emacs in mind to mimic a lot of
    things. I think GNU Emacs is the best Emacs implementation in that way. So why
    not just take what is working, right? I have similar command, but flexible to
    add other default ones. It''s not like Emacs that you have Emacs commands. Lem
    has Emacs command by default, but you can easily change that with other default
    ones, right? It''s like, you can think of it like a major mode, right? Well, more
    like a global mode, sorry. That''s a global mode of Emacs commands, or something
    like that. In general, the feeling is really close. So you will tell that it''s
    really close to how both work, similar commands, and that shows. Differences,
    Common Lisp is not Emacs Lisp, it''s similar in the surface. So it uses `defun`,
    you know, have parentheses and yada, yada, but it''s not the same language, really,
    and sometimes you will find that the differences are substantial. The internals
    are completely different, of course, nothing, well, completely. They have a buffer
    implementation and other things, but in general, yeah, aside from that, it''s
    completely different. And it''s true that GNU Emacs has a better documentation
    tutorial. So GNU Emacs for me, I think it''s one of the best-documented software
    ever. We''re trying to go there, but we''re still not there.'
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
- en: '[[00:15:49.600]](#mainVideo-emacsen) Demo'
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
- en: Let's do the demo. So to open Lem, you compile it, and then you have it available,
    and you open Lem. As you can see, we have the temporary buffer. On the top left
    is the mode-- not mode, the beam, insert, normal, visual. This is the V mode,
    right? In the top right corner, we have fundamental, which is the major mode,
    then paredit, which is like the minor mode, but you know, this is like the paredit
    for Emacs. In the top left buffer, you have the current buffer. So let's open
    the... Emacs, we all know how to do this. This is a command, like explore this
    command, like `open-init-file`. This opens the init file, which is in this directory,
    in `~/.lem/init.lisp`. As you can see, this is very similar, right? You define
    a command, which is not interactive, and then you get the buffer, right? This
    is a... So my personal command... Let's go to the one that I just opened. Init
    file, right? So this is a command that I did, which is `find-file`. This is very
    similar to [??], but just `find-file`. As you can see, very similar. This is the
    way that you program in Lem. This is the major mode, which is Lisp, that we're
    seeing at the top, right? And we can connect if we `slime-self-connect`. This
    is the prompt. This is the REPL. So if we... Keep in mind that this is Common
    Lisp, so this has different things. So we have to go to the Lem package, which
    is very important. This has namespaces, right? It's not the same. And we can say,
    okay, `current-buffer`. We get the buffer. We can explore everything that is in
    it, right? We have all this stuff. This is... If you're familiar with SLIME or
    Sly, this is it. It's just that we can say, buffer, I think it's `buffer-name`.
    Yes. And we can take this, and then we'll give you the name. So as you can see,
    the development experience is really powerful. We can also `lisp-scratch`, which
    transform... basically apply the major mode of Lisp to the temporary buffer. This
    is very similar to Emacs. Let's go back to the theme. I think that's it. Thank
    you all very much for listening to me. I think I point out the Emacsen family
    is really interesting. Lisp is really good, and GNU Emacs is really good, and
    I think Lem is also pretty awesome. So thank you all very much. I'll be answering
    the question now. And happy hacking.
  id: totrans-split-51
  prefs: []
  type: TYPE_NORMAL
- en: 'Captioner: sachac'
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
- en: Q&A transcript (unedited)
  id: totrans-split-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Fermin, for the great talk. '
  id: totrans-split-54
  prefs: &id001 []
  type: TYPE_NORMAL
- en: 'People have questions, please post them on the pad or the IRC as well and we''ll
    take them up. '
  id: totrans-split-55
  prefs: *id001
  type: TYPE_NORMAL
- en: 'to answer questions. '
  id: totrans-split-56
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Let''s see. '
  id: totrans-split-57
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Yep. '
  id: totrans-split-58
  prefs: *id001
  type: TYPE_NORMAL
- en: 'clarify anything or fix any URLs or such, you''re always welcome to do that
    either like on the Wiki page, or if you like email any of the organizers, they
    should be able to help with that as well. '
  id: totrans-split-59
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Yeah, not a big deal really, if you look it up. '
  id: totrans-split-60
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Yeah, that''s really better. '
  id: totrans-split-61
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Thank you very much. '
  id: totrans-split-62
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Checking, no questions. '
  id: totrans-split-63
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Very good to be in touch. '
  id: totrans-split-64
  prefs: *id001
  type: TYPE_NORMAL
- en: 'button chat. '
  id: totrans-split-65
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Is LEM an acronym? '
  id: totrans-split-66
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I think it is, but I never remember. '
  id: totrans-split-67
  prefs: *id001
  type: TYPE_NORMAL
- en: 'The complete name is like something... '
  id: totrans-split-68
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It''s also a circle, like, you know, a self-referencing, you know, recursive
    name. '
  id: totrans-split-69
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I never remember it, sorry. '
  id: totrans-split-70
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It''s like... '
  id: totrans-split-71
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Yeah, someone... '
  id: totrans-split-72
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Okay, someone asked about the DEM community, how big it is. '
  id: totrans-split-73
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So I don''t remember, to answer the question, I don''t remember the acronym,
    but it is an acronym. '
  id: totrans-split-74
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I just never... '
  id: totrans-split-75
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And it''s not written anywhere, I think, or someone... '
  id: totrans-split-76
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I never check it. '
  id: totrans-split-77
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So I... '
  id: totrans-split-78
  prefs: *id001
  type: TYPE_NORMAL
- en: 'whole large, does Leia have a package manager? '
  id: totrans-split-79
  prefs: *id001
  type: TYPE_NORMAL
- en: 'We do have a package manager, funnily enough. '
  id: totrans-split-80
  prefs: *id001
  type: TYPE_NORMAL
- en: 'We use the QuickLisp infrastructure to get packages, so it''s very easy to
    install packages. '
  id: totrans-split-81
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So basically, we don''t have a package manager as in Emacs, half a packet.l. '
  id: totrans-split-82
  prefs: *id001
  type: TYPE_NORMAL
- en: 'We''re using the same common list infrastructure to provide the different packages. '
  id: totrans-split-83
  prefs: *id001
  type: TYPE_NORMAL
- en: 'We also have a talk with the Ultralisp, which is like a, you know, QuickLisp
    is like, you can think quickly of Melpa. '
  id: totrans-split-84
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Ultralisp is like a fast Melpa, very fast Melpa, that every, I think every
    day you can get a package from them. '
  id: totrans-split-85
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And We have a tag system that you can submit a package and get a tag, and Theory
    can download those packages with the lem tag. '
  id: totrans-split-86
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So the thing is, it''s not yet, it doesn''t have a user interface to install
    packages. '
  id: totrans-split-87
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Still, it''s 2 external packages. '
  id: totrans-split-88
  prefs: *id001
  type: TYPE_NORMAL
- en: 'For now, imagine this is like the early Emacs, right? '
  id: totrans-split-89
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Everything is going to the core for now, because we need that functionality. '
  id: totrans-split-90
  prefs: *id001
  type: TYPE_NORMAL
- en: 'In the future, we probably will split it up way more. '
  id: totrans-split-91
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But let me first answer a question in the other part. '
  id: totrans-split-92
  prefs: *id001
  type: TYPE_NORMAL
- en: 'How large is the LEN community? '
  id: totrans-split-93
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Hope it''s a chance of survival long term. '
  id: totrans-split-94
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So we are a very small community, mostly because Sasaki-san, the main developers
    of the community, are from Japan and some of them, or most of them, don''t know
    English. '
  id: totrans-split-95
  prefs: *id001
  type: TYPE_NORMAL
- en: 'At the beginning, LEM was a very Japanese-centric tooling because barrier of
    language, most of the users are from Japan. '
  id: totrans-split-96
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So different communities. '
  id: totrans-split-97
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And also, I don''t know why, but the main maintainer, which is Asaki-san, very
    good guy and a very, very talented developer. '
  id: totrans-split-98
  prefs: *id001
  type: TYPE_NORMAL
- en: 'He doesn''t like to, you know, at first the project was all in Japanese, so
    he doesn''t care if someone uses the project or not. '
  id: totrans-split-99
  prefs: *id001
  type: TYPE_NORMAL
- en: 'He''s more focused on the, I guess, quality of the features of it. '
  id: totrans-split-100
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So that creates a problem that doesn''t really mind the community. '
  id: totrans-split-101
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So the community doesn''t mind in a good way. '
  id: totrans-split-102
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It''s to focus more on technicality rather than the user, which I mean, I cannot
    blame him. '
  id: totrans-split-103
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It''s very hard work to build an Emacs and editor from scratch. '
  id: totrans-split-104
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It''s not a trivial task. '
  id: totrans-split-105
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So yeah, we''re a very small community. '
  id: totrans-split-106
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But I think the chance of survival is very good because LEM is written in ANSI
    Common Lisp, so it should be used in any... '
  id: totrans-split-107
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Well, it works in a lot of Common Lisp implementation. '
  id: totrans-split-108
  prefs: *id001
  type: TYPE_NORMAL
- en: 'For people who don''t know, Common Lisp is a language that was standardized
    in the 94. '
  id: totrans-split-109
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I explained that in the talk, but I''ll say it again. '
  id: totrans-split-110
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So, if Common Lisp exists, in theory, LEM should also exist. '
  id: totrans-split-111
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And also if nCursor doesn''t break or doesn''t stop to exist, which is even
    less likely. '
  id: totrans-split-112
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So that''s the main idea. '
  id: totrans-split-113
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And you can use LEM for very good Common Lisp development already. '
  id: totrans-split-114
  prefs: *id001
  type: TYPE_NORMAL
- en: 'If Common Lisp doesn''t change that much, it should disappear. '
  id: totrans-split-115
  prefs: *id001
  type: TYPE_NORMAL
- en: 'We are not bound to any company or any... '
  id: totrans-split-116
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Even Sasaki-san, God forbid, disappears instantaneously. '
  id: totrans-split-117
  prefs: *id001
  type: TYPE_NORMAL
- en: 'There are a few people, me included, that know very well the code base and
    we can continue the development. '
  id: totrans-split-118
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So it''s not like 1, there''s no one-man project. '
  id: totrans-split-119
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Maybe a four-man project or 5, but not 1\. '
  id: totrans-split-120
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Okay, I''ll answer the 1 in the chat, on the blue button. '
  id: totrans-split-121
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Is it best to learn Common Lisp before learning to use LEM? '
  id: totrans-split-122
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I think this is similar to Emacs and EmacLisp, right? '
  id: totrans-split-123
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Should you use EmacLisp before using Emacs? '
  id: totrans-split-124
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Doesn''t make too much sense, right? '
  id: totrans-split-125
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You see Emacs and then you go learning Common Lisp. '
  id: totrans-split-126
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I think it''s the same, sorry, EmacsLisp. '
  id: totrans-split-127
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And it''s the same with LEM. '
  id: totrans-split-128
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You can start using LEM with a non-common Lisp, which is fine. '
  id: totrans-split-129
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You can use it to edit your things. '
  id: totrans-split-130
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It''s like an editor. '
  id: totrans-split-131
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But like Emacs, LEM puts a lot of focus on extensibility. '
  id: totrans-split-132
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So it''s very probable that you will learn how to write Common Lisp. '
  id: totrans-split-133
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I have to say that a lot of people that use LEM, well, me and most of the people,
    come from Emacs. '
  id: totrans-split-134
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So if you come from Emacs and you know a little bit of Emac Lisp, Common Lisp
    is like an uncle or cousin distance that shares some similarities. '
  id: totrans-split-135
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So you will... '
  id: totrans-split-136
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Well, it''s not going to be that. '
  id: totrans-split-137
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I can show... '
  id: totrans-split-138
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Sorry about that. '
  id: totrans-split-139
  prefs: *id001
  type: TYPE_NORMAL
- en: 'For example, I show that in the... '
  id: totrans-split-140
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I can show... '
  id: totrans-split-141
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So the... '
  id: totrans-split-142
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It''s not that different from Emacs regarding configuration. '
  id: totrans-split-143
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So for example, this command doesn''t exist on LEM. '
  id: totrans-split-144
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And Sasaki-san didn''t want to copy one-to-one the command from Emacs, the
    airgrip, the cursor grip command of Emacs. '
  id: totrans-split-145
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And I said, okay, then I''m going to implement it myself. '
  id: totrans-split-146
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And it''s something like this, which is you will do something similar to Emacs,
    right? '
  id: totrans-split-147
  prefs: *id001
  type: TYPE_NORMAL
- en: 'This will be like things at point symbol or something like that. '
  id: totrans-split-148
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And then you have a prompt, very prompt for directory with Emacs would be something
    similar. '
  id: totrans-split-149
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And then you then launch grep with the command that you want. '
  id: totrans-split-150
  prefs: *id001
  type: TYPE_NORMAL
- en: 'This is not that far from Emacs, this, really. '
  id: totrans-split-151
  prefs: *id001
  type: TYPE_NORMAL
- en: 'If you don''t know neither of those, you can still use LEM, though as with
    Emacs, extensibility will be, well, you couldn''t extend it if you don''t know
    combo disp. '
  id: totrans-split-152
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Should I answer the question on the etherpad writing it at the same time? '
  id: totrans-split-153
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You can just answer here on stream, Okay. '
  id: totrans-split-154
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Are there any Lisp machine capabilities you''re trying to provide that GNU
    image lacks? '
  id: totrans-split-155
  prefs: *id001
  type: TYPE_NORMAL
- en: 'The type objects capability in the editor, as an example. '
  id: totrans-split-156
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I mean, there were a few discussions about the Lisp machines and LEM and all
    the big projects that tries to get some capability of it. '
  id: totrans-split-157
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But we don''t really... '
  id: totrans-split-158
  prefs: *id001
  type: TYPE_NORMAL
- en: 'We try to improve the development experience for Common Lisp and for LEM, imitating
    a lot of things that the Lisp machine had. '
  id: totrans-split-159
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I''m going to try to do a thing that I don''t know if it''s going to work. '
  id: totrans-split-160
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So to explain this, let''s see. '
  id: totrans-split-161
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I''m going to recompile them now live. '
  id: totrans-split-162
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Let''s see how it works. '
  id: totrans-split-163
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And compiling the, yes, it doesn''t work. '
  id: totrans-split-164
  prefs: *id001
  type: TYPE_NORMAL
- en: 'OK. '
  id: totrans-split-165
  prefs: *id001
  type: TYPE_NORMAL
- en: 'What if I do? '
  id: totrans-split-166
  prefs: *id001
  type: TYPE_NORMAL
- en: 'No, it doesn''t work. '
  id: totrans-split-167
  prefs: *id001
  type: TYPE_NORMAL
- en: 'OK. '
  id: totrans-split-168
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I was trying to compile the SDL2, but I do have the codebase modifier. '
  id: totrans-split-169
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I should be able to compile this. '
  id: totrans-split-170
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Oh, that was really bad. '
  id: totrans-split-171
  prefs: *id001
  type: TYPE_NORMAL
- en: 'What about example? '
  id: totrans-split-172
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I have the code base, so let me check. '
  id: totrans-split-173
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I''m going to do this. '
  id: totrans-split-174
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Oh, yeah, I have this modified. '
  id: totrans-split-175
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I stash this. '
  id: totrans-split-176
  prefs: *id001
  type: TYPE_NORMAL
- en: 'OK. '
  id: totrans-split-177
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I have this modified. '
  id: totrans-split-178
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Now it should work. '
  id: totrans-split-179
  prefs: *id001
  type: TYPE_NORMAL
- en: 'OK. '
  id: totrans-split-180
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Sorry. '
  id: totrans-split-181
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I was going to show the writing capabilities of it, similar to the Lisp machine
    of navigating of classes. '
  id: totrans-split-182
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So the answer of that question is, not really. '
  id: totrans-split-183
  prefs: *id001
  type: TYPE_NORMAL
- en: 'We don''t try to emulate this machine, nor any like of that. '
  id: totrans-split-184
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But yeah. '
  id: totrans-split-185
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Let me, I''m going to try to, okay, now I''m back at them. '
  id: totrans-split-186
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Okay. '
  id: totrans-split-187
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So what about using them for things other than common, common, that markets? '
  id: totrans-split-188
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Okay. '
  id: totrans-split-189
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So yes, we do have, so I''m going to show the code base a little bit. '
  id: totrans-split-190
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Like I said before, we don''t have yet too much external packages because of
    the size of the community. '
  id: totrans-split-191
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I have a question. '
  id: totrans-split-192
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Go ahead, you can write it, Michael. '
  id: totrans-split-193
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Yeah. '
  id: totrans-split-194
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So, yes, as you can see here, this is almost all, or 99% of the major modes
    we have. '
  id: totrans-split-195
  prefs: *id001
  type: TYPE_NORMAL
- en: 'We use the same terminology of SkinnyMemax in that way. '
  id: totrans-split-196
  prefs: *id001
  type: TYPE_NORMAL
- en: 'For example, the C mode, if you go inside, you see that this is the fine major
    mode. '
  id: totrans-split-197
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So in that regard, it''s very similar to Emacs. '
  id: totrans-split-198
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And we have something called a JIT, which is like a maggot. '
  id: totrans-split-199
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And you can edit files. '
  id: totrans-split-200
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You can use not only for common lists. '
  id: totrans-split-201
  prefs: *id001
  type: TYPE_NORMAL
- en: 'In my configuration, which is written, I will post that later, but if you go
    to my code burg you can see my configuration which is, which I do have. '
  id: totrans-split-202
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So for example you can use it for a scheme. '
  id: totrans-split-203
  prefs: *id001
  type: TYPE_NORMAL
- en: 'We have a swank server. '
  id: totrans-split-204
  prefs: *id001
  type: TYPE_NORMAL
- en: 'This is the configuration to use it. '
  id: totrans-split-205
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You can use it for JavaScript because we have a native LSP client written in. '
  id: totrans-split-206
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And we have Dired. '
  id: totrans-split-207
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Yeah, this is Dired. '
  id: totrans-split-208
  prefs: *id001
  type: TYPE_NORMAL
- en: 'We have Dired indeed. '
  id: totrans-split-209
  prefs: *id001
  type: TYPE_NORMAL
- en: 'No, it''s not Dired, you know. '
  id: totrans-split-210
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It''s called directory. '
  id: totrans-split-211
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Sasaki-san, which is the main maintainer, doesn''t like to copy one-to-one
    Emacs names, but we are the same. '
  id: totrans-split-212
  prefs: *id001
  type: TYPE_NORMAL
- en: 'We also have projects, which is like projectile. '
  id: totrans-split-213
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So, you know, they''re very similar but not the same. '
  id: totrans-split-214
  prefs: *id001
  type: TYPE_NORMAL
- en: 'We also have a VI configuration, as you can see. '
  id: totrans-split-215
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I''m using the VI commands and stuff, and it''s very good. '
  id: totrans-split-216
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I will say not as good as an evil because it still needs some polish, but it''s
    getting there. '
  id: totrans-split-217
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So we can also program in JavaScript and a lot of LSP things, and Elixir, which
    was recently added by myself. '
  id: totrans-split-218
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And yeah, it''s very fun to add new modes. '
  id: totrans-split-219
  prefs: *id001
  type: TYPE_NORMAL
- en: 'OK, what else next? '
  id: totrans-split-220
  prefs: *id001
  type: TYPE_NORMAL
- en: 'What about user-level things other than coding? '
  id: totrans-split-221
  prefs: *id001
  type: TYPE_NORMAL
- en: 'What about using this in conjunction with Nix? '
  id: totrans-split-222
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Oh, so there''s a big, so like I said before, there were like an issue that
    3 main common list project were talking, some of the users. '
  id: totrans-split-223
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So the 3 main projects are LEM, probably, Nixed, and then StamWM, the 3 main,
    well, 3 big, common list projects that are trying to emulate an Emacs experience
    in different fields. '
  id: totrans-split-224
  prefs: *id001
  type: TYPE_NORMAL
- en: '1 is Editor, the other 1 is Window Manager, and the 1 is the browser. '
  id: totrans-split-225
  prefs: *id001
  type: TYPE_NORMAL
- en: 'The problem is that the design of the 3 are very different. '
  id: totrans-split-226
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So Nix is very focused on the browser. '
  id: totrans-split-227
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You can connect to Nix. '
  id: totrans-split-228
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So given that they''re both a common list, you can connect to Nix from them
    and vice versa. '
  id: totrans-split-229
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And you can send commands and you can, so you have this kind of interoperability
    with both. '
  id: totrans-split-230
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But no, you cannot combine both to have 1 LEMNIX. '
  id: totrans-split-231
  prefs: *id001
  type: TYPE_NORMAL
- en: 'That would be very sick. '
  id: totrans-split-232
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I would love it. '
  id: totrans-split-233
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But the effort is just too much. '
  id: totrans-split-234
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Keep in mind we are a very small community. '
  id: totrans-split-235
  prefs: *id001
  type: TYPE_NORMAL
- en: 'The LEM, like I said, we are like 345 developers that write packages and answer
    questions and stuff. '
  id: totrans-split-236
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Now we need users in that way to test things. '
  id: totrans-split-237
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So what is the license of LEM? '
  id: totrans-split-238
  prefs: *id001
  type: TYPE_NORMAL
- en: 'The license of LEM is MAT. '
  id: totrans-split-239
  prefs: *id001
  type: TYPE_NORMAL
- en: 'We have some components of all the various licenses, but the main 1 is MAT. '
  id: totrans-split-240
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I didn''t choose the license of it. '
  id: totrans-split-241
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I would highly prefer a more like GPL 1, but like I said I''m not a maintainer,
    so the license is MAT. '
  id: totrans-split-242
  prefs: *id001
  type: TYPE_NORMAL
- en: 'This question, I realize, how far is LEM from being able to remove a list libraries? '
  id: totrans-split-243
  prefs: *id001
  type: TYPE_NORMAL
- en: 'OK, that''s a big question indeed. '
  id: totrans-split-244
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And Funny enough, 2 years ago in the EmacsConf, I talk about this, not with
    LEM, but with Common Lisp and Emacs Lisp in general. '
  id: totrans-split-245
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So I''m not the only 1 thinking about this. '
  id: totrans-split-246
  prefs: *id001
  type: TYPE_NORMAL
- en: 'In fact, I''m talking with someone that is trying to write like a Emacs Lisp
    interpreter to work with them. '
  id: totrans-split-247
  prefs: *id001
  type: TYPE_NORMAL
- en: 'The thing is that Emaclist libraries, so the API is just very different. '
  id: totrans-split-248
  prefs: *id001
  type: TYPE_NORMAL
- en: 'That''s the main problem. '
  id: totrans-split-249
  prefs: *id001
  type: TYPE_NORMAL
- en: 'That''s really the problem. '
  id: totrans-split-250
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You can, so you can, let me see. '
  id: totrans-split-251
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So, you can have an Emacs list buffer of LEM. '
  id: totrans-split-252
  prefs: *id001
  type: TYPE_NORMAL
- en: 'This is an Emacs list rebel. '
  id: totrans-split-253
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I wrote an LRSP client so you can connect to Emacs and send things and stuff. '
  id: totrans-split-254
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So you''re friends that we share stuff. '
  id: totrans-split-255
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But having a complete Emacless implementation with LEM and work with both API
    will be a huge work. '
  id: totrans-split-256
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Very like, it''s even if they share very similar thing, in fact, API in some
    places is very similar. '
  id: totrans-split-257
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Down the line infrastructure, so the code is, so it''s completely different. '
  id: totrans-split-258
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It will be very hard. '
  id: totrans-split-259
  prefs: *id001
  type: TYPE_NORMAL
- en: 'We do have a clone of maggot that works, more or less. '
  id: totrans-split-260
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Well, it does work, but maggot''s just better. '
  id: totrans-split-261
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But it''s getting there. '
  id: totrans-split-262
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So like I said, we''re trying to, not to copy one-to-one, but to adapting each
    tool to LEM. '
  id: totrans-split-263
  prefs: *id001
  type: TYPE_NORMAL
- en: 'How are LEM buffer designs similar to Emacs? '
  id: totrans-split-264
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So yeah, that would be, so how a blend buffer design, similar to Emacs. '
  id: totrans-split-265
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So similar in what way, actually with properties. '
  id: totrans-split-266
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I think that you''ve seen, so you do have like a font lock, different kind
    of properties, but it''s not exactly how Emac does it with overlays and stuff. '
  id: totrans-split-267
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You can, so if you''re very interested, I don''t want to go too much deep into
    the, let me go to, I don''t want to go too much deep into the technicality of
    things now, but you can go. '
  id: totrans-split-268
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So LEM is written 100% in Common Lisp. '
  id: totrans-split-269
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So if you know Common Lisp, you can go to buffer. '
  id: totrans-split-270
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You can check all the codes here. '
  id: totrans-split-271
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Always we have, we also have this, which is like StreamX. '
  id: totrans-split-272
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Sorry to that, I don''t. '
  id: totrans-split-273
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But yeah, So you can see. '
  id: totrans-split-274
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So yeah, if you go to the code base, maybe some of you can check this problem. '
  id: totrans-split-275
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Well, not problem, but yeah. '
  id: totrans-split-276
  prefs: *id001
  type: TYPE_NORMAL
- en: 'That''s this Japanese comment. '
  id: totrans-split-277
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You can see here why it''s very, you have to translate and stuff, which is
    sometimes a little bit annoying. '
  id: totrans-split-278
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But yeah, some of them are in English. '
  id: totrans-split-279
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So this play is not the same. '
  id: totrans-split-280
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So if you''re interested, you can go to the buffer and check it out for yourself. '
  id: totrans-split-281
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But I think it uses the overlay in a different way. '
  id: totrans-split-282
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So the implementation is different that way. '
  id: totrans-split-283
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Oh, experiences that I can show you? '
  id: totrans-split-284
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Just like you show you. '
  id: totrans-split-285
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Any marks? '
  id: totrans-split-286
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Okay, very interesting question. '
  id: totrans-split-287
  prefs: *id001
  type: TYPE_NORMAL
- en: 'What are the things... '
  id: totrans-split-288
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So that''s interesting. '
  id: totrans-split-289
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Let me see. '
  id: totrans-split-290
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So forgive me, you answered this. '
  id: totrans-split-291
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I talked briefly in the talk about this, but basically I like Komaldisp, I
    have the mascot here. '
  id: totrans-split-292
  prefs: *id001
  type: TYPE_NORMAL
- en: 'think GmagLisp is a very good friend of Common Lisp in the way that Serious
    Software Analysis is a very good uncle. '
  id: totrans-split-293
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Let me answer first the 1. '
  id: totrans-split-294
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So I like to extend it in Common Lisp. '
  id: totrans-split-295
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I like the Common Lisp libraries. '
  id: totrans-split-296
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And I think them have a better design in terms of its 1 language, which I think
    is a nice strength. '
  id: totrans-split-297
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Like, 1 of the things that put me off when I was using Emacs, I love to extend
    the editor and to go inside and stuff. '
  id: totrans-split-298
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And 1 of the things that I''m not a big fan of C. '
  id: totrans-split-299
  prefs: *id001
  type: TYPE_NORMAL
- en: 'If you''re a fan of C, you will be very pleasant with finding C stuff, but
    I don''t. '
  id: totrans-split-300
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So when I''m trying to hack an Emacs and go inside the things, I will control
    C code. '
  id: totrans-split-301
  prefs: *id001
  type: TYPE_NORMAL
- en: 'That''s not that interactive as the Emaclist 1, and that would be like a fuzzball
    for me. '
  id: totrans-split-302
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I was always dreaming about that stuff, having like everything in 1 language. '
  id: totrans-split-303
  prefs: *id001
  type: TYPE_NORMAL
- en: 'The thing that LEM does to me is like it allows me to extend the editor to
    modify also, to modify in Common Lisp. '
  id: totrans-split-304
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Also, I like the language and technology. '
  id: totrans-split-305
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It''s a bold thing, right? '
  id: totrans-split-306
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It''s a world language that I love, and Emacs that I love. '
  id: totrans-split-307
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Emacs, I''m a big fan of, or a user of GNU Emacs. '
  id: totrans-split-308
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And LEM is like Emacs plus Common Lisp, but with a different design. '
  id: totrans-split-309
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I don''t want to, It''s not a clone. '
  id: totrans-split-310
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I want to get this very clear that LEM is not a clone of Emacs. '
  id: totrans-split-311
  prefs: *id001
  type: TYPE_NORMAL
- en: 'The sign is very different in a lot of ways. '
  id: totrans-split-312
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But it''s very inspired, and that cannot be denied. '
  id: totrans-split-313
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I think we''re like 15 minutes into the lunch break, but you''re welcome to
    continue answering questions. '
  id: totrans-split-314
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But if anyone on the stream or folks want to go grab lunch, feel free to do
    that. '
  id: totrans-split-315
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I''m probably going to do that as well. '
  id: totrans-split-316
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But yeah, we can either continue keeping this on the stream, or if people would
    like to come join here on BigBlueButton and talk to Fermin, like folks have already
    done that, yeah, you''re welcome to. '
  id: totrans-split-317
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Thank you. '
  id: totrans-split-318
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Thank you, Vitaliy. '
  id: totrans-split-319
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Cheers. '
  id: totrans-split-320
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Cheers. '
  id: totrans-split-321
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So finishing the answer to the question, I think LEM does tries to fix some
    Emacs problems, can we fix problems regarding the internal API, which makes sense,
    right? '
  id: totrans-split-322
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Emacs have like 40 years, which is a lot. '
  id: totrans-split-323
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And yeah, which is, that''s what makes me happy. '
  id: totrans-split-324
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I use both now. '
  id: totrans-split-325
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I use Maggis and Emacs for some languages and then I use LEM for Common Lisp
    and other languages. '
  id: totrans-split-326
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You can also use LEM for EmacLisp, which makes LEM the second best editor for
    EmacLisp. '
  id: totrans-split-327
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It was a funny thing to do. '
  id: totrans-split-328
  prefs: *id001
  type: TYPE_NORMAL
- en: 'OK, so do you think LEM will continue to have a lot of Japanese documentation? '
  id: totrans-split-329
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So there''s not that many Japanese documentation, really. '
  id: totrans-split-330
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So there''s a few comments here and there, but it''s not full. '
  id: totrans-split-331
  prefs: *id001
  type: TYPE_NORMAL
- en: 'We have a web page with a lot of documentation in English. '
  id: totrans-split-332
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So you can take a look at that. '
  id: totrans-split-333
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But we do have to improve the documentation and translate it to English. '
  id: totrans-split-334
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Sasaki-san is up to it, but he just doesn''t feel that comfortable translating
    it himself. '
  id: totrans-split-335
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So yeah. '
  id: totrans-split-336
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Yeah, it''s neat that Wem even exists, because there''s always chatter on the
    Emacs mailing list to rewrite Emacs and some other language. '
  id: totrans-split-337
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And to see that it''s already to see that I mean, you have an implementation
    sitting there and, and the thing I was wondering while I was listening in on the,
    on the Q and A was do you have Dured? '
  id: totrans-split-338
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Do you have Maggot? '
  id: totrans-split-339
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And some, somebody else wrote that question into, into Etherpad. '
  id: totrans-split-340
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But I was happy to see that you have Dured or something like it implemented. '
  id: totrans-split-341
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Because I think that''s like the, for me, that''s the most important thing
    in Emacs because that gets me around in my For me too. '
  id: totrans-split-342
  prefs: *id001
  type: TYPE_NORMAL
- en: 'so I may try it out sometime, but probably won''t be for like 3 or 6 months,
    because there''s always a backlog of other things to try out. '
  id: totrans-split-343
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And do you use, I think you have bookmarks and registers, I imagine, right? '
  id: totrans-split-344
  prefs: *id001
  type: TYPE_NORMAL
- en: 'because I don''t use it that much. '
  id: totrans-split-345
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But I think you have something like that. '
  id: totrans-split-346
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I mean, I don''t. '
  id: totrans-split-347
  prefs: *id001
  type: TYPE_NORMAL
- en: 'There''s a few features that I don''t know about them because I don''t use
    it much. '
  id: totrans-split-348
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Some features, I mean. '
  id: totrans-split-349
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But yeah, I think you have. '
  id: totrans-split-350
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Let me check. '
  id: totrans-split-351
  prefs: *id001
  type: TYPE_NORMAL
- en: 'We can check, probably. '
  id: totrans-split-352
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Things in extensions, just directory. '
  id: totrans-split-353
  prefs: *id001
  type: TYPE_NORMAL
- en: 'VNXT. '
  id: totrans-split-354
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Directory mode. '
  id: totrans-split-355
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So there is. '
  id: totrans-split-356
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So this is the Tyrant''s friend. '
  id: totrans-split-357
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I won''t say clone. '
  id: totrans-split-358
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Very inspired. '
  id: totrans-split-359
  prefs: *id001
  type: TYPE_NORMAL
- en: 'like org mode, so... '
  id: totrans-split-360
  prefs: *id001
  type: TYPE_NORMAL
- en: 'EMMS... '
  id: totrans-split-361
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Yes, so someone did some MMS. '
  id: totrans-split-362
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So not MMS, not much. '
  id: totrans-split-363
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So package for LEM that is now in a pull request, I think. '
  id: totrans-split-364
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But yeah, no. '
  id: totrans-split-365
  prefs: *id001
  type: TYPE_NORMAL
- en: 'The thing is I don''t use R mode that much. '
  id: totrans-split-366
  prefs: *id001
  type: TYPE_NORMAL
- en: 'We don''t have a heavy R mode user to provide some major mode and stuff. '
  id: totrans-split-367
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So we don''t have that implemented yet. '
  id: totrans-split-368
  prefs: *id001
  type: TYPE_NORMAL
- en: 'The thing is, my plans for, I do have plans for our mode. '
  id: totrans-split-369
  prefs: *id001
  type: TYPE_NORMAL
- en: 'They''re a little bit evil, but there''s plans for it. '
  id: totrans-split-370
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So I''m planning to use, so rewriting our mode is a big task that I don''t
    want to do. '
  id: totrans-split-371
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So I''m going to use Emacs for our mode in 2.11\. '
  id: totrans-split-372
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I wrote a recipe, no, a remote procedural RPC that I''m using for the Red Bull
    and stuff. '
  id: totrans-split-373
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And I''m planning to have an Emacs Puppet to provide me the functionality for
    Org Mode. '
  id: totrans-split-374
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I like to note more than Org Roam just because I feel Org Mode is great and
    all, but if all my notes are in it, I kind of feel trapped by it. '
  id: totrans-split-375
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I did the talk journaling in KOutline, and I like that package better for some
    things and it''s like if I want to put like the tags on PDF file names and so
    it''s like Yeah, it''s great and all but it''s also Is that part of the motivation
    of wanting to use lamb is so you feel less entrapped by emacs No, I will say I
    don''t no. '
  id: totrans-split-376
  prefs: *id001
  type: TYPE_NORMAL
- en: 'To be fair. '
  id: totrans-split-377
  prefs: *id001
  type: TYPE_NORMAL
- en: 'The thing is I don''t use Hormel that much. '
  id: totrans-split-378
  prefs: *id001
  type: TYPE_NORMAL
- en: 'That''s just the reality. '
  id: totrans-split-379
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Org Mode for me is a very good markup language, but not that much really. '
  id: totrans-split-380
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I know that Org Mode has a lot of people and it''s used by a lot of people. '
  id: totrans-split-381
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And there''s very interesting packages. '
  id: totrans-split-382
  prefs: *id001
  type: TYPE_NORMAL
- en: 'plain text versus latex then? '
  id: totrans-split-383
  prefs: *id001
  type: TYPE_NORMAL
- en: 'functionality. '
  id: totrans-split-384
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I think if you take that away, you plain or mode versus Markdown, I don''t
    think there''s that much difference, if you take the Emacs functionality away. '
  id: totrans-split-385
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I like the Like, for instance, you have the double square brackets, which is
    simpler for me to look at, but. '
  id: totrans-split-386
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I mean, we don''t have yet a major mode of R mode, which will be quite trivial. '
  id: totrans-split-387
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Well, you know, a simple syntax highlights, you know, R mode in LEM, because
    no 1 wrote it. '
  id: totrans-split-388
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I mean, that''s the way with this project, right? '
  id: totrans-split-389
  prefs: *id001
  type: TYPE_NORMAL
- en: 'If you need people to be motivated to do that. '
  id: totrans-split-390
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And with LEM, someone asked about the Japanese. '
  id: totrans-split-391
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I think they''re interested about that. '
  id: totrans-split-392
  prefs: *id001
  type: TYPE_NORMAL
- en: 'LEM does have a thing, but that''s what I we''re using another big fan of... '
  id: totrans-split-393
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I mean, I know that the main people that may use in the future LEM are EMACLIS
    people. '
  id: totrans-split-394
  prefs: *id001
  type: TYPE_NORMAL
- en: 'A lot of them. '
  id: totrans-split-395
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It''s very similar. '
  id: totrans-split-396
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And Sasaki-san and the LEM community mainly uses Discord for chat and stuff. '
  id: totrans-split-397
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I mean, we do have matrix, and I should connect to it, by the way. '
  id: totrans-split-398
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But we mainly use Discord, which I don''t think is a good thing. '
  id: totrans-split-399
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I mean, to have the main communication channels, Discord. '
  id: totrans-split-400
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Because, well, it''s Discord. '
  id: totrans-split-401
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It''s a closed source application that is easy for some people, but for some
    people it''s a tailbreak. '
  id: totrans-split-402
  prefs: *id001
  type: TYPE_NORMAL
- en: 'that very like free software. '
  id: totrans-split-403
  prefs: *id001
  type: TYPE_NORMAL
- en: 'popular, but as soon as you break out of that mold, all of a sudden it becomes
    a lot harder. '
  id: totrans-split-404
  prefs: *id001
  type: TYPE_NORMAL
- en: 'For instance, they don''t have... '
  id: totrans-split-405
  prefs: *id001
  type: TYPE_NORMAL
- en: 'All the third-party clients are unofficial and according to their terms of
    service they can just can you. '
  id: totrans-split-406
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Which is not a nice position to be in if you''re trying to use it and you wanted
    to be a moderator using some side tools that weren''t Discord. '
  id: totrans-split-407
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I don''t like Discord. '
  id: totrans-split-408
  prefs: *id001
  type: TYPE_NORMAL
- en: 'and the LEM. '
  id: totrans-split-409
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Do you have it published somewhere? '
  id: totrans-split-410
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I''ll copy that in the chat. '
  id: totrans-split-411
  prefs: *id001
  type: TYPE_NORMAL
- en: 'you do like the communication with other programs with Emacs because that''s
    interesting. '
  id: totrans-split-412
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I''m not writing it from scratch, not that much as a developer. '
  id: totrans-split-413
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Maybe that''s the thing I can learn. '
  id: totrans-split-414
  prefs: *id001
  type: TYPE_NORMAL
- en: 'yeah. '
  id: totrans-split-415
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Yeah. '
  id: totrans-split-416
  prefs: *id001
  type: TYPE_NORMAL
- en: 'If you want to, so I didn''t see this 1, this package for the RSP, which make
    is monthly automatically. '
  id: totrans-split-417
  prefs: *id001
  type: TYPE_NORMAL
- en: 'integrate Org Mode? '
  id: totrans-split-418
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Because Org Mode needs to work on. '
  id: totrans-split-419
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Emacs puppet and to have like a clone buffer from the buffer that you do in
    LEM and then the command sent into the Emacs hidden buffer and then the changes
    go back to LEM to change the buffer of LEM. '
  id: totrans-split-420
  prefs: *id001
  type: TYPE_NORMAL
- en: 'That''s my idea. '
  id: totrans-split-421
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Would be interesting to see what comes from it. '
  id: totrans-split-422
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It''s not, you have to duplicate the information and stuff, which is, oh, by
    the way, I''m going to pass the Lemington, which is the name of the RSP clone. '
  id: totrans-split-423
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Sorry, the integration with Emacs, which is LEM with a mustache. '
  id: totrans-split-424
  prefs: *id001
  type: TYPE_NORMAL
- en: 'thing, where it would open up a slave Emacs, because it was such a performance
    hog for retrieving all the emails. '
  id: totrans-split-425
  prefs: *id001
  type: TYPE_NORMAL
- en: 'right? '
  id: totrans-split-426
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I can, in fact, I''m using that for, I''m already puppeting. '
  id: totrans-split-427
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Well, not puppeting. '
  id: totrans-split-428
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I''m already using Maggots. '
  id: totrans-split-429
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So I have this. '
  id: totrans-split-430
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Actually, let me copy. '
  id: totrans-split-431
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I have this, which is usually a little bit, I''m launching the Emacs daemon
    and then I''m launching Leviton. '
  id: totrans-split-432
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And then this is the kill and this is the status, which is basically saying,
    run this and this is this, which is run maggot in this file. '
  id: totrans-split-433
  prefs: *id001
  type: TYPE_NORMAL
- en: 'If you put it side by side, you will check instantly that this is the buffer
    directory, LEM home, and then the current file. '
  id: totrans-split-434
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Because I''m launching it with the file. '
  id: totrans-split-435
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So buffer directory, which is the directory of the buffer. '
  id: totrans-split-436
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So I''m already using maggot as a tool outside of LEM, because I really like
    maggot. '
  id: totrans-split-437
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And this is very easy to check. '
  id: totrans-split-438
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Launch Emacs daemon. '
  id: totrans-split-439
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Okay. '
  id: totrans-split-440
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And then I go to local projects. '
  id: totrans-split-441
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Let''s go to another 1 that is not LEM. '
  id: totrans-split-442
  prefs: *id001
  type: TYPE_NORMAL
- en: 'in daemon mode so you don''t ever have to restart it or the images, I guess,
    that LEM has. '
  id: totrans-split-443
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I will call it, it doesn''t have like a demon mode, so you have control separately,
    but keep in mind that LEM, it''s a common list program. '
  id: totrans-split-444
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So if you use slime or Sly, you can easily connect to them to hack on it. '
  id: totrans-split-445
  prefs: *id001
  type: TYPE_NORMAL
- en: 'like using it from another computer? '
  id: totrans-split-446
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I think the same computer, or maybe Sage, but yeah, it''s very... '
  id: totrans-split-447
  prefs: *id001
  type: TYPE_NORMAL
- en: 'if you were using the window... '
  id: totrans-split-448
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I can''t remember the name of the window manager. '
  id: totrans-split-449
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Or if you were using... '
  id: totrans-split-450
  prefs: *id001
  type: TYPE_NORMAL
- en: 'What? '
  id: totrans-split-451
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Yeah, yeah. '
  id: totrans-split-452
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Or using like stump, calling it from like stump WM or how often do you use
    that REPL? '
  id: totrans-split-453
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I connect to a museum, some WM right now, and I use LEM to connect to it, but
    I was using Emacs before. '
  id: totrans-split-454
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And you can use Sly or Slime to connect to LEM. '
  id: totrans-split-455
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So the thing that is in Common List makes it this kind of already out-of-the-box
    connectivity between different... '
  id: totrans-split-456
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I''ve used that before. '
  id: totrans-split-457
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I''ve also used, like right now I''m using Sway. '
  id: totrans-split-458
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I''ve used Xmonad, DWM. '
  id: totrans-split-459
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I can''t remember the name. '
  id: totrans-split-460
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But it was like a few years ago. '
  id: totrans-split-461
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I''ve been doing some DWM for like the last it''s that I was... '
  id: totrans-split-462
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I don''t know. '
  id: totrans-split-463
  prefs: *id001
  type: TYPE_NORMAL
- en: 'have some unique ideas that weren''t necessarily available on like EWM and
    XMLNAD. '
  id: totrans-split-464
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But for example, I''ll change... '
  id: totrans-split-465
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So I don''t have in this computer, but in my other computer, I change the mod
    line or bar, top bar, whatever, because the ThunderLVM doesn''t only update it
    when you click, or you do some events or happen 1 minute. '
  id: totrans-split-466
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So you can see here, this is not changing until I click. '
  id: totrans-split-467
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I have a quick question for Matthew. '
  id: totrans-split-468
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So is your talk going to be posted or did you My talk was the K outline for
    journaling too late for it Sorry, so I came in and I just saw Bob Weiner answering
    questions So is your talk going to be on the page for your talk? '
  id: totrans-split-469
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I don''t because I had, I hosted it on Mega to give it to them, because when
    I emailed it, Download and watch it. '
  id: totrans-split-470
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I''m probably going to post it on YouTube later. '
  id: totrans-split-471
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I, I had my face record with it, but I never got it edited together in time
    onto the onto the ether pad or something or onto the wiki then then I can find
    it and check it out. '
  id: totrans-split-472
  prefs: *id001
  type: TYPE_NORMAL
- en: 'All right, thanks. '
  id: totrans-split-473
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Sorry to interrupt your time, Fermin, but I figure we''re heavily into the
    break anyways. '
  id: totrans-split-474
  prefs: *id001
  type: TYPE_NORMAL
- en: 'FERMIN GENZIERIA-CHAPMANI about all that I mean I''m already doing blasphemy
    so I think that''s oh yeah notes so the thing is then as my point of view, and
    the point of view probably of Sasaki-san, just a moment, I think, is very focused
    on an IDE more than a node-taking editor. '
  id: totrans-split-475
  prefs: *id001
  type: TYPE_NORMAL
- en: 'More like an integrated development environment. '
  id: totrans-split-476
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So node is like a second thing. '
  id: totrans-split-477
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So not exactly the main focus. '
  id: totrans-split-478
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And I know that Emacs does have a very strong community of Ormode users that
    use Emacs for Ormode, which is the killer feature, 1 of I''ll do a feature. '
  id: totrans-split-479
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I''ll do a feature of Emacs. '
  id: totrans-split-480
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So I''m not the maintainer of porthole. '
  id: totrans-split-481
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I''m sorry. '
  id: totrans-split-482
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I did add it to so I don''t maintain the remote. '
  id: totrans-split-483
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I''m sorry, I''ll pothole the USB. '
  id: totrans-split-484
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I''m only using it on the Lamington. '
  id: totrans-split-485
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I cannot change anything. '
  id: totrans-split-486
  prefs: *id001
  type: TYPE_NORMAL
- en: 'with your window manager? '
  id: totrans-split-487
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I do have elsewhere. '
  id: totrans-split-488
  prefs: *id001
  type: TYPE_NORMAL
- en: 'editor, which I think is really fun. '
  id: totrans-split-489
  prefs: *id001
  type: TYPE_NORMAL
- en: 'The way I can write, so I wrote a few packages for Soundallium. '
  id: totrans-split-490
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So 1 of them is Proton, which basically launches like a... '
  id: totrans-split-491
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So Proton is like this wine thing that Valve you have like a list of, let me
    check. '
  id: totrans-split-492
  prefs: *id001
  type: TYPE_NORMAL
- en: 'No, we''re just, sorry. '
  id: totrans-split-493
  prefs: *id001
  type: TYPE_NORMAL
- en: 'This, So these all games are bought by me. '
  id: totrans-split-494
  prefs: *id001
  type: TYPE_NORMAL
- en: 'They''re not pirates in any way. '
  id: totrans-split-495
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I can use this to to launch it. '
  id: totrans-split-496
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I also contribute the Dmenu integration into StumwM. '
  id: totrans-split-497
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So I use Dmenu. '
  id: totrans-split-498
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So like this, right? '
  id: totrans-split-499
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You don''t know how nice those things are until you start using those. '
  id: totrans-split-500
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Also I was using RoFi, but... '
  id: totrans-split-501
  prefs: *id001
  type: TYPE_NORMAL
- en: 'mentioning is that also, being able to use D-Menu, but being able to just have
    keyboard oriented? '
  id: totrans-split-502
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Everything fuzzy search narrowed and No tabs no status bars like all of a sudden
    your mental model on how your computer operates goes through the roof and a lot
    of Emacs users Know what that is like Especially In conjunction with a window
    manager? '
  id: totrans-split-503
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So for me, I tried the Emacs window manager, but it wasn''t for me. '
  id: totrans-split-504
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Having a single thread window manager is scary. '
  id: totrans-split-505
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And also games and some stuff wasn''t working correctly, which it makes sense
    in some regards, using Emacs for window manager. '
  id: totrans-split-506
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Oh like it. '
  id: totrans-split-507
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It''s not as bad in practice because The paper cuts you don''t like to hit
    them every day So you make sure So you make sure your Emacs config is a lot nicer
    and doesn''t have those slowdowns. '
  id: totrans-split-508
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Or you avoid those things. '
  id: totrans-split-509
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It forces you to make your Emacs config a lot more robust to speed. '
  id: totrans-split-510
  prefs: *id001
  type: TYPE_NORMAL
- en: 'yeah. '
  id: totrans-split-511
  prefs: *id001
  type: TYPE_NORMAL
- en: 'The thing, yeah, but still, I don''t know, but... '
  id: totrans-split-512
  prefs: *id001
  type: TYPE_NORMAL
- en: 'great. '
  id: totrans-split-513
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I''m not a person, like, I don''t want to have... '
  id: totrans-split-514
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Not with LEM or Emacs. '
  id: totrans-split-515
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I like to have different programs. '
  id: totrans-split-516
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I don''t want to like, I never was in like Emacs or you know, only Emacs. '
  id: totrans-split-517
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I really love Emacs, GNU Emacs, but only Emacs? '
  id: totrans-split-518
  prefs: *id001
  type: TYPE_NORMAL
- en: 'No, no, I like my browser, I like my, you know, my Windows Manager, my, you
    know, I wasn''t Emacs only. '
  id: totrans-split-519
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Emacs is my OS. '
  id: totrans-split-520
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Some people are, which is good. '
  id: totrans-split-521
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Different kind of a... '
  id: totrans-split-522
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I have to say that I come from Vim, like a long time ago. '
  id: totrans-split-523
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But I come from Vim, so I''m using Evil Mode. '
  id: totrans-split-524
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And I maybe have this kind of a... '
  id: totrans-split-525
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Yeah. '
  id: totrans-split-526
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So regarding Summoner.vm, it''s... '
  id: totrans-split-527
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I like it because it''s common Lisp, but it don''t have some, this, I removed
    this. '
  id: totrans-split-528
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So I''m using another model line because the model line is not great. '
  id: totrans-split-529
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Everything else is a little bit weird because you have frames similar to Emacs. '
  id: totrans-split-530
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You have a frame. '
  id: totrans-split-531
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You have this window, and then there''s no nothing here. '
  id: totrans-split-532
  prefs: *id001
  type: TYPE_NORMAL
- en: 'That was definitely weird. '
  id: totrans-split-533
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It''s also nice to be able to just... '
  id: totrans-split-534
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Can''t you put multiple windows? '
  id: totrans-split-535
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Can''t you duplicate windows? '
  id: totrans-split-536
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Show the same window in 2 frames? '
  id: totrans-split-537
  prefs: *id001
  type: TYPE_NORMAL
- en: 'NIGEL Never occurred to me that. '
  id: totrans-split-538
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I don''t know. '
  id: totrans-split-539
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Never tried that, to be honest. '
  id: totrans-split-540
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Let me check. '
  id: totrans-split-541
  prefs: *id001
  type: TYPE_NORMAL
- en: 'No idea. '
  id: totrans-split-542
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Item? '
  id: totrans-split-543
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I think so. '
  id: totrans-split-544
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Because when you try to, at least not in an easy way. '
  id: totrans-split-545
  prefs: *id001
  type: TYPE_NORMAL
- en: 'When you try to, so if I try to put a window here, let me move it so it, and
    if I try to like, so it''s, yeah, no other window. '
  id: totrans-split-546
  prefs: *id001
  type: TYPE_NORMAL
- en: 'discord or your browser? '
  id: totrans-split-547
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Could you open that in both your frames? '
  id: totrans-split-548
  prefs: *id001
  type: TYPE_NORMAL
- en: 'at least I don''t know what configuration you''d have to do to get to be able
    to do that in XMONAD. '
  id: totrans-split-549
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I never tried. '
  id: totrans-split-550
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Maybe you can? '
  id: totrans-split-551
  prefs: *id001
  type: TYPE_NORMAL
- en: 'No idea. '
  id: totrans-split-552
  prefs: *id001
  type: TYPE_NORMAL
- en: 'The interesting thing that I never use is that floating windows. '
  id: totrans-split-553
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Never use floating windows, but normal windows. '
  id: totrans-split-554
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You know, not. '
  id: totrans-split-555
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And SoundWM does have a weird support for it. '
  id: totrans-split-556
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Now it works. '
  id: totrans-split-557
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But I don''t like it. '
  id: totrans-split-558
  prefs: *id001
  type: TYPE_NORMAL
- en: 'For me, it was a little bit rough, the use of floating windows in SoundWM. '
  id: totrans-split-559
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I think they''re way better now. '
  id: totrans-split-560
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I think, but yeah, I don''t use it so... '
  id: totrans-split-561
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But there is. '
  id: totrans-split-562
  prefs: *id001
  type: TYPE_NORMAL
- en: 'like, Emacs doing everything, it''s like, you got like Emacs, you got shell,
    and then you got the gooey Wild West. '
  id: totrans-split-563
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Yeah. '
  id: totrans-split-564
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Like, with Emacs, I know, I''ll generally get, oh, this is going to be configured
    in? '
  id: totrans-split-565
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It''s either gonna be shell script, Python or Emacs. '
  id: totrans-split-566
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Oh wait, no, it''s gonna be Emacs. '
  id: totrans-split-567
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Variable''s gonna be written in SecQ, period. '
  id: totrans-split-568
  prefs: *id001
  type: TYPE_NORMAL
- en: 'but I''d like to, for example, I had to do a, so the automatic installer for,
    for Debian base, Debian stuff for Linux for, for LEM. '
  id: totrans-split-569
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I was thinking of doing in bash and I say, I don''t want to do it in Bash. '
  id: totrans-split-570
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So I just did it in SVC and Commodisp, which does have like a scripting feature. '
  id: totrans-split-571
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You can put a script and it will create your own script. '
  id: totrans-split-572
  prefs: *id001
  type: TYPE_NORMAL
- en: 'he did a talk on using Common Lisp as a replacement for a shell. '
  id: totrans-split-573
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I know that he exists. '
  id: totrans-split-574
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Next, I think it''s a main maintainer of Nix, I think he took it down. '
  id: totrans-split-575
  prefs: *id001
  type: TYPE_NORMAL
- en: 'yeah, he took it down. '
  id: totrans-split-576
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Machine. '
  id: totrans-split-577
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I think, somewhere. '
  id: totrans-split-578
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I remember reading that. '
  id: totrans-split-579
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So also, I would like to keep separated things in that way to have shell and
    then Emacs or LEM. '
  id: totrans-split-580
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Like for Emacs I use Viter. '
  id: totrans-split-581
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I don''t like that it has different, you know. '
  id: totrans-split-582
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I also don''t like my terminal not to be able to click URLs and I like I like
    my terminal to have history and you know to scroll position copy paste You can
    do some of that stuff, but you know how that stuff go on the killer ring I kind
    of view it as like an alternative to shell. '
  id: totrans-split-583
  prefs: *id001
  type: TYPE_NORMAL
- en: 'terminal, I only use it for navigate, remove stuff, so basic stuff. '
  id: totrans-split-584
  prefs: *id001
  type: TYPE_NORMAL
- en: 'When I have to like, I don''t know, edit something, just open the... '
  id: totrans-split-585
  prefs: *id001
  type: TYPE_NORMAL
- en: 'find my files. '
  id: totrans-split-586
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I kind of wish I could do that That would be, I''m sure, nicer. '
  id: totrans-split-587
  prefs: *id001
  type: TYPE_NORMAL
- en: 'that, right? '
  id: totrans-split-588
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But you have to configure all of them. '
  id: totrans-split-589
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Beam users are very aware of those tools. '
  id: totrans-split-590
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You know, having very good fuzzy finding of files and then all by the terminal. '
  id: totrans-split-591
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I do have a friend who is a user of the Forbidden Editor, he''s good, that
    does have a lot of small, like fuzzy finding, and so complete commands, and call
    those images in the terminal, all sorts of crazy stuff. '
  id: totrans-split-592
  prefs: *id001
  type: TYPE_NORMAL
- en: 'That I think are not overkill, but I mean, if you want to use it, go ahead. '
  id: totrans-split-593
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So yeah. '
  id: totrans-split-594
  prefs: *id001
  type: TYPE_NORMAL
- en: 'The thing is that, So trickling back a little bit to LEM, I think an interesting
    thought that I have about LEM and I can do Emacs. '
  id: totrans-split-595
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Not now, because LEM is a very small, like literally people, at least developers
    and users, I don''t know, maybe 10 less. '
  id: totrans-split-596
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But people may think, split the community, right? '
  id: totrans-split-597
  prefs: *id001
  type: TYPE_NORMAL
- en: 'That''s the main thing that should come to my mind, split the community, maybe
    you, because that''s true. '
  id: totrans-split-598
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I mean, I''m not developing that much in Nui MacLisp because I''m developing
    them. '
  id: totrans-split-599
  prefs: *id001
  type: TYPE_NORMAL
- en: 'That''s not that I''m a force that you might think exists or anything, but
    you know, you''re splitting a very small community. '
  id: totrans-split-600
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Not that LEM wants to do that or anything, or will be able to in any way, but
    you know what I mean. '
  id: totrans-split-601
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I thought about that, And I think it''s an interesting concern. '
  id: totrans-split-602
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But that concern also stops innovation in some way. '
  id: totrans-split-603
  prefs: *id001
  type: TYPE_NORMAL
- en: 'of how many EMAX talks are related to knowledge management and not all and
    like for instance denote and Orgrim don''t really work together all that well
    they split the community so to say I don''t think they make it weaker at all,
    though. '
  id: totrans-split-604
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I think you were saying competition is good, but yeah, competition is good. '
  id: totrans-split-605
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I want to put it in the... '
  id: totrans-split-606
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But, you know, I''m doing the devil''s advocate this regard. '
  id: totrans-split-607
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Like someone wants to like say something that maybe, you know, because some
    people still remember the Emacs versus X Emacs thing in the past, you know, that
    the split of the and That was good in some way but also bad in others like the
    compatibility was a little bit of a hell You know at the end Emacs failed, no
    Emacs But at that time it wasn''t that clear and some people like it wasn''t there. '
  id: totrans-split-608
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And I can understand that kind of a feeling. '
  id: totrans-split-609
  prefs: *id001
  type: TYPE_NORMAL
- en: 'going Like you''re on a hill and you want to goes down and up. '
  id: totrans-split-610
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It doesn''t mean that even if you know you''re going down, it doesn''t mean
    that it was a mistake. '
  id: totrans-split-611
  prefs: *id001
  type: TYPE_NORMAL
- en: 'interesting thing that I want to envision in the future, if I have time or
    someone wants to help me with, is I want them to have different language for extension,
    different Lisp for extension, not only common Lisp, but Scheme closure. '
  id: totrans-split-612
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And maybe not EmacLisp probably, tried to add Guile support to, but Guile is
    not scheme. '
  id: totrans-split-613
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Well, it''s kind of scheme, but it''s not all schemes, which is, you know,
    and it was just to replace EmacLisp with Gile. '
  id: totrans-split-614
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You have 2 both. '
  id: totrans-split-615
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It was similar in that way, but the thing is, Common Lisp does have a lot of
    interesting things. '
  id: totrans-split-616
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So someone wrote a closure in Common Lisp. '
  id: totrans-split-617
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Which is called Cloture. '
  id: totrans-split-618
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Someone wrote, well it''s on the way but it''s getting there, a standard scheme
    in Common Lisp. '
  id: totrans-split-619
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So to add support to LEM, will be as easy as import package, and you have,
    And if that language, which usually does, supports very well interaction between
    the host language and the language that tries to provide, you will mostly automatically
    have new language for the editor. '
  id: totrans-split-620
  prefs: *id001
  type: TYPE_NORMAL
- en: 'would be like using Next to scrape websites, download CSV bank statements,
    integrating with like password managers and or using... '
  id: totrans-split-621
  prefs: *id001
  type: TYPE_NORMAL
- en: 'yeah you could still do with yeah I other options would be Selenium, JavaScript,
    Next already gives you the REPL for that. '
  id: totrans-split-622
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Or when you had that Ambryvar talk, when he, I don''t know if you watched it,
    but when you use a shell and a command takes takes a while It just automatically
    takes you back into your shell and says I''ll just let this run in the background
    or being able to more easily run commands in parallel. '
  id: totrans-split-623
  prefs: *id001
  type: TYPE_NORMAL
- en: 'he. '
  id: totrans-split-624
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Because 1 was using the repl in place of the shell is 1 of the things in there
    was if, let''s say you were compiling a program, that takes a while. '
  id: totrans-split-625
  prefs: *id001
  type: TYPE_NORMAL
- en: 'If it took longer than like 3 seconds or something along those lines, it would
    kick you back into the shell and say, oh, we''re waiting for this program and
    then it had back reference support. '
  id: totrans-split-626
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So you could say, Oh, app search for this program. '
  id: totrans-split-627
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And then with the, with the shell, I, when I want to search, I''ll then grep
    through that list to narrow it down even further, but I do a whole new search. '
  id: totrans-split-628
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It just says, oh, just grep through what I already searched. '
  id: totrans-split-629
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Just grep through the results of the command that''s 3 commands ago. '
  id: totrans-split-630
  prefs: *id001
  type: TYPE_NORMAL
- en: 'in my compilation output, for the errors. '
  id: totrans-split-631
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I was looking for it. '
  id: totrans-split-632
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You know, the... '
  id: totrans-split-633
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Yeah, I want to check the, No, this is not what I meant. '
  id: totrans-split-634
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I cannot find the... '
  id: totrans-split-635
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I was trying to find like a unit shell for interface with for common Lisp? '
  id: totrans-split-636
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Is that the thing? '
  id: totrans-split-637
  prefs: *id001
  type: TYPE_NORMAL
- en: 'no longer website. '
  id: totrans-split-638
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Website. '
  id: totrans-split-639
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Maybe this 1. '
  id: totrans-split-640
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I cannot find it. '
  id: totrans-split-641
  prefs: *id001
  type: TYPE_NORMAL
- en: 'it too. '
  id: totrans-split-642
  prefs: *id001
  type: TYPE_NORMAL
- en: 'CH. '
  id: totrans-split-643
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Oh, I was looking at the clesh. '
  id: totrans-split-644
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Clish, so the, let''s check for it. '
  id: totrans-split-645
  prefs: *id001
  type: TYPE_NORMAL
- en: 'The other 1 is shell and camel. '
  id: totrans-split-646
  prefs: *id001
  type: TYPE_NORMAL
- en: 'This 1. '
  id: totrans-split-647
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Oh, interesting. '
  id: totrans-split-648
  prefs: *id001
  type: TYPE_NORMAL
- en: 'you use those disk images, LISP images, to have some of your common LISP utilities
    or programming libraries that you utilize in tandem with your REPL. '
  id: totrans-split-649
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So you can easily pull up a more featureful or a REPL that has more tools in
    it than by default. '
  id: totrans-split-650
  prefs: *id001
  type: TYPE_NORMAL
- en: 'yeah, I mean, that will be, it will be fairly, no, no, easy. '
  id: totrans-split-651
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Well, easy, but not, But this can be integrated into LEM probably. '
  id: totrans-split-652
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Very, you know, not that easy because you have to change the few things. '
  id: totrans-split-653
  prefs: *id001
  type: TYPE_NORMAL
- en: 'But this can be, you know. '
  id: totrans-split-654
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Well, 1 of the things that was in the talk, 1 of the main ideas was, let''s
    just, rather than trying to make the shell closer to a REPL, let''s make a REPL
    closer to a shell, make it to where we can easily run Linux programs in it, and
    then use the rest of the REPL goodness, make it to where parentheses are easy
    to use, like paraedit, And then all of a sudden you have a nicer shell. '
  id: totrans-split-655
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Not really shell, but. '
  id: totrans-split-656
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It''s Leo from the general track. '
  id: totrans-split-657
  prefs: *id001
  type: TYPE_NORMAL
- en: 'We are about to go back live on the development track, so you can continue
    the discussion. '
  id: totrans-split-658
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You know, we are recording everything and you seem to be having a great amount
    of fun to issue the need for lunch, at least for the people in the US. '
  id: totrans-split-659
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I just want to let you know, in 2 minutes'' time, we will be moving back to
    the rest of the talk for the afternoon, but feel free to stay in a room and keep
    discussing. '
  id: totrans-split-660
  prefs: *id001
  type: TYPE_NORMAL
- en: 'All right? '
  id: totrans-split-661
  prefs: *id001
  type: TYPE_NORMAL
- en: 'so if you have your watch synchronized at 7 sharps, so in 2 minutes, it''ll
    cut off. '
  id: totrans-split-662
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Yeah. '
  id: totrans-split-663
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Interesting stuff indeed. '
  id: totrans-split-664
  prefs: *id001
  type: TYPE_NORMAL
- en: 'The 1 that''s in that webpage, the FOSDEM 1. '
  id: totrans-split-665
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I in fact saw him live in the FOSDEM 2020. '
  id: totrans-split-666
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So we him is here in well here in Europe here in Brussels like 3 hours away
    or 2 hours away in plane from where I am. '
  id: totrans-split-667
  prefs: *id001
  type: TYPE_NORMAL
- en: 'with, you have some of they''re like, oh, I want to visit all the corners of
    the US in a couple of days. '
  id: totrans-split-668
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And it''s like, No, US is the size of Europe. '
  id: totrans-split-669
  prefs: *id001
  type: TYPE_NORMAL
- en: 'You don''t... '
  id: totrans-split-670
  prefs: *id001
  type: TYPE_NORMAL
- en: 'It''s huge. '
  id: totrans-split-671
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And it''s like 6 hours different from coast to coast, something like that. '
  id: totrans-split-672
  prefs: *id001
  type: TYPE_NORMAL
- en: 'on the freeway, on the best roads that you possibly can, not taking... '
  id: totrans-split-673
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So the thing that I try to do also with LEM is to move my workflow from LEM
    to Emax, so for Emax to LEM, use it more. '
  id: totrans-split-674
  prefs: *id001
  type: TYPE_NORMAL
- en: 'And I hope to, we still have a long way to go in terms of usability, in terms
    of other things, because we need more power. '
  id: totrans-split-675
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So This is also my attempt to do some publicity to the Blend project itself,
    to need to add more users, to be willing to try and to fail trying, because we
    still have some rough edges. '
  id: totrans-split-676
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Yeah, just trying to do that, which is, and I apologize to the Emaclist community,
    which I''m part of, but I don''t want to like, disencourage the use of getting
    Emacs anyway. '
  id: totrans-split-677
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I think both are awesome. '
  id: totrans-split-678
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I want to anyone to get a real impression. '
  id: totrans-split-679
  prefs: *id001
  type: TYPE_NORMAL
- en: 'you have a very powerful name. '
  id: totrans-split-680
  prefs: *id001
  type: TYPE_NORMAL
- en: 'about. '
  id: totrans-split-681
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I don''t personally, but I''m going to watch the EMMS talk. '
  id: totrans-split-682
  prefs: *id001
  type: TYPE_NORMAL
- en: 'That''s something that I don''t really use too much on my Emacs config. '
  id: totrans-split-683
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So I''m going to let you go. '
  id: totrans-split-684
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I''m going to maybe watch the garbage collector talk, which is interesting. '
  id: totrans-split-685
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So thank you all very much. '
  id: totrans-split-686
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I''m gonna go. '
  id: totrans-split-687
  prefs: *id001
  type: TYPE_NORMAL
- en: 'Thanks for the questions and all that. '
  id: totrans-split-688
  prefs: *id001
  type: TYPE_NORMAL
- en: 'I think I hope I answered correctly people sharing interesting talks. '
  id: totrans-split-689
  prefs: *id001
  type: TYPE_NORMAL
- en: 'the Emacs conf and to watch me. '
  id: totrans-split-690
  prefs: *id001
  type: TYPE_NORMAL
- en: 'So thank you all very much. '
  id: totrans-split-691
  prefs: *id001
  type: TYPE_NORMAL
- en: I'm going to go do that.
  id: totrans-split-692
  prefs: *id001
  type: TYPE_NORMAL
- en: Questions or comments? Please e-mail [emacsconf-org-private@gnu.org](mailto:emacsconf-org-private@gnu.org?subject=Comment%20for%20EmacsConf%202023%20emacsen%3A%20The%20Emacsen%20family%2C%20the%20design%20of%20an%20Emacs%20and%20the%20importance%20of%20Lisp)
  id: totrans-split-693
  prefs: []
  type: TYPE_NORMAL
