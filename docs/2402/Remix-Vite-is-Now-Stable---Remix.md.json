["```\nimport { vitePlugin as remix } from \"@remix-run/dev\"; import { defineConfig } from \"vite\";   export default defineConfig({\n base: \"/my-app/public/\", plugins: [ remix({ basename: \"/my-app\", }), ], }); \n```", "```\nimport {\n vitePlugin as remix, cloudflareDevProxyVitePlugin as remixCloudflareDevProxy, } from \"@remix-run/dev\"; import { defineConfig } from \"vite\";   export default defineConfig({\n plugins: [remixCloudflareDevProxy(), remix()], }); \n```", "```\nexport const loader = ({ context }: LoaderFunctionArgs) => {\n const { env, cf, ctx } = context.cloudflare; // ... more loader code here... }; \n```", "```\nimport { db } from \"~/.server/db\";   // This export is server-only ❌ export const getPosts = async () => db.posts.findMany();   // This export is client-safe ✅ export const PostPreview = ({ title, description }) => (\n <article> <h2>{title}</h2> <p>{description}</p> </article> ); \n```", "```\nimport { serverOnly$ } from \"vite-env-only\";   import { db } from \"~/.server/db\";   export const getPosts = serverOnly$(async () => db.posts.findMany());   export const PostPreview = ({ title, description }) => (\n <article> <h2>{title}</h2> <p>{description}</p> </article> ); \n```", "```\nexport const getPosts = undefined;   export const PostPreview = ({ title, description }) => (\n <article> <h2>{title}</h2> <p>{description}</p> </article> ); \n```", "```\nimport type { LinksFunction } from \"@remix-run/node\"; // or cloudflare/deno   import styles from \"~/styles/dashboard.css\";   export const links: LinksFunction = () => [{ rel: \"stylesheet\", href: styles }]; \n```", "```\nimport styles from \"~/styles/dashboard.css?url\"; \n```"]