- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 15:00:15'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: CodeRev.app - Code Review as Interview
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://coderev.app](https://coderev.app)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <main class="q-page q-pb-xl offset-xl-3 offset-md-2 col-xl-6 col-md-8 col-sm-12
    text-center" data-v-3ee17368="">
  prefs: []
  type: TYPE_NORMAL
- en: Rationale
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the age of StackOverflow and ChatGPT, is leetcode really the best way to
    evaluate technical candidates?
  prefs: []
  type: TYPE_NORMAL
- en: '*Was it ever?*'
  prefs: []
  type: TYPE_NORMAL
- en: Try code review as interview instead!
  prefs: []
  type: TYPE_NORMAL
- en: Understand how candidates interact with isolated parts of your codebase.
  prefs: []
  type: TYPE_NORMAL
- en: Reflects day-to-day engineering responsibilities in your team.
  prefs: []
  type: TYPE_NORMAL
- en: Better representation of how a candidate reasons, thinks, and communicates.
  prefs: []
  type: TYPE_NORMAL
- en: Open-ended and collaborative; no black and white responses.
  prefs: []
  type: TYPE_NORMAL
- en: Hard to game with generative AI and studying leetcode challenges.
  prefs: []
  type: TYPE_NORMAL
- en: Learn more about your candidates in less time with less stress.
  prefs: []
  type: TYPE_NORMAL
- en: Evaluate for technical roles biased towards reading vs writing code (manager,
    support).
  prefs: []
  type: TYPE_NORMAL
- en: A candidate's ability to read and reason about your existing code can be a better
    measure of how quickly they can adapt to your team and how you would expect them
    to contribute to your ongoing efforts. And in most cases, a new hire's first days
    are focused on reading code.
  prefs: []
  type: TYPE_NORMAL
- en: How it works
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create a workspace for each of the roles you're screening for.
  prefs: []
  type: TYPE_NORMAL
- en: Benefits
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Why use CodeRev? Why not just a GitHub repo or CodeSandbox or Stackblitz?
  prefs: []
  type: TYPE_NORMAL
- en: Easy setup
  prefs: []
  type: TYPE_NORMAL
- en: Lightweight, focused, and simple; just a few clicks to get started.
  prefs: []
  type: TYPE_NORMAL
- en: Isolated
  prefs: []
  type: TYPE_NORMAL
- en: No exposure of your company GitHub repos, accounts, and workspaces.
  prefs: []
  type: TYPE_NORMAL
- en: Collaborative
  prefs: []
  type: TYPE_NORMAL
- en: Focus on analysis, feedback, and communication; not algorithmic complexity (let
    GPT do that).
  prefs: []
  type: TYPE_NORMAL
- en: FAQ
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Why did you make this tool?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I went through an interview where the process involved reviewing a snippet of
    code and really enjoyed the experience. I thought it would be great if there was
    a dedicated tool for this.
  prefs: []
  type: TYPE_NORMAL
- en: Why not just CodeSandbox or Stackblitz?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Those tools serve a different purpose in an interview process. This tool is
    meant to help understand how a candidate would interact and communicate in a real-world,
    day-to-day responsibility of providing feedback to a teammate.
  prefs: []
  type: TYPE_NORMAL
- en: Does this replace coding exercises?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It can if you want it to! But think of it as another tool you can use to help
    better gauge your candidates.
  prefs: []
  type: TYPE_NORMAL
- en: How is this better than actual coding?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Many roles such as a senior engineering manager or technical architect are more
    biased towards reading and evaluating code rather than writing code. This is also
    the case for roles like technical support or QA who may be tracing code, but not
    writing code. And in reality, we all use external resources when we typically
    code -- whether StackOverflow, GitHub Copilot, ChatGPT, or Reddit forums -- especially
    when we are dealing with algorithmically complex problems. Coding exercises artificially
    create a high-stress interaction that doesn't reflect how we build and ship software
    in real life.
  prefs: []
  type: TYPE_NORMAL
- en: What's the stack?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Nuxt3 (Vue.js) + Quasar Framework + Google Cloud Firebase. Productive, fast,
    and more or less free.
  prefs: []
  type: TYPE_NORMAL
- en: Can you add [...]?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Send me an email or DM and let me know!
  prefs: []
  type: TYPE_NORMAL
- en: </main>
  prefs: []
  type: TYPE_NORMAL
