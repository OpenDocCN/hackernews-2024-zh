- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:32:29'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: Technology is the Problem - Shyam Sankar
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://www.shyamsankar.com/p/technology-is-the-problem](https://www.shyamsankar.com/p/technology-is-the-problem)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In 2011, Tyler Cowen argued that the developed world economies were in a [Great
    Stagnation](https://www.amazon.com/Great-Stagnation-Low-Hanging-Eventually-eSpecial-ebook/dp/B004H0M8QS).
    It had started in the late 1970s because all of the low hanging productivity fruits—machines
    and factories powered by fossil fuels and electricity—had been exhausted.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
- en: Technological improvements were happening at the margin.  This same sentiment
    is captured in Founders Fund’s famous saying that “we wanted flying cars, instead
    we got 140 characters.”
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
- en: And this tweet captures the perfect banality of most technology today.  We entered
    a SaaS hole of darkness.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
- en: My colleague [Ted Mabrey wrote](https://tedmabrey.substack.com/p/why-did-software-eat-the-world-but) that
    “Software companies are shipping more, institutions are consuming more and the
    result of all of that software consumption is productivity growth below the long
    term trend.”
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: Satya Nadella at Davos in January 2024 said; “*...inflation adjusted, there
    is no economic growth in the world, I would say and that's a pretty disappointing
    state. In fact, the developed world may have negative economic growth...PCs were
    the last time, when actual, economic growth came about, right? So, the last time
    it showed up in productivity stats were when PCs became ubiquitous.” *Satya goes
    on to argue that AI has the potential to restore productivity growth.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
- en: 'While AI is very powerful, this argument is wrong.  AI alone is insufficient
    because it fails to diagnose the underlying systemic drivers of the productivity
    dysfunction, let alone redress them: implementation for advantage.'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
- en: 'I propose an alternative cause largely born out of 18 years of experience at
    the coalface of delivering productivity to governments and Fortune 500 institutions. The
    Great Stagnation is caused by technology and not despite it. Software in particular
    is suited to layers of abstraction turned obfuscation in a way hardware is not.
    AI only accelerates this trend. We are stuck in the era of the cargo cult company:'
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
- en: During WWII, the U.S. used islands in the Southwest Pacific as military bases.
    The indigenous Melanesians observed with awe as big metal birds carrying all sorts
    of supplies and cargo magically materialized whenever the soldiers were marching
    and signaling towards the sky. When the war ended, so did the appearance of the
    magic cargo. Local chiefs tried to [summon the cargo](https://www.sapiens.org/culture/cargo-cult-rituals/)
    by engaging in the same rituals they believed caused the cargo to appear in the
    first place. They cleared the forest to look like a landing strip and made wooden
    replicas of airplanes and control towers. The Americans and their Coca-Cola did
    not reappear.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
- en: Today, “cargo cult programming” is well known among engineers to refer to ritualistic
    code practices divorced from cause and effect. It is symptomatic of an engineer
    who doesn’t understand the underlying problem and tries to pattern match to get
    at the solution. The analogy is not often extended to describe cargo cult management,
    but this is an even more pernicious problem. In cargo cult management, a company’s
    leadership uses the employment of a technology (frequently software) and the achievement
    of financial metrics as a proxy for actually solving the problem and obtaining
    ground truth.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
- en: There is an old saying in Silicon Valley, “There is the first 80% and the second
    80%.” While it is really hard to create new technologies, it is also *really*
    hard to implement them for any measurable advantage.  This has always been true: The
    steam engine didn’t matter until it was put into a ship and locomotive; the Wright
    brothers’ flight didn’t matter until it moved people; electricity needed to be
    delivered to the home; and telephony didn’t matter until there was a connection.
    However, the connection between invention and implementation used to be more obvious.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
- en: In the 1970s, complexity in technology reached a point that it wasn’t possible
    to move forward without abstractions. I was taught the beauty of abstractions
    as an electrical and computer engineer. Doped silicon where you are solving physics
    equations suddenly become transistors where you are dealing with 0s and 1s suddenly
    become chips where you are issuing instructions, then computers where you are
    writing code, and then user interfaces where you are clicking. It was a great
    way to deal with overwhelming complexity. The abstractions made it all manageable.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
- en: But now the abstractions are getting in the way.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
- en: We have converged on a world where the people who do the first 80% have no competency
    or interest in doing the second 80%. The SaaS industry is a frequent target of
    the Great Stagnation because it is chasing high margins rather than high value
    outcomes - which, to be fair, is a rational response to a punitive capital landscape
    that penalizes companies for deviating from a specific [set of metrics](https://sacks.substack.com/p/the-saas-metrics-that-matter).
    And it’s not just SaaS. The Defense Industrial Base underwent a financialization
    in the 1990s where the focus shifted to dividends and buybacks rather than innovation.
    I could go on. Lacking the incentives to allocate resources towards implementation,
    companies instead create an abstraction to define the “right” way to do something.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
- en: '**But when the abstraction isn’t tethered to empirical results or anything
    measurable and falsifiable, the abstraction is just an obfuscation, a cargo cult
    ritual.** You can’t prosecute the AI revolution without piercing the abstractions
    substantially to redesign the application, its code, and the chip (CPU→GPU) it
    runs on. SpaceX succeeded not because it invented a fundamentally new rocket or
    law of physics but because it didn’t rely on crusty abstractions that obfuscated
    what was actually physically possible.'
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
- en: When I look at the commercial world at large, despite years of investment in
    technology, it is completely broken. The cargo cult company’s latest billion dollar
    enterprise resource planning (ERP) implementation obfuscates the fact that employees
    on the factory floor are still running production in Excel. Similarly, the strongest
    indictment of the software-industrial-complex is COVID. The only technology that
    companies could point to as relevant to dealing with the disruptions of COVID
    to their supply chains and operations were videoconferencing software like Teams
    and Zoom. What about the 100s of billions of dollars invested in the modern data
    stack, cloud, ERP,  data lakes, data warehouses, and CRMs?
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
- en: The problem isn’t that enterprise software doesn’t work - it is that you didn’t
    make it work for you. The only measure that counts, hidden behind all those layers
    of abstraction, is the final outcome - decision advantage.  This is often viewed
    as an implementation detail (the second 80%), and implementation is often outsourced
    to experts (COVID should have also taught us all something about “experts“). The
    industry of consultants who themselves have never run businesses but tell cargo
    cult companies how to execute implementation further obfuscates the lack of productivity
    gains.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
- en: Palantir was ridiculed endlessly for our Forward Deployed Engineering model.
    Investors would impugn Palantir as a services company simply because we didn’t
    believe that throwing our software over the wall for consultants to implement
    was the correct thing for our customers.  In fairness, many of our buyers hated
    this because they subscribed to a world view where engaging in the correct rituals
    (e.g., buying expensive ERP) was the only thing that should matter. Like Department
    of Defense program management, the commercial world often believes implementation
    is best executed when managed to cost, schedule, and performance by fungible units
    of “independent” consultants.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
- en: 'Palantir never charged for our implementation services because we wanted to
    internalize the cost and the pain.  The only way to make the software implementation
    better was to commit ourselves to solving the whole problem.  SAP, Salesforce,
    Microsoft, Snowflake, and so many others are responding to what the market wants:
    high margin software revenue. They rely on a scaled ecosystem of integrators to
    do services, and that’s exactly why we are consuming more technology and none
    of it matters.'
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
- en: '[John Boyd](https://www.amazon.com/Boyd-Fighter-Pilot-Who-Changed/dp/0316796883)
    would reframe this as being about the [OODA loop](https://fs.blog/ooda-loop/).
    Observe, Orient, Decide, Act.  The technology that matters accelerates your OODA
    loop by helping you make decisions faster than the competition.  And that compounds.
     Everything else is rearranging deck chairs. At best you are smarter, but you
    aren’t better.  A lot has been written about the OODA loop already, but I think
    the best summary comes from JRock in his (brutally crass) anthem: [Win](https://www.youtube.com/watch?v=JrO46CJd9ns&t=31s).
     Or more eloquently by former Chief of Staff of the Army McConville: [Winning
    matters.](https://www.army.mil/article/225605/40th_chief_of_staff_of_the_army_initial_message_to_the_army_team)'
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
- en: 'To say the quiet part out loud: the OODA loop is all about the human.  Technology
    serves humans.  Instead, we have cargo cult companies such that the mere acquisition
    of architecturally-ordained technology is perceived to be the solution. The cargo
    cultist treat the front line users as godless heathens standing in the way of
    adopting innovation.'
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
- en: More profoundly, even the purveyors in the software-industrial-complex really
    believe their technology is working (Satya proves to be the exception with a more clear-eyed
    understanding of what is actually going on). They too have subscribed to the cargo
    cult because they don’t go to the factory floor; they don’t own the burden of
    implementing their technology; and they aren’t accountable to delivering productivity.
    Management at the company won’t pierce the veil of abstraction to realize they
    fell for the Wizard of Oz.
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
- en: We overcome these problems by recognizing that great leadership is more important,
    not less important, with greater technology.  The more sophisticated and complex
    our technology become, the more important the greatest leader becomes.  Intel’s
    road to ruin was when the CFO became the CEO and managed the business by the numbers
    and abstractions. Former Intel CTO and current CEO Pat Gelsinger might correct
    the course.  In the meantime, technical founder and NVIDIA CEO Jensen Huang rewrote
    the stack around accelerated computing.
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
- en: In this way, technology has largely had the opposite effect from all the effects
    anticipated.  The world thought technology would be a great leveling force, but
    it has led to more winner-take-most, power law outcomes. Technology was supposed
    to enable the median human to do so much more, but it has actually made the very
    best much more valuable. The world thought technology would make geography less
    important, but it has made it only more important by concentrating the relevance,
    wealth, and share of innovations from a handful of places.  Silicon Valley is
    more relevant, while Europe lags further behind in Tech. China still has zero
    global enterprise software companies. Tim Cook says that Apple makes things in
    China because they are the best, not because they are the cheapest — a consequence
    of a flawed industrial policy in the West.
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
- en: Steve Jobs called the Macintosh a bicycle for the mind. Let’s abandon cargo
    cult “solutions.”. Recognize there is no [process](https://www.shyamsankar.com/p/there-is-no-process-it-will-be-painful),
    and it will be painful. Technology only works when it is an extension of the human
    mind and the humans who mind it. Exclusively work backwards from decision advantage.
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
