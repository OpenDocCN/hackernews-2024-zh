- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-27 14:32:29'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:32:29
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Technology is the Problem - Shyam Sankar
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术即问题 - Shyam Sankar
- en: 来源：[https://www.shyamsankar.com/p/technology-is-the-problem](https://www.shyamsankar.com/p/technology-is-the-problem)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.shyamsankar.com/p/technology-is-the-problem](https://www.shyamsankar.com/p/technology-is-the-problem)
- en: In 2011, Tyler Cowen argued that the developed world economies were in a [Great
    Stagnation](https://www.amazon.com/Great-Stagnation-Low-Hanging-Eventually-eSpecial-ebook/dp/B004H0M8QS).
    It had started in the late 1970s because all of the low hanging productivity fruits—machines
    and factories powered by fossil fuels and electricity—had been exhausted.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 2011年，泰勒·考温认为，发达国家的经济陷入了[大停滞](https://www.amazon.com/Great-Stagnation-Low-Hanging-Eventually-eSpecial-ebook/dp/B004H0M8QS)。这始于20世纪70年代末，因为全部低悬的生产力果实——受化石燃料和电力驱动的机器和工厂——早已被耗尽。
- en: Technological improvements were happening at the margin.  This same sentiment
    is captured in Founders Fund’s famous saying that “we wanted flying cars, instead
    we got 140 characters.”
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 技术改进正在边缘发生着。这种情绪在风险投资基金的著名说法“我们想要飞行汽车，结果却得到了140个字符”中也得以体现。
- en: And this tweet captures the perfect banality of most technology today.  We entered
    a SaaS hole of darkness.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这条推文完美地捕捉了当今大多数技术的平凡。我们陷入了一个充满黑暗的SaaS圈套。
- en: My colleague [Ted Mabrey wrote](https://tedmabrey.substack.com/p/why-did-software-eat-the-world-but) that
    “Software companies are shipping more, institutions are consuming more and the
    result of all of that software consumption is productivity growth below the long
    term trend.”
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我的同事[Ted Mabrey写道](https://tedmabrey.substack.com/p/why-did-software-eat-the-world-but)：“软件公司在大量交付，机构在消费，而所有这些软件的使用结果是生产力增长低于长期趋势。”
- en: Satya Nadella at Davos in January 2024 said; “*...inflation adjusted, there
    is no economic growth in the world, I would say and that's a pretty disappointing
    state. In fact, the developed world may have negative economic growth...PCs were
    the last time, when actual, economic growth came about, right? So, the last time
    it showed up in productivity stats were when PCs became ubiquitous.” *Satya goes
    on to argue that AI has the potential to restore productivity growth.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 2024年1月，Satya Nadella在达沃斯说：“*...通货膨胀调整后，世界上没有经济增长，我认为这是一个相当令人失望的状态。事实上，发达国家的经济增长可能是负的……个人电脑是最后一次，实际上，经济增长发生的时候对吧？所以，在生产率统计标志着的最后一次是个人电脑变得无所不在的时候。”*Satya接着辩称人工智能有可能恢复生产力增长。
- en: 'While AI is very powerful, this argument is wrong.  AI alone is insufficient
    because it fails to diagnose the underlying systemic drivers of the productivity
    dysfunction, let alone redress them: implementation for advantage.'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管人工智能非常强大，但这一论点是错误的。人工智能本身还不够，因为它未能诊断出生产力功能障碍的根本系统驱动因素，更不用说对其进行纠正：实施以谋取优势。
- en: 'I propose an alternative cause largely born out of 18 years of experience at
    the coalface of delivering productivity to governments and Fortune 500 institutions. The
    Great Stagnation is caused by technology and not despite it. Software in particular
    is suited to layers of abstraction turned obfuscation in a way hardware is not.
    AI only accelerates this trend. We are stuck in the era of the cargo cult company:'
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 设立一个可能的原因：18 年来我一直在为政府和财富500强机构实现能源效益的第一线。大停滞的原因是技术，而不是虽然。特别是软件是适合用来抽象地使硬件模糊，人工智能只会加剧这种趋势。我们身陷货物崇拜公司的时代：
- en: During WWII, the U.S. used islands in the Southwest Pacific as military bases.
    The indigenous Melanesians observed with awe as big metal birds carrying all sorts
    of supplies and cargo magically materialized whenever the soldiers were marching
    and signaling towards the sky. When the war ended, so did the appearance of the
    magic cargo. Local chiefs tried to [summon the cargo](https://www.sapiens.org/culture/cargo-cult-rituals/)
    by engaging in the same rituals they believed caused the cargo to appear in the
    first place. They cleared the forest to look like a landing strip and made wooden
    replicas of airplanes and control towers. The Americans and their Coca-Cola did
    not reappear.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二次世界大战期间，美国在西南太平洋的岛屿上设置了军事基地。当地的美拉尼西亚人惊讶地观察到士兵们在朝着天空行军和发信号时，大型金属飞鸟神奇地运来了各种供应品和货物。战争结束后，这种神奇货物的出现也随之消失。当地的酋长们试图通过进行相同的仪式来[召唤货物](https://www.sapiens.org/culture/cargo-cult-rituals/)，他们相信这些仪式导致了这些货物的出现。他们清理了森林，以模拟着一个着陆跑道，并制作了飞机和控制塔的木质复制品。然而，美国人和他们的可口可乐并未再次出现。
- en: Today, “cargo cult programming” is well known among engineers to refer to ritualistic
    code practices divorced from cause and effect. It is symptomatic of an engineer
    who doesn’t understand the underlying problem and tries to pattern match to get
    at the solution. The analogy is not often extended to describe cargo cult management,
    but this is an even more pernicious problem. In cargo cult management, a company’s
    leadership uses the employment of a technology (frequently software) and the achievement
    of financial metrics as a proxy for actually solving the problem and obtaining
    ground truth.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，“模拟运输编程”在工程师中广为人知，指的是脱离因果关系的仪式化代码实践。这表明工程师不理解潜在问题，试图通过模式匹配来找到解决方案。这个类比通常不会被用来描述“模拟运输管理”，但这是一个更为恶性的问题。在模拟运输管理中，公司的领导层使用技术（通常是软件）的雇用和财务指标的达成，作为实际解决问题和获取真实情况的代理。
- en: There is an old saying in Silicon Valley, “There is the first 80% and the second
    80%.” While it is really hard to create new technologies, it is also *really*
    hard to implement them for any measurable advantage.  This has always been true: The
    steam engine didn’t matter until it was put into a ship and locomotive; the Wright
    brothers’ flight didn’t matter until it moved people; electricity needed to be
    delivered to the home; and telephony didn’t matter until there was a connection.
    However, the connection between invention and implementation used to be more obvious.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在硅谷有一句古老的谚语：“有第一80%和第二80%。”虽然创造新技术非常困难，但将其实施以获得任何可衡量的优势也*非常*困难。这一直是事实：直到蒸汽机被应用于船舶和火车，莱特兄弟的飞行才真正有了意义；直到电力被送到家里；电话通信在连接之前也无济于事。然而，发明与实施之间的联系曾经更加明显。
- en: In the 1970s, complexity in technology reached a point that it wasn’t possible
    to move forward without abstractions. I was taught the beauty of abstractions
    as an electrical and computer engineer. Doped silicon where you are solving physics
    equations suddenly become transistors where you are dealing with 0s and 1s suddenly
    become chips where you are issuing instructions, then computers where you are
    writing code, and then user interfaces where you are clicking. It was a great
    way to deal with overwhelming complexity. The abstractions made it all manageable.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在1970年代，技术复杂性达到了一个不可能继续前进而不进行抽象化的地步。作为一名电子与计算机工程师，我被教导了抽象化的美妙。掺杂硅变成解决物理方程，突然成为处理0和1的晶体管，进而变成处理指令的芯片，然后是编写代码的计算机，以及点击用户界面。这是处理压倒性复杂性的好方法。抽象化使得一切变得可管理。
- en: But now the abstractions are getting in the way.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 但现在，抽象化已经成为了阻碍。
- en: We have converged on a world where the people who do the first 80% have no competency
    or interest in doing the second 80%. The SaaS industry is a frequent target of
    the Great Stagnation because it is chasing high margins rather than high value
    outcomes - which, to be fair, is a rational response to a punitive capital landscape
    that penalizes companies for deviating from a specific [set of metrics](https://sacks.substack.com/p/the-saas-metrics-that-matter).
    And it’s not just SaaS. The Defense Industrial Base underwent a financialization
    in the 1990s where the focus shifted to dividends and buybacks rather than innovation.
    I could go on. Lacking the incentives to allocate resources towards implementation,
    companies instead create an abstraction to define the “right” way to do something.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在的世界趋于一致，即做80%工作的人没有能力或兴趣做第二80%的工作。SaaS行业经常成为“大停滞”的目标，因为它追求高利润而非高价值结果——公平地说，这是对处罚性资本环境的理性回应，后者惩罚那些偏离特定[指标集合](https://sacks.substack.com/p/the-saas-metrics-that-matter)的公司。而这不仅仅发生在SaaS行业。国防工业基地在1990年代经历了金融化，焦点从创新转向股息和回购。我可以继续举例。缺乏将资源配置到实施的激励机制，公司们反而创造了一个抽象化概念，来定义“正确”做某事的方法。
- en: '**But when the abstraction isn’t tethered to empirical results or anything
    measurable and falsifiable, the abstraction is just an obfuscation, a cargo cult
    ritual.** You can’t prosecute the AI revolution without piercing the abstractions
    substantially to redesign the application, its code, and the chip (CPU→GPU) it
    runs on. SpaceX succeeded not because it invented a fundamentally new rocket or
    law of physics but because it didn’t rely on crusty abstractions that obfuscated
    what was actually physically possible.'
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**但是，当抽象没有与实证结果或任何可测量和可证伪的东西联系在一起时，这种抽象只是一种混淆，一种货运崇拜仪式。** 在不大幅度地揭示抽象以重设计应用程序、其代码以及运行它的芯片（CPU→GPU）之前，你无法推进人工智能革命。
    SpaceX 之所以成功，并非因为它发明了一种根本上新的火箭或物理定律，而是因为它没有依赖那些混淆了实际可能性的陈旧抽象。'
- en: When I look at the commercial world at large, despite years of investment in
    technology, it is completely broken. The cargo cult company’s latest billion dollar
    enterprise resource planning (ERP) implementation obfuscates the fact that employees
    on the factory floor are still running production in Excel. Similarly, the strongest
    indictment of the software-industrial-complex is COVID. The only technology that
    companies could point to as relevant to dealing with the disruptions of COVID
    to their supply chains and operations were videoconferencing software like Teams
    and Zoom. What about the 100s of billions of dollars invested in the modern data
    stack, cloud, ERP,  data lakes, data warehouses, and CRMs?
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在我审视整个商业世界时，尽管多年来在技术投资方面已经花费了大量资金，但却完全是一团糟。 货运崇拜公司最新的数十亿美元企业资源计划（ERP）实施掩盖了一个事实：工厂车间的员工仍在使用
    Excel 运行生产。 同样，软件工业复合体的最严厉指责是 COVID。 公司唯一能够应对 COVID 对其供应链和运营带来的干扰的技术是诸如 Teams
    和 Zoom 的视频会议软件。 那些投资数千亿美元用于现代数据堆栈、云、ERP、数据湖、数据仓库和客户关系管理系统的技术呢？
- en: The problem isn’t that enterprise software doesn’t work - it is that you didn’t
    make it work for you. The only measure that counts, hidden behind all those layers
    of abstraction, is the final outcome - decision advantage.  This is often viewed
    as an implementation detail (the second 80%), and implementation is often outsourced
    to experts (COVID should have also taught us all something about “experts“). The
    industry of consultants who themselves have never run businesses but tell cargo
    cult companies how to execute implementation further obfuscates the lack of productivity
    gains.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 问题不在于企业软件无法运作 - 而在于你没有让它为你工作。 隐藏在所有这些抽象层后面的唯一衡量标准是最终结果 - 决策优势。 这通常被视为实施细节（后80%），而实施往往被外包给专家（COVID
    也应该教给我们有关“专家”的一些东西）。 那些从未经营过企业却告诉货运崇拜公司如何执行实施的顾问行业进一步混淆了生产力增益的缺失。
- en: Palantir was ridiculed endlessly for our Forward Deployed Engineering model.
    Investors would impugn Palantir as a services company simply because we didn’t
    believe that throwing our software over the wall for consultants to implement
    was the correct thing for our customers.  In fairness, many of our buyers hated
    this because they subscribed to a world view where engaging in the correct rituals
    (e.g., buying expensive ERP) was the only thing that should matter. Like Department
    of Defense program management, the commercial world often believes implementation
    is best executed when managed to cost, schedule, and performance by fungible units
    of “independent” consultants.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: Palantir 因我们的前置部署工程模式而遭到无数嘲笑。 投资者们会指责 Palantir 是一个服务公司，仅仅因为我们不认为将软件扔给顾问实施是我们客户的正确选择。
    公平地说，我们的许多买家对此深恶痛绝，因为他们订阅了一种世界观，即参与正确的仪式（例如购买昂贵的ERP）是唯一重要的事情。 就像国防部门的项目管理一样，商业世界通常认为通过“独立”顾问单位的成本、进度和性能管理执行最佳。
- en: 'Palantir never charged for our implementation services because we wanted to
    internalize the cost and the pain.  The only way to make the software implementation
    better was to commit ourselves to solving the whole problem.  SAP, Salesforce,
    Microsoft, Snowflake, and so many others are responding to what the market wants:
    high margin software revenue. They rely on a scaled ecosystem of integrators to
    do services, and that’s exactly why we are consuming more technology and none
    of it matters.'
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: Palantir 从未为我们的实施服务收费，因为我们希望内部化成本和痛苦。 使软件实施变得更好的唯一途径是致力于解决整个问题。 SAP、Salesforce、Microsoft、Snowflake
    和其他许多公司都在响应市场需求：高利润的软件收入。 他们依赖于一个扩展生态系统的集成商来提供服务，这正是为什么我们消耗更多技术而这些技术却毫无意义的原因。
- en: '[John Boyd](https://www.amazon.com/Boyd-Fighter-Pilot-Who-Changed/dp/0316796883)
    would reframe this as being about the [OODA loop](https://fs.blog/ooda-loop/).
    Observe, Orient, Decide, Act.  The technology that matters accelerates your OODA
    loop by helping you make decisions faster than the competition.  And that compounds.
     Everything else is rearranging deck chairs. At best you are smarter, but you
    aren’t better.  A lot has been written about the OODA loop already, but I think
    the best summary comes from JRock in his (brutally crass) anthem: [Win](https://www.youtube.com/watch?v=JrO46CJd9ns&t=31s).
     Or more eloquently by former Chief of Staff of the Army McConville: [Winning
    matters.](https://www.army.mil/article/225605/40th_chief_of_staff_of_the_army_initial_message_to_the_army_team)'
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[约翰·博伊德](https://www.amazon.com/Boyd-Fighter-Pilot-Who-Changed/dp/0316796883)将其重新定义为关于[OODA
    循环](https://fs.blog/ooda-loop/)。观察、定位、决策、行动。重要的技术加速你的OODA 循环，帮助你比竞争对手更快做出决策。这种效果是复利的。其他一切只是在重新摆放甲板上的椅子。你可能会更聪明，但你并没有变得更好。有很多关于OODA
    循环的文章，但我认为最好的总结来自 JRock 在他（粗暴的）国歌中表达的：[赢](https://www.youtube.com/watch?v=JrO46CJd9ns&t=31s)。或者更富有诗意地由前陆军参谋长
    McConville 表达的：[胜利至上。](https://www.army.mil/article/225605/40th_chief_of_staff_of_the_army_initial_message_to_the_army_team)'
- en: 'To say the quiet part out loud: the OODA loop is all about the human.  Technology
    serves humans.  Instead, we have cargo cult companies such that the mere acquisition
    of architecturally-ordained technology is perceived to be the solution. The cargo
    cultist treat the front line users as godless heathens standing in the way of
    adopting innovation.'
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 不妨明言之：OODA 循环关乎人本身。技术是为人类服务的。然而，我们有了类似仪式崇拜的公司，他们认为仅仅采用体系化规定的技术就能解决问题。这些仪式崇拜者把一线用户视为无信仰的异教徒，阻碍了创新的采纳。
- en: More profoundly, even the purveyors in the software-industrial-complex really
    believe their technology is working (Satya proves to be the exception with a more clear-eyed
    understanding of what is actually going on). They too have subscribed to the cargo
    cult because they don’t go to the factory floor; they don’t own the burden of
    implementing their technology; and they aren’t accountable to delivering productivity.
    Management at the company won’t pierce the veil of abstraction to realize they
    fell for the Wizard of Oz.
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 更深刻的是，即使是软件工业复合体中的供应商也确信他们的技术在发挥作用（Satya 证明了他是个例外，对实际情况有更清晰的理解）。他们也陷入了仪式崇拜，因为他们不去工厂车间；他们不承担实施技术的负担；他们不对提高生产力负责。公司管理层未能洞悉这层抽象的面纱，意识到他们上了魔法师的当。
- en: We overcome these problems by recognizing that great leadership is more important,
    not less important, with greater technology.  The more sophisticated and complex
    our technology become, the more important the greatest leader becomes.  Intel’s
    road to ruin was when the CFO became the CEO and managed the business by the numbers
    and abstractions. Former Intel CTO and current CEO Pat Gelsinger might correct
    the course.  In the meantime, technical founder and NVIDIA CEO Jensen Huang rewrote
    the stack around accelerated computing.
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过认识到，伟大的领导力在技术更加先进和复杂的背景下更为重要，而不是更不重要，来解决这些问题。英特尔走向失败的路是首席财务官成为首席执行官，并通过数字和抽象管理业务。前英特尔首席技术官兼现任首席执行官帕特·盖尔辛格或许能够纠正这一趋势。与此同时，技术创始人兼
    NVIDIA CEO 贾森·黄重新构建了围绕加速计算的技术堆栈。
- en: In this way, technology has largely had the opposite effect from all the effects
    anticipated.  The world thought technology would be a great leveling force, but
    it has led to more winner-take-most, power law outcomes. Technology was supposed
    to enable the median human to do so much more, but it has actually made the very
    best much more valuable. The world thought technology would make geography less
    important, but it has made it only more important by concentrating the relevance,
    wealth, and share of innovations from a handful of places.  Silicon Valley is
    more relevant, while Europe lags further behind in Tech. China still has zero
    global enterprise software companies. Tim Cook says that Apple makes things in
    China because they are the best, not because they are the cheapest — a consequence
    of a flawed industrial policy in the West.
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种方式，技术在很大程度上产生了与所有预期效果相反的效果。世界认为技术将是一个伟大的平等化力量，但实际上导致更多的赢者通吃、权力法则结果。技术原本应该让中位人更多地发挥作用，但实际上却使最优秀的人更有价值。世界认为技术将使地理位置不那么重要，但实际上它通过集中相关性、财富和创新份额，使其更加重要。硅谷更具相关性，而欧洲在科技领域的落后更加明显。中国仍然没有全球企业软件公司。蒂姆·库克表示，苹果在中国生产是因为他们是最好的，而不是因为他们最便宜
    —— 这是西方工业政策缺陷的结果。
- en: Steve Jobs called the Macintosh a bicycle for the mind. Let’s abandon cargo
    cult “solutions.”. Recognize there is no [process](https://www.shyamsankar.com/p/there-is-no-process-it-will-be-painful),
    and it will be painful. Technology only works when it is an extension of the human
    mind and the humans who mind it. Exclusively work backwards from decision advantage.
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 史蒂夫·乔布斯称麦金塔是心灵的自行车。让我们放弃“模仿崇拜”的“解决方案”。认识到没有[过程](https://www.shyamsankar.com/p/there-is-no-process-it-will-be-painful)，这将是痛苦的。技术只有在成为人类思维及关注人类的延伸时才有效。决策优势的后向独家工作。
