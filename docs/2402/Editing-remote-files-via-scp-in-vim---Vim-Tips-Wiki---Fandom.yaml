- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-29 13:23:17'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Editing remote files via scp in vim | Vim Tips Wiki | Fandom
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://vim.fandom.com/wiki/Editing_remote_files_via_scp_in_vim](https://vim.fandom.com/wiki/Editing_remote_files_via_scp_in_vim)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Duplicate tip**'
  prefs: []
  type: TYPE_NORMAL
- en: 'This tip is very similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: These tips need to be merged – see the [merge guidelines](/wiki/Vim_Tips_Wiki:Merge_guidelines
    "Vim Tips Wiki:Merge guidelines").
  prefs: []
  type: TYPE_NORMAL
- en: Vim 6.x has the netrw plugin installed as a standard plugin. It allows you to
    edit files via ftp, rcp, scp, or http. If your username differs on the remote
    host, however, and you're trying to use scp, things can get a little weird, particularly
    if you're not editing a document under your user tree.
  prefs: []
  type: TYPE_NORMAL
- en: 'To get around this, try opening the file as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Similarly, you can open the file from within Vim in a new buffer by running:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'or in a new tab using:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Notice two things:'
  prefs: []
  type: TYPE_NORMAL
- en: '`remoteuser@`: This is used to specify the user name on the remote server.
    Without this, it will use the user''s name on the local computer. Often that will
    come from the $USERNAME environment variable. If the user has the same name on
    the local computer and the remote server, this part is unnecessary. If you''re
    unsure whether it''s needed, use it just to be safe.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Double slashes ("`//`") between the hostname and file path: At least one slash
    is needed to separate the remote server''s hostname from the file path. That slash
    is not included in the path used to reference the file on the remote server. If
    the path to the file is absolute, then it must begin with a slash, giving two
    slashes between the hostname and file path as shown above.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'However, if the file to be edited is contained within the home directory of
    the remote user, a relative path may be used, which should not use a second slash.
    For example, if the absolute path to the file to be edited is `/users/remoteuser/relative/path/to/document`
    and the home directory for remoteuser is `/users/remoteuser`, then the following
    command will open that file:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[[](/wiki/Editing_remote_files_via_scp_in_vim?veaction=edit&section=1 "Edit
    section: Comments")]'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The [latest netrw.vim](http://www.drchip.org/astronaut/vim/index.html#NETRW)
    has several improvements. Later Windows ftp is handled, new protocols (rsync,
    cadaver, fetch), user fixup functions, etc.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: How can we store the password? It prompts for password each time we save!
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: I just got this working on Win2k w/ PuTTY's command line scp program [http://www.chiark.greenend.org.uk/~sgtatham/putty/](http://www.chiark.greenend.org.uk/~sgtatham/putty/)
  prefs: []
  type: TYPE_NORMAL
- en: copy pscp.exe into your path somewhere as scp.exe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: put "let g:netrw_cygwin= 0" in your $VIM/_vimrc
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: 'A possible gotcha:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you don''t put the path as specified (and noted) in the tip, you may get
    a non-intuitive error: not putting "//" between the hostname and the *absolute*
    path of the file you edit may cause vim to try to retrieve the file via rcp, as
    in'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: and result in an error. Also be careful that you put the absolute path of the
    file on the remote machine, not the path relative to the remote user's home directory.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Using relative paths is quite normal and well supported. Try
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Someone was asking if you could define the port for ftp
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: try that...just like any other url.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: I guess that would work.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: 'There is a nice way to save your passwords: Create .netrc under you home directory
    and put lines in, one per ftp machine, like this one:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: ftp remote edit is OK.
  prefs: []
  type: TYPE_NORMAL
- en: 'Run command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Then enter user name and password.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: If everything seems to be setup correctly but you're still unable to access
    a file with ftp. Check the permissions on your .netrc file. If .netrc is readable
    by anyone else besides the owner then ftp auto fails.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: 'Solved for me on windows with putty, in vimrc:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'and now run from wincommander:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Get the latest version to fix any problems you are having.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Was getting a bit annoyed with having to type the full path a remote user's
    file when I'm using scp and connecting as root on the remote end to edit a local
    user's file on the remote site and found out that I could do this and vim did
    "The Right Thing"
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'That was a lot nicer than having to bother with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Maybe not such a pain in that example, but if you''re working with an Ensim
    for Linux system, you''ve got everything chrooted which makes you have to type
    a ridiculously long path such as:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: 'To change the scp port, there''s several options. A quick one would be while
    you''ve opened vim to type this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'and then just type:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '--> I think a better solution is to use ssh-mechanisms, i.e. the ~/.ssh/config
    file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: I have discovered how to make passive mode ftp work. See [http://alecthegeek.github.io/blog/2007/02/06/handy-hack-how-to-use-vim-netrw-in-ftp-passive-mode/](http://alecthegeek.github.io/blog/2007/02/06/handy-hack-how-to-use-vim-netrw-in-ftp-passive-mode/)
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Try "C:\Program Files\Vim\vim71\gvim.exe" --remote-tab !.! in WinSCP to open
    each file in a separate tab in the same gVim instance. I also clicked the "External
    Editor Opens Multiple Files in one window" checkbox. There is another option --remote-silent
    that will suppress the first warning that there is no gVim already running, but
    you cannot use it with the --remote-tab option. I prefer to ack. the one warning
    rather than making sure I'm in a new tab before opening anything.----
  prefs: []
  type: TYPE_NORMAL
- en: --Preceding [unsigned](https://en.wikipedia.org/wiki/Signatures "wikipedia:Signatures")
    comment added by [161.88.255.139](/wiki/User:161.88.255.139 "User:161.88.255.139")
    (talk • [contribs](/wiki/Special:Contributions/161.88.255.139 "Special:Contributions/161.88.255.139"))
    20:49, 18 April 2008
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Use "C:\Program Files\Vim\vim71\gvim.exe" --remote-tab-silent !..! in WinSCP
    as External Editor works just fine.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: For windows I would suggest adding PuTTY to the system path (or not) and simply
    set the g:netrw_cygwin=0, and g:netrw_scp_cmd=<PATH TO PSCP> and use Pageant to
    manage your private keys; that way you don't have to keep your password in your
    vimrc file. Pageant provides the key to PSCP when it tries to connect.
  prefs: []
  type: TYPE_NORMAL
- en: --Preceding [unsigned](https://en.wikipedia.org/wiki/Signatures "wikipedia:Signatures")
    comment added by [216.145.54.7](/wiki/User:216.145.54.7 "User:216.145.54.7") (talk
    • [contribs](/wiki/Special:Contributions/216.145.54.7 "Special:Contributions/216.145.54.7"))
    11:56 UTC, 20 May 2009
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '[bcvi](http://sshmenu.sourceforge.net/articles/bcvi/) is a utility that works
    with SSH/SCP and the Vim NetRW plugin described above. When you log into a remote
    server with SSH+bcvi, you can `cd` into any directory then type `vi filename`
    and the gvim command will get launched back on your workstation, with the correct
    SCP URL to point to the file on the server. If that sounds confusing, the [bcvi
    article](http://sshmenu.sourceforge.net/articles/bcvi/) clarifies things with
    examples and pictures.'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
