- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-29 13:23:17'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-29 13:23:17'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Editing remote files via scp in vim | Vim Tips Wiki | Fandom
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过 scp 在 vim 中编辑远程文件 | Vim 技巧维基 | Fandom
- en: 来源：[https://vim.fandom.com/wiki/Editing_remote_files_via_scp_in_vim](https://vim.fandom.com/wiki/Editing_remote_files_via_scp_in_vim)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://vim.fandom.com/wiki/Editing_remote_files_via_scp_in_vim](https://vim.fandom.com/wiki/Editing_remote_files_via_scp_in_vim)
- en: '**Duplicate tip**'
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**重复的提示**'
- en: 'This tip is very similar to the following:'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 此提示与以下内容非常相似：
- en: These tips need to be merged – see the [merge guidelines](/wiki/Vim_Tips_Wiki:Merge_guidelines
    "Vim Tips Wiki:Merge guidelines").
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这些提示需要合并 - 请参阅[合并指南](/wiki/Vim_Tips_Wiki:Merge_guidelines "Vim 技巧维基：合并指南")。
- en: Vim 6.x has the netrw plugin installed as a standard plugin. It allows you to
    edit files via ftp, rcp, scp, or http. If your username differs on the remote
    host, however, and you're trying to use scp, things can get a little weird, particularly
    if you're not editing a document under your user tree.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: Vim 6.x 已安装 netrw 插件作为标准插件。它允许您通过 ftp、rcp、scp 或 http 编辑文件。然而，如果您在远程主机上的用户名不同，并且尝试使用
    scp，事情可能会变得有些奇怪，特别是如果您不是在用户树下编辑文档。
- en: 'To get around this, try opening the file as follows:'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要绕过这一点，请尝试以下方式打开文件：
- en: '[PRE0]'
  id: totrans-split-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Similarly, you can open the file from within Vim in a new buffer by running:'
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，您可以通过运行以下命令在 Vim 中的新缓冲区中打开文件：
- en: '[PRE1]'
  id: totrans-split-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'or in a new tab using:'
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 或者在新标签页中使用：
- en: '[PRE2]'
  id: totrans-split-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Notice two things:'
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 注意两件事情：
- en: '`remoteuser@`: This is used to specify the user name on the remote server.
    Without this, it will use the user''s name on the local computer. Often that will
    come from the $USERNAME environment variable. If the user has the same name on
    the local computer and the remote server, this part is unnecessary. If you''re
    unsure whether it''s needed, use it just to be safe.'
  id: totrans-split-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`remoteuser@`：这用于指定远程服务器上的用户名。如果没有这个，它将使用本地计算机上的用户名。通常这将来自 $USERNAME 环境变量。如果本地计算机和远程服务器上的用户名称相同，则此部分是不必要的。如果您不确定是否需要，请使用它以确保安全。'
- en: 'Double slashes ("`//`") between the hostname and file path: At least one slash
    is needed to separate the remote server''s hostname from the file path. That slash
    is not included in the path used to reference the file on the remote server. If
    the path to the file is absolute, then it must begin with a slash, giving two
    slashes between the hostname and file path as shown above.'
  id: totrans-split-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 主机名和文件路径之间的双斜杠("`//`")：至少需要一个斜杠来分隔远程服务器的主机名和文件路径。该斜杠不包括在用于引用远程服务器上文件的路径中。如果文件路径是绝对的，则必须以斜杠开头，给出主机名和文件路径之间的两个斜杠如上所示。
- en: 'However, if the file to be edited is contained within the home directory of
    the remote user, a relative path may be used, which should not use a second slash.
    For example, if the absolute path to the file to be edited is `/users/remoteuser/relative/path/to/document`
    and the home directory for remoteuser is `/users/remoteuser`, then the following
    command will open that file:'
  id: totrans-split-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然而，如果要编辑的文件位于远程用户的主目录中，可以使用相对路径，不应使用第二个斜杠。例如，如果要编辑的文件的绝对路径为 `/users/remoteuser/relative/path/to/document`，并且
    remoteuser 的主目录为 `/users/remoteuser`，则以下命令将打开该文件：
- en: '[PRE3]'
  id: totrans-split-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[[](/wiki/Editing_remote_files_via_scp_in_vim?veaction=edit&section=1 "Edit
    section: Comments")]'
  id: totrans-split-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[[](/wiki/Editing_remote_files_via_scp_in_vim?veaction=edit&section=1 "编辑部分：评论")]'
- en: The [latest netrw.vim](http://www.drchip.org/astronaut/vim/index.html#NETRW)
    has several improvements. Later Windows ftp is handled, new protocols (rsync,
    cadaver, fetch), user fixup functions, etc.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[latest netrw.vim](http://www.drchip.org/astronaut/vim/index.html#NETRW) 已有几个改进。支持后续
    Windows ftp，新协议（rsync、cadaver、fetch），用户修复函数等等。'
- en: '* * *'
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: How can we store the password? It prompts for password each time we save!
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们如何存储密码？它每次保存时都会提示！
- en: '* * *'
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: I just got this working on Win2k w/ PuTTY's command line scp program [http://www.chiark.greenend.org.uk/~sgtatham/putty/](http://www.chiark.greenend.org.uk/~sgtatham/putty/)
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我刚刚在 Win2k 上使用 PuTTY 的命令行 scp 程序 [http://www.chiark.greenend.org.uk/~sgtatham/putty/](http://www.chiark.greenend.org.uk/~sgtatham/putty/)
    得以运行。
- en: copy pscp.exe into your path somewhere as scp.exe
  id: totrans-split-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 pscp.exe 复制到您的路径中，命名为 scp.exe
- en: put "let g:netrw_cygwin= 0" in your $VIM/_vimrc
  id: totrans-split-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 "let g:netrw_cygwin= 0" 放入您的 $VIM/_vimrc 文件中
- en: '* * *'
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'A possible gotcha:'
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: 可能会出现的陷阱：
- en: 'If you don''t put the path as specified (and noted) in the tip, you may get
    a non-intuitive error: not putting "//" between the hostname and the *absolute*
    path of the file you edit may cause vim to try to retrieve the file via rcp, as
    in'
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未按照提示指定的路径（并注意），您可能会遇到非直观的错误：在编辑文件路径的绝对路径之间不放置 "//" 可能会导致 vim 尝试通过 rcp 检索文件，如下所示
- en: '[PRE4]'
  id: totrans-split-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: and result in an error. Also be careful that you put the absolute path of the
    file on the remote machine, not the path relative to the remote user's home directory.
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: 并导致错误。还要注意，要在远程机器上放置文件的绝对路径，而不是相对于远程用户主目录的路径。
- en: '* * *'
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Using relative paths is quite normal and well supported. Try
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
  zh: 使用相对路径是非常正常且得到良好支持的。尝试
- en: '[PRE5]'
  id: totrans-split-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '* * *'
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Someone was asking if you could define the port for ftp
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
  zh: 有人问你是否可以为ftp定义端口
- en: '[PRE6]'
  id: totrans-split-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: try that...just like any other url.
  id: totrans-split-40
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试那个……就像任何其他的网址一样。
- en: '[PRE7]'
  id: totrans-split-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: I guess that would work.
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我猜这样会起作用。
- en: '* * *'
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'There is a nice way to save your passwords: Create .netrc under you home directory
    and put lines in, one per ftp machine, like this one:'
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个保存密码的好方法：在你的主目录下创建`.netrc`文件，并放入一行，每个ftp机器一个，就像这样一个：
- en: '[PRE8]'
  id: totrans-split-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '* * *'
  id: totrans-split-46
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: ftp remote edit is OK.
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
  zh: ftp远程编辑没问题。
- en: 'Run command:'
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
  zh: 运行命令：
- en: '[PRE9]'
  id: totrans-split-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Then enter user name and password.
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
  zh: 然后输入用户名和密码。
- en: '* * *'
  id: totrans-split-51
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: If everything seems to be setup correctly but you're still unable to access
    a file with ftp. Check the permissions on your .netrc file. If .netrc is readable
    by anyone else besides the owner then ftp auto fails.
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切看起来设置正确，但你仍然无法通过ftp访问文件，请检查你的`.netrc`文件的权限。如果`.netrc`被除所有者外的其他人读取，则ftp自动失败。
- en: '[PRE10]'
  id: totrans-split-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '* * *'
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'Solved for me on windows with putty, in vimrc:'
  id: totrans-split-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在vimrc中为我解决了在putty中的问题：
- en: '[PRE11]'
  id: totrans-split-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'and now run from wincommander:'
  id: totrans-split-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在从wincommander运行：
- en: '[PRE12]'
  id: totrans-split-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '* * *'
  id: totrans-split-59
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Get the latest version to fix any problems you are having.
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
  zh: 获取最新版本来解决你遇到的任何问题。
- en: '* * *'
  id: totrans-split-61
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Was getting a bit annoyed with having to type the full path a remote user's
    file when I'm using scp and connecting as root on the remote end to edit a local
    user's file on the remote site and found out that I could do this and vim did
    "The Right Thing"
  id: totrans-split-62
  prefs: []
  type: TYPE_NORMAL
  zh: 当我在远程端以root身份使用scp连接并编辑远程站点上的本地用户文件时，因为不得不输入远程用户文件的完整路径而感到有点烦恼，我发现我可以这样做，而vim会“做正确的事情”。
- en: '[PRE13]'
  id: totrans-split-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'That was a lot nicer than having to bother with:'
  id: totrans-split-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这比起不得不麻烦：
- en: '[PRE14]'
  id: totrans-split-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Maybe not such a pain in that example, but if you''re working with an Ensim
    for Linux system, you''ve got everything chrooted which makes you have to type
    a ridiculously long path such as:'
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中可能并不是那么痛苦，但如果你正在使用Ensim for Linux系统，你得到的一切都被chroot，这使得你不得不输入一个非常长的路径，比如：
- en: '[PRE15]'
  id: totrans-split-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '* * *'
  id: totrans-split-68
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'To change the scp port, there''s several options. A quick one would be while
    you''ve opened vim to type this:'
  id: totrans-split-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改scp端口，有几个选项。一个快速的方法是当你打开vim时输入这个：
- en: '[PRE16]'
  id: totrans-split-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'and then just type:'
  id: totrans-split-71
  prefs: []
  type: TYPE_NORMAL
  zh: 然后只需输入：
- en: '[PRE17]'
  id: totrans-split-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '--> I think a better solution is to use ssh-mechanisms, i.e. the ~/.ssh/config
    file:'
  id: totrans-split-73
  prefs: []
  type: TYPE_NORMAL
  zh: --> 我认为一个更好的解决方案是使用ssh机制，即`~/.ssh/config`文件：
- en: '[PRE18]'
  id: totrans-split-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '* * *'
  id: totrans-split-75
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: I have discovered how to make passive mode ftp work. See [http://alecthegeek.github.io/blog/2007/02/06/handy-hack-how-to-use-vim-netrw-in-ftp-passive-mode/](http://alecthegeek.github.io/blog/2007/02/06/handy-hack-how-to-use-vim-netrw-in-ftp-passive-mode/)
  id: totrans-split-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经发现如何使被动模式的ftp工作。参见[http://alecthegeek.github.io/blog/2007/02/06/handy-hack-how-to-use-vim-netrw-in-ftp-passive-mode/](http://alecthegeek.github.io/blog/2007/02/06/handy-hack-how-to-use-vim-netrw-in-ftp-passive-mode/)
- en: '* * *'
  id: totrans-split-77
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Try "C:\Program Files\Vim\vim71\gvim.exe" --remote-tab !.! in WinSCP to open
    each file in a separate tab in the same gVim instance. I also clicked the "External
    Editor Opens Multiple Files in one window" checkbox. There is another option --remote-silent
    that will suppress the first warning that there is no gVim already running, but
    you cannot use it with the --remote-tab option. I prefer to ack. the one warning
    rather than making sure I'm in a new tab before opening anything.----
  id: totrans-split-78
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试在WinSCP中使用`"C:\Program Files\Vim\vim71\gvim.exe" --remote-tab !.!`以在同一个gVim实例的不同标签中打开每个文件。我还勾选了“外部编辑器在一个窗口中打开多个文件”复选框。还有另一个选项`--remote-silent`，它将抑制第一个警告，即没有已经运行的gVim，但你不能与`--remote-tab`选项一起使用它。我更喜欢确保在打开任何东西之前我在新标签页中而不是消除一个警告。----
- en: --Preceding [unsigned](https://en.wikipedia.org/wiki/Signatures "wikipedia:Signatures")
    comment added by [161.88.255.139](/wiki/User:161.88.255.139 "User:161.88.255.139")
    (talk • [contribs](/wiki/Special:Contributions/161.88.255.139 "Special:Contributions/161.88.255.139"))
    20:49, 18 April 2008
  id: totrans-split-79
  prefs: []
  type: TYPE_NORMAL
  zh: --前面的[未签名](https://en.wikipedia.org/wiki/Signatures "wikipedia:Signatures")评论由[161.88.255.139](/wiki/User:161.88.255.139
    "User:161.88.255.139")（讨论 • [贡献](/wiki/Special:Contributions/161.88.255.139 "Special:Contributions/161.88.255.139")）于2008年4月18日20:49添加。
- en: '* * *'
  id: totrans-split-80
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Use "C:\Program Files\Vim\vim71\gvim.exe" --remote-tab-silent !..! in WinSCP
    as External Editor works just fine.
  id: totrans-split-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在WinSCP中使用`"C:\Program Files\Vim\vim71\gvim.exe" --remote-tab-silent !..!`作为外部编辑器完全可行。
- en: '* * *'
  id: totrans-split-82
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: For windows I would suggest adding PuTTY to the system path (or not) and simply
    set the g:netrw_cygwin=0, and g:netrw_scp_cmd=<PATH TO PSCP> and use Pageant to
    manage your private keys; that way you don't have to keep your password in your
    vimrc file. Pageant provides the key to PSCP when it tries to connect.
  id: totrans-split-83
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Windows用户，我建议将PuTTY添加到系统路径（或不添加），并简单设置g:netrw_cygwin=0，g:netrw_scp_cmd=<PATH
    TO PSCP>，并使用Pageant管理您的私钥；这样您就不必将密码保存在vimrc文件中。当PSCP尝试连接时，Pageant会提供密钥给PSCP。
- en: --Preceding [unsigned](https://en.wikipedia.org/wiki/Signatures "wikipedia:Signatures")
    comment added by [216.145.54.7](/wiki/User:216.145.54.7 "User:216.145.54.7") (talk
    • [contribs](/wiki/Special:Contributions/216.145.54.7 "Special:Contributions/216.145.54.7"))
    11:56 UTC, 20 May 2009
  id: totrans-split-84
  prefs: []
  type: TYPE_NORMAL
  zh: -- 前 [未签名](https://zh.wikipedia.org/wiki/%E7%94%A8%E6%88%B7%E8%A8%8A%E6%81%AF)
    评论由 [216.145.54.7](/wiki/User:216.145.54.7 "User:216.145.54.7")（讨论 • [贡献](/wiki/Special:Contributions/216.145.54.7
    "Special:Contributions/216.145.54.7")）添加，UTC时间 2009年5月20日 11:56
- en: '* * *'
  id: totrans-split-85
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[bcvi](http://sshmenu.sourceforge.net/articles/bcvi/) is a utility that works
    with SSH/SCP and the Vim NetRW plugin described above. When you log into a remote
    server with SSH+bcvi, you can `cd` into any directory then type `vi filename`
    and the gvim command will get launched back on your workstation, with the correct
    SCP URL to point to the file on the server. If that sounds confusing, the [bcvi
    article](http://sshmenu.sourceforge.net/articles/bcvi/) clarifies things with
    examples and pictures.'
  id: totrans-split-86
  prefs: []
  type: TYPE_NORMAL
  zh: '[bcvi](http://sshmenu.sourceforge.net/articles/bcvi/) 是一个与SSH/SCP和上述Vim NetRW插件一起工作的实用程序。当您使用SSH+bcvi登录远程服务器时，您可以`cd`进入任何目录，然后输入`vi
    filename`，gvim命令将在您的工作站上启动，并使用正确的SCP URL指向服务器上的文件。如果这听起来有点混乱，[bcvi文章](http://sshmenu.sourceforge.net/articles/bcvi/)通过示例和图片来阐明。'
- en: '* * *'
  id: totrans-split-87
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
