- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-29 13:18:29'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: What is a vector database?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://blog.meilisearch.com/what-is-a-vector-database/](https://blog.meilisearch.com/what-is-a-vector-database/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Understanding vector databases
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Vector databases are the go-to for performing searches based on similarity,
    which plays a key role in **AI-driven applications** like recommending your next
    favorite movie, identifying someone in a photo, or digging up texts that resonate
    with your search. At the core of these applications are **vector embeddings**,
    complex data forms that exceed the storage and retrieval capabilities of traditional
    databases.
  prefs: []
  type: TYPE_NORMAL
- en: The role of vector embeddings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Vector embeddings](https://blog.meilisearch.com/what-are-vector-embeddings/?utm_source=blog&utm_medium=vector-db-content&utm_campaign=vector-search)
    are a way to **transform complex non-numeric data**, such as words, sentences,
    or even images, **into a numerical format** while preserving their semantic **meaning**
    and relationships.'
  prefs: []
  type: TYPE_NORMAL
- en: Embeddings are **multidimensional objects** generated by machine learning models
    where each dimension represents a different feature or aspect of the data. To
    properly capture the data complexity, vectors can range from dozens to thousands
    of dimensions, depending on the size and nature of the data.
  prefs: []
  type: TYPE_NORMAL
- en: Vector databases vs traditional databases
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This complexity makes **traditional databases**–designed to store structured
    data in tables– unfit to handle embeddings. The volume and complexity of these
    vectors, each potentially containing thousands of dimensions, challenge the row-and-column
    format. This mismatch necessitates alternative storage and retrieval solutions
    tailored to the requirements of vector data.
  prefs: []
  type: TYPE_NORMAL
- en: This is where **vector databases** like [Meilisearch](https://www.meilisearch.com/?utm_source=blog&utm_medium=vector-db-content&utm_campaign=vector-search)
    come into play. They are designed to address the unique demands of vector embeddings,
    facilitating efficient storage and retrieval of the information they contain.
    In particular, they enable performing **similarity searches**, also called semantic
    searches, which are central to leveraging embeddings effectively.
  prefs: []
  type: TYPE_NORMAL
- en: In other words, vector databases allow us to interact easily and efficiently
    with vector embeddings, making them essential for applications that require semantic
    understanding and similarity matching.
  prefs: []
  type: TYPE_NORMAL
- en: What is similarity search?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If we think of **vector embeddings** as stars in vast cosmic constellations,
    similarity search, or **vector search**, would be like trying to **find the nearest**
    stars to your current position in space. In practical terms, this means finding
    the most relevant documents, images, or products based on your search query.
  prefs: []
  type: TYPE_NORMAL
- en: To do so, you need to **measure the distance** between the **query** **vector**
    and other **vectors in the database**, typically using methods like [cosine similarity](https://en.wikipedia.org/wiki/Cosine_similarity?ref=blog.meilisearch.com)
    or [Euclidean distance](https://en.wikipedia.org/wiki/Euclidean_distance?ref=blog.meilisearch.com).
    These are just different techniques for determining how close or distant other
    data points are from your query, much like gauging the **proximity** of stars
    in the night sky.
  prefs: []
  type: TYPE_NORMAL
- en: The role of machine learning models
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: However, the **success** of this search isn't just about mathematical calculations;
    it's highly dependent on the **machine learning model** used to generate and query
    the vectors. Each vector's meaning is intrinsically tied to the semantic space
    of the model that created it. Consistency here is crucial, ensuring that all vectors
    'speak the same language' and adhere to the same contextual rules, making searches
    **meaningful and accurate**. That is to say, to achieve relevant search results,
    it's essential to **use the same model** for generating and querying the embeddings.
  prefs: []
  type: TYPE_NORMAL
- en: '**Similarity search** is where vector databases like **Meilisearch** truly
    shine, as they allow for a wide array of applications such as face recognition,
    movie recommendations, and personalized content discovery. By allowing users to
    store vector embeddings alongside their documents, Meilisearch not only facilitates
    similarity searches but also introduces **hybrid search** capabilities, expanding
    its potential applications. Through the integration of models from various AI
    solution providers, Meilisearch enables users to **refine vector embeddings**
    to better suit their specific needs.'
  prefs: []
  type: TYPE_NORMAL
- en: In summary, the ability of these databases to analyze and compare complex data
    patterns allows for highly relevant and accurate results across diverse fields,
    enhancing user experiences and operational efficiency.
  prefs: []
  type: TYPE_NORMAL
- en: 'AI Search is coming to Meilisearch Cloud, join the waitlist:'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '[Meilisearch](https://meilisearch.com/?utm_source=blog&utm_medium=vector-db-content&utm_campaign=vector-search)
    is an open-source search engine that not only provides state-of-the-art experiences
    for end users but also a simple and intuitive developer experience.'
  prefs: []
  type: TYPE_NORMAL
- en: A long-time actor in keyword search, Meilisearch enables users to address search
    use cases building upon AI-powered solutions, not only supporting vector search
    as a vector store but also by providing hybrid search. This hybrid approach blends
    full-text search with semantic search, enhancing both the accuracy and comprehensiveness
    of search results.
  prefs: []
  type: TYPE_NORMAL
- en: For more things Meilisearch, you can join the community on [Discord](https://discord.meilisearch.com/?ref=blog.meilisearch.com)
    or subscribe to the [newsletter](https://meilisearch.us2.list-manage.com/subscribe?u=27870f7b71c908a8b359599fb&id=79582d828e&utm_source=blog&utm_medium=vector-db-content&utm_campaign=vector-search).
    You can learn more about the product by checking out the [roadmap](https://roadmap.meilisearch.com/?utm_source=blog&utm_medium=vector-db-content&utm_campaign=vector-search)
    and participating in [product discussions](https://github.com/orgs/meilisearch/discussions?utm_source=blog&utm_medium=vector-db-content&utm_campaign=vector-search).
  prefs: []
  type: TYPE_NORMAL
