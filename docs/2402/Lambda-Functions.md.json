["```\n    db = FeGraph.new()\n    ```", "```\n    FeGraph.set(db, \"http://foo.bar.com\")\n    FeGraph.set(db, \"http://foo.baz.com\")\n    ```", "```\n    FeGraph.dump_db(db) |> IO.puts()\n    ```", "```\nuse std::sync::Mutex;\nuse oxigraph::store::Store;\nuse rustler::resource::ResourceArc;\nuse rustler::OwnedBinary;\nuse rustler::{Env, Term};\n\nstruct MyGraph { store: Mutex<Store> }\n\ntype GraphArc = ResourceArc<MyGraph>;\n```", "```\nfn on_load(env: Env, _info: Term) -> bool {\n    rustler::resource!(MyGraph, env);\n    true\n}\n\nrustler::init!(\"Elixir.FeGraph\", [], load = on_load);\n```", "```\n#[rustler::nif]\nfn new() -> GraphArc {\n    ResourceArc::new(\n        MyGraph {\n            store: Mutex::new(Store::new().unwrap()),\n        }\n    )\n}\n```", "```\ndefmodule FeGraph do\n  use Rustler, otp_app: :myapp, crate: \"fegraph\"\n\n  def new(), do: :erlang.nif_error(:nif_not_loaded)\nend\n```", "```\niex(1)> FeGraph.new\n#Reference<0.2659174309.2607677441.115195>\n```", "```\n#[rustler::nif]\nfn set(state: GraphArc, iri: &str) -> GraphArc {\n    let store = state.store.lock().unwrap();\n\n    let ex = NamedNode::new(iri).unwrap();\n    let quad =\n        Quad::new(ex.clone(), ex.clone(), ex.clone(), GraphName::DefaultGraph);\n    (*store).insert(&quad).unwrap();\n\n    drop(store);\n\n    state\n}\n```", "```\n#[rustler::nif]\nfn dump_db(state: GraphArc) -> OwnedBinary {\n    let store = state.store.lock().unwrap();\n\n    let mut buffer = Vec::new();\n    (*store)\n        .dump_graph(\n            &mut buffer,\n            GraphFormat::Turtle,\n            GraphNameRef::DefaultGraph,\n        )\n        .unwrap();\n\n    let mut result = OwnedBinary::new(buffer.len()).unwrap();\n    result.as_mut_slice().copy_from_slice(&buffer);\n\n    result\n}\n```", "```\niex(1)> db = FeGraph.new\n#Reference<0.2749498138.3684302852.140448>\niex(2)> FeGraph.set(db, \"http://foo.com\")\n#Reference<0.2749498138.3684302852.140448>\niex(3)> FeGraph.dump_db(db)\n\"<http://foo.com> <http://foo.com> <http://foo.com> .\\n\"\n```"]