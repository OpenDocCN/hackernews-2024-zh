- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-27 14:39:06'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:39:06
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: OKRs are Bullshit - by drmorr
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OKRs是胡说八道 - 由drmorr
- en: 来源：[https://blog.appliedcomputing.io/p/okrs-are-bullshit](https://blog.appliedcomputing.io/p/okrs-are-bullshit)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://blog.appliedcomputing.io/p/okrs-are-bullshit](https://blog.appliedcomputing.io/p/okrs-are-bullshit)
- en: It's a new year, time for a new rant! And yes, before you ask, the post title
    is deliberately provocative. You might say this is my ploy to get more paid subscribers,
    because only paid subscribers can leave comments and I expect that the title alone
    will make many of you want to comment. 😝
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 又是新的一年，是时候进行新的抱怨了！是的，在你问之前，这篇文章的标题故意挑衅性地写的。你可能会说这是我获取更多付费订阅者的策略，因为只有付费订阅者可以留下评论，而我预计仅凭标题就会让你们许多人想要评论。😝
- en: 'Anyways, I expect that many of my readers just finished up their quarterly
    (and/or yearly) planning cycle, so I thought this would be a good time to remind
    you all that the process we''ve all settled on in the tech industry is nonsense:
    I am, of course, referring to the [Objectives and Key Results](https://en.wikipedia.org/wiki/Objectives_and_key_results)
    framework. So let''s talk about OKRs, what they are and where they come from,
    and why they''re a terrible idea.'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，我预计我的许多读者刚刚完成他们的季度（和/或年度）规划周期，所以我觉得现在是提醒大家的好时机，我们在技术行业所制定的过程是无稽之谈：当然，我指的是[目标与关键结果](https://en.wikipedia.org/wiki/Objectives_and_key_results)框架。所以让我们来谈谈OKRs，它们是什么以及它们的来源，以及为什么它们是一个糟糕的想法。
- en: The OKR framework was originally developed by Google back in—
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: OKR框架最初由谷歌开发，回溯至——
- en: Wait a minute, I just read the Wikipedia article I linked in the previous section,
    and it turns out I'm starting this off not only by being rude, but also spreading
    misinformation! How could I. Let's try this again.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 等等，我刚刚阅读了我在前一节中链接的维基百科文章，结果我开始时不仅失礼，还在散播错误信息！我怎么能这样。让我们再试一次。
- en: OKRs were introduced by Andrew Grove at Intel, all the way back in the 1970s!
    He wrote about them in a book on management in 1983, and later they were introduced
    at Google, I guess sometime in the early 2000s. And while Google didn't *invent*
    the concept of OKRs, Google certainly helped popularize them. Now it doesn't matter
    where you go, every company has OKRs. The term has become like "Kleenex"—it's
    used ubiquitously to mean "planning", regardless of how similar or not the planning
    process actually is to the original OKR framework.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[OKRs](https://blog.appliedcomputing.io/p/okrs-are-bullshit)最早由安德鲁·格罗夫在上世纪70年代在英特尔引入！他在1983年的管理书中写到了它们，后来它们被引入谷歌，大概是在21世纪初期吧。尽管谷歌并没有*发明*OKR的概念，但谷歌无疑帮助推广了它们。现在无论你去哪里，每家公司都有OKRs。这个术语已经像“Kleenex”一样普遍使用，意思是“规划”，无论规划过程是否与最初的OKR框架相似。'
- en: So with the backstory out of the way, what *are* OKRs? In short, they're a way
    of goal-setting and then measuring your progress towards the goals. The "Objective"
    is your goal, and the "Key Results" are the things you need to accomplish to know
    whether you've hit your goal. Of course because we want to be data-driven organizations,
    the key results need to be measurable and metrics-based.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 所以背景故事说完了，那么OKRs到底是什么呢？简单来说，它们是一种设定目标然后衡量你向这些目标进展的方式。“目标”是你的目标，“关键结果”是你需要实现的事情，以判断你是否达到了目标。当然，因为我们希望成为数据驱动的组织，关键结果需要是可衡量的和基于指标的。
- en: Typically, OKRs are supposed to be cascading. In other words, the CEO (or whoever's
    in charge) sets some OKRs for the organization as a whole, and then the individual
    business units set OKRs that support the global OKRs, and then each team sets
    OKRs that support the business unit's, and (potentially) each team member sets
    their own personal OKRs. At each level, you should have between one and three
    objectives, which are short statements about "what" you want to accomplish in
    the next quarter, or year, or whatever, and each objective should have between
    one and three key results which indicate the success or failure of the objective.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 典型情况下，OKRs应该是层层递进的。换句话说，CEO（或者是负责人）为整个组织设定一些OKRs，然后各个业务单位设定支持全局OKRs的OKRs，然后每个团队设定支持业务单位的OKRs，甚至（可能）每个团队成员设定自己的个人OKRs。在每个层级，你应该有一个到三个目标，这些目标是关于下一个季度、年度或其他时段你想要实现的“什么”的简短陈述，每个目标应该有一个到三个关键结果，这些结果指示了目标的成功或失败。
- en: 'In addition to the core framework, there are a few guiding principles that
    organizations should use when setting OKRs. Most (in)famously, you should set
    your OKRs so you only achieve 70% of them. If you''re consistently hitting 100%
    on your goals, that means you''re not being ambitious enough. Secondly, you should
    avoid "binary" OKRs, that is, OKRs whose only metric is "I did the thing" or "I
    didn''t do the thing". Thirdly, OKRs aren''t supposed to encompass all of your
    organization''s activities: normal, day-to-day maintenance work, on-call support,
    etc. are "extra" things that don''t get captured by your OKRs. And lastly, the
    only way to learn OKRs is by doing OKRs.'
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 除了核心框架之外，组织在设定OKR时应该遵循一些指导原则。最（臭名昭著）的是，你应该设定OKR，使你只能完成其中的70%。如果你一直达到100%的目标，那意味着你的雄心不够。其次，你应该避免“二元”OKR，即仅有“我做了这件事”或“我没有做这件事”作为衡量标准的OKR。第三，OKR不应该涵盖组织的所有活动：正常的日常维护工作、现场支持等是不被你的OKR所捕捉的“额外”事务。最后，学习OKR的唯一方法就是通过实践OKR。
- en: 'Now, some of you are all prepared to whip out your credit cards and subscribe
    so you that you can angrily tell me that I''ve got it all wrong and that I don''t
    understand the framework at all. That''s fine—I''m happy to have you as a subscriber,
    but I think gets at my fundamental complaint about the OKR framework: if the "only
    way to learn OKRs is by doing OKRs", then by definition everybody is gonna do
    OKRs differently, which means that in practice the framework becomes whatever
    you want it to become. But then, when anybody comes out with *any* criticism of
    the OKR process, the response is always, in classic "[no true Scotsman](https://en.wikipedia.org/wiki/No_true_Scotsman)"
    style, "well, you''re just not doing OKRs correctly." But I guess my question
    is: if nobody in the industry does OKRs "correctly", why are we still trying to
    do them at all?'
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，有些人已经准备好掏出信用卡并订阅，这样你就可以愤怒地告诉我，我完全错了，根本不理解这个框架。这没问题——我很高兴你成为了我的订阅者，但我认为这触及了我对OKR框架的根本抱怨：如果“学习OKR的唯一方法是通过实践OKR”，那么根据定义，每个人都会以不同的方式实施OKR，这意味着在实践中，该框架变成了你想要的任何东西。但当有人对OKR流程提出*任何*批评时，经典的“[无真正苏格兰人](https://en.wikipedia.org/wiki/No_true_Scotsman)”风格总是回应说：“嗯，你只是没有正确地执行OKR。”但我想问的是：如果行业内没有人正确地执行OKR，我们为什么还要试图去执行它们呢？
- en: 'Now look: I''m not arguing that we shouldn''t have goals. I''m not arguing
    that we shouldn''t make plans and try to hold ourselves accountable to those plans.
    We absolutely should! Engineers like to rage against process, bureaucracy, and
    friction, but I''ll be the first to tell you that—especially in larger organizations—*some*
    process is important. My only point in this article is to hopefully convince you
    that OKRs ain''t it.'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 现在看：我并不是在争论我们不应该设定目标。我也不是在争论我们不应该制定计划并努力对计划负责。我们当然应该！工程师们喜欢对抗流程、官僚主义和摩擦，但我将是第一个告诉你的人——尤其是在较大的组织中——*一些*流程是重要的。我在本文中唯一的观点是希望说服你：OKR不是解决问题的方法。
- en: So let's talk about the problems with OKRs. I want to preface this section by
    saying that my background is an infra engineer, and a lot of the points I make
    come from that perspective. But I've heard enough similar complaints from product
    people that I think my objections are valid in that setting as well.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 所以让我们谈谈OKR的问题。我想在这一部分之前说，我的背景是基础设施工程师，我很多观点都来自于这个角度。但我从产品人士那里听到了足够多类似的抱怨，我认为我的反对意见在那个环境中也是有效的。
- en: First of all, let's start with the frankly ridiculous claim that you should
    target 70% completion for your OKRs. Setting aside the fact that this is very
    nebulous (should you complete 70% of your goals to 100%? Or should you complete
    100% of your goals at 70%?) consider that much of the work we do doesn't actually
    have any value unless you do it *all the way*. Now maybe if your key result was
    "increase clickthrough rate by 100%" and you only increased it by 70%, you could
    argue that is still pretty good. But if your key result is "migrate 100% of users
    to the new system" and you only migrate 70%, guess what? Now you're stuck maintaining
    two systems in perpetuity. Fortunately, I haven't heard people espouse this tenet
    as much lately—I think people are realizing that it incentivizes the wrong things.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们先从一个非常荒谬的说法开始，即你应该将你的 OKR 的完成目标定为70%。撇开这个非常模糊的事实（你应该将你的目标完成到100%还是到70%？），考虑到我们所做的大部分工作实际上没有任何价值，除非你做到*完全*。现在也许如果你的关键结果是“将点击率提高100%”，而你只提高了70%，你可以争辩说这仍然不错。但如果你的关键结果是“将100%的用户迁移到新系统”，而你只迁移了70%，猜猜看？现在你要永远维护两个系统了。幸运的是，最近我没有听到人们这样宣扬这一原则了——我想人们正在意识到这激励了错误的事情。
- en: 'But this leads us straight into the second problem with OKRs: actually measuring
    things. Some people might argue that the migration example I used above is actually
    bad because it''s a binary OKR—either you migrated or you didn''t. This leads
    to all kinds of contortions to develop a metric that still says "I migrated the
    thing" but isn''t binary. Maybe you interview your customers and you want 100%
    of them to be happy on the new thing, but you''ll count it as a success if only
    70% of them are happy. Or maybe you measure the number of outages caused by the
    new thing, and your goal is "zero outages".'
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 但这直接导致了 OKR 的第二个问题：实际上测量事物。有些人可能会争论，我上面使用的迁移示例实际上是不好的，因为它是一个二元的 OKR——要么你迁移了，要么你没有。这导致了各种各样的扭曲，以开发一个仍然表明“我迁移了这件事”的度量标准，但不是二元的。也许你会采访你的客户，你希望所有客户对新事物都感到满意，但如果只有70%的客户感到满意，你也会将其视为成功。或者也许你测量了新事物引起的故障次数，你的目标是“零故障”。
- en: 'However, there are additional problems here: one is that you just invented
    a bunch of extra work for yourself, because chances are whatever metric you concocted
    to measure your migration success didn''t exist before: so you have to go build
    some tooling to collect the metric before you can even start working on the actual
    thing you care about—tooling and metrics that will probably languish and be forgotten
    about in a quarter or two after priorities change. Another is that often, the
    metrics you invent have no relation to the work you''re doing—the happiness (or
    not) of your users probably has between five and zero percent to do with how good
    a job you did on the migration, and is 90% related to whether or not the new system
    was well-designed by somebody else who probably isn''t even at the company anymore.
    A third is that some of these metrics are really hard to reason about. For example,
    in the "number of outages" metric, your target value is 0, which means that if
    you have *any outages at all* your score for that key result is undefined. You
    have to divide the number of outages you had by zero to get your percentage. Congratulations!
    Your metric value is whatever you want it to be!'
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，这里还有额外的问题：一个是你只是给自己增加了大量额外的工作，因为很可能你凭空捏造的衡量迁移成功的指标在之前根本不存在：所以在你能开始真正关心的实际事情之前，你必须构建一些工具来收集这些指标——而这些工具和指标可能会在优先级变化后的一个季度或两个季度内被遗忘。另一个问题是，你发明的指标通常与你正在做的工作没有关系——你的用户的满意度（或不满意）可能与你在迁移工作上做得有多好关系很小，90%取决于新系统是否被其他人设计得很好，而这些人很可能已经不在公司了。第三个问题是，有些指标真的很难推理。例如，在“故障次数”指标中，你的目标值是0，这意味着如果你有*任何故障*，那么你的这个关键结果的得分是未定义的。你必须将你遇到的故障次数除以零来计算你的百分比。恭喜！你的指标值可以是任何你想要的值！
- en: 'I think the biggest problem with OKR''s laser focus on measurement, though,
    is that *not everything should be measured*, even if you can! Being "data-driven"
    is a huge buzzword in the industry. We want to improve, we want to see how much
    we improved by, and then we want to tell the world how much we improved by so
    our stock price goes up. But there''s a tremendous amount of work that shouldn''t
    or can''t be measured, or is very easy to misinterpret even if you *can* measure
    it. I think this article by Richard Marmorstein sums it up really nicely: [be
    good-argument driven, not data-driven](https://twitchard.github.io/posts/2022-08-26-metrics-schmetrics.html).
    Being data-driven requires a) that you have the metrics, b) that you know enough
    statistics to interpret the metrics correctly, and c) that you don''t care about
    anything that can''t be measured.'
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为 OKR 过于注重测量的最大问题是，即使你能够测量，*并不是所有的事情都应该被衡量*！“数据驱动”是行业中的一个巨大流行词。我们想要进步，我们想要看到我们进步了多少，然后我们想要告诉全世界我们进步了多少，这样我们的股票价格就会上涨。但是有大量的工作是不应该或不能被衡量的，或者即使你*可以*衡量，也很容易被误解。我认为
    Richard Marmorstein 在这篇文章中非常好地总结了这一点：[以良好的论证为驱动，而不是数据驱动](https://twitchard.github.io/posts/2022-08-26-metrics-schmetrics.html)。要成为数据驱动的，需要
    a) 你有这些度量标准，b) 你知道足够的统计知识来正确解释这些度量标准，c) 你不关心任何无法被衡量的事情。
- en: The last complaint I have about OKRs comes from their cascading nature. As an
    industry, we mostly rejected waterfall-style development a long time ago, and
    then promptly introduced a planning framework that encourages waterfall-style
    development. There's no room in the OKR framework for research or experimentation
    (because how do you measure research?), so you have to know what you want to do
    in excruciating detail at the point when you write down your OKR, because otherwise
    something might come up that prevents you from completing (or even getting 70%)
    on your OKR. But raise your hand if you've ever written down all your OKRs and
    then two months into the cycle, something comes up that obsoletes all of your
    goals.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我对 OKR 的最后一个抱怨来自它们的级联性质。作为一个行业，我们在很久以前大部分都摒弃了瀑布式开发，然后迅速引入了一种鼓励瀑布式开发的规划框架。在 OKR
    框架中没有空间进行研究或实验（因为你如何衡量研究？），所以你必须在写下你的 OKR 时就清楚地知道你想要做什么，否则可能会出现阻止你完成（甚至只完成 70%）你的
    OKR 的事情。但如果你曾经写下了所有的 OKR，然后在周期的两个月内，出现了一些事情使得所有的目标都过时，请举手。
- en: '"But wait, you''re just doing it wrong!" I can hear you exclaim from here.
    "You''re supposed to be agile! OKRs can change! You should react to new information!"
    Right, yep, I''ve heard that one before. But I can guarantee you that come performance
    review time, the people who decide whether you''re being successful or not as
    an engineer are going to grade you on your original goals for the year, and if
    you have to change them it''s going to be viewed as a failure. I mean, maybe this
    doesn''t happen *everywhere*, but it will require a significant amount of cultural
    backpressure to prevent this outcome. So maybe just let''s use a planning process
    that actually has room for change built in, instead of trying to shoehorn in one
    that just doesn''t work.'
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: “但等等，你做错了！”我听到你从这里大声呼喊。“你应该是敏捷的！OKR 可以改变！你应该对新信息做出反应！” 是的，没错，我以前听过这个说法。但是我可以向你保证，在绩效评估的时候，决定你是否作为工程师成功的人们将会根据你一年初设定的原始目标来评分，如果你必须更改它们，那将被视为失败。我是说，也许这并不发生在*所有地方*，但是这将需要相当大的文化反压力来防止这种结果。所以也许让我们使用一个实际上已经为变更预留了空间的规划过程，而不是试图把一个根本行不通的过程硬塞进去吧。
- en: You know what I didn't talk about at all in this blog post? Spreadsheets. Nowhere
    in the OKR framework does it say that you should list all your objectives and
    key results in a spreadsheet, and then check in on the metrics every month by
    updating some values in the spreadsheet. Nobody ever said that you should have
    a JIRA epic for your objectives, and then track all your tickets by which OKR
    they belong to. Nobody ever said anything about "internal OKRs" versus "external
    OKRs" or roadmaps or planning meetings or… the list goes on.
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这篇博客文章完全没有提到什么？电子表格。OKR 框架中并没有规定你应该在电子表格中列出所有目标和关键结果，然后每个月通过更新电子表格中的一些数值来检查指标。也从来没有人说过，你应该为你的目标设定一个
    JIRA 史诗，然后通过它来跟踪所有的工作票据。也从来没有人提到过“内部 OKR”与“外部 OKR”，或者路线图或规划会议或者……列表还在继续。
- en: And yet, my prediction is that every single manager in existence, as soon as
    they hear “OKR” will immediately think "spreadsheet". And I think that's a problem
    too. See, as an industry, we've conflated "OKRs" with "planning", when I don't
    think they should be conflated at all. Even if you brush aside all the problems
    I pointed out with OKRs in the previous section, and go back to the original (or
    at least, "original" as "made popular by Google") definition, the purpose of OKRs
    is to be aspirational. That's where the whole 70% thing comes from in the first
    place. We want to set hard goals that will inspire people to do their best work,
    and then recognize that the goals were hard and not penalize people for failing
    to meet them 100% of the way.
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我的预测是，只要他们听到“OKR”，每一个现存的管理者都会立刻想到“电子表格”。我认为这也是一个问题。你看，作为一个行业，我们已经把“OKR”与“计划”混为一谈，而我认为它们根本不应该混为一谈。即使你把我在前一节指出的所有问题都抛在脑后，回到最初的（或者至少是“由谷歌推广”的“最初”）定义，OKR的目的是雄心勃勃的。这也是第一次提出70%这个概念的来源。我们希望设定艰难的目标，激励人们做出最好的工作，然后意识到这些目标很难，不会因为未能完全达到它们的百分之百而惩罚人们。
- en: 'And honestly? When taken through that lens, I love OKRs! We *should* be trying
    to do hard things, and we shouldn''t be punishing folks when they fail at them.
    And, also: we *should* have a plan, and we should understand the work that we''re
    going to be doing over the next few weeks-to-months, and *maybe* we need a spreadsheet
    or something to help manage that plan. But please, for the love of god, let''s
    stop trying to shove metrics into our goal-setting framework, let''s stop shoving
    our goal-setting framework into our quarterly planning process, and let''s stop
    spending months on end planning only to have the whole thing upended two days
    into the cycle.'
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 老实说？从这个角度看，我喜欢OKR！我们*应该*尝试做困难的事情，当他们失败时，我们不应该惩罚他们。而且，还有：我们*应该*有一个计划，我们应该了解接下来几周到几个月内将要进行的工作，*也许*我们需要一张电子表格或其他东西来帮助管理这个计划。但是，亲爱的上帝，请让我们停止试图把指标塞进我们的目标设定框架中，让我们停止把我们的目标设定框架塞进我们的季度计划过程中，让我们停止花费数月时间规划，最后在周期的第二天就完全打乱了整个计划。
- en: Anyways, that's all I've got for now. I promise next week I'll be less inflammatory.
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，这就是我现在能提供的全部了。我保证下周我会少一些激进。
- en: Thanks for reading,
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 谢谢你的阅读，
- en: ~drmorr
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: ~drmorr
