- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:45:15'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:45:15'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Chris''s Wiki :: blog/unix/XOffscreenIconMistake'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'Chris''s Wiki :: blog/unix/XOffscreenIconMistake'
- en: 来源：[https://utcc.utoronto.ca/~cks/space/blog/unix/XOffscreenIconMistake](https://utcc.utoronto.ca/~cks/space/blog/unix/XOffscreenIconMistake)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://utcc.utoronto.ca/~cks/space/blog/unix/XOffscreenIconMistake](https://utcc.utoronto.ca/~cks/space/blog/unix/XOffscreenIconMistake)
- en: One of the somewhat odd things about my old fashioned [X Window System](https://en.wikipedia.org/wiki/X_Window_System)
    environment is that when I 'iconify' or 'minimize' a window, it ([mostly](/~cks/space/blog/sysadmin/HowIUseFvwmIconMan))
    winds up as an actual icon on my root window (what in some environments would
    be called the desktop), [in contrast to the alternate approach where the minimized
    window is represented in some sort of taskbar](/~cks/space/blog/unix/XIconificationManyWays).
    I have strong opinions about where some of these icons should go, and [some tools](/~cks/space/blog/programming/ProgrammerLaziness)
    to automatically arrange this for various windows, including [the GNU Emacs windows
    I (now) use for reading email](/~cks/space/blog/sysadmin/EmailToolsAffectMyBehavior).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我的旧式[X Window系统](https://en.wikipedia.org/wiki/X_Window_System)环境中有一件有点奇怪的事情，就是当我'图标化'或'最小化'一个窗口时，它（[大部分情况下](/~cks/space/blog/sysadmin/HowIUseFvwmIconMan)）会成为我的根窗口上的一个实际图标（在某些环境中被称为桌面），[与将最小化窗口表示为某种任务栏的替代方法形成对比](/~cks/space/blog/unix/XIconificationManyWays)。我对一些这些图标应该放在哪里有很强的意见，并且[一些工具](/~cks/space/blog/programming/ProgrammerLaziness)可以自动为各种窗口安排这些图标，包括[我（现在）用来阅读电子邮件的GNU
    Emacs窗口](/~cks/space/blog/sysadmin/EmailToolsAffectMyBehavior)。
- en: Recently I started a new MH-E GNU Emacs session from home, did some stuff, iconified
    it, and GNU Emacs disappeared entirely. There were no windows and no icons. I
    scratched my head, killed the process, started it up again, and the same thing
    happened all over again. Only when I was starting to go through the startup process
    a third time did I realize what was going on and the mistake I'd made. You see,
    **I'd told [my window manager](https://fvwm.org/) to put the GNU Emacs icons off
    screen** (to the right) and my window manager had faithfully obliged me. Normally
    I could have recovered from this by moving [my virtual screen](/~cks/space/blog/sysadmin/MyVirtualScreenUsage)
    over to the right of where it had previously been, but I'd also told my window
    manager to position the icons for GNU Emacs relative to the current virtual screen,
    not the one it had been iconified on.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，我从家里开始了一个新的MH-E GNU Emacs会话，做了一些事情，然后将其图标化，GNU Emacs完全消失了。没有窗口，也没有图标。我摸了摸我的脑袋，结束了这个进程，然后再次启动它，结果同样的事情再次发生了。直到我第三次开始启动过程时才意识到发生了什么，以及我犯了什么错误。你看，**我曾告诉[我的窗口管理器](https://fvwm.org/)将GNU
    Emacs图标放在屏幕之外**（向右），我的窗口管理器忠实地遵循了我的指示。通常情况下，我可以通过将[我的虚拟屏幕](/~cks/space/blog/sysadmin/MyVirtualScreenUsage)移动到以前的位置的右侧来从中恢复，但我还告诉我的窗口管理器将GNU
    Emacs的图标位置相对于当前虚拟屏幕，而不是它曾经被图标化的虚拟屏幕。
- en: (In [fvwm](https://fvwm.org/) terms, I'd set GNU Emacs to have a 'sticky' icon,
    which normally means that it stays on your screen as you [move around between
    virtual screens](/~cks/space/blog/sysadmin/DualDisplayVsMultiDesktop).)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: （在 [fvwm](https://fvwm.org/) 方面，我设置了GNU Emacs为 'sticky' 图标，这通常意味着当你在虚拟屏幕之间[移动](/~cks/space/blog/sysadmin/DualDisplayVsMultiDesktop)时，它会保留在屏幕上。）
- en: How I could do this starts with how I was setting the icon position for the
    GNU Emacs I was reading email. Unlike (some) X programs, GNU Emacs doesn't take
    icon positions as a command line argument (as far as I know), but it does support
    [setting icon positions through Lisp](https://www.gnu.org/software/emacs/manual/html_node/elisp/Position-Parameters.html).
    However, I use GNU Emacs on one of our servers to read my email ([with X forwarding](/~cks/space/blog/tech/LatencyImpactMyXExperience))
    from both my work desktop and my home desktop, and they have different display
    configurations; work has two side by side 4K displays, with the GNU Emacs icons
    on the right display, and at home I have a single display ([and I make more use
    of multiple virtual screens](/~cks/space/blog/sysadmin/DualDisplayVsMultiDesktop)).
    Since the icons are positioned at different spots, I have two Lisp functions to
    set the icon position ('home-icon-position' and 'work-icon-position', more or
    less).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我是如何做到这一点的，始于我如何设置我正在阅读电子邮件的GNU Emacs的图标位置。与（一些）X程序不同，GNU Emacs不会将图标位置作为命令行参数（据我所知），但它支持[通过Lisp设置图标位置](https://www.gnu.org/software/emacs/manual/html_node/elisp/Position-Parameters.html)。然而，我在我们的一个服务器上使用GNU
    Emacs来阅读我的电子邮件（[通过X转发](/~cks/space/blog/tech/LatencyImpactMyXExperience)）从我的工作台式机和家用台式机，它们具有不同的显示配置；工作台式机有两个并排的4K显示器，GNU
    Emacs图标位于右侧显示器上，而在家中，我有一个单一的显示器（[我更多地使用多个虚拟屏幕](/~cks/space/blog/sysadmin/DualDisplayVsMultiDesktop)）。由于图标的位置不同，我有两个Lisp函数来设置图标位置（'home-icon-position'和'work-icon-position'，大致如此）。
- en: So that morning, what I did was I started GNU Emacs from my home machine and
    ran the 'work-icon-position', which told my window manager (via GNU Emacs) that
    I wanted the icon to have the left position of '5070' pixels. Since I was using
    a single display that is only 3840 pixels wide, fvwm dutifully carried out my
    exact instructions and put the icon 1230 pixels or so off to the right of my actual
    display.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 那天早上，我从家里的机器启动了GNU Emacs，并运行了 'work-icon-position'，这告诉我的窗口管理器（通过GNU Emacs）我希望图标的左侧位置为
    '5070' 像素。由于我只使用了一个宽度为 3840 像素的单个显示器，因此 fvwm 忠实地执行了我的确切指令，并将图标放在了实际显示器右侧约 1230
    像素处。
- en: (And then fvwm kept the icon 1230 pixels off the right side when I switched
    virtual screens, because that's also what I'd told fvwm to do.)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: （然后，当我在虚拟屏幕之间切换时，fvwm将图标保持在右侧约 1230 像素的位置，因为这也是我告诉fvwm要做的。）
- en: Icons are (little) windows and X is perfectly happy to let you position windows
    off screen (in any direction, you can put windows at negative coordinates if you
    want). As you'd expect, a window that is positioned entirely off screen isn't
    visible. So the actual mechanics of this icon position setting was no problem,
    and [fvwm](https://fvwm.org/) isn't the kind of program that second-guesses you
    when you position an icon off screen. So when I positioned the GNU Emacs icons
    off screen, fvwm put them off screen and they disappeared.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 图标就是（小）窗口，而 X 完全可以让你将窗口定位在屏幕外（无论方向如何，如果你愿意，你可以将窗口放在负坐标处）。正如你所期望的，完全定位在屏幕外的窗口是看不见的。因此，这种图标位置设置的实际机制没有问题，而且
    [fvwm](https://fvwm.org/) 不是那种在你将图标定位在屏幕外时会对你进行反思的程序。因此，当我将 GNU Emacs 图标定位在屏幕外时，fvwm
    将它们放在了屏幕外，它们就消失了。
- en: 'PS: I could have recovered the iconified Emacs in various ways, for example
    by locating it in various ways and having it deiconify, or explicitly moving its
    icon back onto the screen. It was just simpler and faster, in my state that morning,
    to terminate an Emacs I hadn''t done much with and try again.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: PS：我本可以以各种方式恢复被图标化的 Emacs，例如通过各种方式定位它并将其解除图标化，或者明确地将其图标移回屏幕上。但在那天早上的状态下，简单快捷地终止一个我还没怎么用过的
    Emacs 并再试一次更简单更快捷。
