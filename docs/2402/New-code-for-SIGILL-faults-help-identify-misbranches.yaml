- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 15:04:50'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 15:04:50'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: New code for SIGILL faults help identify misbranches
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SIGILL 错误的新代码有助于识别分支错误。
- en: 来源：[https://www.undeadly.org/cgi?action=article;sid=20240222183703](https://www.undeadly.org/cgi?action=article;sid=20240222183703)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.undeadly.org/cgi?action=article;sid=20240222183703](https://www.undeadly.org/cgi?action=article;sid=20240222183703)
- en: Contributed by [Janne Johansson](http://www.inet6.se) on 2024-02-22 from the
    don't pee on the electric fence dept.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 由[Janne Johansson](http://www.inet6.se)于2024-02-22贡献，属于“不要对电围栏撒尿”部门。
- en: If you run recent OpenBSD on certain amd64 or aarch64 platforms, indirect branching
    to an "unexpected" location will crash your program, in order to prevent ROP attacks
    and similar ways to have your program execute code where it shouldn't.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在某些amd64或aarch64平台上运行最近版本的OpenBSD，对“意外”位置的间接分支将导致程序崩溃，以防止ROP攻击和类似方式使程序在不应执行代码的位置上执行代码。
- en: The OpenBSD compiler will insert an extra instruction in all the places where
    a branch is supposed to land, and if it lands anywhere else, a CPU fault is raised
    and your program gets an "Illegal Instruction".
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有分支应该到达的地方，OpenBSD编译器将插入额外的指令，如果它们到达其他位置，则会引发CPU错误，并显示“非法指令”。
- en: Previously, crashes of this kind have looked more or less like any other kind
    of fault where code is executing random data or from random locations, but since
    the kernel knows when this has happened, we can make it explicit that the fault
    is due to missing branch target instructions, which will help a lot when debugging.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，这类崩溃看起来更像是执行随机数据或来自随机位置的任何其他类型的错误，但由于内核知道何时发生这种情况，我们可以明确指出，错误是由于缺少的分支目标指令造成的，这在调试时将大有帮助。
- en: Link to the commit [here](https://marc.info/?l=openbsd-cvs&m=170853069811439&w=2).
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 链接到提交内容[在此](https://marc.info/?l=openbsd-cvs&m=170853069811439&w=2)。
