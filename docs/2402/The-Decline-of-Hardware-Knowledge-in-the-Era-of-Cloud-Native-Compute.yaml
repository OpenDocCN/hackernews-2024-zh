- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:34:13'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: The Decline of Hardware Knowledge in the Era of Cloud Native Compute
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://www.magesguild.io/the-decline-of-hardware-knowledge-in-the-era-of-cloud-native-compute/](https://www.magesguild.io/the-decline-of-hardware-knowledge-in-the-era-of-cloud-native-compute/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In today's computing ecosystem, I would very much be considered a cloud-native
    engineer. My first job in the industry saw me deploying cloud hosted platforms
    on Rackspace and AWS infrastructure, and I have been specializing in AWS ever
    since. To me, highly available cloud deployments are the basics, the norm, a common
    standard that is easy to implement.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
- en: I cut my teeth on chef and CloudFormation and have since graduated to ansible
    and terraform. I haven't had the opportunity to work heavily with kubernetes and
    containerization yet, but I am trained on it and ready to roll. Even in my college
    days, I was fascinated with virtualized compute, using VMs I didn't really understand
    to host various services in lab and home networks.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
- en: To me, at the time, hardware was a mysterious, opaque box. The kernel code of
    my chosen professional environments, GNU/Linux, Windows, and MacOS (at the time
    still called OSX) were, likewise, mystic magics of the highest order. Assembly
    language programming was out of the question and low level C code was unreadable
    to me.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
- en: Though I developed tremendous expertise in cloud computing best practices and
    highly available, self-healing, auto-deploying virtual networks of nodes and services,
    I remained mostly ignorant of the details of how the host systems and virtual
    systems actually function.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: This is an extraordinarily common phenomenon in today's cloud-native technician.
    In my career I've seen that this is not a situation unique to myself, and that
    the vast majority of cloud engineers simply do not understand, nor wish to understand,
    hardware, kernel, and driver level coding.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
- en: This leads to some problems. First and foremost, entire avenues of troubleshooting
    skills are cut off. Many technicians in the industry do not know how to use system
    tools to trace kernel calls and other low level data that may assist in locating
    things like memory leaks or faults.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
- en: Another issue is that much efficiency is lost, particularly by certain, high
    level coding practitioners. Web Devs may feel called out, but I think most of
    them will agree that the messy internals of operating system administration is
    far beyond the scope of skills they wish to master. This leaves us in a place
    where even expert developers simply don't understand how the environment they
    code for will behave at scale.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
- en: The difference in performance between code on a workstation and code in a high
    scale production environment must be tested as part of the deployment pipeline,
    to ensure we don't introduce inefficiencies that can bring down the service. This
    is typically handled by specialists known as SRE's or Site Reliability Engineers;
    a fancy DevOps title held by many cloud-native specialists. It takes a team of
    experts to build a web service of any complexity, with specialists in each field
    working together to create something functional.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 部署管道中需要测试工作站代码与大规模生产环境代码在性能方面的差异，以确保我们不会引入会导致服务停机的低效因素。这一工作通常是由被称为SRE（站点可靠性工程师）或者DevOps专家的团队完成。构建复杂网络服务需要专家队伍的共同努力，每个领域都有专家协同工作才能使之可行。
- en: Rarely do we see the low-level computer expert on cloud teams, but this is changing.
    I must acknowledge, of course, that they do exist. I have met and learned from
    a handful of experts who began their careers in eras where 8-bit computing was
    the most advanced standard; and these technicians understand the platform from
    its lowest bits to its most obfuscated user-space applications. Windows specialists,
    in particular, seem to have a higher propensity for exposure to the lowest level
    hardware concepts early in their careers.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们很少在云计算团队中看到底层计算机专家的身影，但这正在发生变化。当然，他们确实存在。我有幸遇到了几位专家，他们开始自己的职业生涯时，最先进标准是8位计算，这些技术人员从底层位到混乱的用户空间应用，全面理解平台。特别是在Windows方面，我发现早期职业生涯中的专家对底层硬件概念有较高的倾向性接触。
- en: This makes sense to me as, though this is pure speculation on my part, one could
    live with the limitations of windows if you have mastered controlling the system
    with low level tools in that environment. That might be revealing a bit too much
    of how I feel about Microsoft's operating environment, though.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这看似合理，尽管这是我的推测，但学会在Windows系统中使用底层工具后，人们能适应其限制。这可能暴露了我对微软操作系统的一些观点。
- en: Again we circle back around to the importance of 8-bit computing in the educational
    space. Because 8-bit systems work the same ways, physically, as 32 and 64-bit
    systems, while remaining much simpler to design, implement, and understand, it
    serves as a perfect platform for teaching.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们再次绕回到8位计算在教育领域的关键性上。之所以8位系统在物理设计、实现和理解上的简明方式与其他位系统相同，它们更适合作为教学平台，因为它既简单又具有普遍性。
- en: Computer science education needs to embrace 8-bit computing standards in schools
    in order to increase computer literacy across the population. As we become increasingly
    reliant on computer technology – tying it into almost every aspect of human life
    – it becomes increasingly important to ensure computer literacy thrives. Without
    an educated population, it will be too easy for organizations and governments
    to control the means of computing; denying equitable access to end-users and developers.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机科学教育需要在学校采用8位计算标准，以提高全民的计算机素养。随着计算机技术在日常生活中的依赖日益增强，确保计算机素养的发展变得愈发重要。缺乏知识的人群使得组织和政府更容易控制计算手段，从而导致最终用户和开发者难以获得平等接入。
- en: As cloud-native has become the hottest trend in the industry, we find ourselves
    lacking in the skills that got us there. A cloud technician educated in low level
    computing is a well equipped cloud technician; one who can likely be relied upon
    for efficient designs. If you are, yourself, struggling with low level computing
    concepts, even while operating at high levels in the cloud space, please consider
    following my journey as I educate myself and others about low-level computing
    concepts using 8-bit technologies!
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 作为云计算的浪潮席卷整个行业，我们发现自己在到达这一阶段后缺乏关键技能。受过低级计算教育的云计算技术人员可谓装备精良，他们极可能能够高效地处理设计任务。如果你自己在云计算领域处理高级议题时，却在低级计算概念上感到力不从心，请考虑跟随我的旅程，一起学习和探索使用8位技术进行低级计算的思路和方法！
- en: '**Resources**'
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**资源**'
- en: The Decline of Hardware Knowledge in the Era of Cloud Native Compute
  id: totrans-split-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云计算时代中硬件知识的衰落
