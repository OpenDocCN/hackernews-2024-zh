- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-29 13:28:43'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-29 13:28:43
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Serving my blog posts as Linux manual pages | James' Coffee Blog
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将我的博客文章作为Linux手册页服务 | James' Coffee Blog
- en: 来源：[https://jamesg.blog/2024/02/29/linux-manual-pages/](https://jamesg.blog/2024/02/29/linux-manual-pages/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://jamesg.blog/2024/02/29/linux-manual-pages/](https://jamesg.blog/2024/02/29/linux-manual-pages/)
- en: '*Intended audience: You are likely to enjoy this post the most if you are interested
    in Linux and/or Linux manual pages, or if you enjoy reading about esoteric programming
    projects.*'
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*目标受众：如果你对Linux和/或Linux手册页感兴趣，或者喜欢阅读关于奇特编程项目的文章，你可能会喜欢这篇文章。*'
- en: Linux computers come with pre-installed manual pages that describe how to use
    specific commands. These pages are readable by typing `man <command>` into your
    terminal. For example, you can get the manual for the `tac` command, which prints
    out a file in from bottom-to-top by using the command `man tac`. Some command
    line software you install adds manual pages, too.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: Linux计算机预装了描述如何使用特定命令的手册页。通过在终端中键入`man <command>`，可以阅读这些页面。例如，您可以获取`tac`命令的手册页，该命令通过使用命令`man
    tac`打印出文件的底部到顶部。您安装的一些命令行软件也会添加手册页。
- en: Linux manual pages are formatted using the `roff` syntax, which you can use
    to mark up documents. `roff` was the first typesetting command line software for
    Unix, developed at Bell Labs. Earlier this week, with a spark for building but
    no particular idea in mind, I started to think about the Linux manual page. Could
    I serve my blog posts as Linux manual pages? Herein lay an adventure.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: Linux手册页使用`roff`语法格式化，您可以使用它标记文档。`roff`是Unix的第一个命令行排版软件，在贝尔实验室开发。本周早些时候，由于建立的火花但没有特定的想法，我开始思考Linux手册页。我能否将我的博客文章作为Linux手册页提供？这里面蕴含着一次冒险。
- en: 'TL;DR: You can request a Linux manual page version of a blog post with the
    following HTTP request:'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: TL;DR：您可以通过以下HTTP请求请求博客文章的Linux手册页版本：
- en: '[PRE0]'
  id: totrans-split-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Devising the system: Content negotiation'
  id: totrans-split-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计系统：内容协商
- en: 'I had an idea for how I wanted this to work in mind. I wanted a user to be
    able to request a `roff` version of a blog post using content negotiation, part
    of HTTP that lets you specify ixn what format you want a file. For example, you
    could request an image with an `Accept: image/png`. This tells a server that,
    if possible, it should send a PNG file. There are lots of intricacies to content
    negotiation. You can provide a list of types of content you can accept, and the
    order in which a server should try to return them'
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: '我有一个关于我想让这个系统如何运行的想法。我希望用户能够使用内容协商请求博客文章的`roff`版本，内容协商是HTTP的一部分，它允许您指定您希望文件以何种格式发送。例如，您可以请求一个带有`Accept:
    image/png`的图像。这告诉服务器，如果可能的话，它应该发送一个PNG文件。内容协商有很多复杂性。您可以提供您可以接受的内容类型列表，并指定服务器应尝试返回它们的顺序'
- en: But! That's a rabbit hole for another day. What's important here is that an
    application can ask a server for content in a specific format using a HTTP header.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 但是！那是另一个深入研究的话题。这里重要的是，应用程序可以通过HTTP头部向服务器请求特定格式的内容。
- en: With content negotiation, I can route requests if a user sends an `Accept` header.
    If a user asks for an `text/roff` document, I could return a manual page that
    can be opened with the `man` command.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 通过内容协商，如果用户发送一个`Accept`头部，我可以路由请求。如果用户请求一个`text/roff`文档，我可以返回一个可以用`man`命令打开的手册页。
- en: Writing the manual pages
  id: totrans-split-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编写手册页
- en: 'Manual pages use the `roff` syntax, so I would need to have versions of my
    blog posts in that format. To do this, I updated my site to generate `man` pages
    for each blog post. The template I used to generate the manual page was as follows:'
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 手册页使用`roff`语法，因此我需要我的博客文章以这种格式存在。为此，我更新了我的网站，为每篇博客文章生成了`man`页面。我用来生成手册页的模板如下：
- en: '[PRE1]'
  id: totrans-split-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Here, I set a header with my domain name and create five sections: title, author,
    published date, the post content, and the URL of the post. The raw content is
    markdown. This doesn''t always turn out well in a manual as spacing can sometimes
    be off. But, markdown was more readable than HTML and resulted in less information
    loss (i.e. titles having no distinction to paragraphs other than being on their
    own line) than using plain text.'
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我设置了一个带有我的域名的标题，并创建了五个部分：标题、作者、发布日期、文章内容和文章的URL。原始内容是Markdown格式。这在手册中并不总是很好，因为有时间距可能会有所偏差。但是，Markdown比HTML更可读，并且导致信息丢失较少（即标题与段落之间没有其他区别，除了它们在自己的行上）。
- en: 'I now had:'
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我有了：
- en: Properly formatted manual pages, and;
  id: totrans-split-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确格式化的手册页，以及；
- en: The knowledge that content negotiation could allow someone to request a manual
    page.
  id: totrans-split-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 知道内容协商可以允许某人请求一个手册页面。
- en: 'Now came the final piece of the puzzle: using content negotiation to facilitate
    the request for manual pages.'
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在到了谜题的最后一块：使用内容协商促进对手册页面的请求。
- en: Requesting a manual page
  id: totrans-split-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 请求一个手册页
- en: 'You can use the following command to request the `roff` format of blog posts
    on this website:'
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用以下命令请求此网站博客文章的`roff`格式：
- en: '[PRE2]'
  id: totrans-split-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You can then open the result as a Linux manual page:'
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以将结果作为Linux手册页打开：
- en: '[PRE3]'
  id: totrans-split-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Let's talk about how this works!
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们谈谈这是如何工作的！
- en: When a browser makes a request to `{{ site.root_url }}/2024/02/19/personal-website-ideas/`,
    it asks for the HTML version of the page. In the `curl` command above, the command
    asks for the `text/roff` version. I added a few lines of text in my NGINX configuration
    to change how the server responds when `text/roff` is requested for a blog post.
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当浏览器请求`{{ site.root_url }}/2024/02/19/personal-website-ideas/`时，它请求页面的HTML版本。在上面的`curl`命令中，命令请求`text/roff`版本。我在我的NGINX配置中添加了几行文本，以更改服务器在请求博客文章的`text/roff`时如何响应。
- en: 'First, I declared a few variables in my `/etc/nginx/nginx.conf` file that let
    me raise a flag when a specific content type was identified:'
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我在`/etc/nginx/nginx.conf`文件中声明了一些变量，让我在识别特定内容类型时引发标志：
- en: '[PRE4]'
  id: totrans-split-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You can add multiple different redirect locations, but I only need two: the
    default, and my custom `text/roff` rule.'
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以添加多个不同的重定向位置，但我只需要两个：默认和我的自定义`text/roff`规则。
- en: 'In my site NGINX configuration (the file in the `/etc/nginx/sites-enabled`
    folder), I used the following code to handle requests differently if a `roff`
    page is requested:'
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的站点NGINX配置（位于`/etc/nginx/sites-enabled`文件夹中的文件）中，我使用以下代码来处理请求，如果请求一个`roff`页面：
- en: '[PRE5]'
  id: totrans-split-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Here, I say: take a URL, and add `.man` to the end, removing the trailing slash,
    as long as the `Accept: text/roff` header is set. This tells NGINX to read from
    the `.man` file instead of the `index.html` file associated with each post on
    my site.'
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
  zh: '在这里，我说：获取一个URL，并在末尾添加`.man`，删除尾部斜杠，只要设置了`Accept: text/roff`头。这告诉NGINX从`.man`文件中读取，而不是与我的网站上每篇文章相关联的`index.html`文件。'
- en: That is to say you can now read blog posts on this website as a Linux manual
    page. This was a fun investigation into using content negotiation in NGINX and
    a reminder of how far we have come with typesetting technology from the command
    line interfaces to modern-day typesetting software and HTML.
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，您现在可以将此网站上的博客文章作为Linux手册页面阅读。这是对在NGINX中使用内容协商进行有趣调查的回顾，并提醒我们从命令行界面到现代排版软件和HTML的技术进步。
- en: '*Thank you to [Todd](https://toddpresta.com/) for providing guidance on setting
    up my NGINX configuration. Todd''s help was sincerely appreciated!*'
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
  zh: '*感谢[Todd](https://toddpresta.com/)为设置我的NGINX配置提供的指导。Todd的帮助是真诚地感激！*'
- en: '[Share this post on Hacker News](https://news.ycombinator.com/submitlink?u=/https://jamesg.blog/2024/02/29/linux-manual-pages/&t=Serving%20my%20blog%20posts%20as%20Linux%20manual%20pages).'
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[在Hacker News上分享此文章](https://news.ycombinator.com/submitlink?u=/https://jamesg.blog/2024/02/29/linux-manual-pages/&t=Serving%20my%20blog%20posts%20as%20Linux%20manual%20pages)。'
- en: '[Share this post on Lobste.rs](https://lobste.rs/stories/new?url=/https://jamesg.blog/2024/02/29/linux-manual-pages/&title=Serving%20my%20blog%20posts%20as%20Linux%20manual%20pages).'
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[在Lobste.rs上分享此文章](https://lobste.rs/stories/new?url=/https://jamesg.blog/2024/02/29/linux-manual-pages/&title=Serving%20my%20blog%20posts%20as%20Linux%20manual%20pages)。'
