- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:56:59'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:56:59'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: So you messed up. Now what? - Jacob Kaplan-Moss
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 所以你搞砸了。现在怎么办？ - 雅各布·卡普兰-莫斯
- en: 来源：[https://jacobian.org/2021/jun/8/incorrect-estimates/](https://jacobian.org/2021/jun/8/incorrect-estimates/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://jacobian.org/2021/jun/8/incorrect-estimates/](https://jacobian.org/2021/jun/8/incorrect-estimates/)
- en: '[Estimating Software Projects](https://jacobian.org/series/estimation/):'
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[软件项目估算](https://jacobian.org/series/estimation/):'
- en: So you messed up. Now what?
  id: totrans-split-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 所以你搞砸了。现在怎么办？
- en: This is the final part of [a series on estimating software project timelines](https://jacobian.org/series/estimation/).
    Previously, I’ve covered [why we should make estimates](https://jacobian.org/2021/may/20/estimation/),
    a [technique for making accurate estimates](https://jacobian.org/2021/may/25/my-estimation-technique/),
    and [advice on making rapid, intuitive “SWAG” estimates](https://jacobian.org/2021/jun/2/swag-estimates/).
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这是关于[软件项目时间估算系列](https://jacobian.org/series/estimation/)的最后一部分。之前，我讨论了[为什么我们应该进行估算](https://jacobian.org/2021/may/20/estimation/)，一个[制定准确估算的技巧](https://jacobian.org/2021/may/25/my-estimation-technique/)，以及[快速直觉估算的建议](https://jacobian.org/2021/jun/2/swag-estimates/)。
- en: 'So now: say you’ve followed my advice, made an estimate for that project, and
    now you’re realizing you’re behind. You’ve estimated ten weeks, and are sitting
    here in week five looking at a TODO list that’s not anywhere close to halfway
    done. Now what?'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 现在假设你已经听从了我的建议，为那个项目做了估计，现在你意识到自己落后了。你估计了十周时间，但现在已经是第五周了，看着一张TODO列表，还没有完成一半。现在怎么办？
- en: Don’t do what I did
  id: totrans-split-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 别像我当初那样做
- en: 'First, let me discuss what **not** to do, by way of a story. I’ve written a
    bit before about [the circumstances that led to me leaving Heroku](https://jacobian.org/2021/mar/8/why-did-you-leave-your-last-job/)
    – I wasn’t fired, not exactly, but I also didn’t leave entirely voluntarily. One
    of the major factors that led to my not-quite-firing was a bad estimate. But that
    wasn’t the real mistake: I compounded the problem by failing to communicate our
    lateness for several months.'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我通过一个故事来讨论**不**要做什么。我之前写过一些关于[导致我离开Heroku的情况](https://jacobian.org/2021/mar/8/why-did-you-leave-your-last-job/)——我并没有被解雇，不完全算是自愿离开。导致我没有完全被解雇的主要因素之一是一个糟糕的估算。但那不是真正的错误：我因为数个月未能及时沟通我们的延迟问题而加重了问题。
- en: 'I was leading a major compliance project, one that we expected to take the
    better part of a year. It was a complex project: many moving parts, some tricky
    technical and human-factors issues, and pieces that touched nearly every team.
    I did the work to put together a timeline and estimate, got the staff and budget
    it said we needed, and got to work.'
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我主导了一个重大的合规项目，预计需要大部分一年时间。这是一个复杂的项目：许多移动部件，一些棘手的技术和人因问题，以及涉及几乎每个团队的部分。我做了工作，制定了时间表和估算，得到了我们需要的人员和预算，并开始工作。
- en: That estimate turned out to be wildly incorrect. The project ended up taking
    *a year longer* than I’d originally projected. The reasons are complex; the short
    version is that I made some major technical assumptions that turned out to be
    wildly incorrect. Several large architectural changes I’d thought we could avoid
    turned out to be unavoidable, adding all sorts of dependencies and additional
    work to the project.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 那个估算结果完全不准确。这个项目最终花了*比我最初预计的时间长了一年*。原因很复杂；简单来说，我做了一些重大的技术假设，结果证明完全错误。我原本认为可以避免的几个重大架构变更结果不可避免，给项目增加了各种依赖和额外工作。
- en: This might have been OK had I handled it well, but I didn’t. Instead, I ignored
    the problem until it was far too late.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我处理得好，这可能还算过得去，但我没有。相反，我忽视了这个问题，直到为时已晚。
- en: 'The whole thing situation came to a head in November: it became very clear
    that our timeline was *way* off. This was a huge surprise to my bosses &mldr;
    but not to me. I had started to realize as early as July or August that we were
    behind, and by early September I was increasingly sure we were screwed.'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这一切在十一月份到达了顶峰：我们的时间表明显*严重偏差*。这对我的老板来说是一个巨大的惊讶&mldr;但对我来说并不意外。早在七月或八月，我已经开始意识到我们落后了，到了九月初，我越来越确定我们遇到了麻烦。
- en: But I kept it to myself. I convinced myself that my intuition was wrong, that
    we couldn’t possibly be late. I avoided digging in and revising my estimate. The
    project planning spreadsheet said we were still on time (because it hadn’t been
    updated), and I convinced myself this was true despite mounting evidence.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 但我把它藏在心里。我说服自己，我的直觉是错误的，我们不可能迟到。我避免深入挖掘和修订我的估计。项目计划表显示我们还按时进行（因为它还没有更新），尽管有越来越多的证据，我还是说服自己这是真的。
- en: I count this as one of my biggest professional failures.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我把这看作是我最大的职业失败之一。
- en: 'I don’t think this story is that unusual. I’ve seen it play out many times.
    When we realize a project is late or over budget, that brings up all sorts of
    negative emotions: shame, fear, anger, disappointment, etc. It’s easy to get sucked
    into delusional thinking – we’ve all thought things like “yeah I know I’m behind,
    but I’ll just work through the weekend and catch up.”'
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我不认为这个故事很不寻常。我见过这种情况发生很多次。当我们意识到项目延迟或超预算时，会引发各种负面情绪：羞耻、恐惧、愤怒、失望等。很容易陷入妄想思维 -
    我们都会想到“是的，我知道我落后了，但我周末加班就能赶上”之类的话。
- en: So, with the benefit of hindsight, what should I have done differently? How
    *should* we handle an incorrect estimate?
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，现在回想起来，我应该有什么不同的做法？我们应该如何处理错误的估计？
- en: Communicate lateness early by communicating status regularly
  id: totrans-split-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过定期沟通状态及时沟通迟到
- en: 'The most important lesson here is **communicate lateness early**. The moment
    you realize there’s some schedule risk, you should be making it widely known.
    Even if you’re not late yet and have merely realized that some part of the project
    is riskier than you’d thought and could *potentially* push the timeline out: you
    should still communicate that risk right away.'
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这里最重要的教训是**及早沟通迟到**。一旦意识到有些进度可能有风险，就应该广泛地让人知晓。即使你还没有迟到，只是意识到项目某个部分比预期更具风险，并*有可能*推迟时间表：你也应该立即沟通这个风险。
- en: This is easier to say than to do; I knew this rule, and still ignored it! It
    can be hard to admit that you made a mistake, and easy to engage in [magical thinking](#avoid-magical-thinking)
    as a defense mechanism.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 说起来容易做起来难；我知道这个规则，但还是选择忽略了！承认自己犯了错误很难，而采取[神奇思维](#避免神奇思维)作为一种防御机制则很容易。
- en: A way to fight back against this is to **report status frequently** – weekly,
    probably. Some organizations have regularly established mechanisms for status
    updates (e.g. project updates at weekly staff meetings). If yours doesn’t, I suggest
    weekly status emails to your boss and any other important stakeholders. Even if
    those emails just say “yup, still on track” – they’re worth sending.
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 反击这一现象的一种方法是**频繁报告状态** - 可能每周一次。有些组织已经建立了定期更新状态的机制（例如每周员工会议上的项目更新）。如果你的组织没有这样的机制，我建议每周向你的老板和其他重要利益相关者发送状态更新的电子邮件。即使这些电子邮件只是说“是的，进展顺利”
    - 发送它们也是值得的。
- en: 'A common tactic is to report project status using a “green/yellow/red” scale.
    I like this as a shorthand, but often there’s vagueness around what “yellow” means:
    “green” is “on time”, “red” is “behind or at major risk”, but “yellow” is &mldr;
    unclear. This leads to pressure to keep projects “green” until it’s too late,
    at which point they suddenly go “red”.'
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 一种常见的策略是使用“绿/黄/红”尺度报告项目状态。我喜欢这个简化方式，但通常在“黄”意味着什么方面存在模糊性：“绿”表示“准时”，“红”表示“落后或存在重大风险”，但“黄”是&mldr;不清楚。这导致了在太迟之前，保持项目“绿”的压力突然变成“红”。
- en: Thus, if you use “green/yellow/red”, I highly suggest you define “yellow” as
    broadly as possible. “Green” should be reserved for “on time, low risk”; as soon
    as there’s *any* slip, no matter how slight, or any additional risk, take your
    project “yellow”. You may face some pushback, but it’s far better to get ahead
    of a failure than to have it happen by surprise.
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果你使用“绿/黄/红”来报告状态，我强烈建议你尽可能广泛地定义“黄”。 “绿”应该保留为“准时，低风险”；一旦有*任何*滑动，无论多么轻微，或者有任何额外风险，都应将项目置于“黄”状态。你可能会遇到一些阻力，但及早发现失败要远远好于突如其来的失败。
- en: Avoid magical thinking
  id: totrans-split-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 避免神奇思维
- en: 'In the search-and-rescue community, there’s a well-known phenomenon where people
    who are lost get even more lost despite having good maps (and even GPS). As people
    get more and more frustrated, they start failing to match what they see around
    them to what’s on their map. They convince themselves that the stream they expect
    to have seen must have dried up since the map was printed, or that the trees are
    confusing the GPS signal and they aren’t *really* walking towards a cliff, etc.
    This is known as “[bending the map](https://intrepiddaily.com/stop-bending-the-map/)”:
    we know where we *want* to be, and when the map doesn’t support our desire we
    convince ourselves that the map is wrong.'
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在搜索和救援社区中，有一个众所周知的现象，即即使有良好的地图（甚至是GPS），迷路的人也会变得更加迷茫。随着人们越来越沮丧，他们开始无法将周围的实际情况与地图上的信息匹配。他们会说服自己，他们期望看到的溪流必须在地图印制后干涸，或者树木干扰了GPS信号，他们并不是真的朝向悬崖行走等。这被称为“[弯曲地图](https://intrepiddaily.com/stop-bending-the-map/)”：我们知道我们*想要*在哪里，当地图不支持我们的愿望时，我们会说服自己地图是错的。
- en: 'We do this with projects too: we want so badly to not be late that we convince
    ourselves that the data showing that we’re late is wrong, or that we’ll “catch
    up”, or some other form of magical thinking.'
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在项目中也会这样做：我们非常希望不要迟到，以至于我们说服自己显示我们迟到的数据是错误的，或者我们会“赶上”，或者进行其他形式的神奇思维。
- en: 'To help you avoid magical thinking, here are some facts about late projects:'
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助您避免神奇思维，这里有一些关于晚完成项目的事实：
- en: '**Late projects stay late.** It’s terrifically rare to “catch up” on a late
    project. When projects run late, it’s because you’ve missed something in your
    original estimate: you’ve guessed that work will take `x` days, but it’s taking
    `1.5x`, or whatever. For you to “catch up”, your estimate would have to be wrong
    about the rest of the project, but *in the opposite direction*. Even if you correct
    what led to the overrun, it’s terrifically unlikely that you’ll somehow make up
    time.'
  id: totrans-split-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**晚完成的项目会保持晚**。在晚完成项目上“赶上”是非常罕见的。当项目延迟时，是因为你在最初的估计中漏掉了一些东西：你猜测工作需要花费`x`天，但实际需要`1.5x`天，或者其他什么。要“赶上”，你的估计必须在项目的其余部分也错误，但*相反的方向*。即使你纠正了导致超支的原因，你也极不可能弥补时间。'
- en: Indeed, **late project usually get later** – it’s much more likely that your
    origin estimate will continue being wrong at about the same amount.
  id: totrans-split-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实际上，**晚完成的项目通常会更晚** - 你最初的估计很可能会持续错误相同的时间。
- en: 'Imagine a project you’d originally estimated at 10 weeks. It’s now week 6,
    and you’ve just hit the halfway mark. When should you expect to finish? The correct
    answer is “6 more weeks”: if you slipped a week in the first 5, that data suggests
    you’ll slip another week in the back 5.'
  id: totrans-split-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 想象一下，你最初估计为10周的项目。现在是第6周，你刚刚达到了一半的进度。你应该预计何时完成？正确答案是“再6周”：如果在前5周中滑落了一周，那么数据表明在后5周中你会再滑落一周。
- en: '**Adding more people to a late project makes it later**. This key observation
    from Fred Brook’s [The Mythical Man-Month](https://en.wikipedia.org/wiki/Brooks%27s_law)
    is as true today as it was when that book was published nearly 50 years ago, but
    we still keep making the same mistake^(. If you haven’t read *MMM*, you should.)'
  id: totrans-split-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在晚完成的项目中增加更多的人只会使项目更晚**。这是弗雷德·布鲁克斯在《[人月神话](https://en.wikipedia.org/wiki/Brooks%27s_law)》中的关键观察，它如今仍然与近50年前出版时一样正确，但我们仍然犯同样的错误。如果你还没有读过*MMM*，你应该读一读。'
- en: '**“Crunch time” *can* work, but only sparingly and at a high cost**. We sometimes
    turn to “crunch time” – working overtime to finish a project. The data shows that
    crunch time *can* work to make up time on a project, but only in very limited
    circumstances. Teams can only sustain crunch time for a week or two at most before
    quality suffers dramatically. Crunches that last longer, or reoccur often, result
    in *worse* results (lower quality, even later projects). And even short crunches
    that do have a positive impact on a project’s timeline will cause stress, frustration,
    and burnout^.'
  id: totrans-split-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**“紧迫时间”*确实*可以起作用，但成本很高**。有时我们会转向“紧迫时间” - 加班完成项目。数据显示，紧迫时间确实可以在项目的时间表上节省时间，但只在非常有限的情况下。团队最多只能在紧迫时间下维持一两周，否则质量会急剧下降。持续时间更长或经常发生的紧迫时间会导致更糟糕的结果（质量更低，甚至更晚的项目）。即使短期的紧迫时间对项目时间表有积极影响，也会导致压力、沮丧和烧脑。'
- en: 'My suggestion: if a *single* week of overtime will help you meet a critical
    deadline, and you can promise your team it’ll be an extremely rare occurrence
    (like, once a year, at most), consider asking for overtime. Otherwise, just take
    your lumps and accept the late project.'
  id: totrans-split-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我的建议是：如果加班一周能帮助你达到关键的截止日期，并且你能承诺给团队这将是极其罕见的事件（比如，最多一年一次），那就考虑加班。否则，就接受延迟的项目吧。
- en: Make a new estimate (but keep the old one)
  id: totrans-split-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 制作一个新的估算（但保留旧的估算）
- en: 'One last note: as soon as you realize you’re late, create a new estimate, taking
    into account what you now know (and the facts above). But don’t overwrite the
    old one; it’s important for your growth that you keep each iteration. Review your
    failed estimates sometime later, when the emotions have faded, to figure out what
    you did wrong. That’s how you’ll learn to make better estimates next time!'
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一点：一旦意识到项目延迟，立即创建一个新的估算，考虑到你现在知道的情况（以及上述事实）。但不要覆盖旧的估算；保留每一次迭代对你的成长至关重要。在情绪消退后的某个时候，回顾你的失败估算，找出你的错误。这样你将学会在下次做出更好的估算！
- en: '* * *'
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: I hope you’ve found this [series on estimation](https://jacobian.org/series/estimation/)
    useful. Good luck with your estimates! As always, if you try out any of the tools
    and techniques I’ve shared, please get in touch and tell me how it went.
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你觉得这个[估算系列](https://jacobian.org/series/estimation/)有用。祝你估算顺利！如果你试用了我分享的工具和技术，请务必与我联系，告诉我效果如何。
