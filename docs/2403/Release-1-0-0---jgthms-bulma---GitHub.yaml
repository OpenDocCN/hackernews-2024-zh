- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-29 12:34:52'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: Release 1.0.0 · jgthms/bulma · GitHub
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://github.com/jgthms/bulma/releases/tag/1.0.0](https://github.com/jgthms/bulma/releases/tag/1.0.0)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Bulma v1 is a **full rewrite** of the framework using [**Dart Sass**](https://sass-lang.com/dart-sass/),
    which is the the primary implementation of Sass. While this affects a few development
    details, everything has been done to make the transition **as easy as possible**.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
- en: What remains the same
  id: totrans-split-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**All HTML snippets are the same**. This means you don''t need to update your
    markup. **This is important** because it means, if you''re using Bulma straight
    "out of the box", you don''t need to change anything.'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
- en: You can just swap `bulma@0.9.4/css/bulma.min.css` with `bulma@1.0.0/css/bulma.min.css`
    and everything will work. Things will look slightly different, but they will still
    work.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: What changes
  id: totrans-split-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[**Dart Sass**](https://sass-lang.com/dart-sass/) is used to build Bulma'
  id: totrans-split-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: if you use the `sass` npm package, you're already using Dart Sass
  id: totrans-split-12
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**CSS Variables**](https://bulma.io/documentation/features/css-variables/)
    are used instead of literals: `color: var(--bulma-primary);` instead of `color:
    hsl(171deg, 100%, 41%);`, which means you can customize Bulma with CSS only (without
    using Sass)'
  id: totrans-split-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customization by setting your own value for Sass variables works differently.
    See [how to customize Bulma with Sass](https://bulma.io/documentation/customize/).
  id: totrans-split-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What's new (i.e. did not exist before)
  id: totrans-split-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The notion of [**Themes**](https://bulma.io/documentation/features/themes/)
    is introduced: a theme is a collection of CSS variables within a context, and
    is the best approach to customize Bulma'
  id: totrans-split-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As a result, a Theme for [**Dark Mode**](https://bulma.io/documentation/features/dark-mode/)
    is included
  id: totrans-split-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Color Palettes**](https://bulma.io/documentation/features/color-palettes/)
    are created for each of the 7 primary colors'
  id: totrans-split-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[**Skeleton loaders**](https://bulma.io/documentation/features/skeletons/)
    exist as standalone components but also as variants of other components'
  id: totrans-split-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can add a **prefix** to all your Bulma classes so that `.button` becomes
    `.my-prefix-button`
  id: totrans-split-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
