- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-29 12:47:20'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-29 12:47:20'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: The rev.ng decompiler goes open source + start of the UI closed beta - rev.ng
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: rev.ng 反编译器开源 + UI 封闭测试开始 - rev.ng
- en: 来源：[https://rev.ng/blog/open-sourcing-renvg-decompiler-ui-closed-beta](https://rev.ng/blog/open-sourcing-renvg-decompiler-ui-closed-beta)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://rev.ng/blog/open-sourcing-renvg-decompiler-ui-closed-beta](https://rev.ng/blog/open-sourcing-renvg-decompiler-ui-closed-beta)
- en: Hi there! Long time no see! It has been a while since our last update about
    rev.ng, but we've been quietly working hard. So, it's time for some news! 🚀
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 嘿！好久不见！我们已经有一段时间没有关于 rev.ng 的更新了，但我们一直在悄悄努力。所以，现在是时候带来一些新闻了！ 🚀
- en: '*tl;dr* In this blog post we:'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: '*tl;dr* 在这篇博文中，我们：'
- en: Announce the open sourcing of the rev.ng decompiler, the start of the UI closed
    beta, the release of the new website, rev.ng Hub and the docs. Also, we do [private
    demos](mailto:info@rev.ng).
  id: totrans-split-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 宣布 rev.ng 反编译器的开源化，UI 封闭测试的开始，新网站的发布，rev.ng Hub 和文档。此外，我们提供[私人演示](mailto:info@rev.ng)。
- en: Explain how to try rev.ng.
  id: totrans-split-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释如何尝试 rev.ng。
- en: Explain the design and goals of rev.ng as a whole.
  id: totrans-split-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释整个 rev.ng 的设计和目标。
- en: Explain the relation between the open source project, the UI running in the
    cloud and the standalone UI.
  id: totrans-split-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释开源项目、云端 UI 和独立 UI 之间的关系。
- en: Present our roadmap towards the 1.0 release.
  id: totrans-split-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 展示我们向 1.0 发布的路线图。
- en: Describe how to interact with us (i.e., [X/Twitter](https://twitter.com/_revng),
    [Discord](https://discord.gg/wEQtgKJxcX), [Newsletter](/newsletter-subscribe),
    [Discourse](https://discuss.rev.ng/)).
  id: totrans-split-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 描述如何与我们互动（例如，[X/Twitter](https://twitter.com/_revng)，[Discord](https://discord.gg/wEQtgKJxcX)，[Newsletter](/newsletter-subscribe)，[Discourse](https://discuss.rev.ng/)）。
- en: '[](#1-what-happens-today)1\. What happens today?'
  id: totrans-split-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[](#1-what-happens-today)1\. 今天发生了什么？'
- en: Quite a lot.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 相当多。
- en: We are open sourcing [`revng-c`](https://github.com/revng/revng-c), the backend
    of our decompiler.
  id: totrans-split-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们正在开源[`revng-c`](https://github.com/revng/revng-c)，我们反编译器的后端。
- en: As of today, the whole decompilation engine is open source!
  id: totrans-split-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 截至今天，整个反编译引擎已开源！
- en: We're also releasing initial [documentation](https://docs.rev.ng) on how to
    use rev.ng.
  id: totrans-split-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们还发布了关于如何使用 rev.ng 的初步[文档](https://docs.rev.ng)。
- en: We'll soon invite newsletter subscribers to the closed beta for the rev.ng UI.
  id: totrans-split-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们即将邀请 newsletter 订阅者参加 rev.ng UI 的封闭测试。
- en: We're going to invite people on FIFO basis, make sure [you're registered](/newsletter-subscribe).
  id: totrans-split-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们将按先到先得的顺序邀请人员，请确保[您已注册](/newsletter-subscribe)。
- en: We're releasing the new website. You are looking at it.
  id: totrans-split-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们发布了新网站。您正在查看它。
- en: We're publishing [rev.ng Hub](https://hub.rev.ng), the entrypoint to use the
    cloud version of rev.ng.
  id: totrans-split-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们发布了[rev.ng Hub](https://hub.rev.ng)，这是使用 rev.ng 云版本的入口。
- en: Beta users will be able to create projects, run the UI in the browser and collaborate
    with other users without installing anything.
  id: totrans-split-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 封闭测试用户将能够创建项目，在浏览器中运行 UI 并与其他用户协作，无需安装任何内容。
- en: If you're not part of the closed beta yet, you can still [explore existing public
    projects](https://hub.rev.ng/).
  id: totrans-split-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您尚未参与封闭测试，仍然可以[探索现有的公共项目](https://hub.rev.ng/)。
- en: We're starting to look for people curious about getting a private demo of the
    rev.ng capabilities ([interested?](mailto:info@rev.ng)).
  id: totrans-split-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们开始寻找对 rev.ng 功能感兴趣的人，希望能提供私人演示（[有兴趣吗？](mailto:info@rev.ng)）。
- en: '[](#2-how-to-try-revng)2\. How to try rev.ng'
  id: totrans-split-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[](#2-how-to-try-revng)2\. 如何尝试 rev.ng'
- en: Very briefly, let's install `revng`. No root required, everything will fit into
    a single directory that you can discard at any time.
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 简要地，让我们安装`revng`。无需 root 权限，所有内容都将适合一个单独的目录，您随时可以丢弃它。
- en: '[PRE0]'
  id: totrans-split-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'OK, let''s now decompile a simple program. Consider `example.c`:'
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，现在让我们来反编译一个简单的程序。考虑`example.c`：
- en: '[PRE1]'
  id: totrans-split-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You can compile and decompile it:'
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以编译和反编译它：
- en: '[PRE2]'
  id: totrans-split-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You should obtain:'
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该获得：
- en: '[PRE3]'
  id: totrans-split-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Alternatively, take a look at the [documentation](https://docs.rev.ng). In particular,
    make sure you correctly [set up a working environment](https://docs.rev.ng/user-manual/working-environment/),
    follow the tutorial to [create a model from scratch](http://docs.rev.ng/user-manual/model-tutorial/)
    or try directly the [analyses tutorial](http://docs.rev.ng/user-manual/analyses/),
    which will show you how to decompile a program in a single invocation.
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，看看[文档](https://docs.rev.ng)。特别是，确保正确地[设置工作环境](https://docs.rev.ng/user-manual/working-environment/)，按照教程[从头开始创建模型](http://docs.rev.ng/user-manual/model-tutorial/)或者直接尝试[分析教程](http://docs.rev.ng/user-manual/analyses/)，这将展示如何一次性调用反编译程序。
- en: To try the UI, [register to our newsletter](/newsletter-subscribe). As mentioned
    before, we'll soon start inviting people in small batches.
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: 要尝试 UI，请[注册我们的 newsletter](/newsletter-subscribe)。正如之前提到的，我们很快将开始分批邀请人员。
- en: Note that the goal of this release is to demo the UI and the decompilation results
    on some binaries on which we get interesting results, let people work on some
    real world binaries and then let people try whatever they like and get feedback,
    bug reports and so on.
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，此版本的目标是演示UI和对一些二进制文件的反编译结果，并在我们得到有趣结果的一些实际二进制文件上让人们进行工作，然后让人们尝试并获得反馈、错误报告等。
- en: 'In particular, here are some non-trivial binaries (with their `.text` size)
    that we use for testing: [hostname](https://rev.ng/downloads/binaries/hostname)
    (2K), [ntfscat](https://rev.ng/downloads/binaries/ntfscat) (4K), [umount](https://rev.ng/downloads/binaries/umount)
    (8K), [chroot](https://rev.ng/downloads/binaries/chroot) (15K), [nc.openbsd](https://rev.ng/downloads/binaries/nc.openbsd)
    (15K), [apt-get](https://rev.ng/downloads/binaries/apt-get) (18K), [df](https://rev.ng/downloads/binaries/df)
    (45K), [parted](https://rev.ng/downloads/binaries/parted) (38K), [gzip](https://rev.ng/downloads/binaries/gzip)
    (54K), [updatedb.plocate](https://rev.ng/downloads/binaries/updatedb.plocate)
    (56K), [resolvectl](https://rev.ng/downloads/binaries/resolvectl) (61K), [ps](https://rev.ng/downloads/binaries/ps)
    (47K).'
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是，以下是我们用于测试的一些非平凡二进制文件（及其`.text`大小）：[hostname](https://rev.ng/downloads/binaries/hostname)（2K）、[ntfscat](https://rev.ng/downloads/binaries/ntfscat)（4K）、[umount](https://rev.ng/downloads/binaries/umount)（8K）、[chroot](https://rev.ng/downloads/binaries/chroot)（15K）、[nc.openbsd](https://rev.ng/downloads/binaries/nc.openbsd)（15K）、[apt-get](https://rev.ng/downloads/binaries/apt-get)（18K）、[df](https://rev.ng/downloads/binaries/df)（45K）、[parted](https://rev.ng/downloads/binaries/parted)（38K）、[gzip](https://rev.ng/downloads/binaries/gzip)（54K）、[updatedb.plocate](https://rev.ng/downloads/binaries/updatedb.plocate)（56K）、[resolvectl](https://rev.ng/downloads/binaries/resolvectl)（61K）、[ps](https://rev.ng/downloads/binaries/ps)（47K）。
- en: rev.ng supports many ABIs and platforms. However, at this stage, we performed
    initial QA on Linux x86-64 binaries. rev.ng will evolve significantly during the
    closed beta period, so make sure you follow our [X/Twitter account](https://twitter.com/_revng)
    and are subscribed to our [monthly newsletter](/newsletter-subscribe) to know
    when it's time to come back to try out some new features!
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
  zh: rev.ng支持许多ABI和平台。但是，在这个阶段，我们在Linux x86-64二进制文件上执行了初始QA。rev.ng在封闭测试期间将有显著发展，因此请确保您关注我们的[X/Twitter账号](https://twitter.com/_revng)并订阅我们的[月刊](/newsletter-subscribe)以了解何时回来尝试一些新功能！
- en: If you have problems, head to [Discourse](https://discuss.rev.ng/) for help.
  id: totrans-split-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您遇到问题，请转到[Discourse](https://discuss.rev.ng/)寻求帮助。
- en: '[](#3-our-goals)3\. Our goals'
  id: totrans-split-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[](#3-our-goals)3\.我们的目标'
- en: 'This is a good time for a refresher about what the rev.ng decompiler is about.
    In brief, we focus on:'
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是了解rev.ng反编译器的好时机。简而言之，我们专注于：
- en: automatic recovery of data structures;
  id: totrans-split-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据结构的自动恢复;
- en: a modern UX;
  id: totrans-split-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现代用户体验;
- en: collaborative reversing;
  id: totrans-split-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协作逆向工程;
- en: wide platform support;
  id: totrans-split-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 广泛的平台支持;
- en: extensibility.
  id: totrans-split-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可扩展性。
- en: '[](#automatic-data-structures-recovery)Automatic data structures recovery'
  id: totrans-split-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#automatic-data-structures-recovery)自动数据结构恢复'
- en: Thanks to Data Layout Analysis, we can automatically recover the layout of `struct`s
    *interprocedurally*.
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
  zh: 通过数据布局分析，我们可以自动*过程间*恢复`struct`的布局。
- en: 'Consider the following `struct`, a node in a linked list with an array of 5
    integers:'
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下`struct`，一个带有5个整数数组的链表中的节点：
- en: '[PRE4]'
  id: totrans-split-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'A function summing the elements of the array:'
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
  zh: '一个对数组元素求和的函数:'
- en: '[PRE5]'
  id: totrans-split-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'And a function traversing the linked list:'
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
  zh: '并且一个遍历链表的函数:'
- en: '[PRE6]'
  id: totrans-split-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'rev.ng produces the following output out of the box (except for the comments):'
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
  zh: rev.ng生产的输出默认情况下如下（除了注释）：
- en: '[PRE7]'
  id: totrans-split-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Pretty nice, isn't it? You can also directly on [Hub](https://hub.rev.ng/revng-demos/linked-list)
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
  zh: 很不错，不是吗？您还可以直接在[Hub](https://hub.rev.ng/revng-demos/linked-list)上进行。
- en: 'Bonus: we emit syntactically valid C code.'
  id: totrans-split-59
  prefs: []
  type: TYPE_NORMAL
  zh: 额外奖励：我们生成语法上有效的C代码。
- en: '**Status as of today**: available.'
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**截至今日状态**：可用。'
- en: '[](#a-modern-ux)A modern UX'
  id: totrans-split-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#a-modern-ux)现代用户体验'
- en: Our UI is based on VSCode. If you use VSCode, you already know how to use it.
    Also, the UI can both run in a browser tab or as a standalone application.
  id: totrans-split-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的UI基于VSCode。如果您使用VSCode，您已经知道如何使用它。此外，UI可以在浏览器标签中运行，也可以作为独立应用程序运行。
- en: 'Shortcuts:'
  id: totrans-split-63
  prefs: []
  type: TYPE_NORMAL
  zh: '快捷方式:'
- en: '`Ctrl + Click`, navigates to the definition of the function/type under the
    cursor.'
  id: totrans-split-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Ctrl + 单击`，导航到光标下的函数/类型定义。'
- en: '`N` renames it.'
  id: totrans-split-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`N`重命名它。'
- en: '`Y` let''s you edit its type.'
  id: totrans-split-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Y`让你编辑它的类型。'
- en: '`X` shows references.'
  id: totrans-split-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`X`显示引用。'
- en: rev.ng is not just a decompiler, it's an *interactive* decompiler. This means
    that you can make changes interactively and only the things that are affected
    by your change will be recomputed, just like you would expect.
  id: totrans-split-68
  prefs: []
  type: TYPE_NORMAL
  zh: rev.ng不仅仅是一个反编译器，它是一个*交互式*反编译器。这意味着您可以交互式地进行更改，只有受到您更改影响的内容才会重新计算，就像您所期望的那样。
- en: '**Status as of today**: the UI is available for participants in the closed
    beta.'
  id: totrans-split-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**今日状态**：UI现在仅限于封闭测试的参与者。'
- en: '[](#collaborative-reversing)Collaborative reversing'
  id: totrans-split-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#collaborative-reversing)协作逆向'
- en: The rev.ng UI has a client-server architecture.
  id: totrans-split-71
  prefs: []
  type: TYPE_NORMAL
  zh: rev.ng UI采用客户端-服务器架构。
- en: Multiple users can connect to the same daemon instance and work at the same
    time on the same project. If you use the cloud version, you also get a GitHub-like
    application to manage projects, the [rev.ng Hub](https://hub.rev.ng).
  id: totrans-split-72
  prefs: []
  type: TYPE_NORMAL
  zh: 多个用户可以连接到同一个守护程序实例，并同时在同一个项目上工作。如果您使用云版本，还可以获得类似GitHub的应用程序来管理项目，[rev.ng Hub](https://hub.rev.ng)。
- en: '**Status as of today**: works, needs some love to improve the user experience
    ([roadmap item #797](/roadmap#feature-797)).'
  id: totrans-split-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**今日状态**：运行正常，需要一些改进用户体验的工作（[路线图项目＃797](/roadmap#feature-797)）。'
- en: '[](#wide-architecture-support)Wide architecture support'
  id: totrans-split-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#wide-architecture-support)广泛的架构支持'
- en: In order to understand why we can easily support many architectures, let's briefly
    digress on compilers and emulators.
  id: totrans-split-75
  prefs: []
  type: TYPE_NORMAL
  zh: 为了理解为什么我们可以轻松支持许多架构，让我们简要地讨论一下编译器和模拟器。
- en: Compiler are usually organized in frontend, mid-end and backend. The frontend
    handles details specific to the input language. The mid-end performs optimizations
    on an intermediate representation (IR) that is independent of both the input language
    and the target architecture. Finally, the backend performs architecture-specific
    optimizations and outputs executable code.
  id: totrans-split-76
  prefs: []
  type: TYPE_NORMAL
  zh: 编译器通常分为前端、中间端和后端。前端处理特定于输入语言的细节。中间端在独立于输入语言和目标架构的中间表示（IR）上执行优化。最后，后端执行特定于架构的优化并输出可执行代码。
- en: 'Let''s consider a part of the LLVM ecosystem:'
  id: totrans-split-77
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一下 LLVM 生态系统的一部分：
- en: LLVM IR is LLVM's intermediate representation.
  id: totrans-split-78
  prefs: []
  type: TYPE_NORMAL
  zh: LLVM IR 是 LLVM 的中间表示。
- en: 'Let''s now consider QEMU, a well-known emulator. When running in emulation
    mode, as opposed to virtualization mode (e.g., KVM), works in a similar fashion.
    It has its own frontends, its own IR (tiny code) and multiple backends. The main
    difference relies in the fact that the input is not C or C++ but ARM or x86-64
    executable code:'
  id: totrans-split-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们考虑一下 QEMU，这是一个著名的模拟器。当在仿真模式下运行时，与虚拟化模式（例如 KVM）相反，它工作方式类似。它有自己的前端，自己的IR（简明代码）和多个后端。主要区别在于输入不是
    C 或 C++，而是 ARM 或 x86-64 可执行代码：
- en: This type of emulation is also known as dynamic binary translation.
  id: totrans-split-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这种类型的仿真也被称为动态二进制翻译。
- en: 'Now, rev.ng works like this:'
  id: totrans-split-81
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，rev.ng 的工作方式如下：
- en: Basically we use the first half of the QEMU pipeline to *lift* executable code
    to tiny code, convert it to LLVM IR and then proceed with the decompilation process.
  id: totrans-split-82
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上我们使用 QEMU 管道的第一半将可执行代码提升为简明代码，转换为 LLVM IR，然后继续反汇编过程。
- en: This means we can support any [architecture supported by QEMU](https://wiki.qemu.org/Documentation/Platforms)
    with relative ease.
  id: totrans-split-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们可以相对轻松地支持由QEMU支持的任何[架构](https://wiki.qemu.org/Documentation/Platforms)。
- en: However, architecture support is just part of the story. The other big topic
    is how well a certain platform or, more specifically, an ABI, is supported. In
    this regard, we put a lot of effort to be able to describe in a declarative way
    all the properties of an ABI. Our [ABI description format](https://github.com/revng/revng/tree/f297712/share/revng/abi)
    is general enough that supporting new ABIs will be quite easy.
  id: totrans-split-84
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，架构支持只是故事的一部分。另一个重要议题是某个平台或更具体地说是ABI的支持有多好。在这方面，我们付出了很多努力，以便能够以声明性的方式描述ABI的所有属性。我们的[ABI描述格式](https://github.com/revng/revng/tree/f297712/share/revng/abi)足够通用，以至于支持新的ABI将会相当容易。
- en: '**Status as of today**: we support x86, x86-64, ARM, AArch64, MIPS, and s390x
    to various degrees of maturity. In terms of binary formats, we support ELF, PE/COFF
    and Mach-O. We can also import from `.idb`, DWARF debug info and PDB debug info.
    We performed most QA on Linux x86-64 binaries, all the rest needs additional QA.'
  id: totrans-split-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**今日状态**：我们针对x86、x86-64、ARM、AArch64、MIPS和s390x有不同程度的成熟支持。在二进制格式方面，我们支持ELF、PE/COFF和Mach-O。我们还可以从`.idb`、DWARF调试信息和PDB调试信息中导入。我们对Linux
    x86-64二进制文件进行了大部分的QA，其余都需要额外的QA。'
- en: If you have a specific interest in some platform (and a budget), [we're happy
    to talk `:)`](mailto:info@rev.ng).
  id: totrans-split-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对某个平台有特殊兴趣（并且有预算），[我们很乐意交谈`:)`](mailto:info@rev.ng)。
- en: 'Track the [roadmap item #58](/roadmap#feature-58) for further QA on more platforms.'
  id: totrans-split-87
  prefs: []
  type: TYPE_NORMAL
  zh: 跟踪[路线图项目＃58](/roadmap#feature-58)以进一步对更多平台进行QA。
- en: '[](#extensibility)Extensibility'
  id: totrans-split-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#extensibility)可扩展性'
- en: rev.ng aspires to become the go-to framework for reverse engineering tools.
    For this reason, the whole project is open source, with the exception of our interactive
    UI.
  id: totrans-split-89
  prefs: []
  type: TYPE_NORMAL
  zh: rev.ng 力求成为反向工程工具的首选框架。因此，整个项目都是开源的，除了我们的交互式 UI 外。
- en: rev.ng is also easily scriptable. Our project file, [the model](https://docs.rev.ng/user-manual/model/),
    is just a YAML document. Here's an example with some comments.
  id: totrans-split-90
  prefs: []
  type: TYPE_NORMAL
  zh: rev.ng 也很容易脚本化。我们的项目文件，[模型](https://docs.rev.ng/user-manual/model/)，只是一个 YAML
    文档。以下是带有一些注释的示例。
- en: '[PRE8]'
  id: totrans-split-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The docs offers a [step-by-step tutorial](http://docs.rev.ng/user-manual/model-tutorial/)
    to understand the model above.
  id: totrans-split-92
  prefs: []
  type: TYPE_NORMAL
  zh: 该文档提供了一个 [逐步教程](http://docs.rev.ng/user-manual/model-tutorial/) 来理解上述模型。
- en: Basically, if you can parse JSON or YAML, you can script rev.ng.
  id: totrans-split-93
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，如果您可以解析 JSON 或 YAML，您可以脚本化 rev.ng。
- en: We plan to offer easy-to-use wrappers for Python and TypeScript to easily make
    changes and obtain artifacts (e.g., decompiled code or disassembly).
  id: totrans-split-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们计划为 Python 和 TypeScript 提供易于使用的包装器，以便轻松进行更改并获取工件（例如反编译代码或汇编）。
- en: 'Example usage in Python:'
  id: totrans-split-95
  prefs: []
  type: TYPE_NORMAL
  zh: Python 示例用法：
- en: '[PRE9]'
  id: totrans-split-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Example usage in TypeScript:'
  id: totrans-split-97
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScript 示例用法：
- en: '[PRE10]'
  id: totrans-split-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-split-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Finally, since we use extensively use LLVM IR as our main internal representation,
    you can exploit many many tool in its ecosystem. For instance, you could use [KLEE](https://klee.github.io/)
    to perform symbolic execution or [SanitizerCoverage](https://clang.llvm.org/docs/SanitizerCoverage.html)
    + [libFuzzer](https://llvm.org/docs/LibFuzzer.html) (or other tools) to perform
    coverage-guided fuzzing. Also, since the output of our decompiler is valid C,
    we've also been able to play around with [clang static analyzer](https://clang-analyzer.llvm.org/)
    to look for common vulnerabilities directly on the decompiled code. But this probably
    deserves a blog post on its own.
  id: totrans-split-100
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，由于我们广泛使用 LLVM IR 作为主要的内部表示形式，您可以在其生态系统中利用许多工具。例如，您可以使用 [KLEE](https://klee.github.io/)
    进行符号执行，或者使用 [SanitizerCoverage](https://clang.llvm.org/docs/SanitizerCoverage.html)
    + [libFuzzer](https://llvm.org/docs/LibFuzzer.html)（或其他工具）进行覆盖引导模糊测试。此外，由于我们的反编译器的输出是有效的
    C 代码，我们还能够使用 [clang 静态分析器](https://clang-analyzer.llvm.org/) 直接查找反编译代码中的常见漏洞。但这可能需要另一篇专门的博客文章。
- en: '**Status as of today**: we have Python and TypeScript wrappers to manipulate
    the model, but not an easy way to run analyses and fetch artifacts. [Roadmap item
    #17](/roadmap#feature-17) tracks building a full fledged Python client.'
  id: totrans-split-101
  prefs: []
  type: TYPE_NORMAL
  zh: '**截至今日的状态**：我们有 Python 和 TypeScript 包装器来操作模型，但还没有简便的方式来运行分析和获取工件。[路线图项目 #17](/roadmap#feature-17)
    跟踪构建一个完整的 Python 客户端。'
- en: '[](#4-open-source-vs-free-to-use-vs-premium)4\. Open source vs free-to-use
    vs premium'
  id: totrans-split-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[](#4-open-source-vs-free-to-use-vs-premium)4\. 开源 vs 免费使用 vs 高级版'
- en: For a quick comparison of the various components of rev.ng take a look at the
    [feature comparison page](/pricing).
  id: totrans-split-103
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解 rev.ng 各组件的快速比较，请查看 [功能比较页面](/pricing)。
- en: 'Very briefly:'
  id: totrans-split-104
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之：
- en: The rev.ng framework is fully open source. You can decompile anything you want
    from the CLI.
  id: totrans-split-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: rev.ng 框架完全开源。您可以从 CLI 反编译任何您想要的内容。
- en: 'The UI will be available in the following forms:'
  id: totrans-split-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: UI 将以以下形式提供：
- en: free to use in the cloud for public projects;
  id: totrans-split-107
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 公共项目在云端免费使用；
- en: available through a subscription in the cloud for private projects;
  id: totrans-split-108
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 适用于云端私有项目的订阅；
- en: available at a cost as a fully standalone, fully offline application.
  id: totrans-split-109
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为完全独立、完全脱机应用程序的成本可用。
- en: '[](#revng-in-the-cloud)rev.ng in the cloud?'
  id: totrans-split-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#revng-in-the-cloud)rev.ng 云端版本？'
- en: Yes.
  id: totrans-split-111
  prefs: []
  type: TYPE_NORMAL
  zh: 是的。
- en: You can create a project through [rev.ng Hub](https://hub.rev.ng/) and invite
    collaborators.
  id: totrans-split-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过 [rev.ng Hub](https://hub.rev.ng/) 创建项目并邀请协作者。
- en: The UI runs in the browser.
  id: totrans-split-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: UI 在浏览器中运行。
- en: The backend runs in our cloud.
  id: totrans-split-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 后端在我们的云端运行。
- en: 'Here''s the deal:'
  id: totrans-split-115
  prefs: []
  type: TYPE_NORMAL
  zh: 这是交易的内容：
- en: Public projects are free. If you're OK with having your project file public,
    you can use the cloud version of rev.ng for free, UI included.
  id: totrans-split-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 公共项目免费。如果您愿意让您的项目文件公开，您可以免费使用 rev.ng 云版本，包括 UI。
- en: Private projects require a subscription.
  id: totrans-split-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 私有项目需要订阅。
- en: We're also willing to discuss installing a private instance of the rev.ng cloud
    service on premise, if you're into kubernetes. [Interested?](mailto:info@rev.ng)
  id: totrans-split-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对 Kubernetes 感兴趣，我们也愿意讨论在本地安装 rev.ng 云服务的私有实例。[有兴趣吗？](mailto:info@rev.ng)
- en: As mentioned above, we will also offer a fully standalone version of the UI
    for which you can buy a regular license and run it wherever you prefer.
  id: totrans-split-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所述，我们还将提供一个完全独立的 UI 版本，您可以购买常规许可证并在任何地方运行它。
- en: '[](#5-the-roadmap)5\. The roadmap'
  id: totrans-split-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[](#5-the-roadmap)5\. 发展路线图'
- en: rev.ng is a complex project and getting to the 1.0 version is going to take
    quite some effort. But don't worry, we have a detailed roadmap on how to get there.
  id: totrans-split-121
  prefs: []
  type: TYPE_NORMAL
  zh: rev.ng 是一个复杂的项目，要达到 1.0 版本需要相当大的努力。但不用担心，我们有详细的路线图来达成这一目标。
- en: 'The roadmap is divided into 4 tiers:'
  id: totrans-split-122
  prefs: []
  type: TYPE_NORMAL
  zh: 路线图分为 4 个层级：
- en: 'Tier 1 (done): alpha version, demo to friends.'
  id: totrans-split-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Tier 1（已完成）：alpha 版本，向朋友展示演示。
- en: 'Tier 2 (starts today): beta version, give access to the cloud version to newsletter
    subscribers.'
  id: totrans-split-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Tier 2（今天开始）：beta 版本，向通讯订阅者提供云端版本的访问权限。
- en: 'Tier 3 (to come): open beta.'
  id: totrans-split-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Tier 3（即将推出）：公开 beta 版本。
- en: 'Tier 4 (to come): 1.0 release.'
  id: totrans-split-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Tier 4（即将推出）：1.0 版本发布。
- en: Want to know more? Check out the [detailed roadmap page](/roadmap).
  id: totrans-split-127
  prefs: []
  type: TYPE_NORMAL
  zh: 想了解更多？查看[详细路线图页面](/roadmap)。
- en: '[](#6-how-to-get-in-touch-and-stay-up-to-date)6\. How to get in touch and stay
    up to date'
  id: totrans-split-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[](#6-how-to-get-in-touch-and-stay-up-to-date)6\. 如何联系和保持最新'
- en: 'We publish and can be contacted in several ways:'
  id: totrans-split-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们发布内容并可以通过多种方式联系我们：
- en: '[X/Twitter](https://twitter.com/_revng): frequent news about development and
    major announcements.'
  id: totrans-split-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[X/Twitter](https://twitter.com/_revng)：频繁发布开发进展和重要公告。'
- en: '[Discord](https://discord.gg/wEQtgKJxcX): random chat and real-time discussions
    with the dev team.'
  id: totrans-split-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Discord](https://discord.gg/wEQtgKJxcX)：与开发团队进行随机聊天和实时讨论。'
- en: '[Discourse](https://discuss.rev.ng/): a forum for users to get support and
    report bugs.'
  id: totrans-split-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Discourse](https://discuss.rev.ng/)：用户获取支持和报告错误的论坛。'
- en: '[GitHub](https://github.com/revng): where all our open source development takes
    place, please open an issue if you''re trying to extend rev.ng.'
  id: totrans-split-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[GitHub](https://github.com/revng)：我们所有开源开发都在这里进行，请在尝试扩展 rev.ng 时提出问题。'
- en: '[Monthly newsletter](/newsletter-subscribe): subscribe to participate in the
    closed beta and get monthly news about the project advancements.'
  id: totrans-split-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每月通讯](/newsletter-subscribe)：订阅以参与封闭 beta 测试，并获取项目进展的每月通讯。'
- en: '[E-mail](mailto:info@rev.ng): want some privacy? Drop us an e-mail.'
  id: totrans-split-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[电子邮件](mailto:info@rev.ng)：希望保持隐私？给我们发电子邮件。'
- en: That's all for today. Stay tuned for more! 🚀
  id: totrans-split-136
  prefs: []
  type: TYPE_NORMAL
  zh: 今天的内容就到这里。敬请关注更多动态！ 🚀
