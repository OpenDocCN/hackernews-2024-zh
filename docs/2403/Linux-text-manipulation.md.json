["```\njoe@popos> sp current\nAlbum Tea For The Tillerman (Remastered 2020)\nAlbumArtist Yusuf / Cat Stevens\nArtist Yusuf / Cat Stevens\nTitle Wild World \n```", "```\nsp current | sed '' # no action given, sed will print the lines as is\nsp current | sed 's/Cat/Dog/g' # replace Cat with Dog and print every line \n```", "```\n# the n flag suppresses the automatic printing\n# this will replace Cat with Dog but print nothing!\nsp current | sed  -n 's/Cat/Dog/g' \n```", "```\n# p prints a line\n# so this will print each line twice (default + p action)\nsp current | sed  'p'\n\n# if we combine -n with the p action we can do this\n# this is equivalent to plain sed ''\nsp current | sed -n  'p'\n\n# we can print a specific line too (we'll need this later!)\n# this will print every line AND print the second line an extra time\nsp current | sed '2p' \n```", "```\n# finally, we can chain actions.\n# this substitutes Cat with Dog and prints ONLY the 2nd line, because of the n flag.\nsp current | sed -n 's/Cat/Dog/g;2p' \n```", "```\nsp current | sed -n '3p;4p' \n```", "```\nArtist       Yusuf/Cat Stevens\nTitle        Wild World \n```", "```\n# we're splitting the input by spaces and picking the 2nd column\nsp current | cut  -d ' '  -f2 \n```", "```\n# the s flag specifies what to trim\nsp current |  tr -s ' ' | cut -d ' ' -f2 \n```", "```\nArtist       Yusuf/Cat Stevens\nTitle        Wild World\n\nYusuf/Cat\nWild \n```", "```\nsp current | tr -s ' ' | cut -d ' '  -f2- | sed -n '3p;4p' \n```", "```\nYusuf/Cat Stevens\nWild World \n```", "```\nsp current | awk '{print $1}' \n```", "```\n{print} # no condition given, prints every line.\n\n# NR==1 matches the 1st line only\n# thus, this will print the 1st line\nNR==1{print} \n\n# any subsequent script isn't part of the condition. \n# despite them being on the same line.\n# this will print the print every line + the first line again\nNR==1{print}{print} \n```", "```\n# awk has pre-defined globals corresponding to columns in your input\n# this behaves like sed and will print the first column.\n{print $1}\n\n# $0 matches the entire line\n# this is equivalent to {print}\n{print $0} \n```", "```\nNR==1{x=$1}{print x} \n```", "```\nsp current | ... | awk 'NR==1{a=$0; next}{print $0 \" by \" a}' \n```", "```\nYusuf/Cat Stevens\nWild World\n\nWild World by Yusuf/Cat Stevens \n```", "```\nsp current | tr -s ' ' | cut -d ' ' -f2- | sed -n '3p;4p' | awk 'NR==1{a=$0; next}{print $0 \" by \" a}' \n```"]