- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:46:41'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Create Virtual USB Sticks With A Raspberry Pi Zero | Hackaday
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://hackaday.com/2024/03/09/create-virtual-usb-sticks-with-a-raspberry-pi-zero/](https://hackaday.com/2024/03/09/create-virtual-usb-sticks-with-a-raspberry-pi-zero/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Playing back music files from USB sticks is a common feature these days, and
    is built-into the infotainment system in [Folkert van Heusden]’s Opel Astra. Unfortunately
    such USB playback features often come with a range of limitations on things like
    audio codecs, and in the case of [Folkert]’s car, a 1000 file limit. This had
    him [looking at an alternative](https://vanheusden.com/electronics/virtual-usb/)
    to lugging a lot of USB sticks around to avoid the horror of hearing the same
    songs within a week while commuting. The solution? Make a Raspberry Pi Zero into
    a virtual USB mass storage device using the Mass Storage Gadget ([MSG](https://www.kernel.org/doc/html/latest/usb/mass-storage.html))
    driver in the Linux kernel.
  prefs: []
  type: TYPE_NORMAL
- en: 'Picking USB storage as the ideal option here comes mostly from the age of the
    infotainment system, which lacks Bluetooth, and the audio input jack is rather
    crackly. Of course, having the Raspberry Pi Zero pretend to be a storage device
    via the MSG driver wouldn’t solve the file limit, but to get around this two Python
    scripts were written: one which creates images from a folder of music files, and
    another which randomly picks one of the available images from the Zero’s SD card
    and configures the MSG driver to use it.'
  prefs: []
  type: TYPE_NORMAL
- en: As for the list of future improvements, there is mounting the RPi Zero’s SD
    card as read-only to deal with the power-off when the car is shut down, and the
    creating of images requires to be run as root due to the use of loopback devices.
    As a Proof-of-Concept it does seem to be on the right track.
  prefs: []
  type: TYPE_NORMAL
- en: It’s not just the older infotainment systems that get to have all the fun. If
    you’re lucky enough to have Linux running in the dashboard, you might be little
    more than a [Bash script away from bending the system to your will](https://hackaday.com/2021/01/30/nissan-gives-up-root-shell-thanks-to-hacked-usb-drive/).
  prefs: []
  type: TYPE_NORMAL
