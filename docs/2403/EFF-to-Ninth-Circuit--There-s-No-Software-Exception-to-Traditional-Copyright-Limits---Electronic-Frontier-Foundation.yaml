- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:53:40'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:53:40'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'EFF to Ninth Circuit: There’s No Software Exception to Traditional Copyright
    Limits | Electronic Frontier Foundation'
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: EFF致第九巡回上诉法院：传统版权限制没有软件例外 | 电子前沿基金会
- en: 来源：[https://www.eff.org/deeplinks/2024/03/eff-ninth-circuit-theres-no-software-exception-traditional-copyright-limits](https://www.eff.org/deeplinks/2024/03/eff-ninth-circuit-theres-no-software-exception-traditional-copyright-limits)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.eff.org/deeplinks/2024/03/eff-ninth-circuit-theres-no-software-exception-traditional-copyright-limits](https://www.eff.org/deeplinks/2024/03/eff-ninth-circuit-theres-no-software-exception-traditional-copyright-limits)
- en: Copyright’s reach is already far too broad, and courts have no business expanding
    it any further, particularly where that reframing will undermine adversarial interoperability.
    Unfortunately, a federal district court did just that in the latest iteration
    of *Oracle v. Rimini*, concluding that software Rimini developed was a “derivative
    work” because it was intended to interoperate with Oracle's software, even though
    the update didn’t use any of Oracle’s copyrightable code.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 版权的影响已经太广泛，法院没有任何理由进一步扩展它，特别是在这种重新框定将破坏对立互操作性的情况下。不幸的是，联邦地方法院在*Oracle v. Rimini*案件的最新审理中就是这样做的，得出结论认为Rimini开发的软件是“衍生作品”，因为它旨在与Oracle的软件进行互操作，即使该更新并未使用任何Oracle可版权代码。
- en: That’s a dangerous precedent. If a work is derivative, it may infringe the copyright
    in the preexisting work from which it, well, derives. For decades, software developers
    have relied, correctly, on the settled view that a work is not derivative under
    copyright law unless it is “substantially similar” to a preexisting work in both
    ideas and expression. Thanks to that rule, software developers can build innovative
    new tools that interact with preexisting works, including tools that improve privacy
    and security, without fear that the companies that hold rights in those preexisting
    works would have an automatic copyright claim to those innovations.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个危险的先例。如果一个作品是衍生作品，它可能侵犯与之相关的原有作品的版权。几十年来，软件开发者正确地依赖于一个已定的观点，即根据版权法，一个作品只有在“实质上相似”于原有作品的想法和表达方式时才是衍生作品。由于这一规则，软件开发者可以开发与现有作品互动的创新工具，包括提高隐私和安全性的工具，而不必担心拥有这些现有作品版权的公司对这些创新提出自动版权主张。
- en: That’s why EFF, along with a diverse group of stakeholders representing consumers,
    small businesses, software developers, security researchers, and the independent
    repair community, filed an [amicus brief](https://www.eff.org/document/eff-rimini-amicus-brief)
    in the Ninth Circuit Court of Appeals explaining that the district court ruling
    is not just bad policy, it’s also bad law.  Court after court has confronted the
    challenging problem of applying copyright to functional software, and until now
    none have found that the copyright monopoly extends to interoperable software
    absent substantial similarity. In other words, there is no “software exception”
    to the definition of derivative works, and the Ninth Circuit should reject any
    effort to create one.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: That’s why EFF, along with a diverse group of stakeholders representing consumers,
    small businesses, software developers, security researchers, and the independent
    repair community, filed an [amicus brief](https://www.eff.org/document/eff-rimini-amicus-brief)
    in the Ninth Circuit Court of Appeals explaining that the district court ruling
    is not just bad policy, it’s also bad law.  Court after court has confronted the
    challenging problem of applying copyright to functional software, and until now
    none have found that the copyright monopoly extends to interoperable software
    absent substantial similarity. In other words, there is no “software exception”
    to the definition of derivative works, and the Ninth Circuit should reject any
    effort to create one.
- en: The district court’s holding relied heavily on an erroneous interpretation of
    a 1998 case, *Micro Star v. FormGen*. In that case, the plaintiff, FormGen, published
    a video game following the adventures of action hero Duke Nukem. The game included
    a software tool that allowed players themselves to build new levels to the game
    and share them with others. Micro Star downloaded hundreds of those user-created
    files and sold them as a collection. When FormGen sued for copyright infringement,
    Micro Star argued that because the user files didn’t contain art or code from
    the FormGen game, they were not derivative works.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 地方法院的判决在1998年案件*Micro Star v. FormGen*的解释上严重依赖于错误的理解。在那个案例中，原告FormGen发布了一款以动作英雄杜克·尼柯姆为主角的视频游戏。该游戏包含一个软件工具，允许玩家自己构建新的游戏关卡并与他人分享。Micro
    Star下载了数百个这些用户创建的文件，并将它们作为一个集合出售。当FormGen因版权侵权而起诉时，Micro Star辩称，由于用户文件并未包含来自FormGen游戏的艺术或代码，因此它们并不是衍生作品。
- en: 'The Ninth Circuit Court of Appeals ruled against Micro Star, explaining that:'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 第九巡回上诉法院对Micro Star做出了不利判决，并解释道：
- en: '*[t]he work that Micro Star infringes is the [Duke Nukem] story itself—a beefy
    commando type named Duke who wanders around post-Apocalypse Los Angeles, shooting
    Pig Cops with a gun, lobbing hand grenades, searching for medkits and steroids,
    using a jetpack to leap over obstacles, blowing up gas tanks, avoiding radioactive
    slime. A copyright owner holds the right to create sequels and the stories told
    in the [user files] are surely sequels, telling new (though somewhat repetitive)
    tales of Duke’s fabulous adventures.*'
  id: totrans-split-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*[t]微星侵犯的作品是[Duke Nukem]的故事本身——一个叫杜克的肌肉壮汉在末日后的洛杉矶四处游荡，用枪打猪警察，扔手榴弹，寻找医药包和类固醇，使用喷气背包跃过障碍物，炸毁汽油罐，避开放射性污泥。版权所有者拥有创作续集和[Duke]用户文件中讲述的故事的权利，这些文件无疑是续集，讲述了杜克精彩冒险的新（虽然有些重复）故事。*'
- en: Thus, the user files were “substantially similar” because they *functioned as
    sequels* to the video game itself—specifically the story and principal character
    of the game. If the user files had told a different story, with different characters,
    they would not be derivative works. For example, a company offering a Lord of
    the Rings game might include tools allowing a user to create their own character
    from scratch. If the user used the tool to create a hobbit, that character might
    be considered a derivative work. A unique character that was simply a 21^(st)
    century human in jeans and a t-shirt, not so much.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，用户文件被认为“实质上相似”，因为它们*作为游戏的续集*——特别是游戏的故事和主要角色。如果用户文件讲述了一个不同的故事，具有不同的角色，那么它们就不会是衍生作品。例如，一家公司提供了一个《魔戒》游戏，允许用户从头开始创建自己的角色。如果用户使用工具创建了一个霍比特人，那个角色可能会被视为衍生作品。然而，一个只是穿着牛仔裤和T恤的21世纪人类的独特角色，可能就不会。
- en: Still, even confined to its facts, *Micro Star* stretched the definition of
    derivative work. By misapplying *Micro Star* to purely functional works that do
    not incorporate *any* protectable expression, however, the district court rewrote
    the definition altogether. If the court’s analysis were correct, rightsholders
    would suddenly have a new default veto right in all kinds of works that are intended
    to “interact and be useable with” their software. Unfortunately, they are all
    too likely to use that right to threaten add-on innovation, security, and repair.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管仅限于其事实，*微星* 还是对衍生作品的定义进行了扩展。然而，地方法院错误地将*微星* 应用于纯功能作品，这些作品并未包含*任何*可保护的表达，于是地方法院彻底改写了这一定义。如果法院的分析是正确的，版权持有者突然间会在各种“与其软件交互并可用”的作品中拥有新的默认否决权。不幸的是，他们很有可能利用这一权利来威胁附加创新、安全性和修复。
- en: Defenders of the district court’s approach might argue that interoperable software
    will often be protected by fair use. As copyrightable software is found in everything
    from phones to refrigerators, fair use is an essential safeguard for the development
    of interoperable tools, where those tools might indeed qualify as derivative works.
    But many developers cannot afford to litigate the question, and they should not
    have to just because one federal court misread a decades-old case.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 辩护地区法院方法的人可能会辩称，互操作软件通常受到公平使用的保护。由于可版权软件存在于从手机到冰箱的各种设备中，公平使用是互操作工具开发的重要保障，这些工具确实可能符合衍生作品的条件。但许多开发者无法承担诉讼费用，他们不应该仅因为一家联邦法院错误解读了几十年前的案件而被迫诉讼。
