["```\n[Message part 1 (text/plain, inline)]\n```", "```\nPackage: xz-utils\nVersion: 5.6.1+really5.4.5-1\nSeverity: important\nTags: security\n\nI count a minimum of 750 commits or contributions to xz by Jia Tan, who\nbackdoored it.\n\nThis includes all 700 commits made after they merged a pull request in Jan 7\n2023, at which point they appear to have already had direct push access, which\nwould have also let them push commits with forged authors. Probably a number of\nother commits before that point as well.\n\nReverting the backdoored version to a previous version is not sufficient to\nknow that Jia Tan has not hidden other backdoors in it. Version 5.4.5 still\ncontains the majority of those commits.\n\nCommits by them such as 18d7facd3802b55c287581405c4d49c98708c136 \nand ae5c07b22a6b3766b84f409f1b6b5c100469068a show that they were deep\ninto analyzing the security of xz. They were well placed to insert a buffer\noverflow that could allow eg, a targeted xz file to cause arbitrary code\nexecution. The impact of such a security hole could be much more stealthy and\nbad than the known backdoor since it would allow chaining xz with other\nunrelated software releases on an ongoing basis.\n\nThe package should be reverted to a version before their involvement,\nwhich started with commit 6468f7e41a8e9c611e4ba8d34e2175c5dacdbeb4.\nOr their early commits vetted and revert to a later point, but any arbitrary \ncommit by a known bad and malicious actor almost certainly has less value\nthan the risk that a subtle change go unnoticed.\n\nI'd suggest reverting to 5.3.1\\. Bearing in mind that there were security\nfixes after that point for ZDI-CAN-16587 that would need to be reapplied.\n\n-- \nsee shy jo\n\n```", "```\n[signature.asc (application/pgp-signature, inline)]\n```", "```\n[Message part 1 (text/plain, inline)]\n```", "```\nOn 2024-03-29 16:25, Joey Hess wrote:\n> I'd suggest reverting to 5.3.1\\. Bearing in mind that there were security\n> fixes after that point for ZDI-CAN-16587 that would need to be reapplied.\n\nNote that reverted to such an old version will break packages that use\nnew symbols introduced since then. From a quick look, this is at least:\n- dpkg\n- erofs-utils\n- kmod\n\nHaving dpkg in that list means that such downgrade has to be planned\ncarefully.\n\nRegards\nAurelien\n\n-- \nAurelien Jarno                          GPG: 4096R/1DDD8C9B\naurelien@aurel32.net                     http://aurel32.net\n\n```", "```\n[signature.asc (application/pgp-signature, inline)]\n```", "```\nAurelien Jarno dixit:\n\n>Having dpkg in that list means that such downgrade has to be planned\n>carefully.\n\nRight. Not an argument against, though.\nInstead, this is a very good idea.\n\nWhat symbols are new? Can we somehow stub them, or at least where\nthose are used? Or change the soname, so that the old and new-older\nversions are coïnstallable for during the upgrade?\n\nbye,\n//mirabilos\n-- \n<igli> exceptions: a truly awful implementation of quite a nice idea.\n<igli> just about the worst way you could do something like that, afaic.\n<igli> it's like anti-design.  <mirabilos> that too… may I quote you on that?\n<igli> sure, tho i doubt anyone will listen ;)\n\n```", "```\nMaybe the people who criticized xz back in the day for being an amateur\nproject implementing a defective file format were right all along?\n\nhttps://www.nongnu.org/lzip/xz_inadequate.html\n\nRegards\nStephan\n\n```", "```\nOn Fri, 29 Mar 2024 22:32:23 +0100 Aurelien Jarno <aurelien@aurel32.net> \nwrote:\n> Having dpkg in that list means that such downgrade has to be planned\n> carefully.\n\nMight be easier overall to spend that effort on a hard switch to zstd \ninstead.\n\nmfG mow\n\n```", "```\nOn Sat, 2024-03-30 at 00:48:34 +0000, Stephan Verbücheln wrote:\n> Maybe the people who criticized xz back in the day for being an amateur\n> project implementing a defective file format were right all along?\n> \n> https://www.nongnu.org/lzip/xz_inadequate.html\n\n*Sigh*, the current situation is bad enough, and has nothing to do\nwith the xz format or design, or the FUD and propaganda from that\nlink. Please drop it…\n\nThanks,\nGuillem\n\n```", "```\n> Might be easier overall to spend that effort on a hard switch to zstd\n> instead.\n\nGood point. Another question that we'll probably have to ask anyway\nis, what is the future of xz-utils going to be now? Regarding its\nmaintainership as well, both upstream and in Debian?\n\nFrom what I understand, this package has been NMU'd in Debian for more\nthan 10 years now - thanks to Sebastian for his work - and that might\nhave been a point of weakness which was exploited to push a compromised\nversion into the Debian archive, as seen in #1067708\\. To quote Thorsten\nfrom that thread:\n\n> Very much *not* a fan of NMUs doing large changes such as\n> new upstream versions.\n\nI can't say why exactly he would not be a fan, but with hindsight that\nwas an interesting call.\n\nPerhaps more importantly, it is said that the whole situation started\nwith the lack of resources from the upstream maintainer to maintain the\nproject:\n\nhttps://www.mail-archive.com/xz-devel@tukaani.org/msg00567.html\n\nwhich again, we can suspect at this point, was exploited with the same\nmodus operandi to get a compromise vector coopted in, in the form of a\nnew maintainer.\n\nAnd now if what we suspect is true, that relief maintainer has turned\nout to be a bad actor, which leaves upstream back to square one on the\nmaintainance issue. I understand that Lasse Collin hasn't been able to\nweigh in on the situation yet.\n\nIs xz-utils going to be maintained? Will we want to keep in the archive\nan unmaintained low-level library - low-level as in, susceptible of\ngetting pulled as a dependency in lots of places - and rely on it for\ncomponents such as dpkg?\n\nI'm not presuming the answers - it's still early and there is probably\nmore to figure out yet - but back to the original point, we might want\nto consider this when sketching longer-term plans.\n\n-- \nPierre Ynard\n\n```", "```\n[Message part 1 (text/plain, inline)]\n```", "```\nAurelien Jarno wrote:\n> Note that reverted to such an old version will break packages that use\n> new symbols introduced since then. From a quick look, this is at least:\n> - dpkg\n> - erofs-utils\n> - kmod\n> \n> Having dpkg in that list means that such downgrade has to be planned\n> carefully.\n\nI agree this would be a challanging downgrade. I've tried it myself\nexperimentally and once a downgraded liblzma5 is unpacked, dpkg-deb is broken\nwith missing symbol 'XZ_5.4'.\n\nRenaming liblzma5 to something else (liblzma6?) and making dpkg-deb\ndepend on that seems like one way to go that would avoid messy situations.\n\nFWIW, I rebuilt xz-utils 5.2.5-2.1~deb11u1 (from bullseye) on sid\nand then got dpkg to build against that successfully after a few minor\nchanges to dpkg's packaging:\n\n--- debian/libdpkg-dev.install.orig\t2024-03-30 07:31:46.635365816 -0400\n+++ debian/libdpkg-dev.install\t2024-03-30 07:34:48.667477725 -0400\n@@ -1,4 +1,5 @@\n usr/include/dpkg/*.h\n-usr/lib/*/pkgconfig/libdpkg.pc\n-usr/lib/*/libdpkg.a\n+usr/lib/pkgconfig/libdpkg.pc\n+usr/lib/libdpkg.a\n usr/share/aclocal/dpkg-*.m4\n+usr/lib/libdpkg.la\n\n(And after disabling the test suite since changes in xz message output\ncaused a test failure.)\n\n-- \nsee shy jo\n\n```", "```\n[signature.asc (application/pgp-signature, inline)]\n```", "```\n>>>>> On 2024-03-30, Guillem Jover wrote:\n>>>>> On Sat, 2024-03-30 at 00:48:34 +0000, Stephan Verbücheln wrote:\n\n >> Subject: Re: Bug#1068024: Or remove xz altogether?\n\n >> Maybe the people who criticized xz back in the day for being an amateur\n >> project implementing a defective file format were right all along?\n\n >> https://www.nongnu.org/lzip/xz_inadequate.html\n\n > *Sigh*, the current situation is bad enough, and has nothing to do\n > with the xz format or design, or the FUD and propaganda from that\n > link.  Please drop it…\n\n\tWhile I wouldn’t have brought it up myself, nor the arguably\n\tprovocative Subject: change (reverted), as it’s indeed only\n\ttangentially related to the issue at hand (which apparently\n\thave resulted from the absense of good faith developers\n\tvolunteering to maintain this project – and in a word of\n\tdefense, the design quality of a software project /does/\n\tinfluence both the amount of maintenance work and, other\n\tthings being equal, the desire to get involved), the comment\n\tabove got me curious: which parts of the document linked are\n\t‘FUD and propaganda’?  Because I’ve just glanced it over and\n\tI don’t find any obvious examples.\n\n\tGranted, I’m not an expert in the field of compression and\n\tcoding, per se, and can’t readily speak on the validity of\n\tmost of the arguments given there, those at least appear\n\tplausible.  Some arguments I find obvious, such as, e. g.:\n\n ADD> A well-known property of CRCs is their ability to detect burst\n ADD> errors up to the size of the CRC itself.  Using a CRC larger\n ADD> than the dataword is an error because a CRC just as large as\n ADD> the dataword equally detects all errors while it produces\n ADD> a lower number of false positives.\n\n\tIf there’s a reasonable rebuttal to the points raised in that\n\tdocument, I believe that a pointer to it would be appropriate\n\tfor this discussion.  Other than that, I’m not going to go on\n\tthis tangent any further here.  I’ll be monitoring a handful\n\tof Internet fora for that, though (news:alt.os.linux.debian,\n\tnews:comp.misc, irc://irc.efnet.org/%23coders, etc.)\n\n-- \nFSF associate member #7257  np. Moonsong — Shane Jackman\n\n```", "```\nLasse Collin provided a statement at <https://tukaani.org/xz-backdoor/>.\n\n```", "```\n[Message part 1 (text/plain, inline)]\n```", "```\nI have prepared a git repository that is a fork of xz from the point I\nidentified before the attacker(s) did anything to it. In my fork, I have\nrenamed liblzma to liblzmaunscathed. That allows it to be installed\nalongside current dpkg without breaking dpkg with an old version of\nliblzma. \n\nMy git repository is here (note all my commits are gpg signed):\nhttps://git.joeyh.name/index.cgi/xz-unscathed/\n\nIt also has a debian branch which contains a debian directory. I've\nbuilt packages of that, as well as building dpkg-1.22.6 against it.\nI've attached the patch I used to build dpkg.\n\nMy build of dpkg ended up not being linked to a lzma library at all,\nbecause liblzmaunscathed is too old to support concurrent decompression,\nwhich the configure script detects. So dpkg-deb instead uses xz-utils\nto decompress debs. I replaced xz-utils.deb with the one built from my\nfork, and dpkg seems to work fine using it.\n\nIf Debian decided to go this route, you could add xz-utils-unscathed\nto unstable, and at the same time update xz-utils to not build\nxz-utils.deb. Then build dpkg against it. Then look into forward porting\nor re-implementing concurrent decompression if that is really important\nto have.\n\nI only plan to maintain this fork minimally, eg backporting security\nfixes. The goal is not to take over from xz upstream, but to get the\npossibly backdoored code off of production systems ASAP. Presumably xz\nupstream will come up with their own solution long-term.\n\n-- \nsee shy jo\n\n```", "```\n[dpkg.patch (text/x-diff, attachment)]\n```", "```\n[signature.asc (application/pgp-signature, inline)]\n```", "```\nIt looks like more analysis has revealed this is a RCE with the\npayload in the modulus of a public key: \"The payload is extracted from\nthe N value (the public key) passed to RSA_public_decrypt, checked\nagainst a simple fingerprint, and decrypted with a fixed ChaCha20 key\nbefore the Ed448 signature verification...\" Also see\n<https://www.openwall.com/lists/oss-security/2024/03/30/36>.\n\n```", "```\nHey.\n\nCan we be confidently sure that going back to 5.4.5 is enough?\n\nAt least the git tag for that seems to be still signed by the\nadversary:\nhttps://git.tukaani.org/?p=xz.git;a=tag;h=9e4835399118b98954f110f76af2a0d504d2f531\n\nThe last one, still from Lasse Collin seems to be 5.4.1:\nhttps://git.tukaani.org/?p=xz.git;a=tag;h=f52502e78bf84f516a739e8d8a1357f27eeea75f\n\nCheers,\nChris.\n\n```", "```\nOn Sun, Mar 31, 2024 at 01:16:07AM +0100, Christoph Anton Mitterer wrote:\n> The last one, still from Lasse Collin seems to be 5.4.1:\n> https://git.tukaani.org/?p=xz.git;a=tag;h=f52502e78bf84f516a739e8d8a1357f27eeea75f\n\nThere are commits from Jia before that, and some that are authored by\nLasse but thank Jia for the contribution (the oldest one is 20e7a33e).\n\nThe most recent release that does not contain any of that seems to be\nv5.3.2alpha.\n\nBerto\n\n```", "```\nOne more thing:\n\nIs anyone on the Debian side trying to figure out how far we've been\npractically affected?\n\nI mean let's assume we're \"lucky\", and the backdoor is only in\n5.6.0/5.6.1... and that none of the adversary's earlier commits\nintroduced any serious holes[0] which wouldn't be known yet.\n\nThen many servers running Debian (which is then typically Debian\nstable), would be sill safe.\n\nHowever, many people (and I'd guess that includes DDs/DMs) run their\nworkstations/laptops with testing/unstable.\nSo IMO it's not enough to know that Debian stable is likely not\naffected - I'd be rather relieved if I'd knew that there's a good\nchance that the personal computers of most DDs/DMs (who push uploads,\netc. pp.) were (at least practically) safe.\n\nSome guy decrypted[1] the strings from the maleware's binary payload:\nhttps://gist.github.com/q3k/af3d93b6a1f399de28fe194add452d01#file-hashes-txt-L115\nwhere only /usr/sbin/sshd would be named.\n\nShould(!) it turn out, that the actual binary payload actually only\naffects sshd and especially does not on it's own pull in evil code, it\nmight at least be that all people who hadn't sshd running (or not\ndirectly accessible because a router/firewall/etc. was in front of it),\nwould effectively still be safe.\nNo idea whether or not this is really the case - but if so, it might at\nleast mean that many workstations/laptops are safe, because they're not\nusually directly accessible from the internet.\n\nBut even then, it would probably need to be checked whether all the\nversions that Debian ever used/shipped in\ntesting/unstable(/experimental) were actually fully identical to the\nversions that are now analysed by forensic folks.\n\nIs the security team doing anything like that?\n\nCheers,\nChris.\n\nPS: if someone from the security team reads along,\nhttps://gist.github.com/thesamesam/223949d5a074ebc3dce9ee78baad9e27\nwhich is from Sam James of Gentoo, seems to collect good information on\nwhat is known so far.\nMight be worth to add to the links in the security tracker.\n\n[0] There are reports about an added '.' in the CMakeLists.txt\ndisabling some sandboxing, but AFAICS at least the current version uses\nautotools for building?!\n\n[1] He also provided the code he used to do so.\nhttps://gist.github.com/q3k/af3d93b6a1f399de28fe194add452d01?permalink_comment_id=5006546#gistcomment-5006546\n\n```", "```\nPierre Ynard dixit:\n\n>version into the Debian archive, as seen in #1067708\\. To quote Thorsten\n>from that thread:\n>\n>> Very much *not* a fan of NMUs doing large changes such as\n>> new upstream versions.\n>\n>I can't say why exactly he would not be a fan, but with hindsight that\n>was an interesting call.\n\nIt turned out to indeed be related, although I cannot blame Sebastian\nfor not spotting it, as well as it was hidden. I actually wrote about\nthat earlier on Fedi: (Markdown formatting lost here though)\n\n| I was considering replying to this comment on the “please update xz\n| package” bugreport earlier with that the discussion is not irrelevant\n| and that it’s the maintainer’s responsibility on new upgrades to check\n| for new legal issues and “other hidden gems”.\n|\n| I didn’t because I didn’t want to bother going in with an annoyed\n| self-righteous “user”.\n|\n| Now it turns out all three of the involved ones were “string + number\n| @ freemailer” #JiaT75 sockpuppets, so it’s probably okay I didn’t\n| bother.\n|\n| Not that I blame Sebastian — it was very well hidden, and even my\n| usual diffing between old and new version would not have found it.\n|\n| I do take away from this to also check the diff between VCS repo at\n| the time of the release and release tarball. Perhaps also between\n| branch and tag if they, like Apache Tomcat, introduce extra commits\n| there.\n\n>Is xz-utils going to be maintained? Will we want to keep in the archive\n>an unmaintained low-level library - low-level as in, susceptible of\n>getting pulled as a dependency in lots of places - and rely on it for\n>components such as dpkg?\n\nThat scenario you describing here would actually be much less of a\nproblem. The problem comes when the library in that state then does\nget updates that probably are not even necessary but shiny enough\npeople demand them.\n\nbye,\n//mirabilos (also a Debian Developer, despite the From)\n-- \nWhen he found out that the m68k port was in a pretty bad shape, he did\nnot, like many before him, shrug and move on; instead, he took it upon\nhimself to start compiling things, just so he could compile his shell.\nHow's that for dedication. -- Wouter, about my Debian/m68k revival\n\n```", "```\nChristoph Anton Mitterer dixit:\n\n>Can we be confidently sure that going back to 5.4.5 is enough?\n\nNo.\n\n>The last one, still from Lasse Collin seems to be 5.4.1:\n\nIn this bugreport, we’re discussing going back to before any\ncontributions by the adversary. To see whether it’s an option\nat all (and it sounds like a sensible step right now) which\njoeyh confirmed (thanks).\n\nbye,\n//mirabilos\n-- \n22:20⎜<asarch> The crazy that persists in his craziness becomes a master\n22:21⎜<asarch> And the distance between the craziness and geniality is\nonly measured by the success 18:35⎜<asarch> \"Psychotics are consistently\ninconsistent. The essence of sanity is to be inconsistently inconsistent\n\n```", "```\nChristoph Anton Mitterer dixit:\n\n>Is anyone on the Debian side trying to figure out how far we've been\n>practically affected?\n\nYes, a multi-team task force is working on it and will inform users\nonce it is known how to proceed, inclusing how much to throw away\nand rebuild.\n\nbye,\n//mirabilos\n-- \n„Cool, /usr/share/doc/mksh/examples/uhr.gz ist ja ein Grund,\nmksh auf jedem System zu installieren.“\n\t-- XTaran auf der OpenRheinRuhr, ganz begeistert\n(EN: “[…]uhr.gz is a reason to install mksh on every system.”)\n\n```", "```\n[Message part 1 (text/plain, inline)]\n```", "```\nThe dpkg -> xz-utils downgrade problem has a suggestion that suggests\nitself.\n\n1) Downgrade dpkg's dependency to the last known good. It doesn't matter\nhow old so long as it can read the file formats. I understand this is\nlikely to be 5.4.1.\n\n2) Statically link all the decompressor libraries into dpkg. Yes this means\ngzip, bzip2, zstd, and xz's libraries. Today's compile and link time\noptimizers are pretty good; it should be able to drop all references to the\ncompression side pretty much by itself. This would generally be a pretty\ngood change of its own as it makes the minimal system easier to understand\nand the net-install CD smaller.\n\nThen you're free to do what you need to do for all the other dependencies\nof xz-utils.\n\n```", "```\n[Message part 2 (text/html, inline)]\n```", "```\nJoshua Hudson dixit:\n\n>2) Statically link all the decompressor libraries into dpkg. Yes this means\n\nTotally no.\n\nAlso, at this point in time, I’m pretty sure that new external\nsuggestions are… not very helpful. The situation is being analysed\nby a cross-team taskforce, please let them do the already-stressing\njob ☻\n\nbye,\n//mirabilos\n-- \n/⁀\\ The UTF-8 Ribbon\n╲ ╱ Campaign against\n ╳  HTML eMail! Also,\n╱ ╲ header encryption!\n\n```", "```\n[Message part 1 (text/plain, inline)]\n```", "```\nSince there's been some discussion about versions, the version in my\nxz-unscathed git repository is the same as xz 5.3.2alpha, with the\naddition of a fix for CVE-2022-1271 that did not make it into that\nversion. (It was fixed in 5.2.6, but 5.3.2alpha was diverged from\n5.2.5\\. Jia Tan was involved in 5.2.6.)\n\n5.2.5 might be a more stable version to revert to; it also predates\nJia Tan's involvement. The CVE-2022-1271 fix would need to be included.\n\nNote that erofs-utils apparently had a reason to need the 5.3.2alpha\nrelease, so reverting to 5.2.5 would probably cause difficulty with that\npackage. That dependency versioning information is not included in the\ndebian sources for erofs-utils BTW. I have not checked compatability\nwith other packages except for dpkg.\n\n-- \nsee shy jo\n\n```", "```\n[signature.asc (application/pgp-signature, inline)]\n```", "```\n[Message part 1 (text/plain, inline)]\n```", "```\n> The situation is being analysed by a cross-team taskforce,\n> please let them do the already-stressing job ☻\n\nSorry, didn't see that before sending my previous message.\nI'll leave it to you guys.\n\n-- \nsee shy jo\n\n```", "```\n[signature.asc (application/pgp-signature, inline)]\n```", "```\nAn important comment from oss-security mailing list message,\n<https://www.openwall.com/lists/oss-security/2024/03/31/4>:\n\ncommit f9cf4c05edd14dedfe63833f8ccbe41b55823b00 (HEAD -> master,\norigin/master, origin/HEAD)\nAuthor: Lasse Collin <lasse.collin@...aani.org>\nDate:   Sat Mar 30 14:36:28 2024 +0200\n\n    CMake: Fix sabotaged Landlock sandbox check.\n\n    It never enabled it.\n\n```", "```\nHi!\n\nOn Sat, 2024-03-30 at 14:16:52 -0400, Joey Hess wrote:\n> My git repository is here (note all my commits are gpg signed):\n> https://git.joeyh.name/index.cgi/xz-unscathed/\n\n> My build of dpkg ended up not being linked to a lzma library at all,\n> because liblzmaunscathed is too old to support concurrent decompression,\n> which the configure script detects. So dpkg-deb instead uses xz-utils\n> to decompress debs. I replaced xz-utils.deb with the one built from my\n> fork, and dpkg seems to work fine using it.\n\ndpkg should be able to use an old liblzma w/o multi-threaded compressor\nor decompressor support (both are intended to be optionally used if\navailable). I think the problem might be that you seem to have missed\nrenaming the .pc.in file, and that does not get included in the -dev\npackage perhaps, or not picked up then by dpkg with your attached\npatch to it? I only checked the renaming commit, didn't check the\npackaging nor tried to build it.\n\n(Please do not take this mail as endorsing any specific action, just\nwanted to clarify/correct the above.)\n\nThanks,\nGuillem\n\n```", "```\n[Message part 1 (text/plain, inline)]\n```", "```\nGuillem Jover wrote:\n> dpkg should be able to use an old liblzma w/o multi-threaded compressor\n> or decompressor support\n\nAh you're right. configure did find the library, but I'd missed updating\nsome ifdefs. Attached updated dpkg patch which does build with the\nshared library and works.\n\n-- \nsee shy jo\n\n```", "```\n[dpkg.patch (text/x-diff, attachment)]\n```", "```\n[signature.asc (application/pgp-signature, inline)]\n```", "```\nJoey Hess dixit:\n\n>--- orig/dpkg-1.22.6/debian/control\t2024-03-02 21:30:15.000000000 -0400\n>+++ dpkg-1.22.6/debian/control\t2024-03-30 13:14:37.746223895 -0400\n\n> # Version needed for multi-threaded decompressor support.\n>- liblzma-dev (>= 5.4.0),\n>+ liblzmaunscathed-dev,\n\nThe comment probably needs adjusting as well.\n\n> # Version needed for multi-threaded decompressor support.\n>- xz-utils (>= 5.4.0) <!nocheck>,\n>+ xz-utils <!nocheck>,\n\ndito\n\n> # Version needed for multi-threaded decompressor support.\n>- liblzma-dev (>= 5.4.0),\n>+ liblzmaunscathed-dev,\n\nidem\n\n> # Version needed for multi-threaded decompressor support.\n>- xz-utils (>= 5.4.0),\n>+ xz-utils,\n\nel mismo\n\n> # Version needed for multi-threaded decompressor support.\n>- xz-utils (>= 5.4.0),\n>+ xz-utils,\n\nthe same\n\n>--- orig/dpkg-1.22.6/debian/libdpkg-dev.install\t2024-02-04 22:31:16.000000000 -0400\n>+++ dpkg-1.22.6/debian/libdpkg-dev.install\t2024-03-30 13:25:27.043840706 -0400\n>@@ -1,4 +1,5 @@\n> usr/include/dpkg/*.h\n>-usr/lib/*/pkgconfig/libdpkg.pc\n>-usr/lib/*/libdpkg.a\n>+usr/lib/pkgconfig/libdpkg.pc\n>+usr/lib/libdpkg.a\n\nWhy, exactly, does the library move out of the M-A directory here?\n(Probably a question for guillem though.)\n\n>+usr/lib/libdpkg.la\n\nIIRC we were not shipping libtool files, were we? Or am I confusing\nthis with some BSD ports/packages now?\n\nbye,\n//mirabilos\n-- \n[...] if maybe ext3fs wasn't a better pick, or jfs, or maybe reiserfs, oh but\nwhat about xfs, and if only i had waited until reiser4 was ready... in the be-\nginning, there was ffs, and in the middle, there was ffs, and at the end, there\nwas still ffs, and the sys admins knew it was good. :)  -- Ted Unangst über *fs\n\n```", "```\nOn 2024-04-02 14:34:20 [+0200], Guillem Jover wrote:\n> (Please do not take this mail as endorsing any specific action, just\n> wanted to clarify/correct the above.)\n\nRight, same here. The 5.4.x series has threaded decompression which I\nwould like to keep. The 5.6.x series has branchless decompressor which\nimproves decompressing performance.\n\nThe 5.3.x series is alpha and should not be used in production but only\nfor testing. I'm not sure what happens with the XZ_5.3..alpha symbols, I\nhope they get ignored.\n\nI'm going to poke upstream if there is an audit and or future plans. But\nI want to stay on an official upstream release which is also used by\nother distros.\n\n> Thanks,\n> Guillem\n\nSebastian\n\n```", "```\n[Message part 1 (text/plain, inline)]\n```", "```\nOn Fri, 29 Mar 2024 22:32:23 +0100 Aurelien Jarno <aurelien@aurel32.net>\nwrote:\n> On 2024-03-29 16:25, Joey Hess wrote:\n> > I'd suggest reverting to 5.3.1\\. Bearing in mind that there were security\n> > fixes after that point for ZDI-CAN-16587 that would need to be\nreapplied.\n>\n> Note that reverted to such an old version will break packages that use\n> new symbols introduced since then. From a quick look, this is at least:\n> - dpkg\n> - erofs-utils\n> - kmod\n>\n> Having dpkg in that list means that such downgrade has to be planned\n> carefully.\n>\n> Regards\n> Aurelien\n>\n> --\n> Aurelien Jarno                          GPG: 4096R/1DDD8C9B\n> aurelien@aurel32.net                     http://aurel32.net\n\nmobile\n\n```", "```\n[Message part 2 (text/html, inline)]\n```", "```\nHey.\n\nOn Sun, 2024-03-31 at 01:46 +0000, Thorsten Glaser wrote:\n> Yes, a multi-team task force is working on it and will inform users\n> once it is known how to proceed, inclusing how much to throw away\n> and rebuild.\n\nKindly wanted to ask whether anything has come out meanwhile of that?\n\nI've tried to follow quite extensively what the various reverse\nengineering efforts (e.g. [0], [1], [2], [3]) found out or what's\nrevealed on index pages like [4] or [5].\n\nIt feels as if there are still many discussions about how to prevent\nsuch things in the future, but less so about the concrete fallout of\nthe particular backdoor, where it seems most people were lead to\nconclude from media reports, that an attack was only possible if sshd\nwas actually running an reachable.\n\nThis may of course be true, which would mean that most people are\nactually safe and we had quite some luck this time:\n- servers, because they run stable distros that haven't had the\n  backdoor\n- workstations/laptops, because they typically don't run a publicly\n  listending sshd\n\nBut there are still new findings about the backdoor every now and then,\nlike that it may read/write on IPC sockets (contained in [2]) and I've\nread similar[6] without the restriction on IPC.\nAlso I've seen some vague statements[7] that it might \"install\" public\nkeys (didn't really grasp what was meant there - something like \"in\nauthorized_keys\"). And one report[8] talked about it collecting\nusernames and IPs and passing the on to some function with unknown\npurpose.\n\nIt also seems like these effort focus mostly on the 5.6.1 version and\nwhile it's said that the 5.6.0 version is quite similar, who knows the\nexact details!?\n\nIn any case and (too) long story short:\n\nIt would be nice to know whether there's still work done about finding\nout whether people who had the malicious code on their systems (in any\nversion of the backdoor), but\n- had sshd not running at all\nand/or\n- it was not reachable from the internet\n\ncan feel safe.\n\nOr whether it may be possible that:\n- the backdoor did call home (loaded commands from there, leaked\n  private keys or so from the system)\n- used completely different vectors not involving sshd\n- or somehow else infested the system\n\nRight now people might still have backups to torch their possibly\ncompromised systems and start over from a safe sate.\n\nSo Thorsten, in case you or someone else is aware of any [intermediate]\nresults from these task forces ([9[) it would be nice to hear about\nthem or better even in form of some \"official\" statement from Debian.\n\nThanks,\nChris.\n\n[0] https://discord.gg/u6MzmQm5\n[1] https://github.com/smx-smx/xzre\n[2] https://github.com/binarly-io/binary-risk-intelligence/tree/master/xz-backdoor\n[3] https://securelist.com/xz-backdoor-story-part-1/112354/\n[4] https://gist.github.com/thesamesam/223949d5a074ebc3dce9ee78baad9e27\n[5] https://github.com/przemoc/xz-backdoor-links\n    https://przemoc.github.io/xz-backdoor-links/  (rendering of that)\n[6] https://discord.com/channels/1223666474091020432/1223666474972090430/1230974749522530304\n[7] https://discord.com/channels/1223666474091020432/1223666474972090430/1230173131746840606\n[8] https://isc.sans.edu/diary/30802\n[9] E.g. on d-d https://lists.debian.org/debian-devel/2024/03/msg00338.html\n    Moritz Mühlenhoff has mentioned that some company was working on it\n    and results were expected in some time.\n\n```", "```\nhi all\n\nLeaving aside the questions of dependencies of other Debian packages,\nI agree that 5.2.5 looks like the most recent version that is\ndefinitely free of any directly or indirectly authored contributions\nby Jia Tan.\n\nhttps://salsa.debian.org/debian/xz-utils/-/tree/v5.2.5?ref_type=tags\n\nIn the salsa full source:\n\n$ git checkout v5.2.5\nPrevious HEAD position was d24a57b7 Bump version and soname for 5.2.7.\nHEAD is now at 2327a461 Bump version and soname for 5.2.5.\n\n$ git log --stat --graph |grep \"Jia\"\n\n# No sign of Jia Tan.\n\n$ git checkout v5.2.6\nPrevious HEAD position was 2327a461 Bump version and soname for 5.2.5.\nHEAD is now at 8dfed05b Bump version and soname for 5.2.6.\n\n$ git log --stat --graph |grep \"Jia\" |wc\n     16     129     774\n\n# Two commits and several 'Thanks to ... '.\n\nCheers\nBoud\n\nPS: For any RedHat people reading this thread: unfortunately, 5.2.5 is\nbefore the fix 31d80c6b that Lasse Collin did to handle the \"ill patch\"\nintroduced by RHEL/CentOS7:\n\n  https://salsa.debian.org/debian/xz-utils/-/commit/31d80c6b261b24220776dfaeb8a04f80f80e0a24\n\nThat's a RHEL problem to handle, not a Debian problem.\n\n```", "```\nChristoph Anton Mitterer dixit:\n\n>So Thorsten, in case you or someone else is aware of any [intermediate]\n>results from these task forces ([9[) it would be nice to hear about\n>them or better even in form of some \"official\" statement from Debian.\n\nJFTR I’m not involved in those myself.\n\nbye,\n//mirabilos\n-- \nWhen he found out that the m68k port was in a pretty bad shape, he did\nnot, like many before him, shrug and move on; instead, he took it upon\nhimself to start compiling things, just so he could compile his shell.\nHow's that for dedication. -- Wouter, about my Debian/m68k revival\n\n```"]