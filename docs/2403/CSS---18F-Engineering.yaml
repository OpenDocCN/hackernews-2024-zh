- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-29 12:35:38'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-29 12:35:38'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: CSS | 18F Engineering
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CSS | 18F Engineering
- en: 来源：[https://guides.18f.gov/engineering/languages-runtimes/css/](https://guides.18f.gov/engineering/languages-runtimes/css/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://guides.18f.gov/engineering/languages-runtimes/css/](https://guides.18f.gov/engineering/languages-runtimes/css/)
- en: <main class="usa-layout-docs__main desktop:grid-col-9
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: <main class="usa-layout-docs__main desktop:grid-col-9
- en: usa-prose measure-5 engineering">
  id: totrans-split-7
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: usa-prose measure-5 engineering">
- en: CSS
  id: totrans-split-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CSS
- en: The purpose of the CSS coding styleguide is to create consistent CSS or preprocessor
    CSS code (such as [Sass](http://sass-lang.com)) in your projects. The styleguide
    should be treated as a guide — rules can be modified according to project needs.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: CSS编码风格指南的目的是在项目中创建一致的CSS或预处理器CSS代码（如[Sass](http://sass-lang.com)）。应将样式指南视为指南
    — 根据项目需求可以修改规则。
- en: Architecture[](#architecture)
  id: totrans-split-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 架构[](#architecture)
- en: A site's architecture should be based on its goals and purposes. This means
    the guidance here should be adapted to different sites and situations.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 网站的架构应基于其目标和目的。这意味着此处的指导应根据不同的站点和情况进行调整。
- en: Modular or component architecture[](#modular-or-component-architecture)
  id: totrans-split-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 模块化或组件化架构[](#modular-or-component-architecture)
- en: 'When using a modular or component architecture, every page is broken into a
    series of modular components. There are two sets of these components: `components`
    and `modules`. The architecture starts out with basic HTML element rules: HTML,
    p, a, form, etc tags that than have components and modules written on top of them.
    Components are very basic structure such as buttons, blurbs, navs, and positioning
    structures like insets, island, and enclosure. From here, modules are built with
    these components. This architecture also attempts to keep the specificity trend
    in an upwards curve as you move down in the file (more on this to come).'
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用模块化或组件化架构时，每个页面都被分解为一系列模块化组件。这些组件分为两类：`components`和`modules`。该架构从基本的HTML元素规则开始：HTML、p、a、form等标签，然后在其上编写组件和模块。组件是非常基本的结构，如按钮、简介、导航和位置结构（如插页、岛屿和围护）。接下来，使用这些组件构建模块。该架构还试图在文件中保持特异性趋势向上曲线，即向下移动文件时（稍后详细说明）。
- en: Start with an elements file for all tag rules (a, h1-h5, p, *, html, body).
  id: totrans-split-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从所有标签规则（a、h1-h5、p、*、html、body）的元素文件开始。
- en: Create component files for each structural element, such as buttons, navs, etc.
    These are mainly class-based and use [BEM](http://getbem.com/introduction/) or
    another naming scheme.
  id: totrans-split-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为每个结构元素创建组件文件，例如按钮、导航等。这些主要是基于类的，并使用[BEM](http://getbem.com/introduction/)或其他命名方案。
- en: Create more specific structure with modules. For instance, if the logo image
    and text needs very specific treatment, use a module.
  id: totrans-split-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用模块创建更具体的结构。例如，如果徽标图像和文本需要非常特定的处理方式，请使用模块。
- en: Build modules from components through mixins, extends, and HTML.
  id: totrans-split-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过混合、扩展和HTML从组件构建模块。
- en: Modules can have higher specificity, it’s fine to use deeper nesting.
  id: totrans-split-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模块可以具有更高的特异性，使用更深的嵌套也是可以的。
- en: Have an overrides file or folder comprised of global rules that are meant to
    override components and modules.
  id: totrans-split-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有一个覆盖文件或文件夹，包含用于覆盖组件和模块的全局规则。
- en: These can be generic utilities.
  id: totrans-split-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些可以是通用的工具。
- en: A good thing to put here are breakpoint-specific rules, such as hiding something
    at small breakpoints.
  id: totrans-split-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在此处放置特定于断点的规则是一个好方法，例如在小断点下隐藏某些内容。
- en: File structure[](#file-structure)
  id: totrans-split-22
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 文件结构[](#file-structure)
- en: '[PRE0]'
  id: totrans-split-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: For the `util`, `typography`, `elements`, and `overrides` files, once they grow
    too large (300 lines or more) in size, split them into their own folder with sub
    files.
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`util`、`typography`、`elements`和`overrides`文件，一旦它们的大小超过300行，将它们拆分为自己的文件夹和子文件。
- en: '[PRE1]'
  id: totrans-split-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Importing[](#importing)
  id: totrans-split-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 导入[](#importing)
- en: As you likely know, CSS rules that are later in the file override earlier rules.
    This means Sass imports can be used to control inheritance and specificity.
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您可能知道的那样，文件中后面的CSS规则会覆盖前面的规则。这意味着可以使用Sass导入来控制继承和特异性。
- en: Start with base elements
  id: totrans-split-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从基本元素开始
- en: Move to single nested classes and utils
  id: totrans-split-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转向单一嵌套类和utils
- en: Move next to more specific classes, often with nesting
  id: totrans-split-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转向更具体的类，通常是嵌套的
- en: Move next to overrides, possibly with !important rules
  id: totrans-split-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转向覆盖，可能带有重要的规则！
- en: Import alphabetically
  id: totrans-split-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按字母顺序导入
- en: Only modify import order for groups of files, not specific files
  id: totrans-split-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只能修改文件组的导入顺序，而不是特定的文件
- en: '[PRE2]'
  id: totrans-split-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Documentation[](#documentation)
  id: totrans-split-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文档[](#documentation)
- en: Be intentional when you use `//` (silent comments) versus `/* */` (which are
    preserved in the CSS output). When in doubt, use `//`.
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 `//`（静默注释）与 `/* */`（在 CSS 输出中保留）时要有意识。犹豫时，使用 `//`。
- en: KSS[](#kss)
  id: totrans-split-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: KSS[](#kss)
- en: Use KSS for documentation. More information on KSS can be found on the [official
    site](http://warpspire.com/kss/).
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 KSS 进行文档编写。更多关于 KSS 的信息可在[官方网站](http://warpspire.com/kss/)找到。
- en: Example[](#example)
  id: totrans-split-39
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 示例[](#example)
- en: '[PRE3]'
  id: totrans-split-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Rationale[](#rationale)
  id: totrans-split-41
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 理由[](#rationale)
- en: KSS is the most common CSS documentation method to date. While it’s not perfect,
    the generated documentation can be modified through templates.
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
  zh: KSS 是迄今为止最常见的 CSS 文档编写方法。虽然它并非完美，但生成的文档可以通过模板进行修改。
- en: Frameworks[](#frameworks)
  id: totrans-split-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 框架[](#frameworks)
- en: TTS recommends using the [U.S. Web Design System (USWDS)](https://github.com/uswds/uswds)
    as it is specifically designed to help build fast, accessible, mobile-friendly
    federal government websites.
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
  zh: TTS 建议使用 [美国网页设计系统（USWDS）](https://github.com/uswds/uswds)，因为它专为快速、无障碍和移动友好的联邦政府网站构建而设计。
- en: 'Sometimes, projects utilize other CSS frameworks such as:'
  id: totrans-split-45
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，项目可能使用其他 CSS 框架，例如：
- en: '[Bourbon](https://www.bourbon.io/)'
  id: totrans-split-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Bourbon](https://www.bourbon.io/)'
- en: '[BassCSS](https://basscss.com/)'
  id: totrans-split-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[BassCSS](https://basscss.com/)'
- en: These frameworks were chosen because they're relatively unopinionated about
    design decisions while still providing the helpers that make frameworks essential
    to fast and accurate frontend work, for example, solutions for responsive design,
    grids, and common design patterns. In addition, both frameworks, through modular
    design and excellent documentation, make it easy for the designer or developer
    to only use the parts that they need, rather than including a hefty library.
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这些框架之所以被选择，是因为它们在设计决策方面相对不持有意见，同时提供了使框架在快速准确的前端工作中不可或缺的帮助程序，例如响应式设计解决方案、网格和常见设计模式。此外，通过模块化设计和优秀的文档，这两个框架使设计师或开发人员能够仅使用他们需要的部分，而不必包含庞大的库。
- en: Do not use Bootstrap[](#do-not-use-bootstrap)
  id: totrans-split-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 不要使用 Bootstrap[](#do-not-use-bootstrap)
- en: 18F specifically does not recommend using [Bootstrap](http://getbootstrap.com/)
    for production work because it can be difficult to adapt its opinionated styles
    to bespoke design work.
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
  zh: 18F 特别不推荐在生产工作中使用 [Bootstrap](http://getbootstrap.com/)，因为难以将其偏见的样式适应定制设计工作。
- en: Formatting[](#formatting)
  id: totrans-split-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 格式化[](#formatting)
- en: We recommend using [Prettier](https://prettier.io), and enabling it in your
    editor by default. Prettier is an automatic code formatter that will make your
    code format consistent. This way we don't have to argue over how to format our
    code - we just let the tools enforce something! Prettier works with both plain
    CSS and SCSS.
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议使用 [Prettier](https://prettier.io)，并在默认情况下在您的编辑器中启用它。Prettier 是一个自动代码格式化工具，将使您的代码格式保持一致。这样我们就不必争论如何格式化我们的代码
    - 只需让工具强制执行即可！Prettier 可以同时处理普通 CSS 和 SCSS。
- en: Do not use shorthand declarations unless you need to explicitly set all the
    available values.
  id: totrans-split-53
  prefs: []
  type: TYPE_NORMAL
  zh: 除非需要明确设置所有可用值，否则不要使用缩写声明。
- en: '[PRE4]'
  id: totrans-split-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Avoid arbitrary numbers that are repeated, or linked, or dependent on other
    parts of the code, (aka “magic numbers”).
  id: totrans-split-55
  prefs: []
  type: TYPE_NORMAL
  zh: 避免重复、链接或依赖代码其他部分的任意数字（也称为“魔法数字”）。
- en: '[PRE5]'
  id: totrans-split-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Order[](#order)
  id: totrans-split-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 顺序[](#order)
- en: 'Use the following ordering:'
  id: totrans-split-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用以下排序：
- en: variables
  id: totrans-split-59
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 变量
- en: '@extend directives'
  id: totrans-split-60
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '@extend 指令'
- en: '@include directives'
  id: totrans-split-61
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '@include 指令'
- en: 'declaration list (`property: name;`)'
  id: totrans-split-62
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '声明列表（`property: name;`）'
- en: media queries
  id: totrans-split-63
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 媒体查询
- en: pseudo-states (`:checked`, `:target`, etc.) and pseudo-elements (`::after`,
    `::selection`, etc.)
  id: totrans-split-64
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 伪状态（`:checked`、`:target`等）和伪元素（`::after`、`::selection`等）
- en: nested elements
  id: totrans-split-65
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 嵌套元素
- en: nested classes
  id: totrans-split-66
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 嵌套类
- en: Use alphabetical order or type order for declarations. Pick one to keep the
    whole project consistent.
  id: totrans-split-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用字母顺序或类型顺序进行声明。选择一种并在整个项目中保持一致。
- en: Place a new line before nested selectors unless they are after the first selector.
  id: totrans-split-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在嵌套选择器之前放置一个新行，除非它们位于第一个选择器之后。
- en: Treat nested includes, such as Neat's media includes – `@include media($small-screen)`
    — as a standard media query, rather than a Sass @include. So they would be sorted
    directly after the declaration list.
  id: totrans-split-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将嵌套包括，例如 Neat 的媒体包括 – `@include media($small-screen)` — 视为标准媒体查询，而不是 Sass @include。因此，它们应直接在声明列表后排序。
- en: Place mixin calls with `@content` after nested selectors.
  id: totrans-split-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在嵌套选择器后面用 `@content` 放置混合调用。
- en: You may deviate the sorting order to better suit your project's needs, as long
    as it's consistent throughout the project.
  id: totrans-split-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以根据项目需求调整排序顺序，只要在整个项目中保持一致即可。
- en: '[PRE6]'
  id: totrans-split-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Inheritance[](#inheritance)
  id: totrans-split-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 继承[](#inheritance)
- en: Mixins[](#mixins)
  id: totrans-split-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 混合[](#mixins)
- en: Use mixins for groups of properties that appear together intentionally and are
    used multiple times.
  id: totrans-split-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于故意一起出现且多次使用的一组属性，使用mixin。
- en: '[PRE7]'
  id: totrans-split-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Use mixins for components to change size.
  id: totrans-split-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用mixin来为组件改变大小。
- en: Use mixins when something requires parameters.
  id: totrans-split-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当某些东西需要参数时使用mixin。
- en: '[PRE8]'
  id: totrans-split-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Do not use mixins for browser prefixes. Use [Autoprefixer](https://github.com/postcss/autoprefixer).
  id: totrans-split-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要为浏览器前缀使用mixin。使用[Autoprefixer](https://github.com/postcss/autoprefixer)。
- en: '[PRE9]'
  id: totrans-split-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Extend[](#extend)
  id: totrans-split-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 扩展[](#extend)
- en: 'Be very careful with using `@extend`. It''s a powerful tool that can have disastrous
    side-effects. Before using please consider:'
  id: totrans-split-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用`@extend`时要非常小心。它是一个功能强大的工具，但可能会导致灾难性的副作用。在使用之前，请考虑以下事项：
- en: Where is my current selector going to be appended?
  id: totrans-split-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当前选择器会被附加到哪里？
- en: Am I likely to be causing undesired side-effects?
  id: totrans-split-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我可能会造成不良副作用吗？
- en: How large is the CSS generated by this single extend?
  id: totrans-split-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个单个扩展生成的CSS有多大？
- en: 'If you''re unsure of using `@extend`, follow these rules to avoid running into
    trouble:'
  id: totrans-split-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不确定使用`@extend`，请遵循这些规则以避免出现问题：
- en: Use `@extend` from within a module, not across different modules.
  id: totrans-split-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在一个模块内部使用`@extend`，而不要在不同的模块之间使用。
- en: Use `@extend` on [placeholders](http://thesassway.com/intermediate/understanding-placeholder-selectors)
    exclusively, not on actual selectors.
  id: totrans-split-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅在[占位符](http://thesassway.com/intermediate/understanding-placeholder-selectors)上使用`@extend`，而不是实际选择器。
- en: Make sure the placeholder you extend is present as little as possible in the
    stylesheet.
  id: totrans-split-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保你扩展的占位符在样式表中尽可能少地出现。
- en: You can use [mixins](http://sass-lang.com/guide#mixins) in place of selectors.
    While mixins will copy more code, the difference will often be negligible once
    the output file has been gzipped.
  id: totrans-split-91
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[混入](http://sass-lang.com/guide#mixins)中使用，代替选择器。虽然混入会复制更多代码，但一旦输出文件被gzip压缩，差异通常可以忽略不计。
- en: Linting[](#linting)
  id: totrans-split-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码检查[](#linting)
- en: Using a linter will ensure that CSS code conforms to some consistent rules.
    A linting tool like [Stylelint](https://stylelint.io/) can issue warnings wherever
    your code differs from established rules.
  id: totrans-split-93
  prefs: []
  type: TYPE_NORMAL
  zh: 使用一个代码检查工具可以确保CSS代码符合一致的规则。像[Stylelint](https://stylelint.io/)这样的检查工具可以在你的代码与已建立规则不符时发出警告。
- en: Setting up Stylelint locally[](#setting-up-stylelint-locally)
  id: totrans-split-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在本地设置Stylelint[](#setting-up-stylelint-locally)
- en: Run `npm install --save-dev stylelint stylelint-config-standard` to download
    the package and save it to your package.json
  id: totrans-split-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`npm install --save-dev stylelint stylelint-config-standard`来下载这个包，并保存到你的`package.json`中。
- en: 'Create a .stylelintrc.json configuration file in the root of your project with
    the following content:'
  id: totrans-split-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目根目录下创建一个`.stylelintrc.json`配置文件，并包含以下内容：
- en: '[PRE10]'
  id: totrans-split-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Run Stylelint on all the CSS files in your project: `npx stylelint "**/*.css"`'
  id: totrans-split-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的项目中的所有CSS文件上运行Stylelint：`npx stylelint "**/*.css"`
- en: This utilizes stylelint's standard rules configuration for css linting. If your
    project needs different rules or defaults, or you'd like to extend linting to
    other types of files, you can utilize custom syntaxes or write your own.
  id: totrans-split-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这使用了stylelint的标准规则配置来进行CSS代码检查。如果你的项目需要不同的规则或默认设置，或者你想扩展到其他类型的文件，你可以利用自定义语法或编写你自己的规则。
- en: Stylelint has a [user guide](https://stylelint.io/user-guide/get-started) that
    will give you more details about how to configure and extend your linting rules.
  id: totrans-split-100
  prefs: []
  type: TYPE_NORMAL
  zh: Stylelint有一个[用户指南](https://stylelint.io/user-guide/get-started)，可以详细了解如何配置和扩展你的代码检查规则。
- en: Naming[](#naming)
  id: totrans-split-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 命名[](#naming)
- en: HTML elements should be in lowercase.
  id: totrans-split-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTML元素应该是小写的。
- en: '[PRE11]'
  id: totrans-split-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Classes should be lowercase.
  id: totrans-split-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类名应该是小写的。
- en: Avoid camelcase.
  id: totrans-split-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免使用驼峰命名法。
- en: Name things clearly.
  id: totrans-split-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 清晰地命名事物。
- en: Write classes semantically. Name its function not its appearance.
  id: totrans-split-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 语义化地编写类。命名其功能而不是外观。
- en: '[PRE12]'
  id: totrans-split-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Avoid presentation- or location-specific words in names, as this will cause
    problems when you (invariably) need to change the color, width, or feature later.
  id: totrans-split-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免在名称中使用与呈现或位置相关的词语，因为这会在你（必然）稍后需要更改颜色、宽度或特性时造成问题。
- en: '[PRE13]'
  id: totrans-split-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Be wary of naming components based on content, as this limits the use of the
    class.
  id: totrans-split-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当基于内容命名组件时要谨慎，因为这会限制类的使用。
- en: '[PRE14]'
  id: totrans-split-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Don't abbreviate unless it’s a well-known abbreviation.
  id: totrans-split-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 除非是众所周知的缩写，否则不要缩写。
- en: '[PRE15]'
  id: totrans-split-114
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Use quotes in type pseudo selectors.
  id: totrans-split-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在类型伪选择器中使用引号。
- en: '[PRE16]'
  id: totrans-split-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Name CSS components and modules with singular nouns.
  id: totrans-split-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用单数名为CSS组件和模块命名。
- en: '[PRE17]'
  id: totrans-split-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Name modifiers and state-based rules with adjectives.
  id: totrans-split-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用形容词为修改器和基于状态的规则命名。
- en: '[PRE18]'
  id: totrans-split-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: If your CSS has to interface with other CSS libraries, consider namespacing
    every class.
  id: totrans-split-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你的CSS必须与其他CSS库进行交互，请考虑对每个类进行命名空间处理。
- en: '[PRE19]'
  id: totrans-split-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Naming methodologies[](#naming-methodologies)
  id: totrans-split-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 命名方法论[](#naming-methodologies)
- en: When it comes to naming, the most important thing is consistency. The recommended
    way to do this is using an existing methodology like [BEM](#bem), or use a custom
    one that’s clearly defined.
  id: totrans-split-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在命名时，最重要的是一致性。推荐的做法是使用像[BEM](#bem)这样的现有方法，或者使用一个清晰定义的自定义方法。
- en: BEM[](#bem)
  id: totrans-split-125
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '[BEM](#bem)'
- en: '[BEM](http://getbem.com/introduction/) (**B**lock, **E**lement, **M**odifier)
    structures CSS such that every entity is composed of (you guessed it) blocks,
    elements and modifiers. From [Harry Roberts](http://csswizardry.com/2013/01/mindbemding-getting-your-head-round-bem-syntax/):'
  id: totrans-split-126
  prefs: []
  type: TYPE_NORMAL
  zh: '[BEM](http://getbem.com/introduction/)（**B**lock，**E**lement，**M**odifier）结构化CSS，使得每个实体都由（您猜对了）块、元素和修饰符组成。来自[Harry
    Roberts](http://csswizardry.com/2013/01/mindbemding-getting-your-head-round-bem-syntax/)：'
- en: The point of BEM is to tell other developers more about what a piece of markup
    is doing from its name alone. By reading some HTML with some classes in, you can
    see how – if at all – the chunks are related; something might just be a component,
    something might be a child, or element, of that component, and something might
    be a variation or modifier of that component.
  id: totrans-split-127
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: BEM的要点是仅凭其名称就能告诉其他开发人员有关标记块正在执行的更多信息。通过阅读一些带有类的HTML，您可以看到这些块如何（如果有的话）相关联；某些可能仅是一个组件，某些可能是该组件的子组件或元素，某些可能是该组件的变体或修饰符。
- en: 'TTS generally recommends using a modified BEM methodology outlined in the next
    subsection. However, you might want to use standard BEM when:'
  id: totrans-split-128
  prefs: []
  type: TYPE_NORMAL
  zh: TTS通常建议在下一小节中概述的修改版BEM方法。但是，当您需要使用标准BEM时：
- en: You need a naming scheme that general CSS developers will already be familiar
    with or an existing naming scheme hasn’t been consistent enough.
  id: totrans-split-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您需要一个通用CSS开发者已经熟悉的命名方案，或者现有的命名方案不够一致。
- en: When you want to use JavaScript to modify the BEM class names dynamically.
  id: totrans-split-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当您想要使用JavaScript动态修改BEM类名时。
- en: 'Here is an example of BEM in SCSS:'
  id: totrans-split-131
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是SCSS中BEM的一个示例：
- en: '[PRE20]'
  id: totrans-split-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Suggested custom methodology[](#suggested-custom-methodology)
  id: totrans-split-133
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 建议的自定义方法[](#suggested-custom-methodology)
- en: The TTS recommendation for a naming methodology is a modified version of BEM.
    It still uses blocks, sections within blocks and modifiers, but with an abbreviated
    syntax.
  id: totrans-split-134
  prefs: []
  type: TYPE_NORMAL
  zh: TTS对命名方法的推荐是修改版的BEM。它仍然使用块、块内部的部分和修饰符，但使用简化的语法。
- en: '[PRE21]'
  id: totrans-split-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Naming methodology resources[](#naming-methodology-resources)
  id: totrans-split-136
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 命名方法资源[](#naming-methodology-resources)
- en: js- flagged classes[](#js-flagged-classes)
  id: totrans-split-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 带有js-标记的类[](#js-flagged-classes)
- en: Don't attach styles to classes with a `js-` flag. These classes are reserved
    for javascript.
  id: totrans-split-138
  prefs: []
  type: TYPE_NORMAL
  zh: 不要将样式附加到带有`js-`标志的类。这些类保留用于JavaScript。
- en: '[PRE22]'
  id: totrans-split-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Rationale[](#rationale-1)
  id: totrans-split-140
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 理由[](#rationale-1)
- en: A `js-` flagged class needs to be highly portable. Adding styles to it breaks
    that portability.
  id: totrans-split-141
  prefs: []
  type: TYPE_NORMAL
  zh: 带有`js-`标记的类需要具有高度的可移植性。给它添加样式会破坏这种可移植性。
- en: test- flagged classes[](#test-flagged-classes)
  id: totrans-split-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 带有test-标记的类[](#test-flagged-classes)
- en: Don't attach styles to classes with a `test-` flag. These classes are reserved
    for testing hooks such as those used by selenium.
  id: totrans-split-143
  prefs: []
  type: TYPE_NORMAL
  zh: 不要将样式附加到带有`test-`标志的类。这些类保留用于诸如selenium之类的测试钩子。
- en: '[PRE23]'
  id: totrans-split-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Preprocessors[](#preprocessors)
  id: totrans-split-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预处理器[](#preprocessors)
- en: The most supported CSS preprocessor at TTS is [Sass](http://sass-lang.com).
    Using this preprocessor means you'll get supported resources such as frameworks,
    libraries, tutorials, and a comprehensive styleguide as support.
  id: totrans-split-146
  prefs: []
  type: TYPE_NORMAL
  zh: TTS最受支持的CSS预处理器是[Sass](http://sass-lang.com)。使用这个预处理器意味着您将获得支持的资源，如框架、库、教程和全面的样式指南。
- en: '*That being said, any preprocessor is allowed as long as it''s a sound project
    and has community support.*'
  id: totrans-split-147
  prefs: []
  type: TYPE_NORMAL
  zh: '*话虽如此，只要它是一个完善的项目并有社区支持，任何预处理器都是允许的。*'
- en: '[Dart Sass](https://sass-lang.com/dart-sass) is the primary implementation
    of Sass and is recommended for use in your projects.'
  id: totrans-split-148
  prefs: []
  type: TYPE_NORMAL
  zh: '[Dart Sass](https://sass-lang.com/dart-sass)是Sass的主要实现，并建议在项目中使用。'
- en: Command line installation[](#command-line-installation)
  id: totrans-split-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 命令行安装[](#command-line-installation)
- en: With npm[](#with-npm)
  id: totrans-split-150
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用npm[](#with-npm)
- en: With homebrew[](#with-homebrew)
  id: totrans-split-151
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用homebrew[](#with-homebrew)
- en: run `brew install sass/sass/sass`
  id: totrans-split-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行 `brew install sass/sass/sass`
- en: Other installations[](#other-installations)
  id: totrans-split-153
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 其他安装[](#other-installations)
- en: You can read about other installation methods on [their website](https://sass-lang.com/install).
  id: totrans-split-154
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[他们的网站](https://sass-lang.com/install)上了解其他安装方法。
- en: Specificity[](#specificity)
  id: totrans-split-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[特异性](#specificity)'
- en: IDs should be reserved for JavaScript. Don’t use IDs for styles.
  id: totrans-split-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ID应保留用于JavaScript。不要为样式使用ID。
- en: '[PRE24]'
  id: totrans-split-157
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Don't nest more than 3 layers deep.
  id: totrans-split-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要嵌套超过3层。
- en: Do not fix problems with `!important`. Use `!important` purposefully.
  id: totrans-split-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要使用`!important`来解决问题。有目的地使用`!important`。
- en: '[PRE25]'
  id: totrans-split-160
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Keep specificity low and trend upwards in specificity as you move further down
    file. See the [specificity graph](#specificity-graph) section for more info.
  id: totrans-split-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持低特异性并向下文件中的特异性趋势上升。有关更多信息，请参见[特异性图](#specificity-graph)部分。
- en: Don't use unnecessary tag selectors.
  id: totrans-split-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要使用不必要的标签选择器。
- en: '[PRE26]'
  id: totrans-split-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'If you have to hack specificity, use a safe hack: the *multi class*.'
  id: totrans-split-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果必须提高特异性，请使用安全的方法：*多类*。
- en: '[PRE27]'
  id: totrans-split-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Specificity graph[](#specificity-graph)
  id: totrans-split-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 特异性图[](#specificity-graph)
- en: An easy rule to use when dealing with specificity is to start from a low specificity
    and curve to higher specificity as you move towards the bottom of the output file.
    Since CSS rules get replaced by rules further down in the file, you'll override
    rules in an expected way.
  id: totrans-split-167
  prefs: []
  type: TYPE_NORMAL
  zh: 处理特异性时的一个简单规则是从低特异性开始，向底部输出文件的方向逐渐提高特异性。由于 CSS 规则会被文件中更下方的规则替换，因此您将以预期的方式覆盖规则。
- en: There’s a tool that can graph your files’ specificity, [CSS specificity graph](http://jonassebastianohlsson.com/specificity-graph/).
    Run your final output file through this tool and strive for a curve trending upwards.
  id: totrans-split-168
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个可以绘制文件特异性的工具，[CSS 特异性图](http://jonassebastianohlsson.com/specificity-graph/)。请通过此工具运行您的最终输出文件，并努力使曲线向上趋势。
- en: Resources[](#resources)
  id: totrans-split-169
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 资源[](#resources)
- en: Rationale[](#rationale-2)
  id: totrans-split-170
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 理由[](#rationale-2)
- en: With specificity comes great responsibility. Broad selectors allow us to be
    efficient, yet can have adverse consequences if not tested. Location-specific
    selectors can save us time, but will quickly lead to a cluttered stylesheet. Exercise
    your best judgment to create selectors that find the right balance between contributing
    to the overall style and layout of the DOM.
  id: totrans-split-171
  prefs: []
  type: TYPE_NORMAL
  zh: 具体性带来了极大的责任。广泛的选择器使我们能够高效，但如果不经过测试可能会产生不良后果。特定位置的选择器可以节省时间，但会迅速导致样式表混乱。请慎重选择选择器，以找到在整体
    DOM 样式和布局中平衡的最佳方式。
- en: When modifying an existing element for a specific use, try to use specific class
    names. Instead of `.listings-layout.bigger` use rules like `.listings-layout.listings-bigger`.
    Think about ack/grepping your code in the future.
  id: totrans-split-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当修改现有元素以用于特定用途时，请尝试使用特定的类名。而不是`.listings-layout.bigger`，应使用类似`.listings-layout.listings-bigger`的规则。考虑将来使用
    ack/grep 搜索您的代码。
- en: Use lowercase and separate words with hyphens when naming selectors. Avoid camelcase
    and underscores. Use human-readable selectors that describe what element(s) they
    style.
  id: totrans-split-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在命名选择器时，请使用小写字母并用连字符分隔单词。避免使用驼峰命名法和下划线。使用描述元素样式的可读性选择器。
- en: Attribute selectors should use double quotes around values. Refrain from using
    over-qualified selectors; `div.container` can simply be stated as `.container`.
  id: totrans-split-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 属性选择器应该在值周围使用双引号。避免使用过度限定的选择器；`div.container`可以简单地表示为`.container`。
- en: IDs should be reserved for JavaScript. Unless you have a very good reason, all
    CSS should be attached to classes rather than IDs. When in doubt, use a class
    name. This prevents target confusion and allows CSS devs and JS devs to co-exist
    in the same code in peace. If you must use an id selector (`#id`) make sure that
    you have no more than one in your rule declaration.
  id: totrans-split-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ID 应该保留给 JavaScript 使用。除非有非常好的理由，所有 CSS 都应该附加到类而不是 ID。当犹豫时，请使用类名。这可以防止目标混乱，让
    CSS 开发者和 JS 开发者和平共处。如果必须使用 ID 选择器（`#id`），确保在规则声明中不超过一个。
- en: Units[](#units)
  id: totrans-split-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 单位[](#units)
- en: Measurements[](#measurements)
  id: totrans-split-177
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测量[](#measurements)
- en: 'Use **rem** units for font sizes with a px fallback. This can be done with
    the following mixin:'
  id: totrans-split-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**rem**单位设置字体大小，并提供像素回退。可以通过以下 mixin 实现：
- en: '[PRE28]'
  id: totrans-split-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Set the HTML font size to `10px` to ensure that `0.1rem` equals `1px`.
  id: totrans-split-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 HTML 字体大小设置为`10px`，以确保`0.1rem`等于`1px`。
- en: '[PRE29]'
  id: totrans-split-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Use **em** units for positioning.
  id: totrans-split-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**em**单位进行定位。
- en: Use **percentages** when layout components stay relational to each other (e.g.
    a main content area that takes up 75% of the screen and a sidebar that takes up
    25%).
  id: totrans-split-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在布局组件相对于彼此保持关系时（例如占屏幕 75% 的主内容区域和占 25% 的侧边栏），请使用**百分比**。
- en: '[PRE30]'
  id: totrans-split-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Use **px** units for when a measurement shouldn't change based on user set font
    size or browser zooming or for when requiring pixel values below 5.
  id: totrans-split-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当测量不应基于用户设置的字体大小或浏览器缩放时，使用**px**单位。
- en: '[PRE31]'
  id: totrans-split-186
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Use unitless values for `line-height` as this will inherit values from the `font-size`.
  id: totrans-split-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于`line-height`，请不要使用带单位的值，因为这将从`font-size`继承值。
- en: Use up to 10 decimal places in em units to ensure accuracy.
  id: totrans-split-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 em 单位中使用多达 10 位小数以确保准确性。
- en: '[PRE32]'
  id: totrans-split-189
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Do not use a unit with 0.
  id: totrans-split-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要在零值上使用单位。
- en: '[PRE33]'
  id: totrans-split-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Always use a unit for dimensions, margins, borders, padding, and typography.
  id: totrans-split-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在尺寸、边距、边框、填充和排版中始终使用单位值。
- en: '[PRE34]'
  id: totrans-split-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Colors[](#colors)
  id: totrans-split-194
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 颜色[](#colors)
- en: Use **hex** notation first, or then **rgb(a)**, or **hsl(a)**.
  id: totrans-split-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先使用**十六进制**表示法，然后是**rgb(a)**或**hsl(a)**。
- en: Both three-digit and six-digit hexadecimal notation are acceptable.
  id: totrans-split-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可接受三位数和六位数的十六进制表示法。
- en: When denoting color using hexadecimal notation, use all lowercase letters.
  id: totrans-split-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用十六进制表示颜色时，全部使用小写字母。
- en: When using HSL or RGB notation, always add a single space after a comma and
    no space between parentheses and content.
  id: totrans-split-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 HSL 或 RGB 表示法时，逗号后始终添加一个空格，括号和内容之间不加空格。
- en: '[PRE35]'
  id: totrans-split-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: If you use an rgba rule, include a fallback value in hexadecimal.
  id: totrans-split-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果使用 rgba 规则，请在十六进制中包含一个回退值。
- en: '[PRE36]'
  id: totrans-split-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Variables[](#variables)
  id: totrans-split-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[变量](#variables)'
- en: 'Create new variables in the following circumstances:'
  id: totrans-split-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在以下情况下创建新变量：
- en: The value is repeated twice
  id: totrans-split-204
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 值重复两次。
- en: The value is likely to be updated at least once
  id: totrans-split-205
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 值可能会至少更新一次。
- en: All occurrences of the value are tied to the variable (for example not by coincidence)
  id: totrans-split-206
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有值的出现都与变量相关（例如不是巧合）。
- en: When building scss that will be used across multiple projects use the `!default`
    flag to allow overriding.
  id: totrans-split-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在构建将用于多个项目的 scss 时，使用 `!default` 标志允许覆盖。
- en: '[PRE37]'
  id: totrans-split-208
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: The `!global` flag should only be used when overriding a global variable from
    a local scope.
  id: totrans-split-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`!global` 标志只能在从本地作用域覆盖全局变量时使用。'
- en: Variables across the whole scss codebase should be placed in their own file.
  id: totrans-split-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整个 scss 代码库中的变量应该放在它们自己的文件中。
- en: When declaring color variables, don't base the name on the color content.
  id: totrans-split-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在声明颜色变量时，不要根据颜色内容命名。
- en: '[PRE38]'
  id: totrans-split-212
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Be careful when naming variables based on their context.
  id: totrans-split-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在根据上下文命名变量时要小心。
- en: '[PRE39]'
  id: totrans-split-214
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Don't use the value of dimensional variables in the variable name.
  id: totrans-split-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要在变量名中使用维度变量的值。
- en: '[PRE40]'
  id: totrans-split-216
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Name all used z-indexes with a variable.
  id: totrans-split-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为所有使用的 z-index 命名变量。
- en: Have a z-index variable for each z-index used, and a separate variable, possibly
    aliased for where the z-index is used.
  id: totrans-split-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对每个使用的 z-index 使用一个 z-index 变量，并可能为 z-index 使用的地方创建一个单独的变量别名。
- en: '[PRE41]'
  id: totrans-split-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Responsive design & breakpoints[](#responsive-design-and-breakpoints)
  id: totrans-split-220
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[响应式设计与断点](#responsive-design-and-breakpoints)'
- en: Set variables for breakpoints at the top of your stylesheet. This functionality
    is built into Bourbon.
  id: totrans-split-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在样式表的顶部设置断点变量。这个功能已经内置在 Bourbon 中。
- en: '[PRE42]'
  id: totrans-split-222
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Use variables to set the queries throughout so they are easy to adapt if necessary.
  id: totrans-split-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用变量设置查询，这样如果需要可以轻松调整。
- en: Place media queries nearest to the class they are affecting.
  id: totrans-split-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将媒体查询放置在它们影响的类最近的位置。
- en: Rather than focusing on devices when deciding where to put breakpoints, focus
    on content; name breakpoint variables relative to each other.
  id: totrans-split-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在决定断点位置时，不要专注于设备，而要专注于内容；将断点变量名称相对于彼此命名。
- en: '[PRE43]'
  id: totrans-split-226
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: </main>
  id: totrans-split-227
  prefs: []
  type: TYPE_NORMAL
  zh: </main>
