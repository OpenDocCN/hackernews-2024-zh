- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 15:05:35'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: Hot takes on Devin, the AI software engineer | Tom Hipwell
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://tomhipwell.co/blog/devin/](https://tomhipwell.co/blog/devin/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: I thought [Devin](https://www.cognition-labs.com/introducing-devin) from Cognition
    looked super cool this week, the UX feels like a glimpse of a new era.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
- en: I wonder how deep the moat is though? 🤔
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
- en: From staring a little bit too closely at the screenshots and videos I’ve seen
    so far, a hot take would be that it feels like most of the performance lift in
    the SWE benchmarks could come from a switch in prompting technique, i.e. the size
    in the performance lift in the benchmark looks similar to that of shifting from
    chain-of-thought to something like the [Self-Discover](https://arxiv.org/abs/2402.03620)
    technique documented by Google DeepMind (but tailored to the domain rather than
    generic reasoning as in that paper). This style of prompting (select-adapt-implement
    -> solve) would make sense for this type of reasoning task. Maybe there’s a way
    to get a proxy in place to intercept the API calls and find out.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
- en: I wonder if the [Cyborg AI style](https://www.oneusefulthing.org/p/centaurs-and-cyborgs-on-the-jagged)
    that Ethan Mollick describes in the [BCG paper](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4573321)
    is a more natural fit to developer flow, and a better approach would be to have
    something like this integrated into the IDEs we’re already using today.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: I like the pause and step buttons in the bottom left of the screenshots for
    this reason. In my head I think of it a bit like turn-taking in a strategy game
    like Civ II, with the ability to skip over the boring bits and let it play out
    when you’re confident in running loose (the ability to step backwards and forwards
    through agent changes would also be cool).
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
- en: It’ll be interesting to see how this plays out over the next little while. If
    it is prompting that’s driving the uplift then I guess what we’ve seen so far
    is a glimpse into the DX of the future.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
