- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 15:04:07'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: C++ creator rebuts White House warning | InfoWorld
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://www.infoworld.com/article/3714401/c-plus-plus-creator-rebuts-white-house-warning.amp.html](https://www.infoworld.com/article/3714401/c-plus-plus-creator-rebuts-white-house-warning.amp.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: C++ creator Bjarne Stroustrup has defended the widely used programming language
    in response to a [Biden administration report](https://www.infoworld.com/article/3713203/white-house-urges-developers-to-dump-c-and-c.html)
    that calls on developers to use memory-safe languages and avoid using vulnerable
    ones such as [C++](https://www.infoworld.com/article/3688923/c-23-language-standard-declared-feature-complete.html)
    and [C](https://www.infoworld.com/article/3402023/why-the-c-programming-language-still-rules.html).
  prefs: []
  type: TYPE_NORMAL
- en: In a March 15 response to an inquiry from InfoWorld, Stroustrup pointed out
    strengths of C++, which was designed in 1979\. “I find it surprising that the
    writers of those government documents seem oblivious of the strengths of contemporary
    C++ and the efforts to provide strong safety guarantees,” Stroustrup said. “On
    the other hand, they seem to have realized that a programming language is just
    one part of a tool chain, so that improved tools and development processes are
    essential.”
  prefs: []
  type: TYPE_NORMAL
- en: Safety improvement always has been a goal of C++ development efforts, Stroustrup
    stressed. “Improving safety has been an aim of C++ from day one and throughout
    its evolution. Just compare the K&R C language with the earliest C++, and the
    early C++ with contemporary C++. My [CppCon 2023 keynote](https://youtu.be/I8UvQKvOSSw?si=HA4s8pXHg1V9J9Xy)
    outlines that evolution,” he said. “Much quality C++ is written using techniques
    based on RAII (Resource Acquisition Is Initialization), containers, and resource
    management pointers rather than conventional C-style pointer messes.”
  prefs: []
  type: TYPE_NORMAL
- en: The White House in a [report released February 26](https://www.whitehouse.gov/wp-content/uploads/2024/02/Final-ONCD-Technical-Report.pdf)
    called on developers to reduce the risk of cyber attacks by using programming
    languages that do not have memory safety vulnerabilities. C++ and C were cited
    as two examples of languages with memory safety vulnerabilities. A November 2022
    [cybersecurity information sheet](https://media.defense.gov/2022/Nov/10/2003112742/-1/-1/0/CSI_SOFTWARE_MEMORY_SAFETY.PDF)
    from the US National Security Agency (NSA) cited C#, Go, Java, Python, and Rust
    as languages considered to be memory-safe.
  prefs: []
  type: TYPE_NORMAL
- en: Stroustrup cited a number of efforts to improve C++ safety. “There are two problems
    related to safety. Of the billions of lines of C++, few completely follow modern
    guidelines, and peoples’ notions of which aspects of safety are important differ.
    I and the C++ standard committee are trying to deal with that,” he said. “[Profiles](https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p3038r0.pdf)
    is a framework for specifying what guarantees a piece of code requires and enable
    implementations to verify them. There are documents describing that on the committee’s
    website—look for [WG21](https://www.open-std.org/jtc1/sc22/wg21/)—and more are
    coming. However, some of us are not in a mood to wait for the committee’s necessarily
    slow progress.”
  prefs: []
  type: TYPE_NORMAL
- en: Profiles, Stroustrup said, “is a framework that allows us to incrementally improve
    guarantees—e.g., to eliminate most range errors relatively soon—and to gradually
    introduce guarantees into large code bases through local static analysis and minimal
    run-time checks. My long-term aim for C++ is and has been for C++ to offer type
    and resource safety when and where needed. Maybe the current push for memory safety—a
    subset of the guarantees I want—will prove helpful to my efforts, which are shared
    by many in the C++ standards committee.”
  prefs: []
  type: TYPE_NORMAL
- en: Stroustrup [previously defended the safety of C++](https://www.infoworld.com/article/3686517/c-plus-plus-creator-bjarne-stroustrup-defends-its-safety.html)
    against the NSA, which recommended using memory-safe languages instead of C++
    and C in a [November 2022 bulletin](https://media.defense.gov/2022/Nov/10/2003112742/-1/-1/1/CSI_SOFTWARE_MEMORY_SAFETY.PDF).
  prefs: []
  type: TYPE_NORMAL
