- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:34:06'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:34:06'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Writers can write anything. Programmers can't.
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 作家可以写任何东西。程序员却不行。
- en: 来源：[https://www.mahendraker.com/blog/writing](https://www.mahendraker.com/blog/writing)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.mahendraker.com/blog/writing](https://www.mahendraker.com/blog/writing)
- en: <main class="space-y-4 text-base text-zinc-400">
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: <main class="space-y-4 text-base text-zinc-400">
- en: I’ve noticed in myself and other programmers that we believe ANY code we write
    is valuable. I’ve come to realise that this is completely false.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我注意到我自己和其他程序员都相信我们写的任何代码都是有价值的。我意识到这是完全错误的。
- en: I think this stems from programmers believing that writing code is like other
    forms of writing. With poetry, social media, and novels, you can produce anything,
    and there is potential for that writing to resonate with someone and create value.
    There’s actually this spectrum of value creation after reading something, from
    “meh it sucked” to “wow that was evocative in X way”. These forms of writing just
    don’t have an objective measure of value for the reader.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为这源于程序员们相信编写代码就像其他形式的写作一样。在诗歌、社交媒体和小说中，你可以创作任何东西，这些写作有潜力与某人产生共鸣并创造价值。实际上，在读完某些东西后，存在着从“哦，太糟糕了”到“哇，这以X方式引人入胜”的价值创造的光谱。但这些写作形式并没有为读者设定客观的价值衡量标准。
- en: But with coding that doesn’t apply. The objective measure of value is varying
    degrees of “was my problem solved”. If the problem wasn’t solved, the code is
    useless. The big mistake is believing that coding is entitled to the same spectrum
    of responses that we expect to see from readers.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 但对编码来说并不适用这一点。价值的客观衡量是“我的问题是否解决了”。如果问题没有解决，那么代码就是无用的。大错误是相信编码有权利得到我们期望读者看到的反应的全谱。
- en: The really tough bit is that it’s hard to shake this belief given how much writing
    code feels like creative writing. Little components beautifully composed to make
    a product doesn’t seem too distant from writing a great story. The difficulty
    in learning to code also plays a role in this. Since it was hard to start and
    code anything, any code I do produce has met the threshold for value, right? Wrong.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 真正困难的地方在于，很难摆脱这种信念，因为编写代码的感觉很像创造性写作。精美组合的小组件制作产品似乎并不远离写一篇优秀的故事。学习编码的难度也在这方面发挥了作用。因为开始编码和编写任何代码都很难，所以我做出的任何代码都达到了价值的门槛，对吧？错了。
- en: 'All of this thinking culminates in a cycle I’m sure you’ve seen before:'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些思考最终都归结为一个你肯定见过的循环：
- en: Tons of emotional investment → beautiful code → no satisfied users → disappointment
    → which morphs into denial → “everyone is wrong IT IS valuable” → repeat on new
    product.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 满满的情感投入 → 美丽的代码 → 没有满意的用户 → 失望 → 变成否认 → “每个人都错了，这是有价值的” → 在新产品上重复。
- en: 'I’ve fallen into this trap so many times (w/ Grapevine, Venyu, etc). But now,
    I think I’m finally out. And there’s one key change I made to escape this cycle:
    I remind myself that I’m not an artist, and coding isn’t creative expression.
    There shouldn’t be some huge emotional investment in shipping SaaS, so I really
    needed to divorce myself from the end result. The app isn’t a representation of
    me, and it’s not a measure of how smart, dumb, or successful I am. It’s just an
    attempt at creating value. Once I internalised this, I stopped caring about clean
    code, perfection, and assuming my code is valuable to begin with. Now, if I start
    from the assumption that my code is not valuable, then I can only be pleasantly
    surprised when it is.'
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我曾多次陷入这种陷阱（例如Grapevine、Venyu等）。但现在，我觉得我终于摆脱了。而我摆脱这个循环的关键变化是：我提醒自己，我不是艺术家，编程不是创造性表达。在发布SaaS时，不应有巨大的情感投入，所以我确实需要与最终结果割舍。这个应用程序不是我的代表，也不是衡量我聪明、愚蠢或成功与否的标准。它只是创造价值的一种尝试。一旦我内化了这一点，我就不再关心代码是否干净、是否完美，以及假定我的代码一开始就具有价值。现在，如果我从我的代码没有价值的假设开始，那么当它有价值时，我只能感到愉快地惊讶。
- en: </main>
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: </main>
