- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:38:54'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:38:54'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Filament | Fearless Hardware Design
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Filament | 无畏的硬件设计
- en: 来源：[https://filamenthdl.com/](https://filamenthdl.com/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://filamenthdl.com/](https://filamenthdl.com/)
- en: Composable Filament uses a new kind of type system to ensure that when you use
    a module to perform a computation, it's timing constraints, like latency and initiation
    interval are correct. When there are errors, it generates helpful error messages
    to explain what is wrong with the design!
  id: totrans-split-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Composable Filament 使用一种新型类型系统，确保当您使用模块执行计算时，其时序约束（如延迟和启动间隔）是正确的。当存在错误时，它生成有用的错误消息来解释设计中的问题！
- en: Efficient Filament's type system does the heavy lifting to ensure that your
    modules compose correctly. After that, the compiler erases the types and generates
    Verilog that is as efficient as hand-written code.
  id: totrans-split-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Efficient Filament 的类型系统通过大量工作确保您的模块正确组合。之后，编译器会擦除类型并生成与手写代码一样高效的 Verilog。
- en: 'Integrable Filament makes it easy to integrate black-box Verilog module: just
    give them a type signature and the compiler will ensure that they are used correctly!
    Similarly, Filament is easy to integrate in Verilog projects; the compiler generates
    clean SystemVerilog code that compiles with open-source and commercial tools.'
  id: totrans-split-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Integrable Filament 使得集成黑盒 Verilog 模块变得轻而易举：只需给出类型签名，编译器就会确保它们被正确使用！类似地，Filament
    在 Verilog 项目中也很容易集成；编译器生成干净的 SystemVerilog 代码，可以与开源和商业工具兼容。
