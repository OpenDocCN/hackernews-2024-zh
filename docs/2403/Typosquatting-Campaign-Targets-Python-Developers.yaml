- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-29 12:44:25'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Typosquatting Campaign Targets Python Developers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://blog.phylum.io/typosquatting-campaign-targets-python-developers/](https://blog.phylum.io/typosquatting-campaign-targets-python-developers/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'On 26 March 2024, Phylum’s automated risk detection platform picked up yet
    another typosquat campaign targeting some attackers’ favorite targets in PyPI.
    As of writing, this attack still appears to be active and has come in two big
    waves after about a 20-hour break in between. So far, we’ve seen over 500 typosquat
    variations published targeting the following popular Python libraries:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, a few hours before the automated attack started we can see the attacker
    experimenting with a package called `schubismomv3`. 11 packages and about 2.5
    hours later, we can see the attacker testing a variety of malware deployment techniques.
    In the first 4 releases we can see the attacker experimenting with install hooks:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Then we can see them experimenting with smuggling the encrypted payload in
    a string that gets written to a local file and then executed:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The main difference here is that the payload is significantly smaller. Let’s
    quickly decrypt it to see what changed there:'
  prefs: []
  type: TYPE_NORMAL
- en: They’ve elected to pull the payload from a remote URL instead of stuffing it
    in its entirety into the setup file. At this point the attacker publishes seven
    more varieties of these packages under different variations of the “insanepackage”
    naming scheme over the next 25 minutes.
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, at around 15:06 UTC, about 45 minutes after the last “insane” publication,
    we see the start of the typosquatting attack. Over the next 1.5 hours the attacker
    publishes the following typosquat variations:'
  prefs: []
  type: TYPE_NORMAL
- en: 'At this point the attack paused with the final publication at 16:31 UTC. Then,
    strangely, the next day at 07:56, the attacker published a package called `johnhammondfanpackage124`
    and another one called `johnhammondontop183` five hours later. After the bizarre
    interlude, the attack picked up again 20 minutes later with the following typosquat
    variations:'
  prefs: []
  type: TYPE_NORMAL
- en: This works out to a total of 566 typosquat publications as of writing. PyPI
    has done a great job of promptly removing these packages. In fact, because this
    attacker had automated the account and project creation process, at 02:16 UTC
    on 28 March 2024, PyPI rightfully decided to put their foot down to prevent further
    publications and fallout from this attack by temporarily suspending new project
    and new account creations.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The decrypted malicious Python payload.
  prefs: []
  type: TYPE_NORMAL
- en: And there’s our final payload. As mentioned earlier, nothing too novel about
    this. It appears to be a pretty standard stealer, attempting to grab cookies,
    passwords, wallets, etc. At the very end it attempts to grab another payload from
    the `funcaptcha[.]ru` URL; something called `hvnc.py` which, curiously, it then
    writes to disk as a binary file.
  prefs: []
  type: TYPE_NORMAL
- en: This automated typosquat attack carried out over a few short hours in a handful
    of quick bursts, witnessed the publication of over 500 packages and targeted 16
    popular PyPI packages. While PyPI’s quick and heavy-handed response no doubt helped
    mitigate the fallout from this attack, it’s nonetheless worth pointing out that
    not all ecosystems are as quick and effective at dealing with such an attack.
    And for a package whose malware is triggered on install, all it takes is a single
    misplaced finger on the keyboard for your machine to be compromised.
  prefs: []
  type: TYPE_NORMAL
