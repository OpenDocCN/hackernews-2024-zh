- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:36:05'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: JavaScript Runs the World—Maybe Even Literally | WIRED
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://www.wired.com/story/javascript-runs-the-world-maybe-literally/](https://www.wired.com/story/javascript-runs-the-world-maybe-literally/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Lex Fridman has done many long interviews on his popular podcast. Even so,
    the episode with the legendary programmer [John Carmack](https://www.youtube.com/watch?v=I845O57ZSy4)
    has an unhinged director’s-cut feel to it. Over five hours, Carmack dishes on
    everything from vector operations to *Doom*. But it’s something Fridman says,
    offhand, that really justifies the extended run time: “I think that if we’re living
    [in a simulation](https://www.wired.com/story/living-in-a-simulation/), it’s written
    in JavaScript.”'
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
- en: 'To review: JavaScript is what makes static web pages “dynamic.” Without it,
    the internet would resemble nothing so much as an after-hours arcade, lifeless
    and dark. These days, the language is used in both front- and backend development
    for a whole host of mobile platforms and apps, including Slack and Discord. And
    the main thing to understand about it, in the context of Fridman’s nerdy koan,
    is this: For any self-respecting programmer, admitting to actually *liking* JavaScript
    is something of a faux pas—much like an art-house filmmaker confessing to Marvel
    fandom.'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
- en: 'I suppose this has something to do with the fact that JavaScript was created
    in less time than it takes to home-brew a jar of kombucha: 10 days. In 1995, Netscape
    hired a programmer named Brendan Eich to create a language to embed in its browser,
    Netscape Navigator. Originally called LiveScript, the language was renamed JavaScript
    to piggyback on the hype around an unrelated language called Java, which had been
    introduced earlier that year. (Asked the difference between Java and JavaScript,
    a programmer is likely to joke: “Java is to JavaScript what car is to carpet.”)
    To this day, few people consider JavaScript a particularly well-designed language,
    least of all Eich. “I perpetrated JavaScript in 1995,” he once said, “and I’ve
    been making up for it ever since.”'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
- en: 'What was his crime, exactly? You can easily find scads of blog posts, memes,
    and Reddit threads sandbagging JavaScript, but my favorite is a [four-minute talk](https://www.destroyallsoftware.com/talks/wat)
    by software engineer Gary Bernhardt titled “Wat.” Imagine, for starters, showing
    a group of non-English speakers the present and past forms of verbs like *boil*
    (*boil*/*boiled*) and *chew* (*chew*/*chewed*). Then, when you ask them for the
    conjugation of *eat*, who could blame them for answering *eat*/*eated*? Similarly,
    the “Wat” talk is a blooper reel of JavaScript’s quirks and unpredictable behaviors.
    Let’s say you want to sort a list of numbers: [50, 100, 1, 10, 9, 5]. Calling
    the built-in sort function in any sane language returns the list in numerically
    ascending order: [1, 5, 9, 10, 50, 100]. Doing so in JavaScript returns [1, 10,
    100, 5, 50, 9], where 10 and 100 are considered larger than 5\. Why? Because JavaScript
    interprets each number as a string type and does lexical sorting, not numerical
    sorting. Total insanity.'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 他到底犯了什么罪？你可以轻松找到大量关于批评 JavaScript 的博客文章、表情包和 Reddit 帖子，但我最喜欢的是软件工程师 Gary Bernhardt
    的一个 [四分钟演讲](https://www.destroyallsoftware.com/talks/wat) ，名为 "Wat"。想象一下，首先向一群非英语为母语的人展示
    *boil* (*boil*/*boiled*) 和 *chew* (*chew*/*chewed*) 这样动词的现在和过去形式。然后，当你询问他们 *eat*
    的词形变化时，谁能怪他们回答 *eat*/*eated* 呢？类似地，"Wat" 演讲是 JavaScript 怪癖和不可预测行为的一个彩蛋合集。假设你想对一组数字进行排序：[50,
    100, 1, 10, 9, 5]。在任何理智的语言中调用内置的排序函数会以数字递增的顺序返回列表：[1, 5, 9, 10, 50, 100]。但在 JavaScript
    中这样做会返回 [1, 10, 100, 5, 50, 9]，其中 10 和 100 被认为比 5 大。为什么呢？因为 JavaScript 将每个数字解释为字符串类型，进行词法排序而不是数字排序。简直疯了。
- en: When Fridman says JavaScript runs the world, in other words, what he means is
    that our world is, like the underlying source code, massively screwed up and incomprehensible.
    It’s the equivalent of pronouncing, with a sigh, that considering the sorry state
    of the planet, the Universal Declaration of Human Rights must have been written
    in Comic Sans.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当弗里德曼说 JavaScript 主宰世界时，换句话说，他的意思是我们的世界就像底层源代码一样，混乱不堪且令人难以理解。这相当于叹息地宣称，考虑到地球的糟糕状态，人权宣言恐怕是用
    Comic Sans 写成的。
- en: At this point, I should confess that while JavaScript is not my favorite language,
    I like it. Adore it, in fact. So I can’t help but feel a flare of disapproval
    whenever a certain fraternity of programmers polemicizes against it. Often they
    focus on flaws that were dealt with years ago. To dwell on JavaScript’s original
    shortcomings is to overlook the fact that any piece of software—and every programming
    language is, in essence, a suite of software—is amenable to revision and improvement.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我应该承认，虽然 JavaScript 不是我最喜欢的语言，但我喜欢它。事实上，我非常喜欢它。所以每当某些程序员兄弟会对它进行激烈的辩论时，我不由得感到一丝不满。他们经常集中在多年前已经解决的缺陷上。纠结于
    JavaScript 最初的缺点，就是忽视了任何软件片段——每种编程语言本质上都是一套软件——都可以接受修订和改进的事实。
