- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:33:26'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:33:26'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: USB in a NutShell - Chapter 1 - Introduction
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: USB简介 - 第1章 - 引言
- en: 来源：[https://www.beyondlogic.org/usbnutshell/usb1.shtml](https://www.beyondlogic.org/usbnutshell/usb1.shtml)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://www.beyondlogic.org/usbnutshell/usb1.shtml](https://www.beyondlogic.org/usbnutshell/usb1.shtml)
- en: USB in a NutShell
  id: totrans-split-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: USB简介
- en: Making sense of the USB standard
  id: totrans-split-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解USB标准
- en: Starting out new with USB can be quite daunting. With the [USB 2.0 specification](http://www.usb.org/developers/docs/usb_20.zip)
    at 650 pages one could easily be put off just by the sheer size of the standard.
    This is only the beginning of a long list of associated standards for USB. There
    are [USB Class Standards](http://www.usb.org/developers/devclass/) such as the
    HID Class Specification which details the common operation of devices (keyboards,
    mice etc) falling under the HID (Human Interface Devices) Class - only another
    97 pages. If you are designing a USB Host, then you have three Host Controller
    Interface Standards to choose from. None of these are detailed in the USB 2.0
    Spec.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 初次接触USB可能会让人感到非常艰巨。看到650页的[USB 2.0规范](http://www.usb.org/developers/docs/usb_20.zip)，人们可能会因其标准的巨大体量而望而却步。这只是USB相关标准的一个开始。还有[USB类规范](http://www.usb.org/developers/devclass/)，如HID类规范，详细描述了属于HID（人机接口设备）类的常见设备（键盘、鼠标等），又有97页之多。如果你在设计USB主机，那么你有三种主机控制器接口标准可供选择。这些在USB
    2.0规范中都没有详细描述。
- en: The good news is you don’t even need to bother reading the entire USB standard.
    Some chapters were churned out by marketing, others aimed at the lower link layer
    normally taken care off by your USB controller IC and a couple aimed at host and
    hub developers. Lets take a little journey through the various chapters of the
    USB 2.0 specification and briefly introduce the key points.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 好消息是，你甚至不需要费心阅读整个USB标准。有些章节是市场推广的产物，另一些则针对通常由USB控制器IC处理的较低链路层，还有一些则针对主机和集线器开发者。让我们简要地介绍USB
    2.0规范的各个章节。
- en: '| Chapter | Name | Description | Pages |'
  id: totrans-split-10
  prefs: []
  type: TYPE_TB
  zh: '| 章节 | 名称 | 描述 | 页数 |'
- en: '| 1 | Introduction | Includes the motivation and scope for USB. The most important
    piece of information in this chapter is to make reference to the Universal Serial
    Bus Device Class Specifications. No need reading this chapter. | 2 |'
  id: totrans-split-11
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 引言 | 包括USB的动机和范围。本章中最重要的信息是参考通用串行总线设备类规范。无需阅读此章。 | 2 |'
- en: '| 2 | Terms and Abbreviations | This chapter is self-explanatory and a necessary
    evil to any standard. | 8 |'
  id: totrans-split-12
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 术语和缩写 | 此章内容不言自明，是任何标准的必要之恶。 | 8 |'
- en: '| 3 | Background | Specifies the goals of USB which are Plug’n’Play and simplicity
    to the end user (*not developer*). Introduces Low, Full and High Speed ranges
    with a feature list straight from marketing. No need reading this chapter either.
    | 4 |'
  id: totrans-split-13
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 背景 | 指定了USB的目标，即为终端用户提供即插即用和简单性（*而非开发人员*）。介绍了低速、全速和高速范围，并列出了一份来自市场营销的特性清单。此章无需阅读。
    | 4 |'
- en: '| 4 | Architectural Overview | This is where you can start reading. This chapter
    provides a basic overview of a USB system including topology, data rates, data
    flow types, basic electrical specs etc. | 10 |'
  id: totrans-split-14
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 架构概述 | 这是你可以开始阅读的地方。本章提供了USB系统的基本概述，包括拓扑结构、数据速率、数据流类型、基本电气规格等。 | 10 |'
- en: '| 5 | USB Data Flow Model | This chapter starts to talk about how data flows
    on a Universal Serial Bus. It introduces terms such as endpoints and pipes then
    spends most of the chapter on each of the data flow types (Control, Interrupt,
    Isochronous and Bulk). While it’s important to know each transfer type and its
    properties it is a little heavy on for a first reader. | 60 |'
  id: totrans-split-15
  prefs: []
  type: TYPE_TB
  zh: '| 5 | USB数据流模型 | 本章开始讨论数据在通用串行总线上的流动方式。介绍了端点和管道等术语，然后大部分篇幅用于各种数据流类型（控制、中断、同步和块）。了解每种传输类型及其属性是重要的，但对初读者来说有点繁重。
    | 60 |'
- en: '| 6 | Mechanical | This chapter details the USB’s two standard connectors.
    The important information here is that a type A connector is oriented facing downstream
    and a type B connector upstream. Therefore it should be impossible to plug a cable
    into two upstream ports. All detachable cables must be full/high speed, while
    any low speed cable must be hardwired to the appliance. Other than a quick look
    at the connectors, you can skip this chapter unless you intend to manufacture
    USB connectors and/or cables. PCB designers can find standard footprints in this
    chapter. | 33 |'
  id: totrans-split-16
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 机械 | 本章详细介绍了 USB 的两种标准连接器。这里的重要信息是，类型 A 连接器朝向下游，而类型 B 连接器朝向上游。因此，理论上不可能将电缆插入两个上游端口。所有可拆卸电缆必须是全速/高速，而任何低速电缆必须与设备硬连线。除了快速查看连接器外，你可以跳过本章节，除非打算制造
    USB 连接器和/或电缆。PCB 设计者可以在本章找到标准封装。| 33 |'
- en: '| 7 | Electrical | This chapter looks at low level electrical signalling including
    line impedance, rise/fall times, driver/receiver specifications and bit level
    encoding, bit stuffing etc. The more important parts of this chapter are the device
    speed identification by using a resistor to bias either data line and bus powered
    devices vs self powered devices. Unless you are designing USB transceivers at
    a silicon level you can flip through this chapter. Good USB device datasheets
    will detail what value bus termination resistors you will need for bus impedance
    matching. | 75 |'
  id: totrans-split-17
  prefs: []
  type: TYPE_TB
  zh: '| 7 | 电气 | 本章主要讨论低级电气信号，包括线路阻抗、上升/下降时间、驱动器/接收器规格和位级编码、位填充等。本章的重要部分是通过使用电阻来识别设备速度，并且区分总线供电设备和自供电设备。除非你在硅级别设计
    USB 收发器，否则可以快速浏览本章。优秀的 USB 设备数据表会详细说明需要哪些总线终端电阻来匹配总线阻抗。| 75 |'
- en: '| 8 | Protocol Layer | Now we start to get into the protocol layers. This chapter
    describes the USB packets at a byte level including the sync, pid, address, endpoint,
    CRC fields. Once this has been grasped it moves on to the next protocol layer,
    USB packets. Most developers still don’t see these lower protocol layers as their
    USB device IC’s take care of this. However a understanding of the status reporting
    and handshaking is worthwhile. | 45 |'
  id: totrans-split-18
  prefs: []
  type: TYPE_TB
  zh: '| 8 | 协议层 | 现在我们开始深入协议层。本章描述了 USB 数据包的字节级别，包括同步、PID、地址、端点、CRC 字段。一旦掌握了这些，就会进入下一个协议层，USB
    数据包。大多数开发人员并不会直接涉及这些较低的协议层，因为他们的 USB 设备 IC 负责处理这些。然而，理解状态报告和握手机制是值得的。| 45 |'
- en: '| 9 | USB Device Frame Work | This is the most frequently used chapter in the
    entire specification and the only one I ever bothered printing and binding. This
    details the bus enumeration and request codes (set address, get descriptor etc)
    which make up the most common protocol layer USB programmers and designers will
    ever see. This chapter is a must read in detail. | 36 |'
  id: totrans-split-19
  prefs: []
  type: TYPE_TB
  zh: '| 9 | USB 设备框架 | 这是整个规范中使用最频繁的章节，也是我唯一关心打印和装订的章节。详细描述了总线枚举和请求代码（设置地址、获取描述符等），这些是
    USB 程序员和设计者最常见的协议层。这一章节是必读的。| 36 |'
- en: '| 10 | USB Host Hardware and Software | This chapter covers issues relating
    to the host. This includes frame and microframe generation, host controller requirements,
    software mechanisms and the universal serial bus driver model. Unless you are
    designing Hosts, you can skip this chapter. | 23 |'
  id: totrans-split-20
  prefs: []
  type: TYPE_TB
  zh: '| 10 | USB 主机硬件和软件 | 本章涵盖与主机相关的问题。包括帧和微帧生成、主机控制器要求、软件机制和通用串行总线驱动程序模型。除非你正在设计主机，否则可以跳过这一章节。|
    23 |'
- en: '| 11 | Hub Specification | Details the workings of USB hubs including hub configuration,
    split transactions, standard descriptors for hub class etc. Unless you are designing
    Hubs, you can skip this chapter. | 143 |'
  id: totrans-split-21
  prefs: []
  type: TYPE_TB
  zh: '| 11 | 集线器规范 | 细节包括 USB 集线器的工作原理，包括集线器配置、分割事务、用于集线器类的标准描述符等。除非你正在设计集线器，否则可以跳过这一章节。|
    143 |'
- en: So now we can begin to read the parts of the standard relevant to our needs.
    If you develop drivers (Software) for USB peripherals then you may only need to
    read chapters,
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以开始阅读与我们需求相关的标准部分。如果你为 USB 外围设备开发驱动程序（软件），那么你可能只需阅读章节，
- en: 4 - Architectural Overview
  id: totrans-split-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 4 - 架构概述。
- en: 5 - USB Data Flow Model
  id: totrans-split-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 5 - USB 数据流模型。
- en: 9 - USB Device Frame Work, and
  id: totrans-split-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 9 - USB 设备框架。
- en: 10 - USB Host Hardware and Software.
  id: totrans-split-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 10 - USB 主机硬件和软件。
- en: Peripheral hardware (Electronics) designers on the other hand may only need
    to read chapters,
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，电子设备（电子）设计者可能只需要阅读章节，
- en: 4 - Architectural Overview
  id: totrans-split-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 4 - 架构概述。
- en: 5 - USB Data Flow Model
  id: totrans-split-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 5 - USB 数据流模型。
- en: 6 - Mechanical, and
  id: totrans-split-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 6 - 机械，以及
- en: 7 - Electrical.
  id: totrans-split-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7 - 电气。
- en: USB in a NutShell for Peripheral Designers
  id: totrans-split-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: USB 设备外设设计简介
- en: Now lets face it, (1) most of us are here to develop USB peripherals and (2)
    it's common to read a standard and still have no idea how to implement a device.
    So in the next 7 chapters we focus on the relevant parts needed to develop a USB
    device. This allows you to grab a grasp of USB and its issues allowing you to
    further research the issues specific to your application.
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们面对现实，(1) 大多数人在这里开发 USB 外设，(2) 通常阅读标准后仍然不知如何实现设备。因此，在接下来的 7 章中，我们专注于开发 USB
    设备所需的相关部分。这让你能够掌握 USB 及其问题，从而进一步研究与你的应用程序相关的问题。
- en: The USB 1.1 standard was complex enough before High Speed was thrown into USB
    2.0\. In order to help understand the fundamental principals behind USB, we omit
    many areas specific to High Speed devices.
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
  zh: USB 1.1 标准本身已经复杂，再加入高速 USB 2.0 后更加复杂。为了帮助理解 USB 背后的基本原理，我们省略了许多特定于高速设备的细节部分。
- en: '# Introducing the Universal Serial Bus'
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
  zh: '# 介绍通用串行总线'
- en: USB version 1.1 supported two speeds, a full speed mode of 12Mbits/s and a low
    speed mode of 1.5Mbits/s. The 1.5Mbits/s mode is slower and less susceptible to
    EMI, thus reducing the cost of ferrite beads and quality components. For example,
    crystals can be replaced by cheaper resonators. USB 2.0 which is still yet to
    see day light on mainstream desktop computers has upped the stakes to 480Mbits/s.
    The 480Mbits/s is known as High Speed mode and was a tack on to compete with the
    Firewire Serial Bus.
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: USB 1.1 版本支持两种速度，全速模式为 12Mbits/s，低速模式为 1.5Mbits/s。1.5Mbits/s 模式速度较慢，较不易受电磁干扰影响，从而降低了铁氧体珠和优质元件的成本。例如，晶体可以被更便宜的谐振器替代。USB
    2.0 尚未在主流桌面计算机上普及，但已将速度提升至 480Mbits/s。480Mbits/s 被称为高速模式，是为了与 Firewire 串行总线竞争而增加的功能。
- en: '**USB Speeds**'
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**USB 速度**'
- en: High Speed - 480Mbits/s
  id: totrans-split-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高速 - 480Mbits/s
- en: Full Speed - 12Mbits/s
  id: totrans-split-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全速 - 12Mbits/s
- en: Low Speed - 1.5Mbits/s
  id: totrans-split-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 低速 - 1.5Mbits/s
- en: The Universal Serial Bus is host controlled. There can only be one host per
    bus. The specification in itself, does not support any form of multimaster arrangement.
    However the [On-The-Go specification](/usb/otghost.htm) which is a tack on standard
    to USB 2.0 has introduced a Host Negotiation Protocol which allows two devices
    negotiate for the role of host. This is aimed at and limited to single point to
    point connections such as a mobile phone and personal organiser and not multiple
    hub, multiple device desktop configurations. The USB host is responsible for undertaking
    all transactions and scheduling bandwidth. Data can be sent by various transaction
    methods using a token-based protocol.
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
  zh: 通用串行总线由主机控制。每个总线只能有一个主机。规范本身不支持任何形式的多主控制器安排。然而，USB 2.0 的 [On-The-Go 规范](/usb/otghost.htm)
    引入了主机协商协议，允许两个设备协商主机角色。这适用于单点到点连接，如手机和个人组织者，而不适用于多集线器、多设备的桌面配置。USB 主机负责执行所有交易并安排带宽。数据可以通过基于令牌的协议使用各种交易方法发送。
- en: In my view the bus topology of USB is somewhat limiting. One of the original
    intentions of USB was to reduce the amount of cabling at the back of your PC.
    Apple people will say the idea came from the Apple Desktop Bus, where both the
    keyboard, mouse and some other peripherals could be connected together (daisy
    chained) using the one cable.
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在我看来，USB 的总线拓扑有些限制。USB 的原始目的之一是减少 PC 后面的电缆数量。苹果的人会说这个想法来自于苹果桌面总线（Apple Desktop
    Bus），键盘、鼠标和其他一些外设可以通过一个电缆连接在一起（串接）。
- en: However USB uses a tiered star topology, simular to that of 10BaseT Ethernet.
    This imposes the use of a hub somewhere, which adds to greater expense, more boxes
    on your desktop and more cables. However it is not as bad as it may seem. Many
    devices have USB hubs integrated into them. For example, your keyboard may contain
    a hub which is connected to your computer. Your mouse and other devices such as
    your digital camera can be plugged easily into the back of your keyboard. Monitors
    are just another peripheral on a long list which commonly have in-built hubs.
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，USB 使用层级星形拓扑，类似于 10BaseT 以太网。这意味着必须在某处使用集线器，这增加了成本、桌面上的盒子和更多的电缆。但情况并不像看起来那么糟糕。许多设备已集成了
    USB 集线器。例如，你的键盘可能包含一个连接到计算机的集线器。你的鼠标和其他设备如数码相机可以轻松地插入键盘背面。显示器只是常见的长列表中的另一个外设，通常具有内置的集线器。
- en: This tiered star topology, rather than simply daisy chaining devices together
    has some benefits. Firstly power to each device can be monitored and even switched
    off if an overcurrent condition occurs without disrupting other USB devices. Both
    high, full and low speed devices can be supported, with the hub filtering out
    high speed and full speed transactions so lower speed devices do not receive them.
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这种分层星形拓扑结构，而不是简单地将设备串联起来，具有一些好处。首先，可以监控每个设备的电源，并在发生过电流条件时甚至关闭它们，而不会干扰其他 USB
    设备。可以支持高速、全速和低速设备，通过集线器过滤高速和全速事务，以便低速设备不接收它们。
- en: Up to 127 devices can be connected to any one USB bus at any one given time.
    Need more devices? - simply add another port/host. While most earlier USB hosts
    had two ports, most manufacturers have seen this as limiting and are starting
    to introduce 4 and 5 port host cards with an internal port for hard disks etc.
    The early hosts had one USB controller and thus both ports shared the same available
    USB bandwidth. As bandwidth requirements grew, we are starting to see multi-port
    cards with two or more controllers allowing individual channels.
  id: totrans-split-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何给定时间，最多可以连接 127 个设备到任何一个 USB 总线上。需要更多设备？只需添加另一个端口/主机。虽然大多数早期的 USB 主机都有两个端口，但大多数制造商认为这种设计有限，并开始推出具有内部端口用于硬盘等的
    4 和 5 端口主机卡。早期的主机只有一个 USB 控制器，因此两个端口共享相同的可用 USB 带宽。随着带宽要求的增加，我们开始看到具有两个或更多控制器的多端口卡，允许单独的通道。
- en: The USB host controllers have their own specifications. With USB 1.1, there
    were two Host Controller Interface Specifications, [UHCI (Universal Host Controller
    Interface)](http://developer.intel.com/design/USB/UHCI11D.htm) developed by Intel
    which puts more of the burden on software (Microsoft) and allowing for cheaper
    hardware and the [OHCI (Open Host Controller Interface)](http://www.compaq.com/productinfo/development/openhci.html)
    developed by Compaq, Microsoft and National Semiconductor which places more of
    the burden on hardware(Intel) and makes for simpler software. Typical hardware
    / software engineer relationship. . .
  id: totrans-split-46
  prefs: []
  type: TYPE_NORMAL
  zh: USB 主控制器有它们自己的规格。使用 USB 1.1 时，有两种主机控制器接口规范，由英特尔开发的[UHCI（通用主机控制器接口）](http://developer.intel.com/design/USB/UHCI11D.htm)，它将更多的负担放在软件（微软）上，并允许更便宜的硬件，以及由康柏、微软和国家半导体开发的[OHCI（开放主机控制器接口）](http://www.compaq.com/productinfo/development/openhci.html)，它更多地依赖于硬件（英特尔），从而使软件更简单。典型的硬件/软件工程师关系……
- en: With the introduction of USB 2.0 a new Host Controller Interface Specification
    was needed to describe the register level details specific to USB 2.0\. The [EHCI
    (Enhanced Host Controller Interface)](http://developer.intel.com/technology/usb/ehcispec.htm)
    was born. Significant Contributors include Intel, Compaq, NEC, Lucent and Microsoft
    so it would hopefully seem they have pooled together to provide us one interface
    standard and thus only one new driver to implement in our operating systems. Its
    about time.
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
  zh: 随着 USB 2.0 的引入，需要一个新的主机控制器接口规范来描述特定于 USB 2.0 的寄存器级细节。[EHCI（增强主机控制器接口）](http://developer.intel.com/technology/usb/ehcispec.htm)应运而生。重要贡献者包括英特尔、康柏、NEC、Lucent
    和微软，因此希望它们已经汇集在一起，为我们提供一个接口标准，从而只需在操作系统中实现一个新驱动程序。是时候了。
- en: USB as its name would suggest is a serial bus. It uses 4 shielded wires of which
    two are power (+5v & GND). The remaining two are twisted pair differential data
    signals. It uses a NRZI (Non Return to Zero Invert) encoding scheme to send data
    with a sync field to synchronise the host and receiver clocks.
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
  zh: USB 顾名思义是串行总线。它使用 4 条屏蔽线，其中两条是电源（+5V 和 GND）。剩下的两条是扭曲对差分数据信号。它使用 NRZI（非返回至零反转）编码方案发送数据，并带有同步字段来同步主机和接收器时钟。
- en: USB supports plug’n’plug with dynamically loadable and unloadable drivers. The
    user simply plugs the device into the bus. The host will detect this addition,
    interrogate the newly inserted device and load the appropriate driver all in the
    time it takes the hourglass to blink on your screen provided a driver is installed
    for your device. The end user needs not worry about terminations, terms such as
    IRQs and port addresses, or rebooting the computer. Once the user is finished,
    they can simply lug the cable out, the host will detect its absence and automatically
    unload the driver.
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
  zh: USB 支持即插即用，可动态加载和卸载驱动程序。用户只需将设备插入总线。主机将检测到此添加，询问新插入的设备，并加载适当的驱动程序，这一切都在您的屏幕上的沙漏闪烁时间内完成，前提是为您的设备安装了驱动程序。最终用户无需担心终端、IRQ
    和端口地址等术语，也无需重新启动计算机。一旦用户完成，他们可以简单地拔掉电缆，主机将检测到它的缺失，并自动卸载驱动程序。
- en: The loading of the appropriate driver is done using a PID/VID (Product ID/Vendor
    ID) combination. The VID is supplied by the USB Implementor's forum at a cost
    and this is seen as another sticking point for USB. The latest info on fees can
    be found on the [USB Implementor’s Website](http://www.usb.org/developers/vendor.html)
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
  zh: 适当的驱动加载是通过 PID/VID（产品ID/厂商ID）组合来完成的。VID 是由 USB 实施者论坛以一定费用提供的，这被视为 USB 的另一个争议点。关于费用的最新信息可以在
    [USB Implementor’s Website](http://www.usb.org/developers/vendor.html) 找到。
- en: Other standards organisations provide a extra VID for non-commercial activities
    such as teaching, research or fiddling (The Hobbyist). The USB Implementors forum
    has yet to provide this service. In these cases you may wish to use one assigned
    to your development system's manufacturer. For example most chip manufacturers
    will have a VID/PID combination you can use for your chips which is known not
    to exist as a commercial device. Other chip manufacturers can even sell you a
    PID to use with their VID for your commercial device.
  id: totrans-split-51
  prefs: []
  type: TYPE_NORMAL
  zh: 其他标准组织为非商业活动（如教学、研究或业余爱好者）提供额外的 VID。USB 实施者论坛尚未提供这项服务。在这些情况下，您可能希望使用分配给您开发系统制造商的
    VID。例如，大多数芯片制造商都会为您的芯片提供一个已知不作为商业设备存在的 VID/PID 组合。其他芯片制造商甚至可以向您出售一个 PID，以便您在其
    VID 下用于您的商业设备。
- en: Another more notable feature of USB, is its transfer modes. USB supports Control,
    Interrupt, Bulk and Isochronous transfers. While we will look at the other transfer
    modes later, Isochronous allows a device to reserve a defined amount of bandwidth
    with guaranteed latency. This is ideal in Audio or Video applications where congestion
    may cause loss of data or frames to drop. Each transfer mode provides the designer
    trade-offs in areas such as error detection and recovery, guaranteed latency and
    bandwidth.
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
  zh: USB 的另一个显著特性是其传输模式。USB 支持控制传输、中断传输、批量传输和等时传输。虽然我们将在后面讨论其他的传输模式，等时传输允许设备预留一定的带宽，保证延迟。这在音频或视频应用中非常理想，因为拥塞可能导致数据丢失或帧丢失。每种传输模式都为设计者提供了在错误检测和恢复、保证的延迟和带宽等方面的权衡。
