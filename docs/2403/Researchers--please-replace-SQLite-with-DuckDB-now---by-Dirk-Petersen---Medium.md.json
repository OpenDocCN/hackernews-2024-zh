["```\n[dp@node]$ scratch-dna -v -p 4 1024 104857600 3 ./gscratch\n\nBuilding random DNA sequence of 100.0 MB...\nWriting 1024 files with filesizes between 100.0 MB and 300.0 MB...\nFiles Completed:      21, Data Written:   3.3GiB, Files Remaining:    1005, Cur FPS:    21, Throughput: 3400 MiB/s\nFiles Completed:      44, Data Written:   7.8GiB, Files Remaining:     982, Cur FPS:    22, Throughput: 4000 MiB/s\nFiles Completed:      68, Data Written:  12.7GiB, Files Remaining:     958, Cur FPS:    22, Throughput: 4333 MiB/s\nFiles Completed:      89, Data Written:  16.7GiB, Files Remaining:     937, Cur FPS:    22, Throughput: 4275 MiB/s\n```", "```\n[dp@node]$ scratch-dna -v -p 4 1024 104857600 3 $TMPDIR\n\nBuilding random DNA sequence of 100.0 MB...\nWriting 1024 files with filesizes between 100.0 MB and 300.0 MB...\nFiles Completed:       4, Data Written:   1.1GiB, Files Remaining:    1022, Cur FPS:     4, Throughput: 1100 MiB/s\nFiles Completed:      12, Data Written:   2.6GiB, Files Remaining:    1014, Cur FPS:     6, Throughput: 1350 MiB/s\nFiles Completed:      19, Data Written:   3.6GiB, Files Remaining:    1007, Cur FPS:     6, Throughput: 1233 MiB/s\n```", "```\npwalk --NoSnap --header \"/your/dept-folder\" > dept-folder-tmp.csv\niconv -f ISO-8859-1 -t UTF-8 dept-folder-tmp.csv > dept-folder.csv\n```", "```\nimport pandas, sqlite3\n\n# File paths\ncsv_file_path = './db/x-dept.csv'\nsqlite_db_path = './db/x-dept.db'\n\n# Read CSV file into dataframe and copy the dataframe to SQLite\ndf = pandas.read_csv(csv_file_path)\n\n# Connect to SQLite database (it will be created if it doesn’t exist)\nconn = sqlite3.connect(sqlite_db_path)\n\n# Insert data from Pandas Data Frame to a new 'meta_table' in sqlite db \ndf.to_sql('meta_table', conn, index=False, if_exists='replace')\n\n# Commit and close\nconn.commit()\nconn.close()\n```", "```\ntime ./sqlite-import.py\n\nreal    43m25.215s\nuser    28m23.660s\nsys     15m2.266s \n```", "```\nsqlite3 ./db/x-dept.db \".schema\"\n\nCREATE TABLE IF NOT EXISTS \"meta_table\" (\n  \"inode\" INTEGER,\n  \"parent-inode\" INTEGER,\n  \"directory-depth\" INTEGER,\n  \"filename\" TEXT,\n  \"fileExtension\" TEXT,\n  \"UID\" INTEGER,\n  \"GID\" INTEGER,\n  \"st_size\" INTEGER,\n  \"st_dev\" INTEGER,\n  \"st_blocks\" INTEGER,\n  \"st_nlink\" INTEGER,\n  \"st_mode\" INTEGER,\n  \"st_atime\" INTEGER,\n  \"st_mtime\" INTEGER,\n  \"st_ctime\" INTEGER,\n  \"pw_fcount\" INTEGER,\n  \"pw_dirsum\" INTEGER\n);\n```", "```\ntime sqlite3 ./db/x-dept.db \"select count(*) from meta_table;\n283587401\nreal 20m30.382s\nuser 0m14.746s\nsys 1m41.663s \n```", "```\ntime cp ./db/x-dept.db $TMPDIR/\n\nreal    1m19.890s\nuser    0m0.024s\nsys     1m16.456s\n\ntime sqlite3 $TMPDIR/x-dept.db \"select count(*) from meta_table;\"\n283587401\n\nreal    1m3.460s\nuser    0m6.061s\nsys     0m57.392s\n```", "```\ntime sqlite3 ./db/x-dept.db \"select count(*) from meta_table;\n283587401\nreal    10m44.268s\nuser    0m12.983s\nsys     1m40.303s\n```", "```\ntime sqlite3 $TMPDIR/x-dept.db \"select sum(st_size) from meta_table;\"\n591263908311685\n\nreal    1m40.343s\nuser    0m37.363s\nsys     1m2.965s\n```", "```\ntime duckdb -c \"select count(*) from read_csv_auto('./db/x-dept.csv');\"\n100% ▕████████████████████████████████████████████████████████████▏\n┌──────────────┐\n│ count_star() │\n│    int64     │\n├──────────────┤\n│    283587401 │\n└──────────────┘\n\nreal    3m16.446s\nuser    18m11.720s\nsys     2m53.538s\n```", "```\ntime duckdb -s \"COPY (SELECT * FROM \\\n     read_csv_auto('./db/x-dept.csv') TO './db/x-dept.parquet';\"\n\nreal    5m9.249s\nuser    31m56.600s\nsys     5m43.471s\n```", "```\ntime duckdb -c \"select count(*) from './db/x-dept.parquet';\"\n\n┌──────────────┐\n│ count_star() │\n│    int64     │\n├──────────────┤\n│    283587401 │\n└──────────────┘\n\nreal    0m0.641s\nuser    0m0.578s\nsys     0m0.155s\n```", "```\ntime duckdb -c \"select sum(st_size) from './db/CEDAR.parquet';\"\n┌─────────────────┐\n│  sum(st_size)   │\n│     int128      │\n├─────────────────┤\n│ 591263908311685 │\n└─────────────────┘\n\nreal    0m1.559s\nuser    0m6.254s\nsys     0m1.877s\n```", "```\nWITH TotalSize AS (\n    SELECT SUM(st_size) AS totalSize\n    FROM './db/x-dept.parquet'\n)\nSELECT\n    fileExtension as fileExt,\n    ROUND((SUM(st_size) * 100.0 / totalSize), 1) AS pct,\n    ROUND((SUM(st_size) / (1024.0 * 1024.0 * 1024.0)), 3) AS GiB\nFROM\n    './db/x-dept.parquet',\n    TotalSize\nGROUP BY\n    fileExtension, totalSize\nHAVING\n    (SUM(st_size) * 100.0 / totalSize) > 0.1\nORDER BY\n    pct DESC\nLIMIT 6\n```", "```\ntime duckdb < extension-summary.sql \n\n┌─────────┬────────┬────────────┐\n│ fileExt │  pct   │    GiB     │\n│ varchar │ double │   double   │\n├─────────┼────────┼────────────┤\n│ gz      │   23.4 │  128928.05 │\n│ bam     │   20.9 │ 114925.732 │\n│ czi     │   14.1 │  77548.979 │\n│ fq      │    7.6 │  41954.356 │\n│ sam     │    5.1 │  27812.136 │\n│ tif     │    5.0 │   27457.25 │\n├─────────┴────────┴────────────┤\n│  6 rows             3 columns │\n└───────────────────────────────┘\n\nreal    0m3.320s\nuser    0m24.991s\nsys     0m4.127s\n```", "```\nSELECT\n    -- Extract the filename without path\n    SUBSTRING(\n        filename FROM LENGTH(filename) - POSITION('/' IN REVERSE(filename)) + 2\n        FOR\n        LENGTH(filename) - POSITION('/' IN REVERSE(filename)) - POSITION('.' IN REVERSE(filename)) + 1\n    ) AS plain_file_name,\n    st_mtime,\n    st_size,\n    COUNT(*) as duplicates_count,\n    ARRAY_AGG(filename) as duplicate_files  -- Collect the full paths of all duplicates\nFROM\n    './db/x-dept.parquet'\nWHERE\n    filename NOT LIKE '%/miniconda3/%' AND\n    filename NOT LIKE '%/miniconda2/%' AND    -- let's ignore all that miniconda stuff\n    st_size > 1024*1024                       -- we only look at files > 1 MB\nGROUP BY\n    plain_file_name,\n    st_mtime,\n    st_size\nHAVING\n    COUNT(*) > 1  -- Only groups with more than one file are duplicates\nORDER BY\n    duplicates_count DESC;\n```", "```\ntime duckdb < dedup.sql\nreal    0m21.780s\nuser    2m40.679s\nsys     1m34.142s\n```", "```\ntime duckdb < dedup-local.sql\nreal    0m21.838s\nuser    2m30.352s\nsys     1m34.448s\n```", "```\ntime cat extension_summary.sql | sqlite3 $TMPDIR/x-dept.db\ngz|23.4|128928.05\nbam|20.9|114925.732\nczi|14.1|77548.979\nfq|7.6|41954.356\nsam|5.1|27812.136\ntif|5.0|27457.25\n\nreal    6m15.232s\nuser    4m6.303s\nsys     2m8.892s\n```", "```\ntime cat dedup.sql | sqlite3 $TMPDIR/x-dept.db\nreal    5m20.571s\nuser    2m39.911s\nsys     1m23.271s\n```", "```\nduckdb -c \"select count(*) from read_csv_auto('./data/prj-*.csv');\"\n```"]