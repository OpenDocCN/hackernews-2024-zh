- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 15:05:05'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: Oh, Zot! Nomadic Identity is Coming to ActivityPub - We Distribute
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://wedistribute.org/2024/03/activitypub-nomadic-identity/](https://wedistribute.org/2024/03/activitypub-nomadic-identity/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Even if you’ve been a part of the Fediverse for a long time, you’d be excused
    if you had never heard of [Nomadic Identity](https://joinfediverse.wiki/The_Zotlabs_projects).
    Within the confines of Mastodon, it’s a relatively unknown concept. But, for some
    of us, it’s something of a pipe dream: decentralized identity management with
    remote access control. On paper, that doesn’t sound too exciting, but it’s a huge
    concept. Even more exciting: [the guy who designed it is bringing it to ActivityPub](https://fediversity.site/channel/mikedev?mid=https://fediversity.site/item/6b1992db-c504-44e8-ae0f-ac2f0dadb8b6).'
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
- en: What the Heck is Nomadic Identity?
  id: totrans-split-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Nomadic Identity is a concept pioneered by [Mike Macgirvin](https://fediversity.site/channel/mikedev),
    a longtime builder in the Fediverse. If you’ve ever used Friendica, Hubzilla,
    or Streams, you’ve used software written by this guy.
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
- en: Got Zot — Mike Macgirvin on building your own apps and protocols
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: An interview with the brilliant mind behind the Zot protocol, MagicAuth, and
    Nomadic Identity.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
- en: 'One of the big problems in federated social systems involves permissions, identity,
    and data. We can sum this up in three parts:'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
- en: '**Permission Management** – If I visit a friend’s site to interact with something,
    there typically isn’t a way for me to do anything while I’m over there. I have
    to go back to my server.'
  id: totrans-split-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Identity Management** – Okay, I have a way to validate that I’m really me.
    What do I have as a fallback if that fails?'
  id: totrans-split-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Data Portability** – What happens to my stuff if my server goes down? Can
    I move to another servers and get my statuses, messages, and interactions back?
    Could I even just do it *temporarily*, to keep my followers, while my server gets
    sorted out?'
  id: totrans-split-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From the end user’s side of the house, everything boils down to how their identities
    are coupled to their instances. ActivityPub-based systems like Mastodon do a pretty
    decent job with letting people migrate from one server to another, letting users
    pull in remote statuses from a URL, and letting users decide who is allowed to
    see or reply to their posts. It’s a far better situation than what came before
    ActivityPub.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
- en: 'At the end of the day, though, what is currently provided in the ActivityPub
    side of the network is somewhat limited, compared to what the Zot protocol brings
    to the table with Nomadic Identity. Let’s dive into the three different components:
    OpenWebAuth, Channel Relays, and Data Migration.'
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
- en: OpenWebAuth
  id: totrans-split-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: OpenWebAuth used to be called “Magic Auth”, because of how seamless the experience
    is. Instead of only being able to manage things from your social dashboard, you
    can jump from one part of the Fediverse to another, and *your permissions will
    be granted automatically.* It all happens in the browser.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
- en: 'The way this works is relatively simple: your browser accesses a token inside
    of a cookie. That token references your Digital Identity in the Fediverse, verifies
    it, and a handshake is performed. Afterwards, anything you were given permission
    to access unlocks and becomes visible on the page.'
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
- en: A really old video of Hubzilla doing it. I’m navigating from my site to Andrew’s.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
- en: 'OpenWebAuth solves one of the most frustrating UX problems the Fediverse currently
    has: dealing with remote content that you discovered somewhere else.'
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
- en: Channel Relays
  id: totrans-split-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Channel Relays are the second major piece of the puzzle here. Using a common
    ID, you can associate separate accounts across the network with one another. Each
    relay is verified through an Authorization process, and then each relay is tethered
    to one another like so:'
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
- en: Using your credentials, you can log into any one of these three relays, and
    post to your followers. If the server my work account is on suddenly goes down,
    I can still log in to my family account or blog, and keep interacting like nothing
    happened. I’m still in contact with my followers, and if I want, my relay accounts
    can replicate statuses posted from elsewhere.
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
- en: 'A few clear benefits emerge from this:'
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
- en: Network Resilience
  id: totrans-split-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Censorship Resistance
  id: totrans-split-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ease of Migration
  id: totrans-split-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In fact, this mechanism is so good, it feeds directly into the next use-case:
    Data Migration.'
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
- en: Data Migration
  id: totrans-split-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'So, we already have two pieces: multiple identities can be connected together
    across a network, logging into one can allow you to post from another, and a person
    can decide, at any time, which account will serve as their primary.'
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
- en: Because all of these things are set up, the act of moving your stuff becomes
    relatively trivial. All of your accounts are aware of each other. If you switch
    to a new primary, you can trigger an update to all of your existing conversation
    threads and comments to switch the author, and replicate the data on your end.
    Thanks to the way that Nomadic Identity is set up, those verified parts of your
    identity can perform those kinds of actions, whereas no other account can.
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
- en: Why is This Important?
  id: totrans-split-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As we continue to think about how to further develop the Fediverse and give
    people more robust tools capable of doing more things, we have to consider the
    plumbing that holds it all together. Identity Management is one of those pieces
    of plumbing that’s surprisingly shaky, and requires serious consideration.
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
- en: Digital Identities aren’t something unique to the fediverse and it’s not something
    Mastodon could stop if they wanted to. Nomadic identity is coming to the internet.
    The only question is who is going to own your identity. VISA/Mastercard, your
    government, Google, Microsoft, or you.
  id: totrans-split-35
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Mike Macgirvin
  id: totrans-split-36
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: As Threads, Tumblr, and other big social networks come into the space, developers
    need to think about the stakes. The user migration flow is decent for moving from
    one server to another, but it’s relatively brittle, and currently only updates
    a reference from one account to another. The network lacks meaningful ways for
    people to pull their posts, messages, and media from the place they left.
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
- en: The biggest takeaway here is that these are mature, time-tested mechanisms that
    could add extra layers of user agency and control to the Fediverse.
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
- en: What’s Next?
  id: totrans-split-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Mike is already doing the work of figuring out how to retrofit these concepts
    onto ActivityPub. It’s likely that we’ll see additional [Fediverse Enhancement
    Proposals](https://codeberg.org/fediverse/fep) to accommodate certain needs. For
    implementers, there are a few existing FEPs in the `DRAFT` stage that come recommended:'
  id: totrans-split-40
  prefs: []
  type: TYPE_NORMAL
