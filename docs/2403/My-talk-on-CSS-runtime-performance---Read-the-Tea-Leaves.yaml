- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:42:46'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024年5月27日14:42:46
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: My talk on CSS runtime performance | Read the Tea Leaves
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我的CSS运行时性能演讲 | 读茶叶
- en: 来源：[https://nolanlawson.com/2023/01/17/my-talk-on-css-runtime-performance/](https://nolanlawson.com/2023/01/17/my-talk-on-css-runtime-performance/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://nolanlawson.com/2023/01/17/my-talk-on-css-runtime-performance/](https://nolanlawson.com/2023/01/17/my-talk-on-css-runtime-performance/)
- en: 17 Jan
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 17 Jan
- en: My talk on CSS runtime performance
  id: totrans-split-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我的CSS运行时性能演讲
- en: Posted January 17, 2023 by Nolan Lawson in [performance](https://nolanlawson.com/tag/performance/),
    [Web](https://nolanlawson.com/category/web/). [3 Comments](https://nolanlawson.com/2023/01/17/my-talk-on-css-runtime-performance/#comments)
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 发布于2023年1月17日，由Nolan Lawson在[performance](https://nolanlawson.com/tag/performance/)，[Web](https://nolanlawson.com/category/web/)。[3
    Comments](https://nolanlawson.com/2023/01/17/my-talk-on-css-runtime-performance/#comments)
- en: 'A few months ago, I gave a talk on CSS performance at [performance.now](https://perfnow.nl/)
    in Amsterdam. The recording is available online:'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 几个月前，我在[performance.now](https://perfnow.nl/)的阿姆斯特丹举行了有关CSS性能的演讲。录像在网上可以观看：
- en: '[https://www.youtube.com/embed/nWcexTnvIKI?version=3&rel=1&showsearch=0&showinfo=1&iv_load_policy=1&fs=1&hl=en&autohide=2&wmode=transparent](https://www.youtube.com/embed/nWcexTnvIKI?version=3&rel=1&showsearch=0&showinfo=1&iv_load_policy=1&fs=1&hl=en&autohide=2&wmode=transparent)'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.youtube.com/embed/nWcexTnvIKI?version=3&rel=1&showsearch=0&showinfo=1&iv_load_policy=1&fs=1&hl=en&autohide=2&wmode=transparent](https://www.youtube.com/embed/nWcexTnvIKI?version=3&rel=1&showsearch=0&showinfo=1&iv_load_policy=1&fs=1&hl=en&autohide=2&wmode=transparent)'
- en: VIDEO
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: VIDEO
- en: (You can also read [the slides](https://nolanlawson.github.io/css-talk-2022/).)
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: （您也可以阅读[幻灯片](https://nolanlawson.github.io/css-talk-2022/)。）
- en: 'This is one of my favorite talks I’ve ever given. It was the product of months
    (honestly, years) of research, prompted by a couple questions:'
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我给过的最喜欢的演讲之一。这是几个问题的产物：
- en: What is the fastest way to implement [scoped styles](https://rfcs.lwc.dev/rfcs/lwc/0116-light-dom-scoped-styles)?
    (Surprisingly few people seem to ask this question.)
  id: totrans-split-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最快实现[作用域样式](https://rfcs.lwc.dev/rfcs/lwc/0116-light-dom-scoped-styles)的方法是什么？（令人惊讶的是很少有人提出这个问题。）
- en: 'Does using shadow DOM improve style performance? (Short answer: [yes](https://nolanlawson.com/2022/06/22/style-scoping-versus-shadow-dom-which-is-fastest/).)'
  id: totrans-split-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用影子DOM是否提高了样式性能？（简短回答：[是的](https://nolanlawson.com/2022/06/22/style-scoping-versus-shadow-dom-which-is-fastest/)。）
- en: To answer these questions (and more), I did a bunch of research into how browsers
    work under the hood. This included combing through [old Servo discussions from
    2013](https://github.com/servo/servo/wiki/Css-selector-matching-meeting-2013-07-19),
    reaching out to browser developers like [Manuel Rego Casasnovas](https://blogs.igalia.com/mrego/)
    and [Emilio Cobos Alvarez](https://github.com/emilio), reading [browser PRs](https://github.com/WebKit/WebKit/commit/596fdf7c2cec599f8c826787363c54c4b008a7fe),
    and writing lots of benchmarks.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 为了回答这些问题（以及更多），我进行了大量关于浏览器如何在幕后工作的研究。这包括查阅[2013年旧的Servo讨论](https://github.com/servo/servo/wiki/Css-selector-matching-meeting-2013-07-19)，联系浏览器开发人员如[Manuel
    Rego Casasnovas](https://blogs.igalia.com/mrego/)和[Emilio Cobos Alvarez](https://github.com/emilio)，阅读[浏览器PRs](https://github.com/WebKit/WebKit/commit/596fdf7c2cec599f8c826787363c54c4b008a7fe)，以及编写大量基准测试。
- en: In the end, I’m pretty satisfied with the talk. My main goal was to shine a
    light on all the heroic work that browser vendors have done over the years to
    make CSS so performant. Much of this stuff is intricate and arcane (like [Bloom
    filters](https://en.wikipedia.org/wiki/Bloom_filter)), but I hoped that with some
    simple diagrams and animations, I could bring this work to life.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我对这次演讲感到非常满意。我的主要目标是为多年来浏览器厂商为提高CSS性能所做的所有英雄般的工作点个赞。其中很多工作都很复杂和神秘（比如[Bloom
    filters](https://en.wikipedia.org/wiki/Bloom_filter)），但我希望通过一些简单的图表和动画，我能让这些工作栩栩如生。
- en: 'The two outcomes I’d love to see from this talk are:'
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望从这次演讲中看到的两个结果是：
- en: Web developers spend more time thinking about and measuring CSS performance.
    (Pssst, check out the `SelectorStats` section of [my guide to Chrome tracing](https://nolanlawson.com/2022/10/26/a-beginners-guide-to-chrome-tracing/)!)
  id: totrans-split-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Web开发人员花费更多时间思考和衡量CSS性能。（嘘，看看[我的Chrome追踪指南](https://nolanlawson.com/2022/10/26/a-beginners-guide-to-chrome-tracing/)中的`SelectorStats`部分！）
- en: Browser vendors provide better DevTools to understand CSS performance. (In the
    talk, I pitch this as a [`SQL EXPLAIN`](https://www.postgresql.org/docs/current/sql-explain.html)
    for CSS.)
  id: totrans-split-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览器厂商提供更好的开发工具来理解CSS性能。（在演讲中，我把这个比作CSS的[`SQL EXPLAIN`](https://www.postgresql.org/docs/current/sql-explain.html)。）
- en: What I *didn’t* want to do in this talk was rain on anybody’s parade who is
    trying to do sophisticated things with CSS. More and more, I am seeing [ambitious
    usage](https://www.bram.us/2023/01/12/sibling-scopes-in-css-thanks-to-has/) of
    new CSS features like [`:has`](https://developer.mozilla.org/en-US/docs/Web/CSS/:has)
    and [container queries](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Container_Queries),
    and I don’t want people to feel like they should avoid these techniques and limit
    themselves to classes and IDs. I just want web developers to consider the cost
    of CSS, and to get more comfortable with using the DevTools to understand which
    kinds of CSS patterns may be slowing down their website.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在这次演讲中，我*并不*想泼冷水于那些试图运用 CSS 做出复杂设计的人。越来越多地，我看到对新 CSS 特性如[`:has`](https://developer.mozilla.org/en-US/docs/Web/CSS/:has)和[容器查询](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Container_Queries)的[雄心勃勃的使用](https://www.bram.us/2023/01/12/sibling-scopes-in-css-thanks-to-has/)，我不希望人们觉得他们应该避开这些技术，仅限于类和
    ID。我只是希望网页开发者考虑到 CSS 的成本，并更习惯于使用开发工具来理解哪些 CSS 模式可能会减慢他们网站的加载速度。
- en: I also got some good feedback from browser DevTools folks after my talk, so
    I’m hopeful for the future of CSS performance. As techniques like shadow DOM and
    [native CSS scoping](https://css-tricks.com/early-days-for-css-scoping/) become
    more widespread, it may even mitigate a lot of my worries about CSS perf. In any
    case, it was a fascinating topic to research, and I hope that folks were intrigued
    and entertained by my talk.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在我演讲之后，我还收到了一些浏览器开发工具团队的良好反馈，所以我对 CSS 性能的未来充满希望。随着诸如影子 DOM 和[原生 CSS 作用域](https://css-tricks.com/early-days-for-css-scoping/)技术的普及，它甚至可能会减轻我对
    CSS 性能的许多担忧。无论如何，这是一个令人着迷的研究课题，我希望听众对我的演讲感到好奇和愉悦。
