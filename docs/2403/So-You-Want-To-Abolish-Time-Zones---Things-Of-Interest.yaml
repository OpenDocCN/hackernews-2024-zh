- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:54:47'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: So You Want To Abolish Time Zones @ Things Of Interest
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://qntm.org/abolish](https://qntm.org/abolish)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Laudable!
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s take a look at some of the changes that arise from this, through a simple
    case study: making an international phone call to a relative.'
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
- en: Before abolishing time zones
  id: totrans-split-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I want to call my Uncle Steve in Melbourne. What time is it there?
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: '[Google tells me](https://www.google.co.uk/search?q=time+in+melbourne) it is
    currently 4:25am there.'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
- en: It's probably best not to call right now.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
- en: After abolishing time zones
  id: totrans-split-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I want to call my Uncle Steve in Melbourne. What time is it there?
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
- en: It's 4:25am there, same as it is here, of course! Same as it is in New York,
    Bangalore and Hawaii, at the South Pole and on the Moon.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
- en: Well, hold on a second. First of all, we need to straighten out some terminology.
    The terms "a.m." and "p.m." (*ante meridiem* and *post meridiem*) are strongly
    deprecated now, because they refer to the position of the Sun, not of the clock.
    With time zones, these were *roughly* the same, but now the position of the clock
    is objective whereas the position of the Sun is subjective. In much of the world,
    they do not agree in the slightest. 12:00 is nowhere near the middle of the solar
    day, if it's even *during* the solar day. Likewise, 00:00 is nowhere near the
    middle of the solar night. Worse, in many places there *is* still a "7pm" (i.e.
    7 in the afternoon), but it's at 07:00\. Similarly, "7 in the morning" is at 19:00...
    but is followed by "8 in the afternoon", because the Sun passes its zenith at
    19:30.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
- en: So, you have to say "solar noon" to refer to the instant when the Sun is at
    its zenith, and "twelve hundred hours" to refer to the instant when the clock
    reads 12:00\. Similarly "solar midnight" and "zero hundred hours". And you have
    to use the twenty-four hour clock, it's the only way to be unambiguous.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
- en: 'So to rephrase: I want to call my Uncle Steve in Melbourne. What time is it
    there?'
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
- en: It is 04:25 ("four twenty-five") there, same as it is here.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
- en: Does that mean I can call him?
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
- en: I don't know.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
- en: '*'
  id: totrans-split-21
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '...Well, put it this way. I''m in the UK. He''s in Australia. How far ahead
    of me is he?'
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
- en: He isn't. Not at all. Uncle Steve is zero hours ahead. Melbourne, Australia
    is on the same time zone, the same week day and the same calendar date as me,
    and the rest of the world. We have blissful disambiguation. We have eliminated
    time zones, daylight saving and the international date line.
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
- en: I still don't know if I can call my uncle, though!
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
- en: '*'
  id: totrans-split-25
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Alright, there must be a way to work this out. We can find out what hours Uncle
    Steve's office operates, add a few hours beforehand for breakfast, and a few more
    hours after that for evening activities. Then we can see whether 04:25 falls in
    that range.
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
- en: 'Well, *those* ranges. I''m in the UK, and a typical "nine to five" office (hah,
    bit of an anachronism there) now operates multiple ranges of times each day:'
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
- en: '| Monday | 17:00 to 24:00 |'
  id: totrans-split-28
  prefs: []
  type: TYPE_TB
- en: '| Tuesday | 00:00 to 01:00, 17:00 to 24:00 |'
  id: totrans-split-29
  prefs: []
  type: TYPE_TB
- en: '| Wednesday | 00:00 to 01:00, 17:00 to 24:00 |'
  id: totrans-split-30
  prefs: []
  type: TYPE_TB
- en: '| Thursday | 00:00 to 01:00, 17:00 to 24:00 |'
  id: totrans-split-31
  prefs: []
  type: TYPE_TB
- en: '| Friday | 00:00 to 01:00, 17:00 to 24:00 |'
  id: totrans-split-32
  prefs: []
  type: TYPE_TB
- en: '| Saturday | 00:00 to 01:00 |'
  id: totrans-split-33
  prefs: []
  type: TYPE_TB
- en: '| Sunday | closed |'
  id: totrans-split-34
  prefs: []
  type: TYPE_TB
- en: Although, some people go home early on Saturday evening, because that's the
    start of the weekend. "Saturday evening" means around 01:00 in the UK at this
    time of year. (It can vary seasonally.) Some people even go home as early as 23:00,
    which is Friday evening. The *second* Friday evening, that is. There are two Friday
    evenings now. In this country, anyway.
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
- en: In any case, you can see very easily (?) that if it's currently 04:25, then
    my office closed a few hours ago.
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
- en: It's actually Saturday today, so in fact my office is closed for the weekend.
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
- en: '*'
  id: totrans-split-38
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'But there''s another dangerous word: "today". You can''t say "it''s Saturday
    today" anymore. It''s more correct to say that "it''s Saturday *right now*". The
    term "today" usually means "the current solar day" but "Saturday" is no longer
    a "day" in that sense - it no longer corresponds unambiguously to a single solar
    day.'
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
- en: 'Instead, solar days are now formally given hybrid names, as in "it''s Friday/Saturday
    today". And in fact, business hours here in the UK are typically documented in
    this much simpler form:'
  id: totrans-split-40
  prefs: []
  type: TYPE_NORMAL
- en: '| Monday/Tuesday | 17:00 to 01:00 |'
  id: totrans-split-41
  prefs: []
  type: TYPE_TB
- en: '| Tuesday/Wednesday | 17:00 to 01:00 |'
  id: totrans-split-42
  prefs: []
  type: TYPE_TB
- en: '| Wednesday/Thursday | 17:00 to 01:00 |'
  id: totrans-split-43
  prefs: []
  type: TYPE_TB
- en: '| Thursday/Friday | 17:00 to 01:00 |'
  id: totrans-split-44
  prefs: []
  type: TYPE_TB
- en: '| Friday/Saturday | 17:00 to 01:00 |'
  id: totrans-split-45
  prefs: []
  type: TYPE_TB
- en: '| Saturday/Sunday | closed |'
  id: totrans-split-46
  prefs: []
  type: TYPE_TB
- en: '| Sunday/Monday | closed |'
  id: totrans-split-47
  prefs: []
  type: TYPE_TB
- en: 'As you can see, a "weekday" is Monday/Tuesday to Friday/Saturday. Again, this
    is not the case all over the world: some countries work on Sunday/Monday to Thursday/Friday.
    This means that it is not possibly to say universally whether Friday/Saturday
    is a "weekday". And other countries still are well-enough aligned with Standard
    Time that they get to retain conventional weekly timetables, which run from "Monday"
    to "Sunday". Lucky them!'
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
- en: (When does Monday/Tuesday roll over to Tuesday/Wednesday? Who knows?)
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
- en: 'Interesting aside: Due to religious stipulations, some people take the second
    half of Friday/Saturday off, or the first half of Sunday/Monday. Some people,
    obeying *other* religious stipulations, now consider the Sabbath to be the entire
    solar day of Saturday/Sunday and its preceding solar night. It sort of varies.
    This is to say nothing of the religious stipulations which alter the meanings
    of the usual day names to refer to nonstandard periods of time - i.e., whole local
    solar days. It was all quite contentious for a while there.'
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
- en: Sunday trading laws look a bit weird now, too.
  id: totrans-split-51
  prefs: []
  type: TYPE_NORMAL
- en: 'But anyway: we can find out Uncle Steve''s working timetable and work forwards
    from that. Except that Uncle Steve''s organisation doesn''t have fixed working
    hours. Or maybe it does, but it doesn''t publish them online. Or maybe I''m such
    a bad nephew that I don''t even remember where Uncle Steve works. Wait, now I
    remember why I don''t remember: he''s retired.'
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
- en: Do normal humans publish "waking hours"? Not typically.
  id: totrans-split-53
  prefs: []
  type: TYPE_NORMAL
- en: Hmm.
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
- en: '*'
  id: totrans-split-55
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Okay, it looks like I'm going to have to do this the hard way. Is the Sun up
    in Melbourne?
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
- en: Let me find a webcam somewhere in that city.
  id: totrans-split-57
  prefs: []
  type: TYPE_NORMAL
- en: '...Looks like it''s daylight, but I can''t see the Sun itself from this angle,
    and even if I could I don''t know if I could tell whether it was rising or setting.
    But if it''s daylight, doesn''t that mean Uncle Steve will be awake?'
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
- en: Well, not necessarily. Where I am, in the UK, the Sun set hours ago. But it's
    northern hemisphere winter here, and the days are short. Just because the Sun
    is down doesn't imply that I'm asleep, and conversely just because the Sun is
    up in the southern hemisphere summer doesn't mean Uncle Steve will be awake.
  id: totrans-split-59
  prefs: []
  type: TYPE_NORMAL
- en: I guess I *can* conclude that the Sun is rising there. That means it's the morning,
    so he's likely either awake or *soon* to wake up. But what time in the morning
    is it? (04:25! We've been over this!) But how many hours ahead is he? (Zero!)
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
- en: '*'
  id: totrans-split-61
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Erm... Let's assume a typical human being is awake for approximately 16 hours
    per day - 14 for safety - and that this period of time is centred on local solar
    noon for convenience purposes. What time is solar noon in Melbourne today? I'll
    take that time, subtract half a day (7 hours) and assume that that's the time
    Uncle Steve typically gets up in the morning.
  id: totrans-split-62
  prefs: []
  type: TYPE_NORMAL
- en: So, we know that solar noon along our new prime meridian is 12:00 by definition,
    or at least kept within one second of it through the periodic introduction of
    leap seconds. And the prime meridian, as we all know from history, is now at 120°
    east, running slightly east of Beijing, China.
  id: totrans-split-63
  prefs: []
  type: TYPE_NORMAL
- en: Oh, where did you think it was going to be? Somewhere convenient for you?
  id: totrans-split-64
  prefs: []
  type: TYPE_NORMAL
- en: One of the stronger reasons for adopting a new time zone is to more easily do
    business with a neighbouring territory which already uses that time zone. China,
    a gigantic country spanning some sixty degrees of longitude (and therefore, nominally,
    four whole "hours") has been unified on a single time zone since 1949\. And it
    was already [the largest single time zone in the world by population](http://artscience.cyberclip.com/world-population-by-time-zone).
  id: totrans-split-65
  prefs: []
  type: TYPE_NORMAL
- en: So, this phenomenon has now spread globally. Everybody wants to do business
    with China and her allies - everybody is China's ally. Everybody is on China Standard
    Time, UTC+08:00.
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
- en: So the prime meridian is at 120° east. Meanwhile, according to Wikipedia, Melbourne
    is at longitude 144° 57' 47" east. That puts Melbourne 24° 57' 47" further east
    than the prime meridan. Assuming the solar day is precisely 24 hours, and my arithmetic
    is correct, that means Melbourne experiences solar noon 1 hour 39 minutes 51 seconds
    earlier than the prime meridian, at 10:20:09\. So, Uncle Steve's diurnal routine
    probably involves getting up around 03:20 and going to sleep around 17:20\. (Dang,
    I bet the Australians still get to use regular days like "Thursday". I'm envious.)
  id: totrans-split-67
  prefs: []
  type: TYPE_NORMAL
- en: It's 04:25 now - he's definitely up. I'm calling him.
  id: totrans-split-68
  prefs: []
  type: TYPE_NORMAL
- en: It's ringing.
  id: totrans-split-69
  prefs: []
  type: TYPE_NORMAL
- en: It's been ringing for a while...
  id: totrans-split-70
  prefs: []
  type: TYPE_NORMAL
- en: '*'
  id: totrans-split-71
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '"Who is this?"'
  id: totrans-split-72
  prefs: []
  type: TYPE_NORMAL
- en: '"Hello Uncle Steve!"'
  id: totrans-split-73
  prefs: []
  type: TYPE_NORMAL
- en: '"Do you have any idea what time it is?" Uncle Steve asks, sounding as if he
    is still asleep.'
  id: totrans-split-74
  prefs: []
  type: TYPE_NORMAL
- en: '"Of course I do, and so do you! It''s 04:25 on Saturday... *everywhere*." I
    add a dramatic emphasis to the last word.'
  id: totrans-split-75
  prefs: []
  type: TYPE_NORMAL
- en: '"But do you know what 04:25 on Saturday *signifies* in Melbourne?"'
  id: totrans-split-76
  prefs: []
  type: TYPE_NORMAL
- en: '"Breakfast time?"'
  id: totrans-split-77
  prefs: []
  type: TYPE_NORMAL
- en: I can actually *hear* him rubbing his eyes.
  id: totrans-split-78
  prefs: []
  type: TYPE_NORMAL
- en: '"We don''t centre our waking/sleeping cycle on solar noon, fool nephew," Uncle
    Steve explains. "We centre the *school day* on solar noon. In countries above
    and below certain latitudes, where seasonal variation in the amount of daylight
    is significant, it''s important for there to be the maximum amount of light when
    children are going to school in the morning, and coming home from school in the
    afternoon. Here in Melbourne, solar noon is about 10:30 Standard Time, so the
    average school day is timetabled from 07:00 to 14:00, and a typical working day
    runs from about 07:00 to 15:00\. That means that on a working day, I get up at
    05:00, at the earliest."'
  id: totrans-split-79
  prefs: []
  type: TYPE_NORMAL
- en: '"Ooogh. Sorry. That''s about two hours later than I reckoned," I tell him.'
  id: totrans-split-80
  prefs: []
  type: TYPE_NORMAL
- en: '"I know," he replies.'
  id: totrans-split-81
  prefs: []
  type: TYPE_NORMAL
- en: '"I didn''t know you did that in Australia," I say. "That deliberate misalignment
    of the diurnal routine. Does every country do it?"'
  id: totrans-split-82
  prefs: []
  type: TYPE_NORMAL
- en: '"No. Equatorial countries don''t, because they get plenty of light all year
    round. Temperate countries do, though. The technical term for it is ''daylight
    saving''."'
  id: totrans-split-83
  prefs: []
  type: TYPE_NORMAL
- en: I blink.
  id: totrans-split-84
  prefs: []
  type: TYPE_NORMAL
- en: '"And 05:00 is when I get up on a *working* day," Uncle Steve continues. "On
    Saturdays, I like to lie in. Until solar noon, if possible. That''s more than
    five hours from now."'
  id: totrans-split-85
  prefs: []
  type: TYPE_NORMAL
- en: I'm beaten. "I guess I have no idea what 04:25 on Saturday signifies. It used
    to be pretty universal, but now where I live it signifies a time to go out and
    get drunk..."
  id: totrans-split-86
  prefs: []
  type: TYPE_NORMAL
- en: '"And where I live," Uncle Steve says, "it signifies a hangover."'
  id: totrans-split-87
  prefs: []
  type: TYPE_NORMAL
- en: '"The same time of day on the same day of the week means many different things
    to different people all over the world," I say. "Too many to remember them all."'
  id: totrans-split-88
  prefs: []
  type: TYPE_NORMAL
- en: '"Yeah," Uncle Steve grumbles. "It would be neat if there was a lookup table
    for that kind of thing."'
  id: totrans-split-89
  prefs: []
  type: TYPE_NORMAL
- en: In summary
  id: totrans-split-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Abolishing time zones brings many benefits, I hope. It also:'
  id: totrans-split-91
  prefs: []
  type: TYPE_NORMAL
- en: causes the question "What time is it there?" to be useless/unanswerable
  id: totrans-split-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: necessitates significant changes to the way in which normal people talk about
    time
  id: totrans-split-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: convolutes timetables, where present
  id: totrans-split-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: means "days" are no longer the same as "days"
  id: totrans-split-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: complicates both secular and religious law
  id: totrans-split-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: is a staggering inconvenience for a minimum of five billion people
  id: totrans-split-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: makes it near-impossible to reason about time in other parts of the world
  id: totrans-split-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: does not mean everybody gets up at the same time, goes to work at the same time,
    or goes to bed at the same time
  id: totrans-split-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: is not simpler.
  id: totrans-split-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**As long as humans live in more than one part of the world, solar time is
    always going to be subjective.** Abolishing time zones only exacerbates this problem.'
  id: totrans-split-101
  prefs: []
  type: TYPE_NORMAL
- en: 'Other objections not mentioned above:'
  id: totrans-split-102
  prefs: []
  type: TYPE_NORMAL
- en: '**We already do have a global standard time zone, and everybody who cares already
    uses it: [UTC](http://en.wikipedia.org/wiki/Coordinated_Universal_Time).** There
    are also more accurate time standards in use for more specialist purposes.'
  id: totrans-split-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There already exists an extremely well-maintained, public database of every
    time zone in every world territory going back to 1970 and some distance beyond,
    called [zoneinfo](http://en.wikipedia.org/wiki/Tz_database). Zoneinfo can be used
    to answer questions such as "If a person says they live in Angola, how should
    their computer's clock be set?", "If it's 20:35 in Djibouti, what time is it in
    St. Kitts and Nevis, and for that matter is it the same calendar day there?" and
    "When does the U.S. observe daylight saving?"
  id: totrans-split-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Even in the best case scenario, it is impossible to *retroactively* scrap time
    zones. The past will always exist, and the people who lived there will never adopt
    your new standard. Nor can all of past history be renumbered. The history of timekeeping
    will remain exactly as complicated as it always has been, and the zoneinfo database
    can never be abandoned.
  id: totrans-split-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In fact, altering the global distribution of time zones yet again - even to
    scrap them - only serves to make the zoneinfo database *larger* and makes the
    past *more* complicated. Now you need to record when every territory switched
    over to the new global Standard Time. What if they don't all make the switch simultaneously,
    but at a convenient local time in the middle of the local night?
  id: totrans-split-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: No matter what the law says, people will continue "unofficially" using their
    own local time for most purposes, maintaining two clocks in parallel if need be.
    This already happens in western China, and can only increase ambiguity. (I guess
    you'd call that "civil time disobedience"?)
  id: totrans-split-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*'
  id: totrans-split-108
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: If it's any consolation, all of this is extremely unlikely to happen, since
    it relies on an international agreement between every single nation in the world.
    Or on China attacking and conquering the entire world and installing China Standard
    Time as part of a totalitarian regime, which is slightly less unlikely but still
    very unlikely.
  id: totrans-split-109
  prefs: []
  type: TYPE_NORMAL
