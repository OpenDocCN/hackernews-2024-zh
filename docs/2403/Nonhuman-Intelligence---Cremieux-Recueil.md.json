["```\nResponses <- select(df, starts_with(\"item_\"))\nMatrix <- cor(Responses)\nNItem <- ncol(Matrix)\nNames <- colnames(Matrix)\nParcels <- list()\nAvgCor <- apply(Matrix, 1, mean)\nSorted_Items <- names(sort(AvgCor, decreasing = T))\n\nRem <- Sorted_Items\nfor(i in 1:6) {\n   Parcels[[length(Parcels) + 1]] <- head(Rem, 3)\n   Rem <- setdiff(Rem, head(Rem, 3))\n}\n\nfor(i in 1:2) {\n   Parcels[[length(Parcels) + 1]] <- head(Rem, 4)\n   Rem <- setdiff(Rem, head(Rem, 4))\n}\n\nfpr (i in seq_along(Parcels)) {\n    Parcel_Names <- paste(\"Parcel\", i)\n    Responses[[Parcel_Names]] <- rowSums(select(Responses, all_of(Parcels[[i]]))), na.rm = T)\n}\n\nParcSums <- data.frame(matrix(nrow = nrow(df), ncol = length(Parcels)))\nnames(ParcSums) <- paste0(\"Parcel\", seq_along(Parcels))\n\nfor (i in seq_along(Parcels)) { \n     Parcel_Items <- Parcels[[i]]\n     ParcSums[,i] <- rowSums(select(df, all_of(Parcel_Items)), na.rm = T)\n}\n```", "```\nGroupMeans <- df_ParcSums %>% \n     select(training_or_bot, starts_with(\"item_\")) %>%\n     pivot_longer(cols = starts_with(\"item_\"), names_to = \"item\", values_to = \"score\",\n     names_transform = list(item = ~factor(., levels = paste0(\"item_\", 1:26)))) %>%\n    group_by(item, training_or_bot) %>%\n    summarize(mean_score = mean(score, na.rm = T), .groups = 'drop') %>%\n    pivot_wider(names_from = training_or_bot, values_from = mean_score) %>%\n    arrange(match(item, paste0(\"item_\", 1:26)))\n\nGroupMat <- cor(GroupMeans[, -1])\n```"]