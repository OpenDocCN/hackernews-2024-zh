["```\n#elif HAVE_FULLFSYNC  if( fullSync ){\n rc = osFcntl(fd, F_FULLFSYNC, 0);\n }else{\n rc = 1;\n }  /* If the FULLFSYNC failed, fall back to attempting an fsync().\n ** It shouldn't be possible for fullfsync to fail on the local ** file system (on OSX), so failure indicates that FULLFSYNC ** isn't supported for this file system. So, attempt an fsync ** and (for now) ignore the overhead of a superfluous fcntl call. ** It'd be better to detect fullfsync support once and avoid ** the fcntl call every time sync is called. */  if( rc ) rc = fsync(fd);   #elif defined(__APPLE__)\n  /* fdatasync() on HFS+ doesn't yet flush the file size if it changed correctly\n ** so currently we default to the macro that redefines fdatasync to fsync */ rc = fsync(fd); \n```", "```\n~ % sudo dtruss -t fcntl sqlite3 test.sqlite SYSCALL(args)    = return SQLite version 3.37.0 2021-12-09 01:34:53 Enter \".help\" for usage hints. fcntl(0x3, 0x5F, 0x1)   = 0 0 fcntl(0x3, 0x3F, 0x6BDBD9C0)   = 3 0 fcntl(0x4, 0x32, 0x16BDBDDA8)   = 0 0   sqlite> insert into test (a) values (1); fcntl(0x3, 0x5A, 0x16BDBD0B8)   = 0 0 fcntl(0x3, 0x5A, 0x16BDBD0B8)   = 0 0 fcntl(0x3, 0x5A, 0x16BDBD0B8)   = 0 0 fcntl(0x3, 0x5A, 0x16BDBCBA8)   = 0 0 fcntl(0x3, 0x5A, 0x16BDBDE98)   = 0 0 fcntl(0x3, 0x5A, 0x16BDBDE98)   = 0 0 fcntl(0x3, 0x5A, 0x16BDBDE98)   = 0 0 fcntl(0x3, 0x5A, 0x16BDBDF08)   = 0 0 fcntl(0x4, 0x5F, 0x1)   = 0 0 fcntl(0x4, 0x3F, 0x1)   = 3 0 fcntl(0x5, 0x5F, 0x1)   = 0 0 fcntl(0x3, 0x5A, 0x16BDBDEE8)   = 0 0 fcntl(0x3, 0x5A, 0x16BDBDEE8)   = 0 0 fcntl(0x5, 0x5F, 0x1)   = 0 0 fcntl(0x3, 0x5A, 0x16BDBDE88)   = 0 0 fcntl(0x3, 0x5A, 0x16BDBDE88)   = 0 0 fcntl(0x3, 0x5A, 0x16BDBDEB8)   = 0 0 \n```", "```\n#define F_FULLFSYNC 51 /* fsync + ask the drive to flush to the media */ #define F_GETPROTECTIONCLASS 63 /* Get the protection class of a file from the EA, returns int */ #define F_BARRIERFSYNC 85 /* fsync + issue barrier to drive */ \n```", "```\n#define F_OFD_SETLK 90 /* Acquire or release open file description lock */ #define F_SETCONFINED 95 /* \"confine\" OFD to process */ \n```", "```\nsqlite> pragma fullfsync=on; sqlite> insert into test (a) values (1); fcntl(0x3, 0x5A, 0x16DD9DEF8)   = 0 0 fcntl(0x3, 0x5A, 0x16DD9DEF8)   = 0 0 fcntl(0x3, 0x5A, 0x16DD9DEF8)   = 0 0 fcntl(0x3, 0x5A, 0x16DD9DF68)   = 0 0 fcntl(0x4, 0x5F, 0x1)   = 0 0 fcntl(0x4, 0x3F, 0x1)   = 3 0 fcntl(0x3, 0x5A, 0x16DD9DF48)   = 0 0 fcntl(0x3, 0x5A, 0x16DD9DF48)   = 0 0 fcntl(0x4, 0x55, 0x0)   = 0 0 fcntl(0x5, 0x5F, 0x1)   = 0 0 fcntl(0x4, 0x55, 0x0)   = 0 0 fcntl(0x3, 0x55, 0x0)   = 0 0 fcntl(0x3, 0x5A, 0x16DD9DEE8)   = 0 0 fcntl(0x3, 0x5A, 0x16DD9DEE8)   = 0 0 fcntl(0x3, 0x5A, 0x16DD9DF18)   = 0 0 \n```"]