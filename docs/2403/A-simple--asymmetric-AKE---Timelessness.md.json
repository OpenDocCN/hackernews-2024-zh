["```\nUser                                                              Device\n========================================================================\nknows `pk_identity`                   knows `sk_identity`, `pk_identity`\ngenerates `sk_user`, `pk_user`\n\nUser ----------------------------[pk_user]----------------------> Device\n\n                                      generates `sk_device`, `pk_device`\n                         sessionkey = HASH(pk_user^sk_device, pk_device)\n                                  signature = SIGN(sk_identity, pk_user)\n                                enc_sig = ENCRYPT(sessionkey, signature)\n\nUser <----------------------[pk_device,enc_sig]------------------ Device\n\nsessionkey = HASH(pk_device^sk_user, pk_device)\nproof = DECRYPT(sessionkey, enc_sig)\nVALIDATE(pk_identity, proof, pk_user) \n```", "```\nattacker[passive]\nprincipal Device[\n\tknows private identity_secret\n\tidentity = G^identity_secret\n]\n// Assume knowledge of identity public key prior to initiation of the AKE.\n// (Modeled here as a guarded/guaranteed transfer: '[identity]')\nDevice -> User: [identity]\nprincipal User[\n\tgenerates dhe_user_secret\n\tdhe_user_public = G^dhe_user_secret\n]\n\n// Initiation of a secure session.\nUser -> Device: dhe_user_public\nprincipal Device[\n\tgenerates dhe_device_secret\n\tdhe_device_public = G^dhe_device_secret\n\tss_device = dhe_user_public^dhe_device_secret\n\tsessionkey_device = HASH(ss_device, dhe_device_public)\n\tsignature = SIGN(identity_secret, dhe_user_public)\n\tproof_encrypted = ENC(sessionkey_device, signature)\n]\nDevice -> User: dhe_device_public,proof_encrypted\nprincipal User[\n\tss_user = dhe_device_public^dhe_user_secret\n\tsessionkey_user = HASH(ss_user, dhe_device_public)\n\tproof = DEC(sessionkey_user, proof_encrypted)\n\t_ = SIGNVERIF(identity, dhe_user_public, proof)?\n]\n\nqueries[\n\tconfidentiality? identity_secret\n\tconfidentiality? dhe_device_secret\n\tconfidentiality? dhe_user_secret\n\tconfidentiality? ss_device\n\tconfidentiality? ss_user\n\tconfidentiality? sessionkey_device\n\tconfidentiality? sessionkey_user\n\tfreshness? dhe_user_secret\n\tfreshness? dhe_device_secret\n\tfreshness? ss_device\n\tfreshness? ss_user\n\tfreshness? sessionkey_device\n\tfreshness? sessionkey_user\n\tequivalence? ss_user, ss_device\n\tequivalence? sessionkey_user, sessionkey_device\n\tequivalence? proof, signature\n\t// Authentication-queries provide no significance with a passive attacker.\n\tauthentication? User -> Device: dhe_user_public\n\tauthentication? Device -> User: dhe_device_public\n\tauthentication? Device -> User: proof_encrypted\n] \n```"]