- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-29 12:48:27'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-29 12:48:27'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: How Long Will x86 Endure? - by Babbage - The Chip Letter
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: x86会持续多久？ - Babbage撰写 - The Chip Letter
- en: 来源：[https://thechipletter.substack.com/p/how-long-will-x86-endure](https://thechipletter.substack.com/p/how-long-will-x86-endure)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://thechipletter.substack.com/p/how-long-will-x86-endure](https://thechipletter.substack.com/p/how-long-will-x86-endure)
- en: 'It’s 1979, and Intel has a problem. Its 16-bit [8086](https://en.wikipedia.org/wiki/Intel_8086)
    microprocessor is losing out to its competitors. To quote from the [Oral History](http://archive.computerhistory.org/resources/access/text/2015/09/102746836-05-01-acc.pdf):'
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是1979年，英特尔面临问题。它的16位[8086](https://en.wikipedia.org/wiki/Intel_8086)微处理器正在输给竞争对手。引用来自[口述历史](http://archive.computerhistory.org/resources/access/text/2015/09/102746836-05-01-acc.pdf)：
- en: 'Dave House: … Motorola was selling the 68000 and Zilog was selling the Z8000,
    and we were commonly coming in third with the 8086 when it came to design win
    choices.'
  id: totrans-split-7
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'Dave House: … 摩托罗拉正在销售68000，而Zilog正在销售Z8000，而我们在设计胜利选择时通常排名第三，使用8086。'
- en: Why is it losing?
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么会输？
- en: 'Dane Elliot: So any engineer who understood minicomputer architecture was going
    to appreciate what Motorola and Zilog had to offer!'
  id: totrans-split-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'Dane Elliot: 因此，任何了解小型计算机架构的工程师都会欣赏摩托罗拉和Zilog所提供的内容！'
- en: 'Dave House: Exactly.'
  id: totrans-split-10
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'Dave House: 没错。'
- en: 'Rich Bader: The software guys!'
  id: totrans-split-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'Rich Bader: 软件界的大佬！'
- en: The 8086 is designed as a stopgap. Intel has focused its attention on the [iAPX432](https://en.wikipedia.org/wiki/Intel_iAPX_432),
    a 32-bit processor with a whole array of advanced features. But the iAPX432 wouldn’t
    be ready for several years.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 8086被设计为一个过渡产品。英特尔将注意力集中在[iAPX432](https://en.wikipedia.org/wiki/Intel_iAPX_432)，一个具有一系列先进功能的32位处理器。但iAPX432还需要数年才能准备好。
- en: The 8086 project started in 1976 and was first available to buy in 1978, but
    the design had all sorts of limitations. Top of the list was its segmented memory
    architecture, which added significant complexity when addressing its full memory
    space.
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 8086项目始于1976年，1978年首次可购买，但其设计存在各种限制。首要问题是其分段存储结构，在地址其整个存储空间时增加了显著的复杂性。
- en: So, Crush was born. The not very antitrust friendly name for Intel’s programme
    to fight off competition from Motorola and Zilog. It focused on the 8086 and its
    companion chips as a systems solution rather than on the 8086’s architecture or
    software. Crush soon gained momentum. By 1980 the 8086 had gained over 2,300 design
    wins.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，Crush诞生了。这是英特尔用来对抗摩托罗拉和Zilog竞争的不太友好的反垄断名称。它专注于8086及其伴随芯片作为系统解决方案，而不是8086的架构或软件。Crush很快获得了动力。到1980年，8086已经赢得了超过2,300个设计胜利。
- en: And the 8086 had a secret weapon. Assembly code for Intel’s popular 8-bit 8080
    CPU could be automatically translated to 8086 compatible code. Software writers
    could take their existing applications and quickly adapt them to run on the 8086.
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 而8086有一个秘密武器。针对英特尔流行的8位8080 CPU的汇编代码可以自动转换为8086兼容代码。软件开发人员可以拿出他们现有的应用程序，并迅速适应在8086上运行。
- en: Then IBM chose the cheaper version of the 8086, the 8088, to create the IBM
    PC.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 然后IBM选择了8086的廉价版本8088，创建了IBM PC。
- en: And the rest is history.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 历史由此铸就。
- en: '* * *'
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Fast-forward to today and the stopgap 8086 has been enhanced, extended, and
    speeded-up. Intel even had a little help from arch-rival AMD in making a 64-bit
    version of the architecture. And along the way, the architecture came to utterly
    dominate first desktop and then datacenter computing.
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 快进到今天，临时的8086已经被增强、扩展和加速。英特尔甚至在制造架构的64位版本时得到了主要竞争对手AMD的一点帮助。在这一过程中，该架构先后完全主宰了台式机和数据中心计算。
- en: But now we have credible rivals. Both Arm and RISC-V provide not only viable
    designs but also attractive alternative business models in the shape of either
    licensed or open-source architectures.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 但现在我们有了可信的竞争对手。Arm和RISC-V不仅提供了可行的设计，还提供了有吸引力的替代商业模型，即许可或开源架构。
- en: Apple has switched to Arm on the Mac. Microsoft makes Windows for Arm. Arm instances
    are available on Amazon, Google, Microsoft, and Oracle clouds. These firms are
    using Arm because it provides real advantages for many users, notably in cost
    and power efficiency.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果已经在Mac上转向Arm。微软为Arm制作Windows。Arm实例可以在亚马逊、谷歌、微软和甲骨文的云上使用。这些公司使用Arm是因为它为许多用户提供了真正的优势，尤其是在成本和能效方面。
- en: But consider how long architectures last. You can still buy 6502 and Z80 compatible
    CPUs today. This is fully forty years after these architectures were at their
    peak. And these designs never had the volumes or the ubiquity of x86\.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 但要考虑架构的持续时间。你现在仍然可以购买6502和Z80兼容的CPU。这完全是在这些架构达到顶峰四十年后。而这些设计从未像x86那样普及和高产。
- en: And crucially, x86 now has over forty years worth of software written to run
    on the architecture. Some users will continue to need x86 backwards compatibility
    just to keep their businesses running.
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 并且关键是，现在已经有超过四十年的软件专为在该架构上运行而编写。一些用户将继续需要x86向后兼容性，以确保他们的业务正常运行。
- en: I think it’s safe to say that we will still be able to buy x86 compatible machines
    in at the least sixty years time. Maybe very much longer.
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为可以肯定的是，至少六十年后我们仍然能够购买兼容x86的机器。也许会更久。
- en: Translating x86 to Arm to RISC-V code - no actually, hieroglyphic and Demotic
    Ancient Egyptian and Ancient Greek on the Rosetta Stone.
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 将x86翻译成Arm到RISC-V的代码 - 实际上，象形文字和德莫提克古埃及和古希腊在罗塞塔石碑上。
- en: But the translation tools that took 8080 assembly code and turned it into 8086
    code have their counterparts in the 2020s. Apple’s [Rosetta 2](https://www.computerworld.com/article/3597949/everything-you-need-to-know-about-rosetta-2-on-apple-silicon-macs.html)
    does ahead of time compilation of 64-bit x86 binary code into Arm code. Microsoft
    has similar [tools](https://learn.microsoft.com/en-us/windows/arm/arm64ec) to
    enable 64-bit x86 Windows applications to run on Windows for Arm. And these tools
    put the ability to change from x86 to Arm in the hands of users rather than developers.
    We will surely see similar tools that do the same for RISC-V. The chains of backwards
    compatibility have been broken.
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，20世纪80年代编写8080汇编代码并将其转换为8086代码的翻译工具在2020年代有了对应的工具。苹果的[Rosetta 2](https://www.computerworld.com/article/3597949/everything-you-need-to-know-about-rosetta-2-on-apple-silicon-macs.html)对64位x86二进制代码进行了提前编译，转换为Arm代码。微软也有类似的[工具](https://learn.microsoft.com/en-us/windows/arm/arm64ec)，使64位x86
    Windows应用能在Windows for Arm上运行。这些工具使用户而非开发者能够轻松地从x86转向Arm。我们肯定会看到类似的工具，将同样的功能应用于RISC-V。向后兼容的枷锁已经被打破了。
- en: So how long will x86 endure? As the leading architecture on desktops, laptops
    and servers? I‘m going to venture for at least a decade but not for two. As a
    practical desktop architecture? I’m going to guess at least thirty years. And
    x86 code, thanks to translation tools, will very likely be around for even longer
    after that.
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 那么x86还能持续多久？作为台式机、笔记本电脑和服务器的主要架构？我敢说至少十年，但不超过二十年。作为实际的台式机架构？我猜至少三十年。而且由于翻译工具的存在，x86代码很可能在此后更长的时间内存在。
- en: What do you think? Please let me know in the comments.
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: 你怎么看？请在评论中告诉我。
- en: Thank you for reading The Chip Letter. If you’ve enjoyed this post I’d be incredibly
    grateful if you could share it.
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读《芯片通讯》。如果你喜欢这篇文章，如果能分享，我将非常感激。
- en: '[Share](https://thechipletter.substack.com/p/how-long-will-x86-endure?utm_source=substack&utm_medium=email&utm_content=share&action=share)'
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[分享](https://thechipletter.substack.com/p/how-long-will-x86-endure?utm_source=substack&utm_medium=email&utm_content=share&action=share)'
- en: '#1'
  id: totrans-split-31
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '#1'
- en: For more on Crush see this video of the oral history panel from 2013.
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于Crush的内容，请观看2013年的口头历史小组讨论视频。
- en: '#2'
  id: totrans-split-33
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '#2'
- en: Why hasn't Arm made its own x86 to 64-bit Arm translation tool? It has the most
    to gain from the switch from x86\. It’s probably superfluous now but a few years
    ago it could have been a useful tool to encourage users to switch. I’m genuinely
    puzzled.
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么Arm没有制作自己的x86到64位Arm的翻译工具？它从x86转向最有利。现在可能多余了，但几年前它可能是一个鼓励用户转换的有用工具。我感到困惑。
- en: '#3'
  id: totrans-split-35
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '#3'
- en: Shortly after drafting this I became aware of [Box86](https://box86.org) which
    supports running of 64-bit x86 binaries on 64-bit Arm systems. And of course [qemu](https://www.qemu.org)
    should allow x86 virtual machines to be emulated (slowly) on 64-bit Arm systems.
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在起草这篇文章后不久，我发现了[Box86](https://box86.org)，支持在64位Arm系统上运行64位x86二进制文件。当然，[qemu](https://www.qemu.org)应该允许在64位Arm系统上仿真（速度较慢的）x86虚拟机。
- en: Do let me know if you know of any others.
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
  zh: 请务必告诉我，如果你知道其他的方法。
- en: '*Pentium Pro*'
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
  zh: '*奔腾Pro*'
- en: https://commons.wikimedia.org/wiki/File:Ppro512K.jpg
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
  zh: https://commons.wikimedia.org/wiki/File:Ppro512K.jpg
- en: '*Rosetta Stone*'
  id: totrans-split-40
  prefs: []
  type: TYPE_NORMAL
  zh: '*罗塞塔石碑*'
- en: © Hans Hillewaert Licensed under CC BY-SA 4.0
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
  zh: © Hans Hillewaert 根据CC BY-SA 4.0许可
