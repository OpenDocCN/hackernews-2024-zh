- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-29 12:29:30'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: ELIZAGEN - News
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://sites.google.com/view/elizagen-org/news#h.ykbzq5nuiccs](https://sites.google.com/view/elizagen-org/news#h.ykbzq5nuiccs)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '20190121: Eliza  on ITS on a DEC 10 Emulator (Lars Brinkhoff)'
  id: totrans-split-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A few days ago I had the pleasure of taking a trip in a real live time machine.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
- en: 'About a week ago I got an out-of-the-blue message from [Lars Brinkhoff](https://github.com/larsbrinkhoff)
    via [the ElizaGen issue tracker](https://github.com/jeffshrager/elizagen): "I
    have a version of ELIZA ported to Maclisp, dated 1977-09-05\. Unfortunately, it''s
    just a compiled binary file. Is this of any interest to you?"'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
- en: 'Just a binary wouldn''t be too interesting, so my initial reaction was muted:
    "Is there any way to either run it, or extract the embedded code?"'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: 'Turns out that Lars had significantly understated the situation: "The binary
    file is a compiled FASL, fast load file, so it''s not easy to extract any code
    other than PDP-10 instructions. It might be possible, but a lot of work, to reconstruct
    Lisp code that compiles to approximately the same FASL code."'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
- en: 'However, went on: "...we can run it in Maclisp running on a PDP-10 emulator.
    I have an emulator online."'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
- en: Eliza on MacLisp on a PDP-10 emulator? Isn't there a level missing here? On
    what OS?
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
- en: 'The answer gave me pause: [MIT''s ITS](https://en.wikipedia.org/wiki/Incompatible_Timesharing_System).
    ITS is one of the most important operating systems in CS history. (Among many
    other interesting historical facts, the original EMACS was developed on ITS!)
    I recommend reading about it here: [ITS on Wikipedia](https://en.wikipedia.org/wiki/Incompatible_Timesharing_System).
    When I was an undergrad and grad student, in the late ''70s and early ''80s, we
    used MIT-AI''s ITS remotely through the early ARPANet. Interestingly, at one point
    (I don''t know for how long) the ITS at MIT-AI had an Eliza hacked into its command
    line driver so that unless you prefixed your commands with a ":", the response
    was from Eliza!'
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
- en: Eliza on MacLisp on ITS on a Dec 10 emulator? Really?!
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
- en: Yeah, really!!
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
- en: 'Here''s the emulator: [https://github.com/PDP-10/its](https://github.com/PDP-10/its)'
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
- en: '(Lars notes: "...there are more people involved than me. Foremost Eric Swenson
    who worked on Maclisp and Macsyma back in the day. We [...] update the emulators
    to support more hardware, fixing bugs, figuring out how to build and run programs,
    adding new software, Etc.")'
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
- en: If you want to play with a great piece of software history, you can log into
    this ITS emulator yourself; It's free and open. No password required!
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
- en: 'From Lars:'
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
- en: 'Telnet to "its.pdp10.se, port 10003". Type Control-Z to log in. Then ":lisp
    games; eliza (init)" to start Maclisp and load ELIZA. It should look something
    like this:'
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
- en: ==================
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
- en: 'You:'
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
- en: telnet its.pdp10.se 10003
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
- en: Trying 88.99.191.74...  Connected to pdp10.se.  Escape character is '^]'.
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
- en: Connected to the KA-10 simulator MTY device, line 4
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
- en: 'You:'
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
- en: type Control-Z
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
- en: TT ITS.1648\. DDT.1546.  TTY 25  2\. Lusers, Fair Share = 0%  THIS IS TT ITS,
    A HIGHTY [sic] VOLATILE SYSTEM FOR TESTING
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
- en: For brief information, type ?  For a list of colon commands, type :? and press
    Enter.  For the full info system, type :INFO and Enter.
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
- en: The management apologizes for the use of the slow TK10 terminal  multiplexer. 
    We'll upgrade to the much faster Datapoint kludge once  it becomes available.
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
- en: 'Then you type:'
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
- en: :lisp games; eliza (init)
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
- en: (Please Log In)  QUIT  SPEAK UP!
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
- en: Et voila. you're typing back through 40+ years of computer history!
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
- en: (Use double ENTERs to terminate your sentence to Eliza.)
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
- en: ==================
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
- en: 'To test it, I pasted the "standard" example conversation from Wiezenbaum''s
    Eliza paper. Here''s a screenshot from the paper:'
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
- en: 'And here it is, running live on Lars''s reborn ITS (the mess at the bottom
    is because I accidentally pasted the sentence twice, and had to backspace over
    it. The repeated chars are apparently how ITS displays backspacing):'
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
- en: There's a bit of a mystery about where exactly this version came form. Lars
    and I theorize that since BBN was right across from the AI lab, and it's known
    that BBN were users of the ITS systems, this may well be Bernie Cosell's original
    code!
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
