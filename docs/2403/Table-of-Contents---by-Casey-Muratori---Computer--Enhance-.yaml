- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:56:45'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Table of Contents - by Casey Muratori - Computer, Enhance!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://www.computerenhance.com/p/table-of-contents](https://www.computerenhance.com/p/table-of-contents)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This series is designed for programmers who know how to write programs, but
    don’t know how hardware runs those programs. It’s designed to bring you up to
    speed on how modern CPUs work, how to estimate the expected speed of performance-critical
    code, and the basic optimization techniques every programmer should know.
  prefs: []
  type: TYPE_NORMAL
- en: The course is broken into parts, with the first part (the “prologue”) being
    strictly a demonstration with no associated homework. Later parts feature weekly
    homework.
  prefs: []
  type: TYPE_NORMAL
- en: '*Q&A session videos are posted every Monday. **If you have a question you’d
    like answered, please put it in the comments of the most recent Q&A video**. Homework
    listings are available [from github](https://github.com/cmuratori/computer_enhance).*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Prologue: The Five Multipliers** (3 1/2 hours, no homework)'
  prefs: []
  type: TYPE_NORMAL
- en: '*This part of the course gives simple demonstrations of how seemingly minor
    code changes can produce dramatically different software performance, even for
    very simple operations.*'
  prefs: []
  type: TYPE_NORMAL
- en: '[Welcome to the Performance-Aware Programming Series!](https://www.computerenhance.com/p/welcome-to-the-performance-aware)
    (22:05)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Waste](https://www.computerenhance.com/p/waste) (32:56)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Instructions Per Clock](https://www.computerenhance.com/p/instructions-per-clock)
    (25:05)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Single Instruction, Multiple Data](https://www.computerenhance.com/p/single-instruction-multiple-data)
    (35:31)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Caching](https://www.computerenhance.com/p/caching) (22:55)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Multithreading](https://www.computerenhance.com/p/multithreading) (32:11)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Python Revisited](https://www.computerenhance.com/p/python-revisited) (36:22)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Interlude** (1 hour, no homework)'
  prefs: []
  type: TYPE_NORMAL
- en: '[The Haversine Distance Problem](https://www.computerenhance.com/p/the-haversine-distance-problem)
    (30:28)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[“Clean” Code, Horrible Performance](https://www.computerenhance.com/p/clean-code-horrible-performance)
    (22:40)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Part 1: Reading ASM** (*7 hours, plus homework*)'
  prefs: []
  type: TYPE_NORMAL
- en: '*This part of the course is designed to ensure that everyone taking the course
    has a solid understanding of how a CPU works at the assembly-language level.*'
  prefs: []
  type: TYPE_NORMAL
- en: '[Instruction Decoding on the 8086](https://www.computerenhance.com/p/instruction-decoding-on-the-8086)
    (28:28)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Decoding Multiple Instructions and Suffixes](https://www.computerenhance.com/p/decoding-multiple-instructions-and)
    (43:51)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Opcode Patterns in 8086 Arithmetic](https://www.computerenhance.com/p/opcode-patterns-in-8086-arithmetic)
    (20:01)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[8086 Decoder Code Review](https://www.computerenhance.com/p/8086-decoder-code-review)
    (1:17:49)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Using the Reference Decoder as a Shared Library](https://www.computerenhance.com/p/using-the-reference-decoder-as-a)
    (8:48)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Simulating Non-memory MOVs](https://www.computerenhance.com/p/simulating-non-memory-movs)
    (18:00)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Simulating ADD, SUB, and CMP](https://www.computerenhance.com/p/simulating-add-jmp-and-cmp)
    (25:56)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Simulating Conditional Jumps](https://www.computerenhance.com/p/simulating-conditional-jumps)
    (19:41)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Simulating Memory](https://www.computerenhance.com/p/simulating-memory) (26:32)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Simulating Real Programs](https://www.computerenhance.com/p/simulating-real-programs)
    (16:02)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Other Common Instructions](https://www.computerenhance.com/p/other-common-instructions)
    (19:43)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[The Stack](https://www.computerenhance.com/p/the-stack) (26:58)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Estimating Cycles](https://www.computerenhance.com/p/estimating-cycles) (23:56)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[From 8086 to x64](https://www.computerenhance.com/p/from-8086-to-x64) (26:21)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[8086 Simulation Code Review](https://www.computerenhance.com/p/8086-simulation-code-review)
    (33:05)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Part 2: Basic Profiling** (*4 hours, plus homework*)'
  prefs: []
  type: TYPE_NORMAL
- en: '*In this part of the course, we learn about how to measure time, and instrument
    programs to automatically determine where time is being spent.*'
  prefs: []
  type: TYPE_NORMAL
- en: '[Generating Haversine Input JSON](https://www.computerenhance.com/p/generating-haversine-input-json)
    (15:40)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Writing a Simple Haversine Distance Processor](https://www.computerenhance.com/p/writing-a-simple-haversine-distance)
    (12:09)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Initial Haversine Processor Code Review](https://www.computerenhance.com/p/initial-haversine-processor-code)
    (29:22)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction to RDTSC](https://www.computerenhance.com/p/introduction-to-rdtsc)
    (48:05)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[How does QueryPerformanceCounter measure time?](https://www.computerenhance.com/p/how-does-queryperformancecounter)
    (31:43)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Instrumentation-Based Profiling](https://www.computerenhance.com/p/instrumentation-based-profiling)
    (18:01)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Profiling Nested Blocks](https://www.computerenhance.com/p/profiling-nested-blocks)
    (26:12)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Profiling Recursive Blocks](https://www.computerenhance.com/p/profiling-recursive-blocks)
    (30:44)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[A First Look at Profiling Overhead](https://www.computerenhance.com/p/a-first-look-at-profiling-overhead)
    (18:37)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Comparing the Overhead of RDTSC and QueryPerformanceCounter](https://www.computerenhance.com/p/comparing-the-overhead-of-rdtsc-and)
    (13:00)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Part 3: Moving Data** (*currently in progress*)'
  prefs: []
  type: TYPE_NORMAL
- en: '*Using our knowledge from parts 1 and 2, in Part 3 we look at how data moves
    into the CPU, and how to estimate the upper performance limits of our software
    imposed by the need to move data.*'
  prefs: []
  type: TYPE_NORMAL
- en: '[Measuring Data Throughput](https://www.computerenhance.com/p/measuring-data-throughput)
    (21:54)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Repetition Testing](https://www.computerenhance.com/p/repetition-testing)
    (27:57)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Monitoring OS Performance Counters](https://www.computerenhance.com/p/monitoring-os-performance-counters)
    (20:25)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Page Faults](https://www.computerenhance.com/p/page-faults) (38:52)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Probing OS Page Fault Behavior](https://www.computerenhance.com/p/probing-os-page-fault-behavior)*
    (33:05)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Four-Level Paging](https://www.computerenhance.com/p/four-level-paging)* (31:23)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Analyzing Page Fault Anomalies](https://www.computerenhance.com/p/analyzing-page-fault-anomalies)*
    (31:44)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Powerful Page Mapping Techniques](https://www.computerenhance.com/p/powerful-page-mapping-techniques)*
    (39:20)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Faster Reads with Large Page Allocations](https://www.computerenhance.com/p/faster-reads-with-large-page-allocations)
    (25:52)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Memory-Mapped Files](https://www.computerenhance.com/p/memory-mapped-files)*
    (20:46)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Inspecting Loop Assembly](https://www.computerenhance.com/p/inspecting-loop-assembly)
    (32:31)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Intuiting Latency and Throughput](https://www.computerenhance.com/p/intuiting-latency-and-throughput)
    (22:57)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Analyzing Dependency Chains](https://www.computerenhance.com/p/analyzing-dependency-chains)
    (29:06)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Linking Directly to ASM for Experimentation](https://www.computerenhance.com/p/linking-directly-to-asm-for-experimentation)
    (48:07)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[CPU Front End Basics](https://www.computerenhance.com/p/cpu-front-end-basics)
    (31:09)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Branch Prediction](https://www.computerenhance.com/p/branch-prediction) (42:03)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Code Alignment](https://www.computerenhance.com/p/code-alignment) (32:03)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[The RAT and the Register File](https://www.computerenhance.com/p/the-rat-and-the-register-file)
    (45:21)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Execution Ports and the Scheduler](https://www.computerenhance.com/p/execution-ports-and-the-scheduler)
    (34:51)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Increasing Read Bandwidth with SIMD Instructions](https://www.computerenhance.com/p/increasing-read-bandwidth-with-simd)
    (37:52)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Cache Size and Bandwidth Testing](https://www.computerenhance.com/p/cache-size-and-bandwidth-testing)
    (34:00)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Non-Power-of-Two Cache Size Testing](https://www.computerenhance.com/p/non-power-of-two-cache-size-testing)
    (35:15)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Unaligned Load Penalties](https://www.computerenhance.com/p/unaligned-load-penalties)
    (27:25)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '** Entries with an asterisk were “bonus” entries that can be skipped.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*Part 3 is still in progress - more videos will be added here as they are scheduled.
    Additional parts will follow after Part 3 is complete.*'
  prefs: []
  type: TYPE_NORMAL
- en: '[The Four Programming Questions from My 1994 Microsoft Internship Interview](https://www.computerenhance.com/p/the-four-programming-questions-from)
    (19:02)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Question #1: Rectangle Copy](https://www.computerenhance.com/p/microsoft-intern-interview-question)
    (24:50)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Question #2: String Copy](https://www.computerenhance.com/p/microsoft-intern-interview-question-ab7)
    (14:50)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Question #3: Flood Fill Detection](https://www.computerenhance.com/p/microsoft-intern-interview-question-a3f)
    (23:58)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Question #4: Outline a Circle](https://www.computerenhance.com/p/efficient-dda-circle-outlines)
    (1:09:01)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
