- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:34:37'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: 'CS 6120: The Self-Guided Course'
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://www.cs.cornell.edu/courses/cs6120/2023fa/self-guided/](https://www.cs.cornell.edu/courses/cs6120/2023fa/self-guided/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: <main>
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
- en: 'CS 6120: Advanced Compilers: The Self-Guided Online Course'
  id: totrans-split-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: CS 6120 is a PhD-level [Cornell CS](https://www.cs.cornell.edu/) course by [Adrian
    Sampson](https://www.cs.cornell.edu/~asampson/) on programming language implementation.
    It covers universal compilers topics like intermediate representations, data flow,
    and “classic” optimizations as well as more research-flavored topics such as parallelization,
    just-in-time compilation, and garbage collection. The work consists of reading
    papers and open-source hacking tasks, which use [LLVM](https://llvm.org/) and
    [an educational IR invented just for this class](https://capra.cs.cornell.edu/bril/).
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
- en: This page lists the curriculum for following this course at the university of
    your imagination, for four imagination credits (ungraded). There’s a linear timeline
    of lessons interspersed with papers to read. Each lesson has videos and written
    notes, and some have *implementation tasks* for you to complete. Tasks are all
    open-ended, to one degree or another, and are meant to solidify your understanding
    of the abstract concepts by turning them into real code. The order represents
    a suggested interleaving of video-watching and paper-reading.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: Some differences with the “real” CS 6120 are that you can ignore the task deadlines
    and you can’t participate in our discussion threads on Zulip. Real 6120 also has
    an end-of-semester course project—in the self-guided version, your end-of-semester
    assignment is to change the world through the magic of compilers.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
- en: The instructor is a video production neophyte, so please excuse the production
    values, especially in the early lessons. CS 6120 is [open source and on GitHub](https://github.com/sampsyo/cs6120),
    so please file bugs if you find problems.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
- en: When you finish the course, please fill out [this feedback form](https://forms.gle/GuRiMa728DUvTbZQ7).
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
- en: '[Lesson 1:](https://www.cs.cornell.edu/courses/cs6120/2023fa/lesson/1/) Welcome
    & Overview'
  id: totrans-split-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Lesson 2:](https://www.cs.cornell.edu/courses/cs6120/2023fa/lesson/2/) Representing
    Programs'
  id: totrans-split-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Lesson 3:](https://www.cs.cornell.edu/courses/cs6120/2023fa/lesson/3/) Local
    Analysis & Optimization'
  id: totrans-split-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Lesson 6:](https://www.cs.cornell.edu/courses/cs6120/2023fa/lesson/6/) Static
    Single Assignment'
  id: totrans-split-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Lesson 9:](https://www.cs.cornell.edu/courses/cs6120/2023fa/lesson/9/) Interprocedural
    Analysis'
  id: totrans-split-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[An Efficient Implementation of SELF, a Dynamically-Typed Object-Oriented Language
    Based on Prototypes](http://portal.acm.org/citation.cfm?id=74884)'
  id: totrans-split-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: C. Chambers, D. Ungar, and E. Lee. OOPSLA 1989.
  id: totrans-split-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[Trace-Based Just-in-Time Type Specialization for Dynamic Languages](https://dl.acm.org/citation.cfm?id=1542476.1542528)'
  id: totrans-split-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andreas Gal, Brendan Eich, Mike Shaver, David Anderson, David Mandelin, Mohammad
    R. Haghighat, Blake Kaplan, Graydon Hoare, Boris Zbarsky, Jason Orendorff, Jesse
    Ruderman, Edwin W. Smith, Rick Reitmaier, Michael Bebenita, Mason Chang, and Michael
    Franz. PLDI 2009.
  id: totrans-split-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[Lesson 14:](https://www.cs.cornell.edu/courses/cs6120/2023fa/lesson/14/) Concurrency
    & Parallelism'
  id: totrans-split-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: </main>
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
