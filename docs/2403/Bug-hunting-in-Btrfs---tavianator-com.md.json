["```\n$ tailfin run bench/bench.sh --build=main --default\n...\nbfs: error: bench/corpus/chromium/v8/src/heap/heap.cc: Structure needs cleaning \n```", "```\n$ dmesg | tail\n...\nBTRFS critical (device dm-2): corrupted node, root=518 block=16438782945911875046 owner mismatch, have 4517169229596899607 expect [256, 18446744073709551360] \n```", "```\n$ grep 'eb=15302115328' dmesg.log\nBTRFS critical (device dm-0): corrupted leaf, root=258 block=15302115328 owner mismatch, have 13709377558419367261 expect [256, 18446744073709551360] eb=15302115328\niou-wrk--173727   15..... 2649295481us : alloc_extent_buffer: alloc_extent_buffer: alloc eb=15302115328 len=16384\nkworker/-322      15..... 2649295735us : end_bbio_meta_read: read done, eb=15302115328 page_refs=3 eb level=0 fsid=b66a67f0-8273-4158-b7bf-988bb5683000\nkworker/-5095     31..... 2649295941us : end_bbio_meta_read: read done, eb=15302115328 page_refs=8 eb level=0 fsid=b66a67f0-8273-4158-b7bf-988bb5683000 \n```", "```\nint read_extent_buffer_pages(struct extent_buffer *eb, /* ... */)\n{\n    if (test_bit(EXTENT_BUFFER_UPTODATE, &eb->bflags))\n        return 0;\n\n    /* ... */\n\n    /* Someone else is already reading the buffer, just wait for it. */\n    if (test_and_set_bit(EXTENT_BUFFER_READING, &eb->bflags))\n        goto done;\n\n    /* ... */\n    bbio = btrfs_bio_alloc(INLINE_EXTENT_BUFFER_PAGES,\n                   REQ_OP_READ | REQ_META, eb->fs_info,\n                   end_bbio_meta_read, eb);\n    /* ... */\n    btrfs_submit_bio(bbio, mirror_num);\n\ndone:\n    if (wait == WAIT_COMPLETE) {\n        wait_on_bit_io(&eb->bflags, EXTENT_BUFFER_READING, TASK_UNINTERRUPTIBLE);\n        if (!test_bit(EXTENT_BUFFER_UPTODATE, &eb->bflags))\n            return -EIO;\n    }\n\n    return 0;\n}\n\nstatic void end_bbio_meta_read(struct btrfs_bio *bbio)\n{\n    /* ... */\n    bool uptodate = !bbio->bio.bi_status;\n    /* ... */\n\n    if (uptodate) {\n        set_extent_buffer_uptodate(eb);\n    } else {\n        clear_extent_buffer_uptodate(eb);\n        set_bit(EXTENT_BUFFER_READ_ERR, &eb->bflags);\n    }\n\n    /* ... */\n    clear_bit(EXTENT_BUFFER_READING, &eb->bflags);\n    smp_mb__after_atomic();\n    wake_up_bit(&eb->bflags, EXTENT_BUFFER_READING);\n    /* ... */\n} \n```", "```\nread_extent_buffer_pages() {\n if (test_bit(UPTODATE)) return 0;   if (test_and_set_bit(READING)) goto done;   btrfs_submit_bio();   done:\n wait_on_bit_io(READING); return 0; }   end_bbio_meta_read() {\n set_bit(UPTODATE); clear_bit(READING); wake_up_bit(READING); } \n```", "```\nread_extent_buffer_pages() {\n if (test_bit(UPTODATE)) return 0;   if (test_and_set_bit(READING)) goto done;   btrfs_submit_bio();   done:\n wait_on_bit_io(READING); return 0; } \n```", "```\nif (test(UPTODATE))\n return 0;   if (test_and_set(READING))\n goto done;   btrfs_submit_bio();   done:\n wait_on(READING); return 0;   set(UPTODATE); clear(READING); wake_up(READING); \n```", "```\nif (test(UPTODATE))\n return 0;   if (test_and_set(READING))\n goto done;   btrfs_submit_bio();   done:\n wait_on(READING); return 0; \n```", "```\nif (test(UPTODATE))\n return 0;   if (test_and_set(READING))\n goto done;   btrfs_submit_bio();   done:\n wait_on(READING); return 0; \n```", "```\nif (test(UPTODATE))\n return 0;   if (test_and_set(READING))\n goto done;   if (test(UPTODATE))\n goto wake;   btrfs_submit_bio();   done:\n wait_on(READING); return 0;   end_bbio:\n set(UPTODATE); wake:\n clear(READING); wake_up(READING); \n```", "```\nif (test(UPTODATE))\n return 0;   if (test_and_set(READING))\n goto done;   if (test(UPTODATE))\n goto wake;   btrfs_submit_bio();   done:\n wait_on(READING); return 0;   end_bbio:\n set(UPTODATE); wake:\n clear(READING); wake_up(READING); \n```", "```\nif (test(UPTODATE))\n return 0;   if (test_and_set(READING))\n goto done;   if (test(UPTODATE))\n goto wake;   btrfs_submit_bio();   done:\n wait_on(READING); return 0;   end_bbio:\n set(UPTODATE); wake:\n clear(READING); wake_up(READING); \n```", "```\nuninitialized memory uninitialized memory uninitialized memory uninitialized memory uninitialized memory \n```", "```\nmetadata metadata metadata metadata metadata metadata metadata metadata metadata metadata metadata metad \n```", "```\nmetadata metadata metadata metadata metadata metadata metadata metadata metadata metadata metadata metad \n```", "```\nuninitialized memory uninitialized memory uninitialized memory uninitialized memory uninitialized memory \n```", "```\nencrypted gibberish encrypted gibberish encrypted gibberish encrypted gibber encrypted gibberish encrypt \n```", "```\nmetadata metadata metadata metadata metadata metadata metadata metadata metadata metadata metadata metad \n```", "```\nencrypted gibberish encrypted gibberish encrypted gibberish encrypted gibber encrypted gibberish encrypt \n```", "```\nmetadata metadata metadata metadata metadata metadata metadata metadata metadata metadata metadata metad \n```", "```\n[  807.737576] BTRFS critical (device dm-0): corrupted node, root=266 block=3178470954007437077 owner mismatch, have 6155297726051334641 expect [256, 18446744073709551360] eb=ffff8ac915d022d0 start=12738904064\n[  807.751913] BTRFS critical (device dm-0): corrupted leaf, root=266 block=12738904064 owner mismatch, have 6155297726051334641 expect [256, 18446744073709551360] eb=ffff8ac915d022d0 start=12738904064\n[  807.800898] BTRFS critical (device dm-0): corrupted leaf, root=266 block=12738904064 owner mismatch, have 6155297726051334641 expect [256, 18446744073709551360] eb=ffff8ac915d022d0 start=12738904064 \n```"]