["```\n\n**Operating System Utility Program Reliability - The Fuzz Generator**\n\nThe goal of this project is to evaluate the robustness of various UNIX utility\nprograms, given an unpredictable input stream.  This project has two parts.\nFirst, you will build a \"fuzz\" generator.  This is a program that will output\na random character stream.  Second, you will take the fuzz generator and use\nit to attack as many UNIX utilities as possible, with the goal of trying to\nbreak them.  For the utilities that break, you will try to determine what type\nof input cause the break.\n\nTHE PROGRAM\n\nThe fuzz generator will generate an output stream of random characters.\nIt will need several options to give you flexibility to test different\nprograms.  Below is the start for a list of options for features that\nfuzz will support.  It is important when writing this program to use\ngood C and UNIX style, and good structure, as we hope to distribute\nthis program to others.\n\n    -p          only the printable ASCII characters\n\n    -a          all ASCII characters\n\n    -0          include the null (0 byte) character\n\n    -l          generate random length lines (\\\\n terminated strings)\n\n    -f name     record characters in file ``name''\n\n    -d nnn      delay nnn seconds following each character\n\n    -r name     replay characters in file ``name'' to output\n\nTHE TESTING\n\nThe fuzz program should be used to test various UNIX utilities.  These\nutilities include programs like vi, mail, cc, make, sed, awk, sort,\netc.  The goal is to first see if the program will break and second to\nunderstand what type of input is responsible for the break.\n\n```"]