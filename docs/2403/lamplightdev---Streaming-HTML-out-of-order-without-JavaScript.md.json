["```\n<div>\n  #shadowroot\n    <header>Header</header>\n    <main>\n      <slot name=\"content\"></slot>\n    </main>\n    <footer>Footer</footer>\n\n  <div slot=\"content\">\n    This div will be rendered inside the slot above. Magic!\n  </div>\n</div> \n```", "```\n<div>\n  <template shadowrootmode=\"open\">\n    <header>Header</header>\n    <main>\n      <slot name=\"content\"></slot>\n    </main>\n    <footer>Footer</footer>\n  </template>\n\n  <div slot=\"content\">\n    This div will be rendered inside the slot above\n    without JavaScript. More magic!\n  </div>\n</div> \n```", "```\nimport { Hono } from 'hono';\nimport { stream } from 'hono/streaming';\n\nimport { render, html } from 'swtl';\n\nimport {\n  delayed,\n  createReadableStreamFromAsyncGenerator\n} from './utils.js';\n\nconst app = new Hono();\n\napp.get('/', (ctx) => {\n\n  const template = ({ name }) => html` <html>\n      <head>\n        <title>Streaming example>\n      </head>\n      <body>\n        <div>\n          <template shadowrootmode=\"open\">\n            <header>Header</header>\n            <main>\n              <slot name=\"content\"></slot>\n            </main>\n            <footer>Footer</footer>\n          </template>\n\n            <!--\n              The html above gets sent first to the browser\n            -->\n\n            <!--\n              An artificial delay is added the slot content\n              to simulate a slow response from the server:\n            --> ${delayed(1000, html` <p slot=\"content\">\n                Hi ${name}!\n              </p> `)} <!--\n              the remaining html below is sent to the browser once\n              the delayed content has been sent\n            -->\n          </div>\n        </div>\n      </body>\n    </html> `;\n\n  return stream(ctx, async (stream) => {\n    ctx.res.headers.set('Content-Type', 'text/html');\n\n    await stream.pipe(\n      createReadableStreamFromAsyncGenerator(\n        render(\n          template({ name: 'Ada' })\n        )\n      )\n    );\n  });\n});\n\nexport default app;\n```"]