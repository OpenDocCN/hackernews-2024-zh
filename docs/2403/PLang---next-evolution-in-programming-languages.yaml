- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-29 12:37:03'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-29 12:37:03
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: PLang - next evolution in programming languages
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PLang - 编程语言的下一个演变
- en: 来源：[https://plang.is](https://plang.is)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://plang.is](https://plang.is)
- en: '**Heads up: Building code costs money**'
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：构建代码会花费金钱**'
- en: Each code line incurs usually between $0.03 - $0.15 fee via LLM. The payoff?
    Exceptional efficiency gains.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 每行代码通常需要通过 LLM 支付 $0.03 - $0.15 的费用。回报？异常的效率提升。
- en: '**Early Adopters Note: PLang is at version 0.1.**'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**早期采用者注意：PLang 版本为 0.1。**'
- en: Be prepared for breaking changes and the presence of bugs. Get involved in our
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 为断点变化和错误的存在做好准备。加入我们
- en: '[community on Discord](https://discord.gg/A8kYUymsDD)'
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[Discord 上的社区](https://discord.gg/A8kYUymsDD)'
- en: or contribute by reporting
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 或通过报告来贡献
- en: '[issues on GitHub](https://github.com/PLangHQ/plang/issues)'
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[GitHub 上的问题](https://github.com/PLangHQ/plang/issues)'
- en: . If you're keen on aiding PLang's growth, check out how to contribute on our
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 。如果你有意帮助 PLang 的成长，请看看我们如何在我们的贡献
- en: '[GitHub page](https://github.com/PLangHQ)'
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[GitHub 页面](https://github.com/PLangHQ)'
- en: .
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: .
- en: Hello PLang world
  id: totrans-split-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你好 PLang 世界
- en: It's easy to create your first application.
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 创建你的第一个应用程序很容易。
- en: Open your favorite text editor.
  id: totrans-split-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你最喜爱的文本编辑器。
- en: Type in.
  id: totrans-split-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入。
- en: '`Start - write out "Hello PLang world"`'
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`Start - write out "Hello PLang world"`'
- en: Now build & run using (you must
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在构建并运行使用（你必须
- en: '[install PLang first](https://github.com/PLangHQ/plang/blob/main/Documentation/Install.md)'
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[首先安装 PLang](https://github.com/PLangHQ/plang/blob/main/Documentation/Install.md)'
- en: )
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: plang exec
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: plang 执行
- en: '*On first build you will be ask to pre-purchase credits*'
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: '*在第一次构建时，将要求你预购积分*'
- en: Rapid development
  id: totrans-split-26
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 快速开发
- en: You have never seen software being built this fast.
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你从未见过软件建设如此迅速。
- en: Simple development
  id: totrans-split-28
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 简单开发
- en: Just write what you want to happen. `select newest users, 50 per page` and PLang
    will give you 50 latest users from your database
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: 只需写下你想要发生的事情。`select newest users, 50 per page`，PLang 将从你的数据库中给你最新的50个用户
- en: No nonsense development
  id: totrans-split-30
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 开发无废话
- en: Focus on **what** the app should do, not *how*.
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: 关注 **应用程序应该做什么**，而不是 *如何*。
- en: No config hell
  id: totrans-split-32
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 没有配置地狱
- en: There are no configurations to set. Just run. If the programming language needs
    something from you, it will ask you.
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: 没有需要设置的配置。只需运行。如果编程语言需要你的帮助，它会问你。
- en: Variables
  id: totrans-split-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 变量
- en: Of course there are %variables% `- set %name% as "Dwight Shrewd"`
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当然还有 %变量% `- 将 %name% 设为 "Dwight Shrewd"`
- en: Functions
  id: totrans-split-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 函数
- en: They are called Goals, you can call any Goal and send parameters `- call !FooBar
    %name%`
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
  zh: 他们被称为 Goals，你可以调用任何 Goal 并发送参数 `- call !FooBar %name%`
- en: Conditions and lists
  id: totrans-split-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 条件和列表
- en: You write your if statement, like you want it. Go through lists like never before.
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
  zh: 你写下你的 if 语句，像你想要的那样。像从未有过的方式浏览列表。
- en: '`- if %products.Count% > 0 then - go through %products% call !ProcessProduct`'
  id: totrans-split-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`- 如果 %products.Count% > 0 then - go through %products% call !ProcessProduct`'
- en: C# developer? Yes, that is the List.Count property
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
  zh: C# 开发者？是的，这是 List.Count 属性
- en: Retry, Caching and Error Handling simpler than ever
  id: totrans-split-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重试、缓存和错误处理比以往更简单
- en: This is one of those WTF! Check this out!
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这是其中一个 WTF！来看看这个！
- en: '`- select name from user where id=%id% cache result for 10 minutes retry 10
    times over 5 min period on error call !NotifyAdmin`'
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`- 从 user 表中选择 name where id=%id% 缓存结果 10 分钟，在错误时在 5 分钟内重试 10 次调用 !NotifyAdmin`'
- en: It caches the results if it returns data, if there is an error it will try again
    and if that fails the retries it calls a function to notify admin
  id: totrans-split-45
  prefs: []
  type: TYPE_NORMAL
  zh: 它会缓存返回数据的结果，如果有错误它将重试，并且如果失败了，它会调用一个通知管理员的函数
- en: Database support
  id: totrans-split-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据库支持
- en: Create tables, views, triggers in Plang. With SQLite, SqlServer, MySql, Postresql
    or any IDbConnection implementation
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Plang 中创建表、视图、触发器。支持 SQLite、SqlServer、MySql、Postresql 或任何 IDbConnection 实现
- en: '*Create Setup.goal file in your directory, this is the content* `Setup - create
    table comments, columns text(not null), sentiment(not null), created(datetime,
    default now)`'
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
  zh: '*在你的目录中创建 Setup.goal 文件，内容如下* `Setup - create table comments, columns text(not
    null), sentiment(not null), created(datetime, default now)`'
- en: LLM built-in
  id: totrans-split-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: LLM 内置
- en: 'Simply ask the LLM to evaluate request and you can work with the response written
    to a variable you can work with `Start - [llm] system: is the user content positive
    or negative user: %userInput% scheme: {sentiment:positive|negative} write to %sentiment%
    - insert into comments, text=%userInput%, %sentiment%` Now run'
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
  zh: 简单地请求 LLM 评估请求，你可以用写入到一个你可以处理的变量中的响应 `Start - [llm] 系统：用户内容是积极还是消极 用户：%userInput%
    方案：{sentiment:positive|negative} 写入到 %sentiment% - insert into comments, text=%userInput%,
    %sentiment%` 现在运行
- en: plang exec userInput="This is awesome"
  id: totrans-split-51
  prefs: []
  type: TYPE_NORMAL
  zh: plang 执行 userInput="这太棒了"
- en: Webserver
  id: totrans-split-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Web 服务器
- en: Start your webserver in one line `Start - start webserver` Now run
  id: totrans-split-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在一行中启动你的 Web 服务器 `Start - start webserver` 现在运行
- en: plang exec
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
  zh: plang 执行
- en: REST support
  id: totrans-split-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 支持 REST
- en: Want to talk with a REST api, easy, it does everything for you. *Create RestTest.goal
    in your folder* `RestTest - get http://https://cat-fact.herokuapp.com/facts write
    to %json% - write out %json.text%`
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
  zh: 想要与 REST API 进行通信，简单，它为您处理一切。*在您的文件夹中创建 RestTest.goal* `RestTest - get http://https://cat-fact.herokuapp.com/facts
    write to %json% - write out %json.text%`
- en: Now run
  id: totrans-split-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在运行
- en: plang exec RestTest
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
  zh: plang exec RestTest
- en: Messages built-in
  id: totrans-split-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 内置消息
- en: 'You can send message between users in a simple way. All encrypted (AES256)
    `Start - send message to %publicKey% content: Hey, how are you doing today, have
    your tried PLang?`'
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
  zh: '你可以简单地在用户之间发送消息。全部加密（AES256）`Start - send message to %publicKey% content: 嘿，你今天好吗，试过
    PLang 了吗？`'
- en: Built-in scraper
  id: totrans-split-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 内置爬虫
- en: Scrape your favorite website, store it for later. `Start - go to https://example.org/
    - click, "More information..." link - extract .help-article into %helpContent%
    - write out %helpContent%`
  id: totrans-split-62
  prefs: []
  type: TYPE_NORMAL
  zh: 爬取您喜欢的网站内容，以供以后使用。`Start - go to https://example.org/ - click, "More information..."
    link - extract .help-article into %helpContent% - write out %helpContent%`
- en: Built-in authentication
  id: totrans-split-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 内置认证
- en: 'The language has built in authentication, so no need to handle passwords and
    emails anymore when communicating with other Plang services. `- get http://api.plang.is/api/balance
    write to %balance% - write out ''My balance is: %balance%''` The end service can
    validate that the request is coming from you. No need for username and passwords.
    User management and registration becomes simpler & more private'
  id: totrans-split-64
  prefs: []
  type: TYPE_NORMAL
  zh: 语言内置认证，因此在与其他 Plang 服务通信时不再需要处理密码和电子邮件。`- get http://api.plang.is/api/balance
    write to %balance% - write out '我的余额是：%balance%'` 终端服务可以验证请求来自您。无需用户名和密码。用户管理和注册变得更简单和更私密。
- en: UI - early development
  id: totrans-split-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: UI - 早期开发
- en: 'Describe the layout you want `- center content, horizontal and vertical - create
    login form, #username, #password, TOS (https://plang.is/tos.html) submit to !Login`
    This will give platform nuetrality, desktop, mobile, watch, tv, or any other'
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
  zh: '描述您想要的布局 `- center content, horizontal and vertical - create login form, #username,
    #password, TOS (https://plang.is/tos.html) submit to !Login` 这将提供平台的中立性，包括桌面、移动、手表、电视或任何其他设备。'
- en: Events with super powers
  id: totrans-split-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 具备超级功能的事件
- en: '*You can add your own events into any Goal or Step* `- before each goal, call
    !LogGoal - before step nr 2 in !Process.Image, call !Preprocess.Image - on error
    on !Fetch.Data, call !Report.SysAdmin`'
  id: totrans-split-68
  prefs: []
  type: TYPE_NORMAL
  zh: '*您可以将自己的事件添加到任何目标或步骤中* `- before each goal, call !LogGoal - before step nr
    2 in !Process.Image, call !Preprocess.Image - on error on !Fetch.Data, call !Report.SysAdmin`'
- en: View Source x 100
  id: totrans-split-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查看源码 x 100
- en: '*The code is verifiable*'
  id: totrans-split-70
  prefs: []
  type: TYPE_NORMAL
  zh: '*代码是可验证的*'
- en: You can see all the source code that are built using PLang.
  id: totrans-split-71
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以查看所有使用 PLang 构建的源代码。
- en: You can use it to learn and to modify the goals.
  id: totrans-split-72
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以用它来学习和修改目标。
- en: All build files are series of json files with instruction on how the PLang runtime
    should act
  id: totrans-split-73
  prefs: []
  type: TYPE_NORMAL
  zh: 所有构建文件都是一系列指导 PLang 运行时应如何操作的 JSON 文件。
- en: Test your code
  id: totrans-split-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试您的代码
- en: Just write what you want to test
  id: totrans-split-75
  prefs: []
  type: TYPE_NORMAL
  zh: 只需编写您想要测试的内容
- en: Some of the other features
  id: totrans-split-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他一些功能
- en: Run Python Script
  id: totrans-split-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运行 Python 脚本
- en: Execute Python scripts effortlessly. `- run processImage.py %imagePath%`
  id: totrans-split-78
  prefs: []
  type: TYPE_NORMAL
  zh: 无缝执行 Python 脚本。`- run processImage.py %imagePath%`
- en: IDE Support
  id: totrans-split-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: IDE 支持
- en: Download VS Code extension to help with development
  id: totrans-split-80
  prefs: []
  type: TYPE_NORMAL
  zh: 下载 VS Code 扩展以帮助开发
- en: '[Download now](https://marketplace.visualstudio.com/items?itemName=PlangHQ.plang-extension)'
  id: totrans-split-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[立即下载](https://marketplace.visualstudio.com/items?itemName=PlangHQ.plang-extension)'
- en: Caching Made Easy
  id: totrans-split-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 简化缓存
- en: Efficient data caching mechanism. Need Redis or other, not a problem.
  id: totrans-split-83
  prefs: []
  type: TYPE_NORMAL
  zh: 高效的数据缓存机制。需要 Redis 或其他，都不是问题。
- en: OS Independence
  id: totrans-split-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 操作系统独立性
- en: I need [help with this one](https://github.com/PLangHQ), but underlying code
    is c#, fully os indepenant.
  id: totrans-split-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我需要[这个的帮助](https://github.com/PLangHQ)，但底层代码是 c#，完全操作系统无关。
- en: Build Events
  id: totrans-split-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建事件
- en: This powerfull for analyzing, debugging, etc.
  id: totrans-split-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于分析、调试等非常强大。
- en: Dependency Injection
  id: totrans-split-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 依赖注入
- en: Want to user your own logger? `@logger=MyLogger.Logger` or llm, caching, settings,
    encryption, etc.
  id: totrans-split-89
  prefs: []
  type: TYPE_NORMAL
  zh: 想要使用自己的记录器？`@logger=MyLogger.Logger` 或 llm、缓存、设置、加密等。
- en: Schedule Tasks
  id: totrans-split-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定时任务
- en: So simple, it's crazy `- every other monday, at 11:23, call !ProcessUsers` or
    sleep `- wait for 2 sec`
  id: totrans-split-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如此简单，简直疯了 `- every other monday, at 11:23, call !ProcessUsers` or sleep `- wait
    for 2 sec`
- en: Compression
  id: totrans-split-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 压缩
- en: Need to work with zip files `- unzip %filepath% to %newPath%` `- compress %filepath%
    to %compressedPath%`
  id: totrans-split-93
  prefs: []
  type: TYPE_NORMAL
  zh: 需要处理 zip 文件 `- unzip %filepath% to %newPath%` `- compress %filepath% to %compressedPath%`
- en: Run Command Line Apps
  id: totrans-split-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运行命令行应用程序
- en: Run any terminal/command line app `- convert video.mp4 to audio.mp3 using ffmpeg`
  id: totrans-split-95
  prefs: []
  type: TYPE_NORMAL
  zh: 运行任何终端/命令行应用程序 `- convert video.mp4 to audio.mp3 using ffmpeg`
- en: Privacy Control
  id: totrans-split-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 隐私控制
- en: Goal only have access to the path they run from. If they need access outside,
    it will ask for permission
  id: totrans-split-97
  prefs: []
  type: TYPE_NORMAL
  zh: 只有目标可以访问它们运行的路径。如果它们需要外部访问，将请求权限
- en: App Extensibility
  id: totrans-split-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用程序可扩展性
- en: Inject your own logger, settings, llm service, database, caching, encryption
    modules. They are super simple to write.
  id: totrans-split-99
  prefs: []
  type: TYPE_NORMAL
  zh: 注入您自己的日志记录器、设置、LLM 服务、数据库、缓存、加密模块。它们非常容易编写。
- en: Solid foundation
  id: totrans-split-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 坚实的基础
- en: Plang language is written in C#, it builds and runs on the C# runtime. Secure,
    fast and solid foundation
  id: totrans-split-101
  prefs: []
  type: TYPE_NORMAL
  zh: Plang语言是用C#编写的，它在C#运行时上构建和运行。安全、快速且坚实的基础
- en: How do I buy?
  id: totrans-split-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我如何购买？
- en: PLang is an open source, so the software itself is free.
  id: totrans-split-103
  prefs: []
  type: TYPE_NORMAL
  zh: PLang是开源的，因此软件本身是免费的。
- en: Translating your request to code uses an LLM service, this service is not free
    of charge.
  id: totrans-split-104
  prefs: []
  type: TYPE_NORMAL
  zh: 将您的请求翻译成代码使用一个LLM服务，这项服务是不免费的。
- en: When you run 'plang build' for the first time, you are asked to buy a voucher
    for the amount of your choosing.
  id: totrans-split-105
  prefs: []
  type: TYPE_NORMAL
  zh: 当您第一次运行 'plang build' 时，系统会要求您购买您选择金额的代金券。
- en: You can also use OpenAI API service without buying voucher from PLang.
  id: totrans-split-106
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用OpenAI API服务而无需从PLang购买代金券。
- en: Then OpenAI prices apply and it does not go through PLang service
  id: totrans-split-107
  prefs: []
  type: TYPE_NORMAL
  zh: 然后适用OpenAI价格，而不通过PLang服务
- en: Buying voucher for the service supports the development of PLang, so please
    support the project :)
  id: totrans-split-108
  prefs: []
  type: TYPE_NORMAL
  zh: 购买服务的代金券支持PLang的开发，请支持这个项目 :)
- en: Price table
  id: totrans-split-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 价格表
- en: Building code
  id: totrans-split-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建代码
- en: Input $0.02 / 1K tokens
  id: totrans-split-111
  prefs: []
  type: TYPE_NORMAL
  zh: 输入 $0.02 / 1K 令牌
- en: Output $0.06 / 1K tokens
  id: totrans-split-112
  prefs: []
  type: TYPE_NORMAL
  zh: 输出 $0.06 / 1K 令牌
- en: This is when you run 'plang build'.
  id: totrans-split-113
  prefs: []
  type: TYPE_NORMAL
  zh: 当您运行 'plang build' 时。
- en: Llm request at runtime
  id: totrans-split-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运行时的LLM请求
- en: gpt-4-turbo (default)
  id: totrans-split-115
  prefs: []
  type: TYPE_NORMAL
  zh: gpt-4-turbo（默认）
- en: Input $0.02 / 1K tokens
  id: totrans-split-116
  prefs: []
  type: TYPE_NORMAL
  zh: 输入 $0.02 / 1K 令牌
- en: Output $0.06 / 1K tokens
  id: totrans-split-117
  prefs: []
  type: TYPE_NORMAL
  zh: 输出 $0.06 / 1K 令牌
- en: This is when you run 'plang run' and use the [llm] module
  id: totrans-split-118
  prefs: []
  type: TYPE_NORMAL
  zh: 当您运行 'plang run' 并使用 [LLM] 模块时
- en: Llm request at runtime
  id: totrans-split-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运行时的LLM请求
- en: gpt-3.5
  id: totrans-split-120
  prefs: []
  type: TYPE_NORMAL
  zh: gpt-3.5
- en: Input $0.0030 / 1K tokens
  id: totrans-split-121
  prefs: []
  type: TYPE_NORMAL
  zh: 输入 $0.0030 / 1K 令牌
- en: Output $0.004 / 1K tokens
  id: totrans-split-122
  prefs: []
  type: TYPE_NORMAL
  zh: 输出 $0.004 / 1K 令牌
- en: This is when you run 'plang run' and use the [llm] module with gpt-4-turbo parameter
  id: totrans-split-123
  prefs: []
  type: TYPE_NORMAL
  zh: 当您运行 'plang run' 并使用 [LLM] 模块以gpt-4-turbo参数运行时
