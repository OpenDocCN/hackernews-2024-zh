["```\n__m256d cos_vector(__m256d x) noexcept\n{\n    constexpr double tp_scalar = 1\\. / (2\\. * M_PI);\n    __m256d tmp;\n\n    // x = x * tp;\n    const __m256d tp = _mm256_set1_pd(tp_scalar);\n    x = _mm256_mul_pd(x, tp);\n\n    // x = x - (double(.25) + std::floor(x + double(.25)));\n    const __m256d v_25 = _mm256_set1_pd(0.25);\n    tmp = _mm256_add_pd(x, v_25);\n\n    tmp = _mm256_floor_pd(tmp);\n    tmp = _mm256_add_pd(v_25, tmp);\n\n    x = _mm256_sub_pd(x, tmp);\n\n    // x = x * (double(16.) * (std::abs(x) - double(.5)));\n    const __m256d v_5 = _mm256_set1_pd(0.5);\n    const __m256d v_16 = _mm256_set1_pd(16.0);\n\n    tmp = _mm256_abs_pd(x);\n    tmp = _mm256_sub_pd(tmp, v_5);\n    tmp = _mm256_mul_pd(v_16, tmp);\n    x = _mm256_mul_pd(x, tmp);\n\n    // x = x + (double(.225) * x * (std::abs(x) - double(1.)));\n    const __m256d v_225 = _mm256_set1_pd(0.225);\n    const __m256d v_1 = _mm256_set1_pd(1.0);\n    tmp = _mm256_abs_pd(x);\n    tmp = _mm256_sub_pd(tmp, v_1);\n\n    tmp = _mm256_mul_pd(x, tmp);\n    tmp = _mm256_mul_pd(v_225, tmp);\n    x = _mm256_add_pd(x, tmp);\n\n    return x;\n}\n```", "```\nfor (int i = 0; i < cnt1; i += VECTOR_SIZE)\n{\n    double_vec v = load_vec(v_ptr + i);\n    sum_vec += cos_vector(cos_vector(...(cos_vector(v)) ...);\n}\n```", "```\nfor (int i = 0; i < cnt1; i += VECTOR_SIZE)\n{\n    double_vec v = load_vec(v_ptr + i);\n    sum_vec += cos_vector(cos_vector(cos_vector(v)));\n}\n```", "```\nstd::vector<double_vec> tmp_vec(cnt1);\n\nfor (int i = 0; i < cnt1; i += VECTOR_SIZE) {\n    tmp_vec[i] = cos_vector(load_vec(v_ptr + i));\n}\n\nfor (int i = 0; i < cnt1; i += VECTOR_SIZE) {\n    tmp_vec[i] = cos_vector(tmp_vec[i]);\n}\n\nfor (int i = 0; i < cnt1; i += VECTOR_SIZE) {\n    sum_vec += cos_vector(tmp_vec[i]);\n}\n```", "```\nconstexpr int BLOCK_SIZE = 128;\n\nstd::vector<double_vec> tmp_vec2(BLOCK_SIZE);\n\nfor (int ii = 0; ii < cnt1; ii += BLOCK_SIZE) {\n    int i_end = std::min(ii + BLOCK_SIZE, cnt1);\n\n    for (int i = ii; i < i_end; i += VECTOR_SIZE) {\n        tmp_vec2[i - ii] = cos_vector(load_vec(v_ptr + i));\n    }\n\n    for (int i = ii; i < i_end; i+= VECTOR_SIZE) {\n        tmp_vec2[i - ii] = cos_vector(tmp_vec2[i - ii]);\n    }\n\n    for (int i = ii; i < i_end; i+= VECTOR_SIZE) {\n        sum_vec += cos_vector(tmp_vec2[i - ii]);\n    }\n}\n```"]