- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-27 14:37:28'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-27 14:37:28
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: roots
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 根
- en: 来源：[https://math.ucr.edu/home/baez/roots/](https://math.ucr.edu/home/baez/roots/)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://math.ucr.edu/home/baez/roots/](https://math.ucr.edu/home/baez/roots/)
- en: The Beauty of Roots
  id: totrans-split-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 根的美丽
- en: John Baez
  id: totrans-split-7
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 约翰·贝兹
- en: September 29, 2023
  id: totrans-split-8
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 2023年9月29日
- en: 'Around 2006, my friend [Dan Christensen](http://jdc.math.uwo.ca/roots) created
    a fascinating picture of all the roots of all polynomials of degree ≤ 5 with integer
    coefficients ranging from -4 to 4:'
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 大约在 2006 年，我的朋友 [丹·克里斯滕森](http://jdc.math.uwo.ca/roots) 创建了一张引人入胜的图片，展示了所有次数
    ≤ 5 的整系数多项式的所有根，系数范围从 -4 到 4：
- en: Click on the picture for bigger view. Roots of quadratic polynomials are in
    grey; roots of cubics are in cyan; roots of quartics are in red and roots of quintics
    are in black. The horizontal axis of symmetry is the real axis; the vertical axis
    of symmetry is the imaginary axis. The big hole in the middle is centered at 0;
    the next biggest holes are at ±1, and there are also holes at ±i and all the sixth
    roots of 1.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 点击图片查看更大的视图。二次多项式的根为灰色；三次的为青色；四次的为红色；五次的为黑色。对称的水平轴是实轴；对称的垂直轴是虚轴。中间的大洞位于 0；接下来最大的洞位于
    ±1，还有位于 ±i 和所有六次单位根的洞。
- en: 'You can see lots of fascinating patterns here, like how the roots of polynomials
    with integer coefficients tend to avoid integers and roots of unity - except when
    they land *right on* these points! You can see more patterns if you zoom in:'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里你可以看到很多迷人的图案，比如整数系数多项式的根倾向于避开整数和单位根 - 除非它们正好落在*这些点*上！如果你放大看，你会看到更多的图案：
- en: Now you see beautiful feathers surrounding the blank area around the point 1
    on the real axis, a hexagonal star around \(\exp(i \pi/ 3)\), a strange red curve
    from this point to 1, smaller stars around other points, and more....
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你看到了围绕实轴上点 1 周围的美丽羽毛，围绕 \(\exp(i \pi/ 3)\) 的六角星，从这一点到 1 的奇怪红色曲线，其他点周围的小星星等等……
- en: People should study this sort of thing! Let's define the *Christensen set* \(C_{d,n}\)
    to be the set of all roots of all polynomials of degree \(d\) with integer coefficients
    ranging from \(-n\) to \(n\). Clearly \(C_{d,n}\) gets bigger as we make either
    \(d\) or \(n\) bigger, and it becomes dense in the complex plane as \(n\) approaches
    \(\infty\), as long as \( d \ge 1\). We get all the rational complex numbers if
    we fix \(d \ge 1\) and let \( n \to \infty\), and we get all the algebraic complex
    numbers if let both \(d, n \to \infty \). Based on the above picture, there seem
    to be lots of interesting conjectures to make about what it does as \(d \to \infty\)
    for fixed \(n\).
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: 人们应该研究这种事情！让我们定义*克里斯滕森集* \(C_{d,n}\) 为所有次数为 \(d\) 的整系数多项式的所有根的集合，系数范围从 \(-n\)
    到 \(n\)。显然，只要 \(d \ge 1\)，随着 \(n\) 的增大，\(C_{d,n}\) 会变得越来越大，并且在复平面上逐渐密集，只要 \( n
    \to \infty\)。如果固定 \(d \ge 1\) 并让 \( n \to \infty\)，我们得到所有有理复数，如果同时让 \(d, n \to
    \infty\)，我们得到所有代数复数。根据上述图片，关于当 \(d \to \infty\) 时对固定的 \(n\) 的性质，似乎可以提出很多有趣的猜想。
- en: 'Inspired by the pictures above, Sam Derbyshire decided to to make a high resolution
    plot of some roots of polynomials. After some experimentation, he decided that
    his favorite were polynomials whose coefficients were all 1 or -1 (not 0). He
    made a high-resolution plot by computing all the roots of all polynomials of this
    sort having degree ≤ 24\. That''s \( 2^{24} \) polynomials, and about \( 24 \times
    2^{24} \) roots — or about 400 million roots! It took Mathematica 4 days to generate
    the coordinates of the roots, producing about 5 gigabytes of data. He then used
    some Java programs to create this amazing image:'
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 受上述图片的启发，Sam Derbyshire 决定绘制一些多项式根的高分辨率图。经过一些试验后，他决定他最喜欢的是所有系数都为 1 或 -1（非零）的多项式。他通过计算所有这种类型且次数
    ≤ 24 的多项式的所有根来制作高分辨率图。这是 \( 2^{24} \) 个多项式，大约有 \( 24 \times 2^{24} \) 个根 —— 约
    4 亿个根！Mathematica 花了 4 天时间生成这些根的坐标，产生了约 5GB 的数据。然后他使用一些 Java 程序创建了这张惊人的图像：
- en: 'The coloring shows the density of roots, from black to dark red to yellow to
    white. The picture above is a low-resolution version of the original 90-megabyte
    file, which you can get [here](polynomial_roots.png). We can zoom in to get more
    detail:'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 颜色显示了根的密度，从黑色到深红色到黄色到白色。上面的图片是原始 90MB 文件的低分辨率版本，你可以在[这里](polynomial_roots.png)获取更多细节：
- en: 'Note the holes at certain roots of unity and the feather-like patterns as we
    move inside the unit circle. To see these pattern, let''s zoom in to certain regions,
    marked here:'
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到在某些单位根和羽毛状的模式，当我们移动到单位圆内部时。为了看到这些模式，让我们放大到某些标记的区域：
- en: 'Here''s a closeup of the hole at 1:'
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在1处的一个特写：
- en: Note the white line along the real axis. That's because lots more of these polynomials
    have real roots than *nearly* real roots.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到沿着实轴的白线。这是因为比起*几乎*是实根的多项式，更多的多项式有实根。
- en: 'Next, here''s the hole at i:'
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在i处有个孔：
- en: 'And here''s the hole at \( \exp(i \pi /4) = (1 + i)/\sqrt{2} \):'
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在\( \exp(i \pi /4) = (1 + i)/\sqrt{2} \)处的一个孔：
- en: Note how the density of roots increases as we get closer to this point, but
    then suddenly drops off right next to it. Note also the subtle patterns in the
    density of roots.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到根的密度如何随着我们接近这一点而增加，但随后突然下降。还要注意根的密度中微妙的模式。
- en: 'But the feathery structures as move inside the unit circle are even more beautiful!
    Here is what they look near the real axis — this plot is centered at the point
    4/5:'
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 但当我们在单位圆内部移动时，羽毛状的结构更加美丽！这是它们在实轴附近的样子——这个图是以点4/5为中心的：
- en: 'They have a very different character near the point \( (4/5)i\):'
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在点\( (4/5)i\)附近它们有非常不同的特性：
- en: 'But I think they''re the most beautiful near the point \( (1/2)\exp(i/5)\).
    This image is almost a metaphor of how, in our study of mathematics, patterns
    emerge from confusion like sharply defined figures looming from the mist:'
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 但我认为它们在点\( (1/2)\exp(i/5)\)附近最美。这幅图几乎是一个比喻，说明了在我们的数学研究中，模糊中的模式如同从雾中清晰地显现出来的图像：
- en: 'The patterns I''ve just showed you are tantalizing, and at first quite mysterious...
    but Jesse C. McKeown and Greg Egan figured out how to understand some of them
    during the [discussion](http://golem.ph.utexas.edu/category/2009/12/this_weeks_finds_in_mathematic_46.html)
    of "week285". The resulting story is quite beautiful! But this discussion was
    a bit hard to follow, since it involved smart people figuring out things as they
    went along. So, I doubt many people understood it---at least compared to the number
    of people who *could* understand it. Let me just explain one pattern here. Why
    does this region near \( \frac{1}{2}e^{i/5}\):'
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我刚刚向你展示的这些模式令人心动，起初相当神秘... 但是杰西·C·麦克尤恩和格雷格·伊根在[讨论](http://golem.ph.utexas.edu/category/2009/12/this_weeks_finds_in_mathematic_46.html)“week285”期间弄清楚了如何理解其中的一些模式。由此产生的故事非常美丽！但是这个讨论有点难以跟上，因为它涉及到聪明人在探索过程中发现的东西。所以，我怀疑有多少人理解了它---至少与那些*能够*理解它的人相比。让我在这里解释一个模式。为什么这个区域靠近\(
    \frac{1}{2}e^{i/5}\)：
- en: look so much like the fractal called a [dragon](http://en.wikipedia.org/wiki/Dragon_curve#Heighway_dragon)?
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来非常像被称为[龙曲线](http://en.wikipedia.org/wiki/Dragon_curve#Heighway_dragon)的分形？
- en: 'You can create a dragon in various ways. In the animated image above, we''re
    starting with a single horizontal straight line segment (which is not shown for
    some idiotic reason) and repeatedly doing the same thing. Namely, at each step
    we''re replacing every segment by two shorter segments at right angles to each
    other:At each step, we have a continuous curve. The dragon that appears in the
    limit of infinitely many steps is also a continuous curve. But it''s a [space-filling
    curve](http://en.wikipedia.org/wiki/Space-filling_curve): it has nonzero area!'
  id: totrans-split-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以用多种方法创建一个龙。在上面的动画图像中，我们从一个单一的水平直线段开始（因为某种愚蠢的原因没有显示），并且重复做同样的事情。也就是说，在每一步中，我们将每个段替换为两个彼此成直角的更短的段：在每一步中，我们有一个连续的曲线。在无限多步骤的极限中出现的龙也是一个连续的曲线。但它是一个[填充空间的曲线](http://en.wikipedia.org/wiki/Space-filling_curve)：它具有非零的面积！
- en: 'Here''s another, more relevant way to create a dragon. Take these two functions
    from the complex plane to itself:'
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有另一种更相关的方法来创建一个龙。取复平面到自身的这两个函数：
- en: $$ \displaystyle{ f_+ (x) = \frac{1+i}{2} x } $$
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
  zh: $$ \displaystyle{ f_+ (x) = \frac{1+i}{2} x } $$
- en: $$ \displaystyle{ f_- (x) = 1- \frac{1-i}{2} x } $$
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
  zh: $$ \displaystyle{ f_- (x) = 1- \frac{1-i}{2} x } $$
- en: 'Pick a point in the plane and keep hitting it with either of these functions:
    you can randomly make up your mind which to use each time. No matter what choices
    you make, you''ll get a sequence of points that converges... and it converges
    to a point in the dragon! We can get all points in the dragon this way.'
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在平面上选一个点，并且用这两个函数之一不断地作用于它：每次你可以随机决定使用哪个。无论你做出什么选择，你都会得到一个收敛的点序列... 它收敛到龙中的一个点！我们可以通过这种方式获得龙中的所有点。
- en: But where did these two functions come from? What's so special about them?
  id: totrans-split-32
  prefs: []
  type: TYPE_NORMAL
  zh: 但这两个函数从哪里来？它们有什么特别之处？
- en: 'To get the specific dragon I just showed you, we need these specific functions.
    They have the effect of taking the horizontal line segment from the point 0 to
    the point 1, and mapping it to the two segments that form the simple picture shown
    at the far left here:'
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
  zh: 要得到我刚刚展示的具体龙形图案，我们需要这些特定的函数。它们的效果是将从点0到点1的水平线段映射到形成简单图像的两个段，在这里最左边显示：
- en: As we repeatedly apply them, we get more and more segments, which form the ever
    more fancy curves in this sequence.
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们反复应用它们时，我们得到更多的段，这些段形成了这个序列中越来越复杂的曲线。
- en: But if all we want is *some* sort of interesting set of points in the plane,
    we don't need to use these specific functions. The most important thing is that
    our functions be [**contractions**](http://en.wikipedia.org/wiki/Contraction_mapping),
    meaning they reduce distances between points. Suppose we have two contractions
    \( f_+ \) and \( f_- \) from the plane to itself. Then there is a unique closed
    and bounded set \(D\) in the plane with
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果我们只想要平面上的某种有趣的点集，我们不需要使用这些特定的函数。最重要的是我们的函数是[**收缩映射**](http://en.wikipedia.org/wiki/Contraction_mapping)，意味着它们减少点之间的距离。假设我们有两个从平面到自身的收缩映射\(
    f_+ \)和\( f_- \)。那么在平面上有一个唯一的闭合有界集\( D \)，满足以下条件：
- en: $$ D = f_+(D) \cup f_-(D) $$
  id: totrans-split-36
  prefs: []
  type: TYPE_NORMAL
  zh: $$ D = f_+(D) \cup f_-(D) $$
- en: Moreover, suppose we start with some point \(x\) in the plane and keep hitting
    it with \(f_+\) and/or \(f_-\), in any way we like. Then we'll get a sequence
    that converges to a point in \(S\). And even better, every point in \(S\) show
    up as a limit of a sequence like this. We can even get them all starting from
    the same \(x\). All this follows from a [famous theorem](http://en.wikipedia.org/wiki/Iterated_function_system#Definition)
    due to John Hutchinson.
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，假设我们从平面上的某点\( x \)开始，并以任何我们喜欢的方式反复击打它与\( f_+ \)和/或\( f_- \)，那么我们将得到一个收敛到集合\(
    S \)中的序列。更好的是，每个点在\( S \)中都可以作为这样一个序列的极限出现。我们甚至可以从同一个\( x \)开始得到它们所有。所有这些都可以从John
    Hutchinson的一个[著名定理](http://en.wikipedia.org/wiki/Iterated_function_system#Definition)推导出来。
- en: '"Cute," you''re thinking. "But what does this have to do with roots of polynomials
    whose coefficients are all 1 or -1?"'
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
  zh: “可爱”，你可能在想。“但这与系数都为1或-1的多项式的根有什么关系？”
- en: 'Well, we can get polynomials of this type by starting with the number 0 and
    repeatedly applying these two functions, which depend on a parameter \(z\):'
  id: totrans-split-39
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，我们可以通过从数字0开始并反复应用这两个函数来获得这种类型的多项式，这两个函数依赖于参数\( z \)：
- en: $$ f_+(x) = 1 + z x $$
  id: totrans-split-40
  prefs: []
  type: TYPE_NORMAL
  zh: $$ f_+(x) = 1 + z x $$
- en: $$ f_-(x) = 1 - z x $$
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
  zh: $$ f_-(x) = 1 - z x $$
- en: 'For example:'
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: $$ f_+(0) = 1 $$
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
  zh: $$ f_+(0) = 1 $$
- en: $$ f_+(f_+(0)) = 1 + z $$
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
  zh: $$ f_+(f_+(0)) = 1 + z $$
- en: $$ f_-(f_+(f_+(0))) = 1 - z(1 + z) = 1 - z - z^2 $$
  id: totrans-split-45
  prefs: []
  type: TYPE_NORMAL
  zh: $$ f_-(f_+(f_+(0))) = 1 - z(1 + z) = 1 - z - z^2 $$
- en: $$ f_+(f_-(f_+(f_+(0)))) = 1 + z(1 - z - z^2) = 1 - z - z^2 + z^3 $$
  id: totrans-split-46
  prefs: []
  type: TYPE_NORMAL
  zh: $$ f_+(f_-(f_+(f_+(0)))) = 1 + z(1 - z - z^2) = 1 - z - z^2 + z^3 $$
- en: and so on. All these polynomials have constant term 1, never -1\. But apart
    from that, we can get *all* polynomials with coefficients 1 or -1 using this trick.
    So, we get them all up to an overall sign — and that's good enough for studying
    their roots.
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
  zh: 等等。所有这些多项式的常数项都是1，从不是-1。但除此之外，我们可以通过这个技巧得到*所有*系数为1或-1的多项式。因此，我们可以得到它们所有的总体符号
    — 这已足够用于研究它们的根。
- en: Now, depending on what \(z\) is, the functions \( f_+ \) and \( f_- \) will
    give us different generalized dragon sets. We need \( |z| \lt 1 \) for these functions
    to be contraction mappings. Given that, we get a generalized dragon set in the
    way I explained. Let's call it \(D_z\) to indicate that it depends on \(z\).
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，根据\( z \)的取值不同，函数\( f_+ \)和\( f_- \)会给我们不同的广义龙集。这些函数需要\( |z| \lt 1 \)才能成为收缩映射。鉴于此，我们得到了我所解释的一种广义龙集。我们称之为\(
    D_z \)，表示它依赖于\( z \)。
- en: 'Greg Egan drew some of these sets \(D_z\). Here''s one that looks like a dragon:'
  id: totrans-split-49
  prefs: []
  type: TYPE_NORMAL
  zh: Greg Egan画了一些这些集合\( D_z \)。这里有一个看起来像龙的：
- en: 'Here''s one that looks more like a feather:'
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个看起来更像羽毛的：
- en: 'Now here''s the devastatingly cool fact:'
  id: totrans-split-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在这里有一个令人震惊的事实：
- en: '***Near the point z in the complex plane, the set Sam Derbyshire drew looks
    like the generalized dragon set D[z] .***'
  id: totrans-split-52
  prefs: []
  type: TYPE_NORMAL
  zh: '***在复平面上点z附近，Sam Derbyshire画的集合看起来像广义龙集D[z] 。***'
- en: 'The words ''looks like'' are weasel words, because I don''t know the precise
    theorem. If you look at Sam''s picture again:'
  id: totrans-split-53
  prefs: []
  type: TYPE_NORMAL
  zh: “看起来像”这个词是词鼠语，因为我不知道确切的定理。如果你再看看Sam的图片：
- en: 'you''ll see a lot of ''haze'' near the unit circle, which is where \( f_+ \)
    and \( f_- \) cease to be contraction mappings. Outside the unit circle — well,
    I don''t want to talk about that now! But inside the unit circle, you should be
    able to see that I''m at least roughly right. For example, if we zoom in near
    \( z = 0.372 - .542 i\), we get dragons:'
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在单位圆附近，你会看到很多‘薄雾’，那里的 \( f_+ \) 和 \( f_- \) 不再是收缩映射。在单位圆外部 —— 嗯，我现在不想谈论那些！但在单位圆内部，你应该能够看到我至少大致是对的。例如，如果我们在接近
    \( z = 0.372 - .542 i \) 的地方放大，我们会看到龙：
- en: 'which look at least roughly like this:'
  id: totrans-split-55
  prefs: []
  type: TYPE_NORMAL
  zh: 它们至少大致看起来像这样：
- en: In fact they should look *very much* like this, but I'm too lazy to find the
    point \(z = 0.372 - .542 i\) and zoom in very closely to that point in Sam's picture,
    to check!
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上它们应该看起来*非常*像这样，但我太懒了，找不到点 \( z = 0.372 - .542 i \) 并放大到 Sam 的图片中的那个点去检查！
- en: 'Similarly, near the point \(0.8 + 0.2 i\), we get feathers:'
  id: totrans-split-57
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，在接近点 \( 0.8 + 0.2 i \) 处，我们得到了羽毛：
- en: 'that look a lot like this:'
  id: totrans-split-58
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来非常像这样：
- en: Again, it would be more convincing if I could exactly locate the point \(0.8
    + 0.2 i\) and zoom in there.
  id: totrans-split-59
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，如果我能确切地找到点 \( 0.8 + 0.2 i \) 并在那里放大，那会更令人信服。
- en: 'There are lots of questions left to answer, like "What about all the black
    regions in the middle of Sam''s picture?" and "what about those funny-looking
    holes near the unit circle?" But the most urgent question is this:'
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
  zh: 还有很多问题需要回答，比如“Sam 的图片中所有黑色区域是什么？”和“单位圆附近那些看起来很有趣的孔是什么？”但最紧迫的问题是这个：
- en: '***If you take the set Sam Derbyshire drew and zoom in near the point z, why
    should it look like the generalized dragon set D[z]?***'
  id: totrans-split-61
  prefs: []
  type: TYPE_NORMAL
  zh: '***如果你在接近点 z 的地方放大 Sam Derbyshire 画的集合，为什么它看起来像广义龙集 D[z]？***'
- en: And the answer was discovered by 'some guy on the street' — our pseudonymous,
    nearly anonymous friend. It's related to something called the [Julia–Mandelbrot
    correspondence](http://en.wikipedia.org/wiki/Mandelbrot_set#Relationship_with_Julia_sets).
    I wish I could explain it clearly, but I don't understand it well enough to do
    a really convincing job. So, I'll just muddle through by copying [Greg Egan's
    explanation](http://golem.ph.utexas.edu/category/2009/12/this_weeks_finds_in_mathematic_46.html).
  id: totrans-split-62
  prefs: []
  type: TYPE_NORMAL
  zh: 答案是由‘街上的某个家伙’发现的 —— 我们的化名，几乎匿名的朋友。这与所谓的[朱利亚-曼德博集对应](http://en.wikipedia.org/wiki/Mandelbrot_set#Relationship_with_Julia_sets)有关。我希望我能清楚地解释它，但我理解得还不够透彻，无法做一个真正令人信服的工作。因此，我将通过复制[格雷格·伊根的解释](http://golem.ph.utexas.edu/category/2009/12/this_weeks_finds_in_mathematic_46.html)来解释。
- en: First, let's define a **Littlewood polynomial** to be one whose coefficients
    are all 1 or -1\.
  id: totrans-split-63
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们定义一个**Littlewood 多项式**，其系数全部为 1 或 -1。
- en: 'We have already seen that if we take any number \( z\), then we get the image
    of \(z\) under all the Littlewood polynomials of degree \(n\) by starting with
    the point \( x = 0\) and applying these functions over and over: $$ f_+(x) = 1
    + z x $$ $$ f_-(x) = 1 - z x $$ a total of \( n+1 \) times.'
  id: totrans-split-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到，如果我们取任意数字 \( z \)，那么通过从点 \( x = 0 \) 开始并一遍又一遍地应用这些函数：$$ f_+(x) = 1 +
    z x $$ $$ f_-(x) = 1 - z x $$ 共 \( n+1 \) 次，我们得到了所有度为 \( n \) 的 Littlewood 多项式下
    \( z \) 的图像。
- en: Moreover, we have seen that as we keep applying these functions over and over
    to \( x = 0\), we get sequences that converge to points in the generalized dragon
    set \(D_z\).
  id: totrans-split-65
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们已经看到，当我们一遍又一遍地将这些函数应用于 \( x = 0 \) 时，我们得到的序列会收敛到广义龙集 \( D_z \) 中的点。
- en: So, \(D_z\) is the set of limits of sequences that we get by taking the number
    \(z\) and applying Littlewood polynomials of larger and larger degree.
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，\( D_z \) 是通过取数字 \( z \) 并应用越来越大次数的 Littlewood 多项式而得到的序列的极限集合。
- en: 'Now, suppose 0 is in \(D_z\). Then there are Littlewood polynomials of large
    degree applied to \( z \) that come very close to 0\. We get a picture like this:'
  id: totrans-split-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设 0 在 \( D_z \) 中。那么有大度数的 Littlewood 多项式应用于 \( z \)，会非常接近于 0。我们得到了这样一幅图像：
- en: 'where the arrows represent different Littlewood polynomials being applied to
    \( z\). If we zoom in close enough that a linear approximation is good, we can
    see what the *inverse image* of 0 will look like under these polynomials:'
  id: totrans-split-68
  prefs: []
  type: TYPE_NORMAL
  zh: 其中箭头代表应用于 \( z \) 的不同 Littlewood 多项式。如果我们放大到足够接近，线性逼近是准确的话，我们可以看到在这些多项式下，0 的*逆像*会是什么样子：
- en: It will look the same! But these inverse images are just the roots of the Littlewood
    polynomials. So the roots of the Littlewood polynomials near \( z \) will look
    like the generalized dragon set \( D_z\).
  id: totrans-split-69
  prefs: []
  type: TYPE_NORMAL
  zh: 它将看起来是一样的！但这些逆图像只是 Littlewood 多项式的根。因此，接近 \( z \) 的 Littlewood 多项式的根会看起来像广义龙集
    \( D_z \)。
- en: 'As Egan put it:'
  id: totrans-split-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如伊根所述：
- en: 'But if we grab all these arrows:'
  id: totrans-split-71
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 但是如果我们抓住所有这些箭头：
- en: 'and squeeze their tips together so that they all map precisely to 0 — and if
    we''re working in a small enough neighbourhood of 0 that the arrows don''t really
    change much as we move them — the pattern that imposes on the tails of the arrows
    will look a lot like the original pattern:'
  id: totrans-split-72
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 并将它们的尖端挤在一起，以便它们都精确地映射到0 —— 如果我们在足够小的0邻域内工作，箭头不会随着我们移动而改变太多 —— 那么这对箭头尾部施加的模式看起来会很像原始模式：
- en: There's a lot more to say, but I think I'll stop soon. I just want to emphasize
    that all this is modeled after the incredibly cool [relationship between the Mandelbrot
    set and Julia sets](http://en.wikipedia.org/wiki/Mandelbrot_set#Relationship_with_Julia_sets).
    It goes like this;
  id: totrans-split-73
  prefs: []
  type: TYPE_NORMAL
  zh: 还有很多要说的，但我想我很快就会停下来。我只想强调，所有这些都是基于曼德布罗特集和朱莉亚集之间不可思议的酷[关系](http://en.wikipedia.org/wiki/Mandelbrot_set#Relationship_with_Julia_sets)建模的。它是这样的；
- en: 'Consider this function, which depends on a complex parameter \( z\): $$ f(x)
    = x^2 + z $$'
  id: totrans-split-74
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑这个依赖于复参数\( z \)的函数：$$ f(x) = x^2 + z $$
- en: If we fix \( z\), this function defines a map from the complex plane to itself.
    We can start with any number \(x\) and keep applying this map over and over. We
    get a sequence of numbers. Sometimes this sequence shoots off to infinity and
    sometimes it doesn't. The boundary of the set where it doesn't is called the **[Julia
    set](http://en.wikipedia.org/wiki/Julia_set)** for this number \( z\).
  id: totrans-split-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们固定\( z \)，这个函数定义了一个从复平面到自身的映射。我们可以从任何数\( x \)开始，并一直应用这个映射。我们得到一个数列。有时这个数列朝无穷远发散，有时则不是。不发散的集合边界被称为该数\(
    z \)的**[朱莉亚集](http://en.wikipedia.org/wiki/Julia_set)**。
- en: On the other hand, we can start with \( x = 0\), and draw the set of numbers
    \(z\) for which the resulting sequence doesn't shoot off to infinity. That's called
    the **[Mandelbrot set](http://en.wikipedia.org/wiki/Mandelbrot_set)**.
  id: totrans-split-76
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，我们可以从\( x = 0 \)开始，并绘制出不会发散到无穷远的数值\(z\)的集合。这被称为**[曼德布罗特集](http://en.wikipedia.org/wiki/Mandelbrot_set)**。
- en: 'Here''s the cool relationship: in the vicinity of the number \(z\), the Mandelbrot
    set tends to look like the Julia set for that number \(z\). This is especially
    true right at the boundary of the Mandelbrot set.'
  id: totrans-split-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个很酷的关系：在数值\(z\)的邻近区域，曼德布罗特集倾向于看起来像该数值\(z\)的朱莉亚集。这在曼德布罗特集的边界尤为明显。
- en: 'For example, the Julia set for $$ z = -0.743643887037151 + 0.131825904205330
    i$$ looks like this:'
  id: totrans-split-78
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，对于$$ z = -0.743643887037151 + 0.131825904205330 i $$ 的朱莉亚集如下：
- en: 'while this:'
  id: totrans-split-79
  prefs: []
  type: TYPE_NORMAL
  zh: 当这样时：
- en: is a tiny patch of the Mandelbrot set centered at the same value of \(z\). They're
    shockingly similar!
  id: totrans-split-80
  prefs: []
  type: TYPE_NORMAL
  zh: 是一个以相同\(z\)值为中心的曼德布罗特集的小块。它们惊人地相似！
- en: This is why the Mandelbrot set is so complicated. Julia sets are already very
    complicated. But the Mandelbrot set looks like *a lot* of Julia sets! It's like
    a big picture of someone's face made of little pictures of different people's
    faces.
  id: totrans-split-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么曼德布罗特集如此复杂。朱莉亚集本身就非常复杂。但是曼德布罗特集看起来像*许多*朱莉亚集！就像一个由许多不同人脸小图片组成的大人脸图片。
- en: 'Here''s a great picture illustrating this fact. As with all the pictures here,
    you can click on it for a bigger view:'
  id: totrans-split-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一张很好的图来说明这一事实。像这里的所有图片一样，你可以点击它查看更大的视图：
- en: 'But this one you really *must* click on! It''s a big picture made of lots of
    little pictures of Julia sets for various values of \(z\)... but it mimics the
    Mandelbrot set. You''ll notice that the Mandelbrot set is the set of numbers \(z\)
    whose Julia sets are connected. Those Julia sets are the black blobs. When \(z\)
    leaves the Mandelbrot set, its Julia set falls apart into dust: that''s the white
    stuff.'
  id: totrans-split-83
  prefs: []
  type: TYPE_NORMAL
  zh: 但这个你真的*必须*点击查看！它是由许多不同数值\(z\)的朱莉亚集小图片组成的大图片... 但它模仿了曼德布罗特集。你会注意到，曼德布罗特集是那些朱莉亚集连通的数值\(z\)的集合。那些朱莉亚集就是黑色斑点。当\(z\)离开曼德布罗特集时，它的朱莉亚集就分解成了灰尘：那些白色东西。
- en: 'For an even better view of this phenomenon, try this:'
  id: totrans-split-84
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地观察这一现象，请尝试这样做：
- en: 'You can zoom into the Mandelbrot set and see the corresponding Julia set at
    various values of \(z\). For example, here''s the Julia set at \(z = -0.689494949
    - 0.462323232 i\):'
  id: totrans-split-85
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以放大曼德布罗特集，并在不同的\(z\)值处看到相应的朱莉亚集。例如，在\(z = -0.689494949 - 0.462323232 i\)处的朱莉亚集如下：
- en: 'and here''s a tiny piece of Mandelbrot set near that point:'
  id: totrans-split-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个与该点附近相同数值\(z\)的曼德布罗特集的小片段：
- en: So, the Mandelbrot set is like an illustrated catalog of Julia sets. Similarly,
    it seems the set of roots of Littlewood polynomials (up to a given degree) resembles
    a catalog of generalized dragon sets. However, making this into a theorem would
    require me to make precise many things I've glossed over, and I don't know how
    yet.
  id: totrans-split-87
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，曼德尔布罗集合就像是朱利亚集的插图目录。同样地，看来小伍德多项式的根集（达到一定的次数）类似于广义龙集的目录。然而，要将其变成定理，需要我将许多我略过的东西弄得更精确，而我还不知道如何做。
- en: 'For more on this subject, see:'
  id: totrans-split-88
  prefs: []
  type: TYPE_NORMAL
  zh: 若想了解更多，请参见：
- en: 'For more serious papers related to this subject, see:'
  id: totrans-split-89
  prefs: []
  type: TYPE_NORMAL
  zh: 若想了解更多与此主题相关的严肃论文，请参见：
- en: Thierry Bousch, [Paires de similitudes \(Z \to SZ + 1, Z \to SZ - 1\)](bousch_paires_de_similitudes.pdf),
    January 1988\.
  id: totrans-split-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 泰瑞·布什，[相似对 \(Z \to SZ + 1, Z \to SZ - 1\)](bousch_paires_de_similitudes.pdf)，1988年1月。
- en: (This shows that the closure of the set Sam drew contains the annulus \( 2^{-1/4}
    \le |z| \le 2^{1/4}\).)
  id: totrans-split-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: （这表明 Sam 画出的集合的闭包包含环 \( 2^{-1/4} \le |z| \le 2^{1/4}\)。）
- en: Thierry Bousch, [Sur quelques problèmes de dynamique holomorphe](bousch_thesis.pdf),
    Ph.D. thesis, Université d'Orsay, April 1992\.
  id: totrans-split-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 泰瑞·布什，[关于一些全纯动态问题](bousch_thesis.pdf)，博士论文，奥尔赛大学，1992年4月。
- en: Thierry Bousch, [Connexité locale et par chemins hölderiens pour les systèmes
    itérées de fonctions](bousch_connexite.pdf), March 1993\.
  id: totrans-split-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 泰瑞·布什，[局部连通性与 Hölder 系统迭代函数的路径](bousch_connexite.pdf)，1993年3月。
- en: (This shows that the closure of the set Sam drew is connected and locally path-connected,
    and proves that a point \(z\) is in the closure of this set if and only if the
    generalized dragon set \(D_z\) is connected.)
  id: totrans-split-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: (这   （这表明 Sam 画出的集合的闭包是连通的，并且局部路径连通，证明了点 \(z\) 当且仅当广义龙集 \(D_z\) 连接时，属于该集合的闭包。）
- en: Loki Jörgenson, [Zeros of polynomials with constrained coefficients](http://www.cecm.sfu.ca/~loki/Projects/Roots/)
    and [related pictures](http://www.cecm.sfu.ca/~loki/Projects/Roots/Book).
  id: totrans-split-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 洛基·约根森，[系数受限的多项式的零点](http://www.cecm.sfu.ca/~loki/Projects/Roots/)和[相关图片](http://www.cecm.sfu.ca/~loki/Projects/Roots/Book)。
- en: Xiao-Song Lin, [Zeros of the Jones polynomial](http://math.ucr.edu/~xl/abs-jk.pdf).
  id: totrans-split-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 肖松·林，[琼斯多项式的零点](http://math.ucr.edu/~xl/abs-jk.pdf)。
- en: Andrew M. Odlyzko and B. Poonen, [Zeros of polynomials with 0,1 coefficients](http://dx.doi.org/10.5169/seals-60430),
    *L'Enseignement Math.* **39** (1993), 317-348.
  id: totrans-split-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安德鲁·M·奥德利兹科和B·普尼，[系数为0或1的多项式的零点](http://dx.doi.org/10.5169/seals-60430)，*L'Enseignement
    Math.* **39**（1993），317-348。
- en: My colleague Xiao-Song Lin plotted the zeros of the Jones polynomial for prime
    alternating knots with up to 13 crossings, and you can see his pictures in the
    above paper. You'll see that *some* of the patterns in his pictures just come
    from the patterns in the Christensen sets... since the Jones polynomial has integer
    coefficients.
  id: totrans-split-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我的同事肖松·林绘制了具有最多13个交点的素数交替结的琼斯多项式的零点，您可以在上述论文中看到他的图片。你会看到 *一些* 他图片中的模式正是来自克里斯滕森集合中的模式...因为琼斯多项式的系数是整数。
- en: 'Odlyzko and Poonen proved some interesting things about the set of all roots
    of all polynomials with coefficients 0 or 1\. If we define a fancier Christensen
    set C[d,p,q] to be the set of roots of all polynomials of degree d with coefficients
    ranging from \(p\) to \(q\), Odlyzko and Poonen are studying \(C_{d,0,1}\) in
    the limit \(d \to \infty\). They mention some known results and prove some new
    ones: this set is contained in the half-plane \(\mathrm{Re}(z) \lt 3/2\) and contained
    in the annulus \(1/\Phi \lt |z| \lt \Phi\) where \(\Phi \) is the golden ratio
    \( (\sqrt{5} + 1)/2\). In fact they trap it, not just between these circles, but
    between two subtler curves. They also show that the closure of this set is path
    connected but not simply connected.'
  id: totrans-split-99
  prefs: []
  type: TYPE_NORMAL
  zh: 奥德利兹科和普尼证明了一些有关所有系数为0或1的多项式根集的有趣事物。如果我们定义一个更复杂的克里斯滕森集合 \(C[d,p,q]\)，即所有次数为 \(d\)
    的多项式的根集，其系数从 \(p\) 到 \(q\)，奥德利兹科和普尼正在研究在 \(d \to \infty\) 的极限下的 \(C_{d,0,1}\)。他们提到了一些已知结果，并证明了一些新结果：这个集合包含在半平面
    \(\mathrm{Re}(z) < 3/2\) 内，并包含在环 \(1/\Phi < |z| < \Phi\) 内，其中 \(\Phi\) 是黄金比例 \((\sqrt{5}
    + 1)/2\)。事实上，他们不仅在这些圆之间限制它，而是在两个更细的曲线之间。他们还显示该集合的闭包是路径连通的，但不是简单连通的。
- en: '* * *'
  id: totrans-split-100
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: © 2023 John Baez, J. Daniel Christensen, Sam Derbyshire and Greg Egan
  id: totrans-split-101
  prefs: []
  type: TYPE_NORMAL
  zh: © 2023 约翰·巴兹，J. 丹尼尔·克里斯滕森，Sam Derbyshire 和 Greg Egan
- en: baez@math.removethis.ucr.andthis.edu
  id: totrans-split-102
  prefs: []
  type: TYPE_NORMAL
  zh: baez@math.removethis.ucr.andthis.edu
