- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-29 12:45:55'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Some Git poll results
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://jvns.ca/blog/2024/03/28/git-poll-results/](https://jvns.ca/blog/2024/03/28/git-poll-results/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'A new thing I’ve been trying while writing this Git zine is doing a bunch of
    polls on Mastodon to learn about:'
  prefs: []
  type: TYPE_NORMAL
- en: which git commands/workflows people use (like “do you use merge or rebase more?”
    or “do you put your current git branch in your shell prompt?”)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: what kinds of problems people run into with git (like “have you lost work because
    of a git problem in the last year or two?”)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: which terminology people find confusing (like “how confident do you feel that
    you know what HEAD means in git?”)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: how people think about various git concepts (“how do you think about git branches?”)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in what ways my usage of git is “normal” and in what ways it’s “weird”. Where
    am I pretty similar to the majority of people, and where am I different?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It’s been a lot of fun and some of the results have been surprising to me, so
    here are some of the results. I’m partly just posting these so that I can have
    them all in one place for myself to refer to, but maybe some of you will find
    them interesting too.
  prefs: []
  type: TYPE_NORMAL
- en: these polls are highly unscientific
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Polls on social media that I thought about for approximately 45 seconds before
    posting are not the most rigorous way of doing user research, so I’m pretty cautious
    about drawing conclusions from them. Potential problems include: I phrased the
    poll badly, the set of possible responses aren’t chosen very carefully, some of
    the poll responses I just picked because I thought they were funny, and the set
    of people who follow me on Mastodon is not representative of all git users.'
  prefs: []
  type: TYPE_NORMAL
- en: 'But here are a couple of examples of why I still find these poll results useful:'
  prefs: []
  type: TYPE_NORMAL
- en: The first poll is “what’s your approach to merge commits and rebase in git”?
    600 people (30% of responders) replied “I usually use merge, rarely/never rebase”.
    It’s helpful for me to know that there are a lot of people out there who rarely/never
    use rebase, because I use rebase all the time – it’s a good reminder that my experiences
    isn’t necessarily representative.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For the poll “how confident do you feel that you know what HEAD means in git?“,
    14% of people replied “literally no idea”. That tells me to be careful about assuming
    that people know what `HEAD` means in my writing.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: where to read more
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you want to read more about any given poll, you can click at the date at
    the bottom – there’s usually a bunch of interesting follow-up discussion.
  prefs: []
  type: TYPE_NORMAL
- en: Also this post has a lot of CSS so it might not work well in a feed reader.
  prefs: []
  type: TYPE_NORMAL
- en: Now! Here are the polls! I’m mostly just going to post the results without commenting
    on them.
  prefs: []
  type: TYPE_NORMAL
- en: merge and rebase
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'poll: what''s your approach to merge commits and rebase in git?'
  prefs: []
  type: TYPE_NORMAL
- en: merge conflicts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'poll: if you use git, how often do you deal with nontrivial merge conflicts?
    (like where 2 people were really editing the same code at the same time and you
    need to take time to think about how to reconcile the edits)'
  prefs: []
  type: TYPE_NORMAL
- en: 'another merge conflict poll:'
  prefs: []
  type: TYPE_NORMAL
- en: have you ever seen a bug in production caused by an incorrect merge conflict
    resolution? I've heard about this as a reason to prefer merges over rebase (because
    it makes the merge conflict resolution easier to audit) and I'm curious about
    how common it is
  prefs: []
  type: TYPE_NORMAL
- en: 'I thought it was interesting in the next one that “edit the weird text file
    by hand” was most people’s preference:'
  prefs: []
  type: TYPE_NORMAL
- en: 'poll: when you have a merge conflict, how do you prefer to handle it?'
  prefs: []
  type: TYPE_NORMAL
- en: 'merge conflict follow up: if you prefer to edit the weird text file by hand
    instead of using a dedicated merge conflict tool, why is that?'
  prefs: []
  type: TYPE_NORMAL
- en: 'poll: did you know that in a git merge conflict, the order of the code is different
    when you do a merge/rebase?'
  prefs: []
  type: TYPE_NORMAL
- en: 'merge:'
  prefs: []
  type: TYPE_NORMAL
- en: <<<<<<< HEAD
  prefs: []
  type: TYPE_NORMAL
- en: YOUR CODE
  prefs: []
  type: TYPE_NORMAL
- en: =======
  prefs: []
  type: TYPE_NORMAL
- en: OTHER BRANCH'S CODE
  prefs: []
  type: TYPE_NORMAL
- en: '>>>>>>> c694cf8aabe'
  prefs: []
  type: TYPE_NORMAL
- en: 'rebase:'
  prefs: []
  type: TYPE_NORMAL
- en: <<<<<<< HEAD
  prefs: []
  type: TYPE_NORMAL
- en: OTHER BRANCH'S CODE
  prefs: []
  type: TYPE_NORMAL
- en: =======
  prefs: []
  type: TYPE_NORMAL
- en: YOUR CODE
  prefs: []
  type: TYPE_NORMAL
- en: '>>>>>>> d945752 (your commit message)'
  prefs: []
  type: TYPE_NORMAL
- en: (where "YOUR CODE" is the code from the branch you were on when you ran `git
    merge` or `git rebase`)
  prefs: []
  type: TYPE_NORMAL
- en: git pull
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'poll: do you prefer `git fetch` or `git pull`?'
  prefs: []
  type: TYPE_NORMAL
- en: (no lectures about why you think `git pull` is bad please but if you use both
    I'd be curious to hear in what cases you use fetch!)
  prefs: []
  type: TYPE_NORMAL
- en: commits
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[poll] how do you think of a git commit?'
  prefs: []
  type: TYPE_NORMAL
- en: (sorry, you can't pick “it’s all 3”, I'm curious about which one feels most
    true to you)
  prefs: []
  type: TYPE_NORMAL
- en: branches
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'poll: how do you think about git branches? (I''ll put an image in a reply with
    pictures for the 3 options)'
  prefs: []
  type: TYPE_NORMAL
- en: as with all of these polls obviously all 3 are valid, I'm curious which one
    feels the most true to you
  prefs: []
  type: TYPE_NORMAL
- en: git environment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'poll: do you put your current git branch in your shell prompt?'
  prefs: []
  type: TYPE_NORMAL
- en: 'poll: do you use git on the command line or in a GUI?'
  prefs: []
  type: TYPE_NORMAL
- en: (you can pick more than one option if it’s a mix of both, sorry magit users
    I didn't have space for you in this poll)
  prefs: []
  type: TYPE_NORMAL
- en: losing work
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'poll: have you lost work because of a git problem in the last year or two?
    (it counts even if it was "your fault" :))'
  prefs: []
  type: TYPE_NORMAL
- en: meaning of various git terms
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: These polls gave me the impression that for a lot of git terms (fast-forward,
    reference, HEAD), there are a lot of git users who have “literally no idea” what
    they mean. That makes me want to be careful about using and defining those terms.
  prefs: []
  type: TYPE_NORMAL
- en: 'poll: how confident do you feel that you know what HEAD means in git?'
  prefs: []
  type: TYPE_NORMAL
- en: 'another poll: how do you think of HEAD in git?'
  prefs: []
  type: TYPE_NORMAL
- en: 'poll: when you see this message in `git status`:'
  prefs: []
  type: TYPE_NORMAL
- en: ”Your branch is up to date with 'origin/main’.”
  prefs: []
  type: TYPE_NORMAL
- en: do you know that your branch may not actually be up to date with the `main`
    branch on the remote?
  prefs: []
  type: TYPE_NORMAL
- en: 'poll: how confident do you feel that you know what the term "fast-forward"
    means in git, for example in this error message:'
  prefs: []
  type: TYPE_NORMAL
- en: '`! [rejected] main -> main (non-fast-forward)`'
  prefs: []
  type: TYPE_NORMAL
- en: 'or this one:'
  prefs: []
  type: TYPE_NORMAL
- en: 'fatal: Not possible to fast-forward, aborting.'
  prefs: []
  type: TYPE_NORMAL
- en: (I promise this is not a trick question, I'm just writing a blog post about
    git terminology and I'm trying to gauge how people feel about various core git
    terms)
  prefs: []
  type: TYPE_NORMAL
- en: 'poll: how confident do you feel that you know what a "ref" or "reference" is
    in git? (“ref” and “reference” are the same thing)'
  prefs: []
  type: TYPE_NORMAL
- en: for example in this error message (from `git push`)
  prefs: []
  type: TYPE_NORMAL
- en: 'error: failed to push some refs to ''github.com:jvns/int-exposed'''
  prefs: []
  type: TYPE_NORMAL
- en: 'or this one: (from `git switch mybranch`)'
  prefs: []
  type: TYPE_NORMAL
- en: 'fatal: invalid reference: mybranch'
  prefs: []
  type: TYPE_NORMAL
- en: 'another git terminology poll: how confident do you feel that you know what
    a git commit is?'
  prefs: []
  type: TYPE_NORMAL
- en: (not a trick question, I'm mostly curious how this one relates to people's reported
    confidence about more "advanced" terms like reference/fast-forward/HEAD)
  prefs: []
  type: TYPE_NORMAL
- en: 'poll: in git, do you think of "detached HEAD state" and "not having any branch
    checked out" as being the same thing?'
  prefs: []
  type: TYPE_NORMAL
- en: 'poll: how confident do you feel that you know what the term "current branch"
    means in git?'
  prefs: []
  type: TYPE_NORMAL
- en: (deleted & reposted to clarify that I'm asking about the meaning of the term)
  prefs: []
  type: TYPE_NORMAL
- en: other version control systems
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I occasionally hear “SVN was better than git!” but this “svn vs git” poll makes
    me think that’s a minority opinion. I’m much more cautious about concluding anything
    from the hg-vs-git poll but it does seem like some people prefer git and some
    people prefer Mercurial.
  prefs: []
  type: TYPE_NORMAL
- en: 'poll 2: if you''ve used both svn and git, which do you prefer?'
  prefs: []
  type: TYPE_NORMAL
- en: (no replies please, i have already read 300 comments about git vs other version
    control systems today and they were great but i can't read more)
  prefs: []
  type: TYPE_NORMAL
- en: gonna do a short thread of git vs other version control systems polls just to
    get an overall vibe
  prefs: []
  type: TYPE_NORMAL
- en: 'poll 1: if you''ve used both hg and git, which do you prefer?'
  prefs: []
  type: TYPE_NORMAL
- en: (no replies please though, i have already read 300 comments about git vs other
    version control systems today and i can't read more)
  prefs: []
  type: TYPE_NORMAL
- en: that’s all!
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It’s been very fun to run all of these polls and I’ve learned a lot about how
    people use and think about git.
  prefs: []
  type: TYPE_NORMAL
