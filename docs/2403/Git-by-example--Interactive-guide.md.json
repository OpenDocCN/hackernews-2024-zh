["```\n┌──────────────┐         ┌──────────────┐ │ local        │ push ─> │ remote       │ │ repo         │ <- pull │ repo         │ └──────────────┘         └──────────────┘ check │  ↑↓ commit / reset out   │ ┌──────────────┐  │ │ staging area │ │ └──────────────┘ ▽  ↑↓ add / restore ┌──────────────┐ │ working tree │ │ .            │ │ ├── go.mod   │ │ └── main.go  │ └──────────────┘ \n```", "```\n main             ○ v1.1 feat-2 │               │  ╲│               • │ feat-1        │ │╱              ○ v1.0 │               │ \n```", "```\nInitialized empty Git repository in /tmp/repo/.git/ \n```", "```\ngit config user.email alice@example.com git config user.name \"Alice Zakas\" \n```", "```\ngit config --list --show-origin \n```", "```\nfile:/sandbox/.gitconfig\tuser.email=sandbox@example.com file:/sandbox/.gitconfig\tuser.name=sandbox file:/sandbox/.gitconfig\tinit.defaultbranch=main file:.git/config\tcore.repositoryformatversion=0 file:.git/config\tcore.filemode=true file:.git/config\tcore.bare=false file:.git/config\tcore.logallrefupdates=true file:.git/config\tuser.email=alice@example.com file:.git/config\tuser.name=Alice Zakas \n```", "```\necho \"git is awesom\" > message.txt git add message.txt \n```", "```\ndiff --git a/message.txt b/message.txt new file mode 100644 index 0000000..0165e86 --- /dev/null +++ b/message.txt @@ -0,0 +1 @@ +git is awesom \n```", "```\ngit commit -m \"add message\" \n```", "```\n[main (root-commit) 3a2bd8f] add message  1 file changed, 1 insertion(+) create mode 100644 message.txt \n```", "```\necho \"git is awesome\" > message.txt \n```", "```\ndiff --git a/message.txt b/message.txt index 0165e86..118f108 100644 --- a/message.txt +++ b/message.txt @@ -1 +1 @@ -git is awesom +git is awesome \n```", "```\ngit commit -am \"edit message\" \n```", "```\n[main ecdeb79] edit message  1 file changed, 1 insertion(+), 1 deletion(-) \n```", "```\ngit mv message.txt praise.txt \n```", "```\ndiff --git a/message.txt b/praise.txt similarity index 100% rename from message.txt rename to praise.txt \n```", "```\ngit commit -m \"rename message.txt\" \n```", "```\n[main d768287] rename message.txt  1 file changed, 0 insertions(+), 0 deletions(-) rename message.txt => praise.txt (100%) \n```", "```\ndiff --git a/message.txt b/message.txt deleted file mode 100644 index 0165e86..0000000 --- a/message.txt +++ /dev/null @@ -1 +0,0 @@ -git is awesom \n```", "```\ngit commit -m \"delete message.txt\" \n```", "```\n[main 6a2d19b] delete message.txt  1 file changed, 1 deletion(-) delete mode 100644 message.txt \n```", "```\necho \"git is awesome\" > message.txt git add message.txt \n```", "```\necho \"git is great\" > praise.txt \n```", "```\nOn branch main Changes to be committed:  (use \"git restore --staged <file>...\" to unstage)  modified:   message.txt   Untracked files:  (use \"git add <file>...\" to include in what will be committed)  praise.txt \n```", "```\ncommit ecdeb79aad4565d8d7d725678ffadc48b3cdec52 Author: sandbox <sandbox@example.com> Date:   Thu Mar 14 15:00:00 2024 +0000   edit message   commit 3a2bd8f0929c605193120bd1ad12732f49457e99 Author: sandbox <sandbox@example.com> Date:   Thu Mar 14 15:00:00 2024 +0000   add message \n```", "```\necdeb79 edit message 3a2bd8f add message \n```", "```\n* commit ecdeb79aad4565d8d7d725678ffadc48b3cdec52 | Author: sandbox <sandbox@example.com> | Date:   Thu Mar 14 15:00:00 2024 +0000 | |     edit message | * commit 3a2bd8f0929c605193120bd1ad12732f49457e99  Author: sandbox <sandbox@example.com> Date:   Thu Mar 14 15:00:00 2024 +0000   add message \n```", "```\ngit log --oneline --graph \n```", "```\n* ecdeb79 edit message * 3a2bd8f add message \n```", "```\ncommit ecdeb79aad4565d8d7d725678ffadc48b3cdec52 Author: sandbox <sandbox@example.com> Date:   Thu Mar 14 15:00:00 2024 +0000   edit message   diff --git a/message.txt b/message.txt index 0165e86..118f108 100644 --- a/message.txt +++ b/message.txt @@ -1 +1 @@ -git is awesom +git is awesome \n```", "```\ncommit 3a2bd8f0929c605193120bd1ad12732f49457e99 Author: sandbox <sandbox@example.com> Date:   Thu Mar 14 15:00:00 2024 +0000   add message   diff --git a/message.txt b/message.txt new file mode 100644 index 0000000..0165e86 --- /dev/null +++ b/message.txt @@ -0,0 +1 @@ +git is awesom \n```", "```\ncc5b883 no debates 2774a8b is great 31abe57 is awesome \n```", "```\ngit is awesome git is great there is nothing to debate \n```", "```\nmessage.txt:there is nothing to debate \n```", "```\nHEAD~1:message.txt:git is great \n```", "```\ngit branch ohmypy git switch ohmypy \n```", "```\nSwitched to branch 'ohmypy' \n```", "```\necho \"print('git is awesome')\" > ohmy.py git add ohmy.py git commit -m \"ohmy.py\" \n```", "```\n[ohmypy a715138] ohmy.py  1 file changed, 1 insertion(+) create mode 100644 ohmy.py \n```", "```\ngit log --oneline main..ohmypy \n```", "```\ngit log --all --oneline --graph \n```", "```\n* ecdeb79 edit message | * a715138 ohmy.py |/ * 3a2bd8f add message \n```", "```\nMerge made by the 'ort' strategy.  ohmy.py | 1 + 1 file changed, 1 insertion(+) create mode 100644 ohmy.py \n```", "```\ngit log --all --oneline --graph \n```", "```\n*   7d5ac4f Merge branch 'ohmypy' |\\ | * a715138 ohmy.py * | ecdeb79 edit message |/ * 3a2bd8f add message \n```", "```\ngit log --all --oneline --graph \n```", "```\n* ecdeb79 edit message | * a715138 ohmy.py |/ * 3a2bd8f add message \n```", "```\nRebasing (1/1) Successfully rebased and updated refs/heads/main. \n```", "```\ngit log --all --oneline --graph \n```", "```\n* c2b0c60 edit message * a715138 ohmy.py * 3a2bd8f add message \n```", "```\ngit log --all --oneline --graph \n```", "```\n* ecdeb79 edit message | * b9a7d0f ohmy.lua | * 5ca4d55 ohmy.sh | * a715138 ohmy.py |/ * 3a2bd8f add message \n```", "```\nSwitched to branch 'ohmypy' \n```", "```\nSquash commit -- not updating HEAD \n```", "```\ngit commit -m \"ohmy[py,sh,lua]\" \n```", "```\n[ohmypy 4f2a17f] ohmy[py,sh,lua]  1 file changed, 1 insertion(+), 1 deletion(-) \n```", "```\ngit merge --no-ff ohmypy -m \"ohmy[py,sh,lua]\" \n```", "```\nMerge made by the 'ort' strategy.  ohmy.lua | 1 + ohmy.py  | 1 + ohmy.sh  | 1 + 3 files changed, 3 insertions(+) create mode 100644 ohmy.lua create mode 100644 ohmy.py create mode 100644 ohmy.sh \n```", "```\ngit log --all --oneline --graph \n```", "```\n*   008dce6 ohmy[py,sh,lua] |\\ | * 4f2a17f ohmy[py,sh,lua] | * b9a7d0f ohmy.lua | * 5ca4d55 ohmy.sh | * a715138 ohmy.py * | ecdeb79 edit message |/ * 3a2bd8f add message \n```", "```\ngit log --all --oneline --graph --decorate \n```", "```\n* 568193c (HEAD -> main) add praise | * bbce161 (ohmypy) ohmy.sh | * cbb09c6 fix typo | * a715138 ohmy.py |/ * 3a2bd8f add message \n```", "```\n[main b23d3ee] fix typo  Date: Thu Mar 14 15:00:00 2024 +0000 1 file changed, 1 insertion(+), 1 deletion(-) \n```", "```\ngit log --all --oneline --graph --decorate \n```", "```\n* b23d3ee (HEAD -> main) fix typo * 568193c add praise | * bbce161 (ohmypy) ohmy.sh | * cbb09c6 fix typo | * a715138 ohmy.py |/ * 3a2bd8f add message \n```", "```\ngit clone /tmp/remote.git /tmp/alice \n```", "```\nCloning into '/tmp/alice'... done. \n```", "```\ncd /tmp/alice git config user.email alice@example.com git config user.name \"Alice Zakas\" \n```", "```\necho \"Git is awesome!\" > message.txt git commit -am \"edit from alice\" \n```", "```\n[main b9714f2] edit from alice  1 file changed, 1 insertion(+), 1 deletion(-) \n```", "```\nUpdating 3a2bd8f..b9714f2 Fast-forward  message.txt | 2 +- 1 file changed, 1 insertion(+), 1 deletion(-) \n```", "```\nb9714f2 edit from alice 3a2bd8f add message \n```", "```\nAuto-merging message.txt CONFLICT (content): Merge conflict in message.txt Automatic merge failed; fix conflicts and then commit the result.From /tmp/remote  3a2bd8f..b9714f2  main       -> origin/main (exit status 1) \n```", "```\n<<<<<<< HEAD\ngit is awesome\n=======\nGit is awesome!\n>>>>>>> b9714f2c59c7dbd1205cf20e0a99939b7a686d97 \n```", "```\ngit checkout --theirs -- message.txt # to choose our version, use --ours \n```", "```\ngit add message.txt git commit -m \"merge alice\" \n```", "```\n[main cbb6112] merge alice \n```", "```\ngit branch ohmypy git switch ohmypy \n```", "```\nSwitched to branch 'ohmypy' \n```", "```\necho \"print('git is awesome')\" > ohmy.py git add ohmy.py git commit -m \"ohmy.py\" \n```", "```\n[ohmypy c64073e] ohmy.py  1 file changed, 1 insertion(+) create mode 100644 ohmy.py \n```", "```\ngit push -u origin ohmypy \n```", "```\nbranch 'ohmypy' set up to track 'origin/ohmypy'. \n```", "```\n main * ohmypy  remotes/origin/main remotes/origin/ohmypy \n```", "```\ngit switch ohmypy # or: git checkout ohmypy \n```", "```\nbranch 'ohmypy' set up to track 'origin/ohmypy'. \n```", "```\ngit tag 0.1.0-alpha HEAD~1 \n```", "```\ngit log --decorate --oneline \n```", "```\necdeb79 (HEAD -> main, tag: 0.1.0, origin/main) edit message 3a2bd8f (tag: 0.1.0-alpha) add message \n```", "```\nDeleted tag '0.1.0-alpha' (was 3a2bd8f) \n```", "```\necho \"git is awesome\" > message.txt git commit -am \"edit nessage\" \n```", "```\n[main c0206a0] edit nessage  1 file changed, 1 insertion(+), 1 deletion(-) \n```", "```\nc0206a0 edit nessage 3a2bd8f add message \n```", "```\ngit commit --amend -m \"edit message\" \n```", "```\n[main ecdeb79] edit message  Date: Thu Mar 14 15:00:00 2024 +0000 1 file changed, 1 insertion(+), 1 deletion(-) \n```", "```\necdeb79 edit message 3a2bd8f add message \n```", "```\necho \"git is awesome\" > message.txt git add message.txt \n```", "```\nOn branch main Changes to be committed:  (use \"git restore --staged <file>...\" to unstage)  modified:   message.txt \n```", "```\ngit restore --staged message.txt \n```", "```\nOn branch main Changes not staged for commit:  (use \"git add <file>...\" to update what will be committed) (use \"git restore <file>...\" to discard changes in working directory)  modified:   message.txt   no changes added to commit (use \"git add\" and/or \"git commit -a\") \n```", "```\ngit restore message.txt # or: git checkout message.txt \n```", "```\necdeb79 edit message 3a2bd8f add message \n```", "```\nOn branch main Changes to be committed:  (use \"git restore --staged <file>...\" to unstage)  modified:   message.txt \n```", "```\ngit reset --hard HEAD~ git status \n```", "```\nHEAD is now at 3a2bd8f add message On branch main nothing to commit, working tree clean \n```", "```\necdeb79 edit message 3a2bd8f add message \n```", "```\ngit revert HEAD --no-edit \n```", "```\n[main 9ffa044] Revert \"edit message\"  Date: Thu Mar 14 15:00:00 2024 +0000 1 file changed, 1 insertion(+), 1 deletion(-) \n```", "```\n9ffa044 Revert \"edit message\" ecdeb79 edit message 3a2bd8f add message \n```", "```\ngit log --oneline --graph \n```", "```\n*   7d5ac4f Merge branch 'ohmypy' |\\ | * a715138 ohmy.py * | ecdeb79 edit message |/ * 3a2bd8f add message \n```", "```\n7d5ac4f HEAD@{0}: merge ohmypy: Merge made by the 'ort' strategy. ecdeb79 HEAD@{1}: commit: edit message 3a2bd8f HEAD@{2}: checkout: moving from ohmypy to main a715138 HEAD@{3}: commit: ohmy.py 3a2bd8f HEAD@{4}: checkout: moving from main to ohmypy 3a2bd8f HEAD@{5}: commit (initial): add message \n```", "```\ngit reset --hard HEAD@{3} \n```", "```\nHEAD is now at a715138 ohmy.py \n```", "```\ngit log --oneline --graph \n```", "```\n* a715138 ohmy.py * 3a2bd8f add message \n```", "```\necho \"git is awesome\" > message.txt git add message.txt \n```", "```\nSaved working directory and index state WIP on main: 3a2bd8f add message \n```", "```\necho \"Git is awesome!\" > message.txt git stash \n```", "```\nSaved working directory and index state WIP on main: 3a2bd8f add message \n```", "```\nstash@{0}: WIP on main: 3a2bd8f add message stash@{1}: WIP on main: 3a2bd8f add message \n```", "```\n...(omitted for brevity)... \n```", "```\ngit switch main git stash pop \n```", "```\nOn branch main Changes not staged for commit:  (use \"git add <file>...\" to update what will be committed) (use \"git restore <file>...\" to discard changes in working directory)  modified:   message.txt   no changes added to commit (use \"git add\" and/or \"git commit -a\") Dropped refs/stash@{0} (96af1a51462f29d7b947a7563938847efd5d5aeb) \n```", "```\ngit log --pretty=format:'%h %an %s %d' \n```", "```\n7611979 bob ohmy.lua  (HEAD -> main, origin/main) ef4f23e bob ohmy.sh 3d8f700 bob ohmy.py c61962c alice no debates 2ab82f6 alice go is great ecdeb79 sandbox edit message 3a2bd8f sandbox add message  (tag: v1.0) \n```", "```\n%h   commit hash %an  author %s   message %d   decoration (e.g. branch name or tag) \n```", "```\nalice (2):  go is great no debates   bob (3):  ohmy.py ohmy.sh ohmy.lua   sandbox (1):  edit message \n```", "```\necho \"-- pwd --\" pwd echo \"-- branches --\" git branch echo \"-- status --\" git status \n```", "```\n-- pwd -- /tmp/repo -- branches --  main * ohmypy -- status -- On branch ohmypy Changes to be committed:  (use \"git restore --staged <file>...\" to unstage)  new file:   ohmy.py \n```", "```\ngit worktree add -b hotfix /tmp/hotfix main \n```", "```\nHEAD is now at 3a2bd8f add message \n```", "```\ncd /tmp/hotfix echo \"git is awesome\" > message.txt git commit -am \"fix typo\" \n```", "```\n[hotfix c3485cd] fix typo  1 file changed, 1 insertion(+), 1 deletion(-) \n```", "```\ngit push --set-upstream origin main \n```", "```\nbranch 'main' set up to track 'origin/main'. \n```", "```\n2f568eb main.sh 31ed915 main.sh f8b2baf main.sh 5e0cf35 main.sh 8f0f1e4 main.sh 51c34ff test.sh \n```", "```\nstatus: waiting for both good and bad commits \n```", "```\ngit bisect bad HEAD git bisect good HEAD~4 \n```", "```\nstatus: waiting for good commit(s), bad commit known Bisecting: 1 revision left to test after this (roughly 1 step) [f8b2baf93964ec9e0daa87c9ed262bbf5cf66b67] main.sh \n```", "```\nBisecting: 0 revisions left to test after this (roughly 0 steps) [31ed915660c42a00aa30b51520a16e3f48201299] main.sh \n```", "```\ncommit 31ed915660c42a00aa30b51520a16e3f48201299 Author: sandbox <sandbox@example.com> Date:   Thu Mar 14 15:00:00 2024 +0000   main.sh   diff --git a/main.sh b/main.sh index 7f8f78c..ce533e0 100644 --- a/main.sh +++ b/main.sh @@ -1,2 +1,2 @@  # sum two numbers -echo $(expr $1 + $2) +echo $(expr $1 - $2) \n```", "```\n. ├── go.mod ├── main.go ├── products │   └── products.go └── users  └── users.go \n```", "```\ngit clone --no-checkout /tmp/remote.git /tmp/repo cd /tmp/repo \n```", "```\nCloning into '/tmp/repo'... done. \n```", "```\ngit sparse-checkout init --cone git sparse-checkout set users \n```", "```\nYour branch is up to date with 'origin/main'. \n```", "```\n. ├── go.mod ├── main.go └── users  └── users.go   1 directories, 3 files \n```", "```\n# Download commits and trees (directories), # but not blobs (file contents): git clone --filter=blob:none file:///tmp/remote.git   # Download commits only, without trees (directories) # or blobs (file contents): git clone --filter=tree:0 file:///tmp/remote.git \n```"]