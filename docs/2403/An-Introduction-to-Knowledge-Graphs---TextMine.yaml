- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-27 14:52:47'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
- en: An Introduction to Knowledge Graphs - TextMine
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://textmine.com/post/an-introduction-to-knowledge-graphs](https://textmine.com/post/an-introduction-to-knowledge-graphs)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In a world of unstructured data, knowledge graphs are a great approach for modelling
    a dataset's underlying entities without constraining itself to a fixed schema
    or set of concepts. Moreover, knowledge graphs can define the relationships between
    entities as well as how they relate to broader concepts which are defined in ontologies.
    This article provides an overview of knowledge graphs by defining what they are,
    discussing their main components, and showing some examples of knowledge graphs
    across numerous industries such as e-commerce, financial services and document
    management.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
- en: What Are Knowledge Graphs?
  id: totrans-split-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Knowledge graphs are organised and structured representations of knowledge,
    displaying connections and relationships between individual points of data. The
    individual data points are called nodes and they represent entities (people, places,
    things, or concepts). In order to explore relationships between these nodes, edges
    are created to represent these connections.
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
- en: The following diagram illustrates how the same data can be represented in a
    table and a graph. One of the key benefits of a graph is that there are no “table
    headers” which limit the properties which can be added to the entities. As a result,
    a graph can evolve in time without causing any disruption to the datastore.
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
- en: An illustration of tabular and graph data representations of a married couple
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
- en: The Main Components of Knowledge Graphs
  id: totrans-split-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There are three main components of knowledge graphs, which draw from graph
    theory: Nodes, edges, and triples. Together, these components form the structure
    of knowledge graphs and enable the creation of well-mapped graphs for complex
    domains.'
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
- en: Nodes and Edges
  id: totrans-split-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A node or vertex represents an entity, concept, or piece of data. For example,
    people, places, things, and concepts can be considered nodes because they are
    identifiable.
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
- en: In a knowledge graph, nodes usually combine to represent a real-world concept
    – especially through the ways in which they connect.
  id: totrans-split-21
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
- en: However, nodes are useless if they are not arranged in a connectable fashion
    for relational processing.
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
- en: In order to form and link nodal relationships, edges connect two nodes in a
    knowledge graph. Relationships can be direct or indirect, as they are rated within
    the graph based on connection.
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-26
  prefs: []
  type: TYPE_NORMAL
- en: Triples
  id: totrans-split-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Triples take nodes plus edges and form a more complex knowledge representation.
    Triples are broken down into three parts: subject, object, and predicate.'
  id: totrans-split-28
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-29
  prefs: []
  type: TYPE_NORMAL
- en: The subject defines the concept being described, the object represents the value,
    and the predicate constitutes the relationship. When making semantic statements,
    a trip is often used to bring structure to the relationships mentioned.
  id: totrans-split-30
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-31
  prefs: []
  type: TYPE_NORMAL
- en: Semantic Reasoning
  id: totrans-split-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'One of the benefits of knowledge graphs is that you can infer patterns and
    relations from the data in the graph. For example, in the previous example of
    married couples data, a system processing the table of married couples won’t instantly
    know that the person in the “Married to” column is married to the person in the
    “Name” column. [Semantic reasoning](/post/an-introduction-to-semantic-technology-and-semantic-reasoning)
    allows you to define rules within the knowledge graph which will automatically
    apply to the underlying data. In this case, we could define the following Married
    to rule to automatically infer the married to relationships: If [Name] Married
    to [Married To] then [Married To] Married to [Name].'
  id: totrans-split-33
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-34
  prefs: []
  type: TYPE_NORMAL
- en: In practice, this means that knowledge graphs can infer new data which might
    not be explicit in a traditional database. It also means that data which can be
    inferred won’t need to be stored explicitly and can be instead modelled in a rule.
    You can also leverage ontologies to define which types of entities the rules should
    apply to or to enrich the results.
  id: totrans-split-35
  prefs: []
  type: TYPE_NORMAL
- en: Use Cases of Knowledge Graphs
  id: totrans-split-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Knowledge graphs have several practical applications within natural language
    processing and semantic analysis. Particularly, natural language processing benefits
    from knowledge graphs by assigning more order to its capabilities.
  id: totrans-split-37
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-38
  prefs: []
  type: TYPE_NORMAL
- en: Semantic Search
  id: totrans-split-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Two aspects of semantic search, faceted and cross-domain search, are empowered
    by knowledge graphs for applying context to user queries through the investigation
    of relevant relationships.
  id: totrans-split-40
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-41
  prefs: []
  type: TYPE_NORMAL
- en: With [faceted search](/post/how-advanced-search-features-can-help-retrieve-contract-data-quickly),
    users are able to distil what they need from a query by looking at the categories
    created by a knowledge graph. Similarly, cross-domain search uses relationships
    to integrate outputs from a variety of resources.
  id: totrans-split-42
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-43
  prefs: []
  type: TYPE_NORMAL
- en: 'The following demo illustrates how faceted search can be used to navigate your
    business critical documents and contracts:'
  id: totrans-split-44
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-45
  prefs: []
  type: TYPE_NORMAL
- en: Recommendation Systems
  id: totrans-split-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Recommendation systems have been powered by knowledge graphs for a long time.
    For example, personalised LinkedIn connection suggestions are accomplished through
    recording user preferences, item attributes, and other context-specific information.
    The LinkedIn knowledge graph is then able to identify the closest entities to
    your knowledge graph and recommend them to you as connection suggestions. This
    use case is a great fit for knowledge graphs because knowledge graphs leverage
    the density of connections to navigate the nodes and retrieve close entities whereas
    a traditional database would have to compute and compare each entities’ properties
    with each other one by one.
  id: totrans-split-47
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-48
  prefs: []
  type: TYPE_NORMAL
- en: Natural Language Processing (NLP)
  id: totrans-split-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Natural language processing ([NLP](/post/an-introduction-to-natural-language-processing))
    is a field of AI that allows computers to understand, process, and produce human
    language. Knowledge graphs can assist with question parsing, as they help NLP
    models produce meaningful, correct responses. Also, information retrieval is made
    more efficient with the implementation of knowledge graphs, as they add a layer
    of connection and organisation to NLP.
  id: totrans-split-50
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-51
  prefs: []
  type: TYPE_NORMAL
- en: Generative AI
  id: totrans-split-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Generative AI](/post/an-introduction-to-generative-ai) models such as large
    language models typically leverage huge amounts of unstructured data during their
    [initial training and fine-tuning](/post/an-introduction-to-llm-fine-tuning).
    Knowledge graphs can be leveraged to identify the structure of the underlying
    data which can then improve the amount of signal which is extracted from the data
    during the training.'
  id: totrans-split-53
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-54
  prefs: []
  type: TYPE_NORMAL
- en: Knowledge Graphs in Industry
  id: totrans-split-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Knowledge graphs are a versatile technology which can be applied in many sectors
    including e-commerce, financial services and document management.
  id: totrans-split-56
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-57
  prefs: []
  type: TYPE_NORMAL
- en: E-commerce
  id: totrans-split-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As mentioned above, knowledge graphs are used to create personalised recommendations
    and bolster marketing efforts to show the best products to the right demographic.
    However, in terms of e-commerce, knowledge graphs are also fantastic at organising
    inventory, which can help companies stay on top of their supplier relationships
    and product management.
  id: totrans-split-59
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-60
  prefs: []
  type: TYPE_NORMAL
- en: Financial Services
  id: totrans-split-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Financial services may find knowledge graphs to be useful in risk management
    and fraud detection programs. Knowledge graphs can syphon information from many
    financial sources into one, well-connected map that may illuminate financial misappropriation.
    Additionally, knowledge graphs can identify suspicious patterns, [measure risk](/post/how-to-run-a-supplier-risk-assessment)
    and alert financial institutions faster than they may be able to catch it themselves.
  id: totrans-split-62
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-63
  prefs: []
  type: TYPE_NORMAL
- en: Business-critical Document management
  id: totrans-split-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Documents contain unstructured data which often represent linked concepts which
    are governed by rules. At the scale of an organisation, [documents are stored
    in drives](/post/what-is-the-cost-of-a-disorganised-shared-drive) and typically
    tracked in spreadsheets. However, due to the linked nature of document data, knowledge
    graphs are a much more effective way at tracking and answering questions about
    the information contained within documents. Moreover, knowledge graphs can automatically
    link related documents together and compare their underlying terms.
  id: totrans-split-65
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-66
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  id: totrans-split-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Knowledge graphs are a versatile technology which are great at storing and navigating
    hyper linked data. However, before attempting to use or create knowledge graphs,
    it’s important to have a comprehensive understanding of them and other relevant
    technologies such as NLP and semantic reasoning. If you are interested in learning
    more about using knowledge graphs or how they can be applied to business-critical
    document management, feel free to [g`et in touch with our team`](/request-a-demo)!
  id: totrans-split-68
  prefs: []
  type: TYPE_NORMAL
- en: ‍
  id: totrans-split-69
  prefs: []
  type: TYPE_NORMAL
- en: '**About TextMine**'
  id: totrans-split-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[TextMine](https://textmine.com/) is an easy-to-use data extraction tool for
    procurement, operations, and finance teams. TextMine encompasses 3 components:
    [Legislate](https://textmine.com/products/legislate), [Vault](/products/vault)
    and [Scribe](https://textmine.com/products/scribe). We’re on a mission to empower
    organisations to effortlessly extract data, manage version controls, and ensure
    consistency access across all departments. With our AI-driven platform, teams
    can effortlessly locate documents, collaborate seamlessly across departments,
    making the most of their business data.'
  id: totrans-split-71
  prefs: []
  type: TYPE_NORMAL
