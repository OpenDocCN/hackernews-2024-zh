- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-29 12:43:52'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-29 12:43:52'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Chris''s Wiki :: blog/sysadmin/PrometheusAutomatingDNSChecks'
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'Chris''s Wiki :: blog/sysadmin/PrometheusAutomatingDNSChecks'
- en: 来源：[https://utcc.utoronto.ca/~cks/space/blog/sysadmin/PrometheusAutomatingDNSChecks](https://utcc.utoronto.ca/~cks/space/blog/sysadmin/PrometheusAutomatingDNSChecks)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://utcc.utoronto.ca/~cks/space/blog/sysadmin/PrometheusAutomatingDNSChecks](https://utcc.utoronto.ca/~cks/space/blog/sysadmin/PrometheusAutomatingDNSChecks)
- en: Recently I wrote about [the problem of using basic Prometheus to monitor DNS
    query results](/~cks/space/blog/sysadmin/PrometheusDNSMonitoringProblem), which
    comes about primarily because the [Blackbox exporter](https://github.com/prometheus/blackbox_exporter)
    requires a configuration stanza (a [*module*](/~cks/space/blog/sysadmin/PrometheusBlackboxNotes))
    for every DNS query you want to make and doesn't expose any labels for what the
    query type and name are. In a comment, Mike Kohne asked if I'd considered using
    a script to generate the various configurations needed for this, where you want
    to check N DNS queries across M different DNS servers. I hadn't really thought
    about it and we're unlikely to do it, but here is how I would if we did.
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: 最近我写了一篇关于[使用基本的Prometheus监控DNS查询结果的问题](/~cks/space/blog/sysadmin/PrometheusDNSMonitoringProblem)，这主要是因为[Blackbox导出器](https://github.com/prometheus/blackbox_exporter)需要为每个您要进行的DNS查询生成一个配置段落（一个[*模块*](/~cks/space/blog/sysadmin/PrometheusBlackboxNotes)），并且不会暴露任何关于查询类型和名称的标签。在一条评论中，Mike
    Kohne问我是否考虑过使用脚本来生成所需的各种配置，以便您可以检查N个DNS查询在M个不同的DNS服务器上的情况。我实际上没有考虑过这个问题，而且我们不太可能这样做，但是如果我们这样做了，这就是我会怎么做。
- en: The input for the generation system is a list of DNS queries we want to confirm
    work, which is at least a name and a DNS query type (A, MX, SOA, etc), possibly
    along with an expected result, and a list of the DNS servers that we want to make
    these queries against. A full blown system would allow multiple groups of queries
    and DNS servers, so that you can query your internal DNS servers for internal
    names as well as external names you want to always be resolvable.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 生成系统的输入是我们想要确认工作的DNS查询列表，这至少包括一个名称和一个DNS查询类型（A、MX、SOA等），可能还包括预期结果以及我们想要执行这些查询的DNS服务器列表。一个完整的系统将允许多组查询和DNS服务器，这样您就可以查询内部DNS服务器以及您希望始终可解析的外部名称。
- en: 'First, I''d run a completely separate Blackbox instance for this purpose, so
    that its configuration can be entirely script-generated. For each DNS query to
    be made, the script will work out the Blackbox module''s name and then put together
    the formulaic stanza, for example:'
  id: totrans-split-8
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我会为此目的运行一个完全独立的Blackbox实例，以便其配置完全可以由脚本生成。对于要进行的每个DNS查询，脚本将计算出黑匣子模块的名称，然后组合成公式化的段落，例如：
- en: '[PRE0]'
  id: totrans-split-9
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Then your generation program combines all of these stanzas together with some
    stock front matter and you have this Blackbox instance's configuration file. It
    only needs to change if you add a new DNS name to query.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您的生成程序将所有这些段落与一些固定的开头内容结合在一起，就得到了这个Blackbox实例的配置文件。只有在添加新的DNS名称要查询时，它才需要更改。
- en: 'The other thing the script generates is a list of scrape targets and labels
    for them in the format that Prometheus [file discovery](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#file_sd_config)
    expects. Since we''re automatically generating this file we might as well put
    all of the smart stuff into labels, including specifying the Blackbox module.
    This would give us one block for each module that lists all of the DNS servers
    that will be queried for that module, and the labels necessary. This could be
    JSON or YAML, and in YAML form it would look like (for one module):'
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本生成的另一项是一个格式化为Prometheus [文件发现](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#file_sd_config)所需格式的抓取目标和其标签的列表。由于我们自动生成这个文件，我们可以把所有的智能内容都放入标签中，包括指定黑匣子模块。这将为每个模块提供一个块，列出将查询的所有DNS服务器及其必需的标签。这可以是JSON或YAML格式，在YAML格式下，它看起来像（对于一个模块）：
- en: '[PRE1]'
  id: totrans-split-12
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE1]'
- en: (If we're starting with data in a program it's probably better to generate JSON.
    Pretty much every language can create JSON by now, and it's a more forgiving format
    than trying to auto-generate YAML even if the result is less readable. But if
    I was going to put the result in a version control repository, I'd generate YAML.)
  id: totrans-split-13
  prefs: []
  type: TYPE_NORMAL
  zh: (如果我们从程序中的数据开始，最好生成JSON。现在几乎所有的编程语言都可以创建JSON，而且它比尝试自动生成YAML更宽容。但如果我要把结果放入版本控制存储库，我会生成YAML。)
- en: More elaborate breakdowns are possible, for example to separate external DNS
    servers from internal ones, and other people's DNS names from your DNS names.
    You'll get an awful lot of stanzas with various mixes of labels, but the whole
    thing is being generated automatically and you don't have to look at it. In our
    local configuration we'd wind up with at least a few extra labels and a more complicated
    set of combinations.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 更详细的细分是可能的，例如将外部 DNS 服务器与内部 DNS 服务器分开，并将他人的 DNS 名称与您的 DNS 名称分开。你会得到很多带有各种标签混合的段落，但整个过程都是自动生成的，你不必看它。在我们的本地配置中，我们最终会得到至少几个额外的标签和更复杂的组合。
- en: 'We need the query name and query type available as labels because we''re going
    to write one generic alert rule for all of these Blackbox modules, something like:'
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要查询名称和查询类型作为标签可用，因为我们将为所有这些 Blackbox 模块编写一个通用的警报规则，类似于：
- en: '[PRE2]'
  id: totrans-split-16
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE2]'
- en: (If Blackbox put these labels in DNS probe metrics we could skip adding them
    in the scrape target configuration. We'd also be able to fold a number of our
    existing DNS alerts into more generic ones.)
  id: totrans-split-17
  prefs: []
  type: TYPE_NORMAL
  zh: （如果 Blackbox 把这些标签放在 DNS 探针指标中，我们可以跳过在抓取目标配置中添加它们的步骤。我们还能将许多现有的 DNS 警报合并为更通用的警报。）
- en: If you go the extra distance to have some DNS lookups require specific results
    (instead of just 'some A record' or 'some MX record'), then you might need additional
    labels to let you write a more specific alert record.
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你愿意付出额外的努力，使一些 DNS 查询需要特定的结果（而不仅仅是'某个 A 记录'或'某个 MX 记录'），那么你可能需要额外的标签来编写更具体的警报记录。
- en: For us, both generated files would be relatively static. As a practical matter
    we don't add extra names to check or DNS servers to test against very often.
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们来说，这两个生成的文件都是相对静态的。实际上，我们很少添加额外的名称进行检查或者经常测试的 DNS 服务器。
- en: We could certainly write such a configuration file generation system and get
    more comprehensive coverage of our DNS zones and various nameservers than we currently
    have. However, my current view is that the extra complexity almost certainly wouldn't
    be worth it in terms of detecting problems and maintaining the system. We'd make
    more queries against more DNS servers if it was easier, if it would be with such
    a generation system, but those queries would almost never detect anything we didn't
    already know.
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们当然可以编写这样的配置文件生成系统，并且比我们当前拥有的更全面地覆盖我们的 DNS 区域和各种名称服务器。然而，我目前的看法是，额外的复杂性几乎肯定不值得用于问题检测和系统维护。如果更容易，如果使用这样的生成系统，我们会对更多的
    DNS 服务器进行更多的查询，但几乎永远不会检测到我们不知道的任何问题。
