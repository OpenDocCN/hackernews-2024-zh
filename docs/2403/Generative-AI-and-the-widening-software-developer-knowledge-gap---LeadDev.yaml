- en: <!--yml
  id: totrans-split-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-split-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-27 14:38:17'
  id: totrans-split-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-27 14:38:17'
- en: -->
  id: totrans-split-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Generative AI and the widening software developer knowledge gap | LeadDev
  id: totrans-split-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成 AI 和扩大的软件开发者知识鸿沟 | LeadDev
- en: 来源：[https://leaddev.com/team/generative-ai-and-widening-software-developer-knowledge-gap](https://leaddev.com/team/generative-ai-and-widening-software-developer-knowledge-gap)
  id: totrans-split-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://leaddev.com/team/generative-ai-and-widening-software-developer-knowledge-gap](https://leaddev.com/team/generative-ai-and-widening-software-developer-knowledge-gap)
- en: AI tools are already automating large parts of the software engineering role
    – but are we sleepwalking into a future where no one knows the basics?
  id: totrans-split-6
  prefs: []
  type: TYPE_NORMAL
  zh: AI 工具已经开始自动化软件工程角色的大部分内容 —— 但我们是否正在悄然走向一个没有人了解基础知识的未来？
- en: Whether you like it or not,  generative AI tools like GitHub Copilot and [OpenAI’s
    ChatGPT](https://leaddev.com/tech/how-openai-fought-security-threats-and-gpu-shortages-scale-chatgpt)
    are already part of the[software developer’s toolkit](https://leaddev.com/tech/11-generative-ai-programming-tools-developers),
    and are even [changing how computer science is taught](https://leaddev.com/team/generative-ai-changing-how-computer-science-taught)
    to future devs. While we are still some way from these tools[entirely replacing
    developer roles](https://leaddev.com/tech/researchers-say-generative-ai-isnt-replacing-devs-any-time-soon),
    there is growing concern that they will erode the foundations of the craft.
  id: totrans-split-7
  prefs: []
  type: TYPE_NORMAL
  zh: 不管你喜欢与否，像 GitHub Copilot 和 [OpenAI’s ChatGPT](https://leaddev.com/tech/how-openai-fought-security-threats-and-gpu-shortages-scale-chatgpt)
    这样的生成 AI 工具已经成为[软件开发者的工具包](https://leaddev.com/tech/11-generative-ai-programming-tools-developers)的一部分，甚至正在[改变计算机科学的教学方式](https://leaddev.com/team/generative-ai-changing-how-computer-science-taught)。虽然这些工具[完全取代开发人员角色](https://leaddev.com/tech/researchers-say-generative-ai-isnt-replacing-devs-any-time-soon)还有一段距离，但人们越来越担心它们将侵蚀这门手艺的基础。
- en: '**The paradox of automation**'
  id: totrans-split-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**自动化悖论**'
- en: Aircraft manufacturers have long been aware of the [paradox of automation](https://personalmba.com/paradox-of-automation),
    where an overreliance on automation makes the human in the loop even more critical
    than before. Modern airline pilots increasingly rely on autopilot systems, but
    must be experienced enough to know when to intervene if something goes wrong.
    Blindly following the instruments in this scenario [can lead to loss of life](https://thewalrus.ca/the-deadly-price-of-the-automation-paradox/).
    But in a world where more and more basic operational tasks can be offloaded to
    an AI system, how can we expect the operators of these systems to know when things
    aren’t right?
  id: totrans-split-9
  prefs: []
  type: TYPE_NORMAL
  zh: 长期以来，飞机制造商一直意识到[自动化悖论](https://personalmba.com/paradox-of-automation)，即对自动化过度依赖使得需要人工介入的情况比以往更为关键。现代航空公司飞行员越来越依赖自动驾驶系统，但必须具备足够的经验，以便在出现问题时知道何时进行干预。在这种情况下盲目依赖仪器可能[导致生命丧失](https://thewalrus.ca/the-deadly-price-of-the-automation-paradox/)。但在一个越来越多基础操作任务可以由
    AI 系统处理的世界里，我们如何期望这些系统的操作者知道事情出了问题？
- en: As developers blindly copy and paste code snippets from their generative AI
    assistant into production environments, their ability to interrogate that work,
    and fix issues, shrinks.
  id: totrans-split-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当开发人员盲目地从他们的生成 AI 助手复制粘贴代码片段到生产环境中时，他们审查这些工作并修复问题的能力将会减弱。
- en: “There is a risk that AI hollows out software engineering expertise,” explains
    Angus Allan, senior product manager at xDesign. “We are already seeing continued
    demand for software developers, but the [demand is skewing towards more senior
    engineers](https://leaddev.com/team/senior-engineers-are-weathering-layoffs-storm),
    creating a glut of junior talent and not enough roles to fill them.”
  id: totrans-split-11
  prefs: []
  type: TYPE_NORMAL
  zh: “有一种风险是 AI 会掏空软件工程的专业知识”，xDesign 的高级产品经理 Angus Allan 解释道。“我们已经看到对软件开发人员的持续需求，但需求更加偏向于高级工程师，导致初级人才过剩，而岗位数量不足以填补。”
- en: As senior engineers age out of the industry, and AI increasingly takes on the
    routine tasks that gave junior developers their start, a potentially critical
    knowledge gap starts to open up.
  id: totrans-split-12
  prefs: []
  type: TYPE_NORMAL
  zh: 随着高级工程师逐渐退出行业，并且 AI 日益承担起为初级开发人员提供起步机会的例行任务，潜在的关键知识鸿沟开始显现。
- en: '**The impact of AI on junior engineer growth**'
  id: totrans-split-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**AI 对初级工程师成长的影响**'
- en: The instant appeal of coding assistants – in which Simon Willison, co-creator
    of Django says is giving him a “three to four times personal productivity improvement”
    – needs to be balanced with the long-term viability of the profession.
  id: totrans-split-14
  prefs: []
  type: TYPE_NORMAL
  zh: 编码助手的即时吸引力 —— Django 的共同创始人 Simon Willison 表示这让他的“个人生产力提高了三到四倍” —— 需要与职业的长期可持续性保持平衡。
- en: “If you rush and don’t consider how it is deployed, and how it helps your engineers
    grow, you risk degrading your engineering talent over time,” fears Allan. “Leaders
    shouldn’t be complacent and should have a proper knowledge strategy, which includes
    training in-house AI on their own practices and standards. AI should be a force
    multiplier for senior engineers to 10x their impact within their team and practice.”
  id: totrans-split-15
  prefs: []
  type: TYPE_NORMAL
  zh: “如果你匆忙行事，并且不考虑它是如何部署以及它如何帮助你的工程师成长，你将会在时间的推移中降低你的工程人才，”Allan担忧道。“领导者不应该自满，应该有适当的知识战略，其中包括对内部AI进行培训以符合其自身的实践和标准。AI应该成为高级工程师在其团队和实践中提升10倍影响力的强大倍增器。”
- en: The problem runs deeper than the current moment, argues Michal Szymczak, head
    of AI strategy at digital services provider Zartis. “Every business has a prerogative
    to ensure business continuity, and this is best ensured through in-person, hands-on
    practical experience with emerging tools and technology – which also means we
    need a greater degree of vocational educational programs similar to Germany's
    model,” he says. Famously, German businesses often provide [mid-career training](https://www.raconteur.net/insights/germanys-industrial-skills-shortage-challenges-and-solutions),
    and schools tailor their curriculums much more closely to various industry needs.
  id: totrans-split-16
  prefs: []
  type: TYPE_NORMAL
  zh: Michal Szymczak，在数字服务提供商Zartis的AI战略负责人，认为问题的根源深于当前时刻。“每个企业都有确保业务连续性的权利，这通过与新兴工具和技术的面对面、实践经验来最好地确保，这也意味着我们需要类似于德国模式的更高程度的职业教育项目，”他说道。众所周知，德国企业经常提供[mid-career
    training](https://www.raconteur.net/insights/germanys-industrial-skills-shortage-challenges-and-solutions)，而学校也更加紧密地调整其课程以满足各行业的需求。
- en: '**Is it a real hitch?**'
  id: totrans-split-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**这是真正的难题吗？**'
- en: The big question is if these tools will cause a generational shift in how software
    is developed, or are just the latest in a long line of productivity enhancers
    to be resisted and eventually embraced. “Developers are not strangers to the concept
    of lifelong learning,” points out Michael Erquitt, senior security engineer at
    Security Journey. “There will always be new technologies and techniques in this
    industry.”
  id: totrans-split-18
  prefs: []
  type: TYPE_NORMAL
  zh: 最大的问题是这些工具是否会导致软件开发方式的代际转变，或者只是长期生产力增强工具系列的最新成员，将被抵制并最终被接受。“开发人员对终身学习的概念并不陌生，”Security
    Journey的高级安全工程师Michael Erquitt指出。“在这个行业中，总会有新的技术和技巧。”
- en: Erquitt believes the likely outcome for how AI models are deployed within the
    sector is that, over the next five to 10 years, the technology will become “a
    great force multiplier for augmenting the developer process”. That’ll allow developers
    to focus on other elements of the job.
  id: totrans-split-19
  prefs: []
  type: TYPE_NORMAL
  zh: Erquitt认为，在未来五到十年内，AI模型在该行业内部的部署可能的结果是，这项技术将成为“增强开发过程的强大倍增器”。这将使开发人员能够专注于工作的其他方面。
- en: “My very strong intuition is that, at least for the people who actually want
    to learn this stuff, this is a learning accelerant,” says Willison. “If you're
    just getting started coding right now, and you're not the kind of person who just
    cheats, you actually do want to learn things, these are basically rocket fuel
    for the rate at which you can learn things.”
  id: totrans-split-20
  prefs: []
  type: TYPE_NORMAL
  zh: “我非常强烈地直觉到，至少对于那些真正想要学习这些东西的人来说，这是一种学习加速剂，”Willison说道。“如果你现在刚开始编程，并且你不是那种只会作弊的人，你确实想要学习这些东西，这些工具基本上就是你学习速度的火箭燃料。”
- en: '**How to deploy AI responsibly**'
  id: totrans-split-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**如何负责地部署AI**'
- en: Managing the paradox of automation will boil down to how developers are trained,
    both in formal education and the workplace.
  id: totrans-split-22
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化悖论的管理将归结为开发人员在正规教育和工作场所的培训方式。
- en: “The danger from an engineering perspective is that copy pasting code is inherently
    bad, as it still needs to be checked,” says Claus Jepsen, chief product and technology
    officer at Unit4\. “Badly done software can have a material impact on an organization,
    so I doubt that today’s software engineers are using generative AI to automate
    development for critical medical applications or space flights to Mars.”
  id: totrans-split-23
  prefs: []
  type: TYPE_NORMAL
  zh: “从工程的角度来看，复制粘贴代码的危险性在于它本质上是不好的，因为它仍然需要检查，”Unit4的首席产品和技术官Claus Jepsen说道。“糟糕的软件可能会对组织产生实质性影响，因此我怀疑今天的软件工程师是否在使用生成AI来自动化关键医疗应用或火星飞行的开发。”
- en: This creates a greater need than ever for developers to be able to not just
    write code, but interrogate it. “The critical part of the role is to understand
    what the code needs to do. What is the expectation? What is the performance requirement?
    What are the underlying architectural and operational requirements? All of this
    thinking is integral to software engineering,” Jepsen says.
  id: totrans-split-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得开发人员不仅仅需要编写代码，而是需要审视代码，成为比以往任何时候都更为迫切的需求。“角色的关键部分是理解代码需要做什么。期望是什么？性能要求是什么？底层架构和操作需求是什么？所有这些思考都是软件工程的核心内容”，Jepsen说道。
- en: The temptation to offload the basic elements of any job can be compelling, but
    the risk lies in losing that connection to the complex systems underpinning those
    tasks. “Writing the code is a smaller part of the discipline,” says Jepsen, “but
    if you start sacrificing the code writing skills you’ll be in trouble.”
  id: totrans-split-25
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何工作的基本要素进行外包的诱惑可能很强烈，但风险在于失去与支撑这些任务的复杂系统的联系。“编写代码只是学科的一小部分，”Jepsen说道，“但如果开始牺牲编写代码的技能，你会陷入麻烦。”
